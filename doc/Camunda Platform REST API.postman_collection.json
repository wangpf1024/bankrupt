{
	"info": {
		"_postman_id": "c831affb-1062-430f-86de-da07f66f2c02",
		"name": "Camunda Platform REST API",
		"description": "OpenApi Spec for Camunda Platform REST API.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9096396"
	},
	"item": [
		{
			"name": "authorization",
			"item": [
				{
					"name": "check",
					"item": [
						{
							"name": "Perform an Authorization Check",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorization/check?permissionName=<string>&resourceName=<string>&resourceType=<integer>&resourceId=<string>&userId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization",
										"check"
									],
									"query": [
										{
											"key": "permissionName",
											"value": "<string>",
											"description": "(Required) String value representing the permission name to check for."
										},
										{
											"key": "resourceName",
											"value": "<string>",
											"description": "(Required) String value for the name of the resource to check permissions for."
										},
										{
											"key": "resourceType",
											"value": "<integer>",
											"description": "(Required) An integer representing the resource type to check permissions for.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/authorization-service/#resources)\nfor a list of integer representations of resource types."
										},
										{
											"key": "resourceId",
											"value": "<string>",
											"description": "The id of the resource to check permissions for. If left blank,\na check for global permissions on the resource is performed."
										},
										{
											"key": "userId",
											"value": "<string>",
											"description": "The id of the user to check permissions for. The currently authenticated\nuser must have a READ permission for the Authorization resource. If `userId` is\nblank, a check for the currently authenticated user is performed."
										}
									]
								},
								"description": "Performs an authorization check for the currently authenticated user."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authorization/check?permissionName=<string>&resourceName=<string>&resourceType=<integer>&resourceId=<string>&userId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"check"
											],
											"query": [
												{
													"key": "permissionName",
													"value": "<string>",
													"description": "(Required) String value representing the permission name to check for."
												},
												{
													"key": "resourceName",
													"value": "<string>",
													"description": "(Required) String value for the name of the resource to check permissions for."
												},
												{
													"key": "resourceType",
													"value": "<integer>",
													"description": "(Required) An integer representing the resource type to check permissions for.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/authorization-service/#resources)\nfor a list of integer representations of resource types."
												},
												{
													"key": "resourceId",
													"value": "<string>",
													"description": "The id of the resource to check permissions for. If left blank,\na check for global permissions on the resource is performed."
												},
												{
													"key": "userId",
													"value": "<string>",
													"description": "The id of the user to check permissions for. The currently authenticated\nuser must have a READ permission for the Authorization resource. If `userId` is\nblank, a check for the currently authenticated user is performed."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"permissionName\": \"<string>\",\n  \"resourceName\": \"<string>\",\n  \"resourceId\": \"<string>\",\n  \"authorized\": \"<boolean>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example if a permission\nparameterName is not valid for the provided resourceType. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error ",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authorization/check?permissionName=<string>&resourceName=<string>&resourceType=<integer>&resourceId=<string>&userId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"check"
											],
											"query": [
												{
													"key": "permissionName",
													"value": "<string>",
													"description": "(Required) String value representing the permission name to check for."
												},
												{
													"key": "resourceName",
													"value": "<string>",
													"description": "(Required) String value for the name of the resource to check permissions for."
												},
												{
													"key": "resourceType",
													"value": "<integer>",
													"description": "(Required) An integer representing the resource type to check permissions for.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/authorization-service/#resources)\nfor a list of integer representations of resource types."
												},
												{
													"key": "resourceId",
													"value": "<string>",
													"description": "The id of the resource to check permissions for. If left blank,\na check for global permissions on the resource is performed."
												},
												{
													"key": "userId",
													"value": "<string>",
													"description": "The id of the user to check permissions for. The currently authenticated\nuser must have a READ permission for the Authorization resource. If `userId` is\nblank, a check for the currently authenticated user is performed."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "The user is not authenticated. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authorization/check?permissionName=<string>&resourceName=<string>&resourceType=<integer>&resourceId=<string>&userId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"check"
											],
											"query": [
												{
													"key": "permissionName",
													"value": "<string>",
													"description": "(Required) String value representing the permission name to check for."
												},
												{
													"key": "resourceName",
													"value": "<string>",
													"description": "(Required) String value for the name of the resource to check permissions for."
												},
												{
													"key": "resourceType",
													"value": "<integer>",
													"description": "(Required) An integer representing the resource type to check permissions for.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/authorization-service/#resources)\nfor a list of integer representations of resource types."
												},
												{
													"key": "resourceId",
													"value": "<string>",
													"description": "The id of the resource to check permissions for. If left blank,\na check for global permissions on the resource is performed."
												},
												{
													"key": "userId",
													"value": "<string>",
													"description": "The id of the user to check permissions for. The currently authenticated\nuser must have a READ permission for the Authorization resource. If `userId` is\nblank, a check for the currently authenticated user is performed."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "When a `userId` is passed and the user does not possess a READ permission for the\nAuthorization resource. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authorization/check?permissionName=<string>&resourceName=<string>&resourceType=<integer>&resourceId=<string>&userId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"check"
											],
											"query": [
												{
													"key": "permissionName",
													"value": "<string>",
													"description": "(Required) String value representing the permission name to check for."
												},
												{
													"key": "resourceName",
													"value": "<string>",
													"description": "(Required) String value for the name of the resource to check permissions for."
												},
												{
													"key": "resourceType",
													"value": "<integer>",
													"description": "(Required) An integer representing the resource type to check permissions for.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/authorization-service/#resources)\nfor a list of integer representations of resource types."
												},
												{
													"key": "resourceId",
													"value": "<string>",
													"description": "The id of the resource to check permissions for. If left blank,\na check for global permissions on the resource is performed."
												},
												{
													"key": "userId",
													"value": "<string>",
													"description": "The id of the user to check permissions for. The currently authenticated\nuser must have a READ permission for the Authorization resource. If `userId` is\nblank, a check for the currently authenticated user is performed."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "Authorization with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authorization/check?permissionName=<string>&resourceName=<string>&resourceType=<integer>&resourceId=<string>&userId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"check"
											],
											"query": [
												{
													"key": "permissionName",
													"value": "<string>",
													"description": "(Required) String value representing the permission name to check for."
												},
												{
													"key": "resourceName",
													"value": "<string>",
													"description": "(Required) String value for the name of the resource to check permissions for."
												},
												{
													"key": "resourceType",
													"value": "<integer>",
													"description": "(Required) An integer representing the resource type to check permissions for.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/authorization-service/#resources)\nfor a list of integer representations of resource types."
												},
												{
													"key": "resourceId",
													"value": "<string>",
													"description": "The id of the resource to check permissions for. If left blank,\na check for global permissions on the resource is performed."
												},
												{
													"key": "userId",
													"value": "<string>",
													"description": "The id of the user to check permissions for. The currently authenticated\nuser must have a READ permission for the Authorization resource. If `userId` is\nblank, a check for the currently authenticated user is performed."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "count",
					"item": [
						{
							"name": "Get Authorization Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorization/count?id=<string>&type=<integer>&userIdIn=<string>&groupIdIn=<string>&resourceType=<integer>&resourceId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization",
										"count"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Filter by the id of the authorization."
										},
										{
											"key": "type",
											"value": "<integer>",
											"description": "Filter by authorization type. (0=global, 1=grant, 2=revoke).\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/authorization-service/#authorization-type)\nfor more information about authorization types."
										},
										{
											"key": "userIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of userIds."
										},
										{
											"key": "groupIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of groupIds."
										},
										{
											"key": "resourceType",
											"value": "<integer>",
											"description": "Filter by an integer representation of the resource type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/authorization-service/#resources)\nfor a list of integer representations of resource types."
										},
										{
											"key": "resourceId",
											"value": "<string>",
											"description": "Filter by resource id."
										}
									]
								},
								"description": "Queries for authorizations using a list of parameters and retrieves the count."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authorization/count?id=<string>&type=<integer>&userIdIn=<string>&groupIdIn=<string>&resourceType=<integer>&resourceId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"count"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>",
													"description": "Filter by the id of the authorization."
												},
												{
													"key": "type",
													"value": "<integer>",
													"description": "Filter by authorization type. (0=global, 1=grant, 2=revoke).\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/authorization-service/#authorization-type)\nfor more information about authorization types."
												},
												{
													"key": "userIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of userIds."
												},
												{
													"key": "groupIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of groupIds."
												},
												{
													"key": "resourceType",
													"value": "<integer>",
													"description": "Filter by an integer representation of the resource type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/authorization-service/#resources)\nfor a list of integer representations of resource types."
												},
												{
													"key": "resourceId",
													"value": "<string>",
													"description": "Filter by resource id."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy` is specified. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error resp",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authorization/count?id=<string>&type=<integer>&userIdIn=<string>&groupIdIn=<string>&resourceType=<integer>&resourceId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"count"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>",
													"description": "Filter by the id of the authorization."
												},
												{
													"key": "type",
													"value": "<integer>",
													"description": "Filter by authorization type. (0=global, 1=grant, 2=revoke).\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/authorization-service/#authorization-type)\nfor more information about authorization types."
												},
												{
													"key": "userIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of userIds."
												},
												{
													"key": "groupIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of groupIds."
												},
												{
													"key": "resourceType",
													"value": "<integer>",
													"description": "Filter by an integer representation of the resource type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/authorization-service/#resources)\nfor a list of integer representations of resource types."
												},
												{
													"key": "resourceId",
													"value": "<string>",
													"description": "Filter by resource id."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "create",
					"item": [
						{
							"name": "Create a New Authorization",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"<integer>\",\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"userId\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"resourceType\": \"<integer>\",\n  \"resourceId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authorization/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization",
										"create"
									]
								},
								"description": "Creates a new authorization."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"<integer>\",\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"userId\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"resourceType\": \"<integer>\",\n  \"resourceId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authorization/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<integer>\",\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"userId\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"resourceType\": \"<integer>\",\n  \"resourceId\": \"<string>\",\n  \"removalTime\": \"<dateTime>\",\n  \"rootProcessInstanceId\": \"<string>\"\n}"
								},
								{
									"name": "Returned if some of the properties in the request body are invalid, for example if\na permission parameter is not valid for the provided resourceType.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor ",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"<integer>\",\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"userId\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"resourceType\": \"<integer>\",\n  \"resourceId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authorization/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"create"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "The authenticated user is unauthorized to create an instance of this resource. See\nthe [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"<integer>\",\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"userId\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"resourceType\": \"<integer>\",\n  \"resourceId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authorization/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"create"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "The authorization could not be updated due to an internal server error. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"<integer>\",\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"userId\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"resourceType\": \"<integer>\",\n  \"resourceId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authorization/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												"create"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "Delete Authorization",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorization/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the authorization to be deleted."
										}
									]
								},
								"description": "Deletes an authorization by id."
							},
							"response": [
								{
									"name": "Request successful. This method returns no content.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authorization/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "If the authenticated user is unauthorized to delete the resource instance. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authorization/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "Authorization cannot be found. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authorization/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get Authorization",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorization/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the authorization to be retrieved."
										}
									]
								},
								"description": "Retrieves an authorization by id."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authorization/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<integer>\",\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"userId\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"resourceType\": \"<integer>\",\n  \"resourceId\": \"<string>\",\n  \"removalTime\": \"<dateTime>\",\n  \"rootProcessInstanceId\": \"<string>\"\n}"
								},
								{
									"name": "Authorization with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authorization/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Authorization Resource Options",
							"request": {
								"method": "OPTIONS",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorization/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the authorization to be retrieved."
										}
									]
								},
								"description": "The OPTIONS request allows you to check for the set of available operations that the currently\nauthenticated user can perform on a given instance of the `/authorization` resource.\nWhether the user can perform an operation or not may depend on various factors, including the users\nauthorizations to interact with this resource and the internal configuration of the process engine."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "OPTIONS",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authorization/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update an Authorization",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"userId\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"resourceType\": \"<integer>\",\n  \"resourceId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authorization/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the authorization to be updated."
										}
									]
								},
								"description": "Updates an authorization by id."
							},
							"response": [
								{
									"name": "Request successful. This method returns no content.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"userId\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"resourceType\": \"<integer>\",\n  \"resourceId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authorization/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if some of the properties in the request body are invalid, for example if\na permission parameter is not valid for the provided resourceType.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor ",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"userId\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"resourceType\": \"<integer>\",\n  \"resourceId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authorization/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "The authenticated user is unauthorized to update this resource. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"userId\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"resourceType\": \"<integer>\",\n  \"resourceId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authorization/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "The authorization with the requested Id cannot be found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"userId\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"resourceType\": \"<integer>\",\n  \"resourceId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authorization/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "The authorization could not be updated due to an internal server error. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"userId\": \"<string>\",\n  \"groupId\": \"<string>\",\n  \"resourceType\": \"<integer>\",\n  \"resourceId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authorization/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authorization",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get Authorizations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/authorization?id=<string>&type=<integer>&userIdIn=<string>&groupIdIn=<string>&resourceType=<integer>&resourceId=<string>&sortBy=resourceId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorization"
							],
							"query": [
								{
									"key": "id",
									"value": "<string>",
									"description": "Filter by the id of the authorization."
								},
								{
									"key": "type",
									"value": "<integer>",
									"description": "Filter by authorization type. (0=global, 1=grant, 2=revoke).\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/authorization-service/#authorization-type)\nfor more information about authorization types."
								},
								{
									"key": "userIdIn",
									"value": "<string>",
									"description": "Filter by a comma-separated list of userIds."
								},
								{
									"key": "groupIdIn",
									"value": "<string>",
									"description": "Filter by a comma-separated list of groupIds."
								},
								{
									"key": "resourceType",
									"value": "<integer>",
									"description": "Filter by an integer representation of the resource type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/authorization-service/#resources)\nfor a list of integer representations of resource types."
								},
								{
									"key": "resourceId",
									"value": "<string>",
									"description": "Filter by resource id."
								},
								{
									"key": "sortBy",
									"value": "resourceId",
									"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
								},
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return."
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
								}
							]
						},
						"description": "Queries for a list of authorizations using a list of parameters.\nThe size of the result set can be retrieved by using the\n[Get Authorization Count](https://docs.camunda.org/manual/7.21/reference/rest/authorization/get-query-count/) method."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorization?id=<string>&type=<integer>&userIdIn=<string>&groupIdIn=<string>&resourceType=<integer>&resourceId=<string>&sortBy=resourceId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Filter by the id of the authorization."
										},
										{
											"key": "type",
											"value": "<integer>",
											"description": "Filter by authorization type. (0=global, 1=grant, 2=revoke).\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/authorization-service/#authorization-type)\nfor more information about authorization types."
										},
										{
											"key": "userIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of userIds."
										},
										{
											"key": "groupIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of groupIds."
										},
										{
											"key": "resourceType",
											"value": "<integer>",
											"description": "Filter by an integer representation of the resource type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/authorization-service/#resources)\nfor a list of integer representations of resource types."
										},
										{
											"key": "resourceId",
											"value": "<string>",
											"description": "Filter by resource id."
										},
										{
											"key": "sortBy",
											"value": "resourceId",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"type\": \"<integer>\",\n    \"permissions\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"userId\": \"<string>\",\n    \"groupId\": \"<string>\",\n    \"resourceType\": \"<integer>\",\n    \"resourceId\": \"<string>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"type\": \"<integer>\",\n    \"permissions\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"userId\": \"<string>\",\n    \"groupId\": \"<string>\",\n    \"resourceType\": \"<integer>\",\n    \"resourceId\": \"<string>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy` is specified. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error resp",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorization?id=<string>&type=<integer>&userIdIn=<string>&groupIdIn=<string>&resourceType=<integer>&resourceId=<string>&sortBy=resourceId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Filter by the id of the authorization."
										},
										{
											"key": "type",
											"value": "<integer>",
											"description": "Filter by authorization type. (0=global, 1=grant, 2=revoke).\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/authorization-service/#authorization-type)\nfor more information about authorization types."
										},
										{
											"key": "userIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of userIds."
										},
										{
											"key": "groupIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of groupIds."
										},
										{
											"key": "resourceType",
											"value": "<integer>",
											"description": "Filter by an integer representation of the resource type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/authorization-service/#resources)\nfor a list of integer representations of resource types."
										},
										{
											"key": "resourceId",
											"value": "<string>",
											"description": "Filter by resource id."
										},
										{
											"key": "sortBy",
											"value": "resourceId",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "Authorization Resource Options",
					"request": {
						"method": "OPTIONS",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/authorization",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorization"
							]
						},
						"description": "The OPTIONS request allows you to check for the set of available operations that the currently\nauthenticated user can perform on the `/authorization` resource. Whether the user can perform an operation\nor not may depend on various factors, including the users authorizations to interact with this\nresource and the internal configuration of the process engine."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "OPTIONS",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorization",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorization"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "batch",
			"item": [
				{
					"name": "count",
					"item": [
						{
							"name": "Get List Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/batch/count?batchId=<string>&type=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&suspended=<boolean>&createdBy=<string>&startedBefore=<dateTime>&startedAfter=<dateTime>&withFailures=<boolean>&withoutFailures=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"batch",
										"count"
									],
									"query": [
										{
											"key": "batchId",
											"value": "<string>",
											"description": "Filter by batch id."
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "Filter by batch type.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/batch/#creating-a-batch)\nfor more information about batch types."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of `Strings`. A batch matches if it has one of the given tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include batches which belong to no tenant.\nValue can effectively only be `true`, as `false` is the default behavior."
										},
										{
											"key": "suspended",
											"value": "<boolean>",
											"description": "A `Boolean` value which indicates whether only active or suspended batches should be included.\nWhen the value is set to `true`, only suspended batches will be returned and\nwhen the value is set to `false`, only active batches will be returned."
										},
										{
											"key": "createdBy",
											"value": "<string>",
											"description": "Only include batches that were started by this user id."
										},
										{
											"key": "startedBefore",
											"value": "<dateTime>",
											"description": "Only include batches that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "startedAfter",
											"value": "<dateTime>",
											"description": "Only include batches that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "withFailures",
											"value": "<boolean>",
											"description": "Only include batches having jobs with failures.\nValue can only be `true`."
										},
										{
											"key": "withoutFailures",
											"value": "<boolean>",
											"description": "Only include batches having jobs without failures.\nValue can only be `true`."
										}
									]
								},
								"description": "Requests the number of batches that fulfill the query criteria.\nTakes the same filtering parameters as the [Get Batches](https://docs.camunda.org/manual/7.21/reference/rest/batch/get-query/) method."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/batch/count?batchId=<string>&type=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&suspended=<boolean>&createdBy=<string>&startedBefore=<dateTime>&startedAfter=<dateTime>&withFailures=<boolean>&withoutFailures=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"batch",
												"count"
											],
											"query": [
												{
													"key": "batchId",
													"value": "<string>",
													"description": "Filter by batch id."
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "Filter by batch type.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/batch/#creating-a-batch)\nfor more information about batch types."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of `Strings`. A batch matches if it has one of the given tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include batches which belong to no tenant.\nValue can effectively only be `true`, as `false` is the default behavior."
												},
												{
													"key": "suspended",
													"value": "<boolean>",
													"description": "A `Boolean` value which indicates whether only active or suspended batches should be included.\nWhen the value is set to `true`, only suspended batches will be returned and\nwhen the value is set to `false`, only active batches will be returned."
												},
												{
													"key": "createdBy",
													"value": "<string>",
													"description": "Only include batches that were started by this user id."
												},
												{
													"key": "startedBefore",
													"value": "<dateTime>",
													"description": "Only include batches that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "startedAfter",
													"value": "<dateTime>",
													"description": "Only include batches that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "withFailures",
													"value": "<boolean>",
													"description": "Only include batches having jobs with failures.\nValue can only be `true`."
												},
												{
													"key": "withoutFailures",
													"value": "<boolean>",
													"description": "Only include batches having jobs without failures.\nValue can only be `true`."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/batch/count?batchId=<string>&type=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&suspended=<boolean>&createdBy=<string>&startedBefore=<dateTime>&startedAfter=<dateTime>&withFailures=<boolean>&withoutFailures=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"batch",
												"count"
											],
											"query": [
												{
													"key": "batchId",
													"value": "<string>",
													"description": "Filter by batch id."
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "Filter by batch type.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/batch/#creating-a-batch)\nfor more information about batch types."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of `Strings`. A batch matches if it has one of the given tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include batches which belong to no tenant.\nValue can effectively only be `true`, as `false` is the default behavior."
												},
												{
													"key": "suspended",
													"value": "<boolean>",
													"description": "A `Boolean` value which indicates whether only active or suspended batches should be included.\nWhen the value is set to `true`, only suspended batches will be returned and\nwhen the value is set to `false`, only active batches will be returned."
												},
												{
													"key": "createdBy",
													"value": "<string>",
													"description": "Only include batches that were started by this user id."
												},
												{
													"key": "startedBefore",
													"value": "<dateTime>",
													"description": "Only include batches that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "startedAfter",
													"value": "<dateTime>",
													"description": "Only include batches that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "withFailures",
													"value": "<boolean>",
													"description": "Only include batches having jobs with failures.\nValue can only be `true`."
												},
												{
													"key": "withoutFailures",
													"value": "<boolean>",
													"description": "Only include batches having jobs without failures.\nValue can only be `true`."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "statistics",
					"item": [
						{
							"name": "count",
							"item": [
								{
									"name": "Get Statistics Count",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/batch/statistics/count?batchId=<string>&type=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&suspended=<boolean>&createdBy=<string>&startedBefore=<dateTime>&startedAfter=<dateTime>&withFailures=<boolean>&withoutFailures=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"batch",
												"statistics",
												"count"
											],
											"query": [
												{
													"key": "batchId",
													"value": "<string>",
													"description": "Filter by batch id."
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "Filter by batch type.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/batch/#creating-a-batch)\nfor more information about batch types."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of `Strings`. A batch matches if it has one of the given tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include batches which belong to no tenant.\nValue can effectively only be `true`, as `false` is the default behavior."
												},
												{
													"key": "suspended",
													"value": "<boolean>",
													"description": "A `Boolean` value which indicates whether only active or suspended batches should be included.\nWhen the value is set to `true`, only suspended batches will be returned and\nwhen the value is set to `false`, only active batches will be returned."
												},
												{
													"key": "createdBy",
													"value": "<string>",
													"description": "Only include batches that were started by this user id."
												},
												{
													"key": "startedBefore",
													"value": "<dateTime>",
													"description": "Only include batches that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "startedAfter",
													"value": "<dateTime>",
													"description": "Only include batches that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "withFailures",
													"value": "<boolean>",
													"description": "Only include batches having jobs with failures.\nValue can only be `true`."
												},
												{
													"key": "withoutFailures",
													"value": "<boolean>",
													"description": "Only include batches having jobs without failures.\nValue can only be `true`."
												}
											]
										},
										"description": "Requests the number of batch statistics that fulfill the query criteria.\nTakes the same filtering parameters as the\n[Get Batch Statistics](https://docs.camunda.org/manual/7.21/reference/rest/batch/get-statistics-query/) method."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/batch/statistics/count?batchId=<string>&type=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&suspended=<boolean>&createdBy=<string>&startedBefore=<dateTime>&startedAfter=<dateTime>&withFailures=<boolean>&withoutFailures=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"batch",
														"statistics",
														"count"
													],
													"query": [
														{
															"key": "batchId",
															"value": "<string>",
															"description": "Filter by batch id."
														},
														{
															"key": "type",
															"value": "<string>",
															"description": "Filter by batch type.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/batch/#creating-a-batch)\nfor more information about batch types."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Filter by a comma-separated list of `Strings`. A batch matches if it has one of the given tenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include batches which belong to no tenant.\nValue can effectively only be `true`, as `false` is the default behavior."
														},
														{
															"key": "suspended",
															"value": "<boolean>",
															"description": "A `Boolean` value which indicates whether only active or suspended batches should be included.\nWhen the value is set to `true`, only suspended batches will be returned and\nwhen the value is set to `false`, only active batches will be returned."
														},
														{
															"key": "createdBy",
															"value": "<string>",
															"description": "Only include batches that were started by this user id."
														},
														{
															"key": "startedBefore",
															"value": "<dateTime>",
															"description": "Only include batches that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "startedAfter",
															"value": "<dateTime>",
															"description": "Only include batches that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "withFailures",
															"value": "<boolean>",
															"description": "Only include batches having jobs with failures.\nValue can only be `true`."
														},
														{
															"key": "withoutFailures",
															"value": "<boolean>",
															"description": "Only include batches having jobs without failures.\nValue can only be `true`."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<long>\"\n}"
										},
										{
											"name": "Returned if some of the query parameters are invalid.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/batch/statistics/count?batchId=<string>&type=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&suspended=<boolean>&createdBy=<string>&startedBefore=<dateTime>&startedAfter=<dateTime>&withFailures=<boolean>&withoutFailures=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"batch",
														"statistics",
														"count"
													],
													"query": [
														{
															"key": "batchId",
															"value": "<string>",
															"description": "Filter by batch id."
														},
														{
															"key": "type",
															"value": "<string>",
															"description": "Filter by batch type.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/batch/#creating-a-batch)\nfor more information about batch types."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Filter by a comma-separated list of `Strings`. A batch matches if it has one of the given tenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include batches which belong to no tenant.\nValue can effectively only be `true`, as `false` is the default behavior."
														},
														{
															"key": "suspended",
															"value": "<boolean>",
															"description": "A `Boolean` value which indicates whether only active or suspended batches should be included.\nWhen the value is set to `true`, only suspended batches will be returned and\nwhen the value is set to `false`, only active batches will be returned."
														},
														{
															"key": "createdBy",
															"value": "<string>",
															"description": "Only include batches that were started by this user id."
														},
														{
															"key": "startedBefore",
															"value": "<dateTime>",
															"description": "Only include batches that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "startedAfter",
															"value": "<dateTime>",
															"description": "Only include batches that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "withFailures",
															"value": "<boolean>",
															"description": "Only include batches having jobs with failures.\nValue can only be `true`."
														},
														{
															"key": "withoutFailures",
															"value": "<boolean>",
															"description": "Only include batches having jobs without failures.\nValue can only be `true`."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Statistics",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/batch/statistics?sortBy=tenantId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&batchId=<string>&type=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&suspended=<boolean>&createdBy=<string>&startedBefore=<dateTime>&startedAfter=<dateTime>&withFailures=<boolean>&withoutFailures=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"batch",
										"statistics"
									],
									"query": [
										{
											"key": "sortBy",
											"value": "tenantId",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										},
										{
											"key": "batchId",
											"value": "<string>",
											"description": "Filter by batch id."
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "Filter by batch type.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/batch/#creating-a-batch)\nfor more information about batch types."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of `Strings`. A batch matches if it has one of the given tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include batches which belong to no tenant.\nValue can effectively only be `true`, as `false` is the default behavior."
										},
										{
											"key": "suspended",
											"value": "<boolean>",
											"description": "A `Boolean` value which indicates whether only active or suspended batches should be included.\nWhen the value is set to `true`, only suspended batches will be returned and\nwhen the value is set to `false`, only active batches will be returned."
										},
										{
											"key": "createdBy",
											"value": "<string>",
											"description": "Only include batches that were started by this user id."
										},
										{
											"key": "startedBefore",
											"value": "<dateTime>",
											"description": "Only include batches that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "startedAfter",
											"value": "<dateTime>",
											"description": "Only include batches that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "withFailures",
											"value": "<boolean>",
											"description": "Only include batches having jobs with failures.\nValue can only be `true`."
										},
										{
											"key": "withoutFailures",
											"value": "<boolean>",
											"description": "Only include batches having jobs without failures.\nValue can only be `true`."
										}
									]
								},
								"description": "Queries for batch statistics that fulfill given parameters.\nParameters may be the properties of batches, such as the id or type.\nThe size of the result set can be retrieved by using the \n[Get Batch Statistics Count](https://docs.camunda.org/manual/7.21/reference/rest/batch/get-statistics-query-count/) method."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/batch/statistics?sortBy=tenantId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&batchId=<string>&type=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&suspended=<boolean>&createdBy=<string>&startedBefore=<dateTime>&startedAfter=<dateTime>&withFailures=<boolean>&withoutFailures=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"batch",
												"statistics"
											],
											"query": [
												{
													"key": "sortBy",
													"value": "tenantId",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												},
												{
													"key": "batchId",
													"value": "<string>",
													"description": "Filter by batch id."
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "Filter by batch type.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/batch/#creating-a-batch)\nfor more information about batch types."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of `Strings`. A batch matches if it has one of the given tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include batches which belong to no tenant.\nValue can effectively only be `true`, as `false` is the default behavior."
												},
												{
													"key": "suspended",
													"value": "<boolean>",
													"description": "A `Boolean` value which indicates whether only active or suspended batches should be included.\nWhen the value is set to `true`, only suspended batches will be returned and\nwhen the value is set to `false`, only active batches will be returned."
												},
												{
													"key": "createdBy",
													"value": "<string>",
													"description": "Only include batches that were started by this user id."
												},
												{
													"key": "startedBefore",
													"value": "<dateTime>",
													"description": "Only include batches that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "startedAfter",
													"value": "<dateTime>",
													"description": "Only include batches that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "withFailures",
													"value": "<boolean>",
													"description": "Only include batches having jobs with failures.\nValue can only be `true`."
												},
												{
													"key": "withoutFailures",
													"value": "<boolean>",
													"description": "Only include batches having jobs without failures.\nValue can only be `true`."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"remainingJobs\": \"<integer>\",\n    \"completedJobs\": \"<integer>\",\n    \"failedJobs\": \"<integer>\",\n    \"id\": \"<string>\",\n    \"type\": \"<string>\",\n    \"totalJobs\": \"<integer>\",\n    \"jobsCreated\": \"<integer>\",\n    \"batchJobsPerSeed\": \"<integer>\",\n    \"invocationsPerBatchJob\": \"<integer>\",\n    \"seedJobDefinitionId\": \"<string>\",\n    \"monitorJobDefinitionId\": \"<string>\",\n    \"batchJobDefinitionId\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"tenantId\": \"<string>\",\n    \"createUserId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"executionStartTime\": \"<dateTime>\"\n  },\n  {\n    \"remainingJobs\": \"<integer>\",\n    \"completedJobs\": \"<integer>\",\n    \"failedJobs\": \"<integer>\",\n    \"id\": \"<string>\",\n    \"type\": \"<string>\",\n    \"totalJobs\": \"<integer>\",\n    \"jobsCreated\": \"<integer>\",\n    \"batchJobsPerSeed\": \"<integer>\",\n    \"invocationsPerBatchJob\": \"<integer>\",\n    \"seedJobDefinitionId\": \"<string>\",\n    \"monitorJobDefinitionId\": \"<string>\",\n    \"batchJobDefinitionId\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"tenantId\": \"<string>\",\n    \"createUserId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"executionStartTime\": \"<dateTime>\"\n  }\n]"
								},
								{
									"name": "Returned if some of the query parameters are invalid,\nfor example if a `sortOrder` parameter is supplied, but no `sortBy`.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/batch/statistics?sortBy=tenantId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&batchId=<string>&type=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&suspended=<boolean>&createdBy=<string>&startedBefore=<dateTime>&startedAfter=<dateTime>&withFailures=<boolean>&withoutFailures=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"batch",
												"statistics"
											],
											"query": [
												{
													"key": "sortBy",
													"value": "tenantId",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												},
												{
													"key": "batchId",
													"value": "<string>",
													"description": "Filter by batch id."
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "Filter by batch type.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/batch/#creating-a-batch)\nfor more information about batch types."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of `Strings`. A batch matches if it has one of the given tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include batches which belong to no tenant.\nValue can effectively only be `true`, as `false` is the default behavior."
												},
												{
													"key": "suspended",
													"value": "<boolean>",
													"description": "A `Boolean` value which indicates whether only active or suspended batches should be included.\nWhen the value is set to `true`, only suspended batches will be returned and\nwhen the value is set to `false`, only active batches will be returned."
												},
												{
													"key": "createdBy",
													"value": "<string>",
													"description": "Only include batches that were started by this user id."
												},
												{
													"key": "startedBefore",
													"value": "<dateTime>",
													"description": "Only include batches that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "startedAfter",
													"value": "<dateTime>",
													"description": "Only include batches that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "withFailures",
													"value": "<boolean>",
													"description": "Only include batches having jobs with failures.\nValue can only be `true`."
												},
												{
													"key": "withoutFailures",
													"value": "<boolean>",
													"description": "Only include batches having jobs without failures.\nValue can only be `true`."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "suspended",
							"item": [
								{
									"name": "Activate/Suspend",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"suspended\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/batch/:id/suspended",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"batch",
												":id",
												"suspended"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the batch to activate or suspend."
												}
											]
										},
										"description": "Activates or suspends a batch by id."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"suspended\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/batch/:id/suspended",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"batch",
														":id",
														"suspended"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the batch cannot be suspended or activated.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"suspended\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/batch/:id/suspended",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"batch",
														":id",
														"suspended"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Delete",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/batch/:id?cascade=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"batch",
										":id"
									],
									"query": [
										{
											"key": "cascade",
											"value": "<boolean>",
											"description": "`true`, if the historic batch and historic job logs for this batch should also be deleted."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the batch to be deleted."
										}
									]
								},
								"description": "Deletes a batch by id, including all related jobs and job definitions.\nOptionally also deletes the batch history."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/batch/:id?cascade=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"batch",
												":id"
											],
											"query": [
												{
													"key": "cascade",
													"value": "<boolean>",
													"description": "`true`, if the historic batch and historic job logs for this batch should also be deleted."
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Batch with given id does not exist.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/batch/:id?cascade=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"batch",
												":id"
											],
											"query": [
												{
													"key": "cascade",
													"value": "<boolean>",
													"description": "`true`, if the historic batch and historic job logs for this batch should also be deleted."
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/batch/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"batch",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the batch to be retrieved."
										}
									]
								},
								"description": "Retrieves a batch by id, according to the Batch interface in the engine."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/batch/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"batch",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"totalJobs\": \"<integer>\",\n  \"jobsCreated\": \"<integer>\",\n  \"batchJobsPerSeed\": \"<integer>\",\n  \"invocationsPerBatchJob\": \"<integer>\",\n  \"seedJobDefinitionId\": \"<string>\",\n  \"monitorJobDefinitionId\": \"<string>\",\n  \"batchJobDefinitionId\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"createUserId\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"executionStartTime\": \"<dateTime>\"\n}"
								},
								{
									"name": "Batch with given id does not exist.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/batch/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"batch",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/batch?sortBy=tenantId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&batchId=<string>&type=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&suspended=<boolean>&createdBy=<string>&startedBefore=<dateTime>&startedAfter=<dateTime>&withFailures=<boolean>&withoutFailures=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"batch"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "tenantId",
									"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
								},
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return."
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
								},
								{
									"key": "batchId",
									"value": "<string>",
									"description": "Filter by batch id."
								},
								{
									"key": "type",
									"value": "<string>",
									"description": "Filter by batch type.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/batch/#creating-a-batch)\nfor more information about batch types."
								},
								{
									"key": "tenantIdIn",
									"value": "<string>",
									"description": "Filter by a comma-separated list of `Strings`. A batch matches if it has one of the given tenant ids."
								},
								{
									"key": "withoutTenantId",
									"value": "<boolean>",
									"description": "Only include batches which belong to no tenant.\nValue can effectively only be `true`, as `false` is the default behavior."
								},
								{
									"key": "suspended",
									"value": "<boolean>",
									"description": "A `Boolean` value which indicates whether only active or suspended batches should be included.\nWhen the value is set to `true`, only suspended batches will be returned and\nwhen the value is set to `false`, only active batches will be returned."
								},
								{
									"key": "createdBy",
									"value": "<string>",
									"description": "Only include batches that were started by this user id."
								},
								{
									"key": "startedBefore",
									"value": "<dateTime>",
									"description": "Only include batches that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
								},
								{
									"key": "startedAfter",
									"value": "<dateTime>",
									"description": "Only include batches that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
								},
								{
									"key": "withFailures",
									"value": "<boolean>",
									"description": "Only include batches having jobs with failures.\nValue can only be `true`."
								},
								{
									"key": "withoutFailures",
									"value": "<boolean>",
									"description": "Only include batches having jobs without failures.\nValue can only be `true`."
								}
							]
						},
						"description": "Queries for batches that fulfill given parameters. Parameters may be the properties of batches, such as the id or type.\nThe size of the result set can be retrieved by using the\n[Get Batch Count](https://docs.camunda.org/manual/7.21/reference/rest/batch/get-query-count/) method."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/batch?sortBy=tenantId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&batchId=<string>&type=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&suspended=<boolean>&createdBy=<string>&startedBefore=<dateTime>&startedAfter=<dateTime>&withFailures=<boolean>&withoutFailures=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"batch"
									],
									"query": [
										{
											"key": "sortBy",
											"value": "tenantId",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										},
										{
											"key": "batchId",
											"value": "<string>",
											"description": "Filter by batch id."
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "Filter by batch type.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/batch/#creating-a-batch)\nfor more information about batch types."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of `Strings`. A batch matches if it has one of the given tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include batches which belong to no tenant.\nValue can effectively only be `true`, as `false` is the default behavior."
										},
										{
											"key": "suspended",
											"value": "<boolean>",
											"description": "A `Boolean` value which indicates whether only active or suspended batches should be included.\nWhen the value is set to `true`, only suspended batches will be returned and\nwhen the value is set to `false`, only active batches will be returned."
										},
										{
											"key": "createdBy",
											"value": "<string>",
											"description": "Only include batches that were started by this user id."
										},
										{
											"key": "startedBefore",
											"value": "<dateTime>",
											"description": "Only include batches that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "startedAfter",
											"value": "<dateTime>",
											"description": "Only include batches that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "withFailures",
											"value": "<boolean>",
											"description": "Only include batches having jobs with failures.\nValue can only be `true`."
										},
										{
											"key": "withoutFailures",
											"value": "<boolean>",
											"description": "Only include batches having jobs without failures.\nValue can only be `true`."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\",\n    \"totalJobs\": \"<integer>\",\n    \"jobsCreated\": \"<integer>\",\n    \"batchJobsPerSeed\": \"<integer>\",\n    \"invocationsPerBatchJob\": \"<integer>\",\n    \"seedJobDefinitionId\": \"<string>\",\n    \"monitorJobDefinitionId\": \"<string>\",\n    \"batchJobDefinitionId\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"tenantId\": \"<string>\",\n    \"createUserId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"executionStartTime\": \"<dateTime>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\",\n    \"totalJobs\": \"<integer>\",\n    \"jobsCreated\": \"<integer>\",\n    \"batchJobsPerSeed\": \"<integer>\",\n    \"invocationsPerBatchJob\": \"<integer>\",\n    \"seedJobDefinitionId\": \"<string>\",\n    \"monitorJobDefinitionId\": \"<string>\",\n    \"batchJobDefinitionId\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"tenantId\": \"<string>\",\n    \"createUserId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"executionStartTime\": \"<dateTime>\"\n  }\n]"
						},
						{
							"name": "Returned if some of the query parameters are invalid,\nfor example if a `sortOrder` parameter is supplied, but no `sortBy`.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/batch?sortBy=tenantId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&batchId=<string>&type=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&suspended=<boolean>&createdBy=<string>&startedBefore=<dateTime>&startedAfter=<dateTime>&withFailures=<boolean>&withoutFailures=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"batch"
									],
									"query": [
										{
											"key": "sortBy",
											"value": "tenantId",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										},
										{
											"key": "batchId",
											"value": "<string>",
											"description": "Filter by batch id."
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "Filter by batch type.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/batch/#creating-a-batch)\nfor more information about batch types."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of `Strings`. A batch matches if it has one of the given tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include batches which belong to no tenant.\nValue can effectively only be `true`, as `false` is the default behavior."
										},
										{
											"key": "suspended",
											"value": "<boolean>",
											"description": "A `Boolean` value which indicates whether only active or suspended batches should be included.\nWhen the value is set to `true`, only suspended batches will be returned and\nwhen the value is set to `false`, only active batches will be returned."
										},
										{
											"key": "createdBy",
											"value": "<string>",
											"description": "Only include batches that were started by this user id."
										},
										{
											"key": "startedBefore",
											"value": "<dateTime>",
											"description": "Only include batches that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "startedAfter",
											"value": "<dateTime>",
											"description": "Only include batches that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "withFailures",
											"value": "<boolean>",
											"description": "Only include batches having jobs with failures.\nValue can only be `true`."
										},
										{
											"key": "withoutFailures",
											"value": "<boolean>",
											"description": "Only include batches having jobs without failures.\nValue can only be `true`."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "condition",
			"item": [
				{
					"name": "Evaluate",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"variables\": {\n    \"adipisicing31d\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"anim__\": 78385658.02630529,\n        \"ut121\": -62341632\n      }\n    }\n  },\n  \"businessKey\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"withoutTenantId\": \"<boolean>\",\n  \"processDefinitionId\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/condition",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"condition"
							]
						},
						"description": "Triggers evaluation of conditions for conditional start event(s). \nInternally this maps to the engines condition evaluation builder method ConditionEvaluationBuilder#evaluateStartConditions(). \nFor more information see the [Conditional Start Events](https://docs.camunda.org/manual/7.21/reference/bpmn20/events/conditional-events/#conditional-start-event)\nsection of the [BPMN 2.0 Implementation Reference](https://docs.camunda.org/manual/7.21/reference/bpmn20/)."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"variables\": {\n    \"adipisicing31d\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"anim__\": 78385658.02630529,\n        \"ut121\": -62341632\n      }\n    }\n  },\n  \"businessKey\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"withoutTenantId\": \"<boolean>\",\n  \"processDefinitionId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/condition",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"condition"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"definitionId\": \"<string>\",\n    \"businessKey\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"ended\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"tenantId\": \"<string>\",\n    \"links\": [\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      },\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      }\n    ]\n  },\n  {\n    \"id\": \"<string>\",\n    \"definitionId\": \"<string>\",\n    \"businessKey\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"ended\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"tenantId\": \"<string>\",\n    \"links\": [\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      },\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      }\n    ]\n  }\n]"
						},
						{
							"name": "If both tenantId and withoutTenantId are supplied.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"variables\": {\n    \"adipisicing31d\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"anim__\": 78385658.02630529,\n        \"ut121\": -62341632\n      }\n    }\n  },\n  \"businessKey\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"withoutTenantId\": \"<boolean>\",\n  \"processDefinitionId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/condition",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"condition"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						},
						{
							"name": "If the user is not allowed to start the process instance of the process definition, which start condition was evaluated to `true`.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"variables\": {\n    \"adipisicing31d\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"anim__\": 78385658.02630529,\n        \"ut121\": -62341632\n      }\n    }\n  },\n  \"businessKey\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"withoutTenantId\": \"<boolean>\",\n  \"processDefinitionId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/condition",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"condition"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"userId\": \"<string>\",\n  \"missingAuthorizations\": [\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    },\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "decision-definition",
			"item": [
				{
					"name": "count",
					"item": [
						{
							"name": "Get List Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decision-definition/count?decisionDefinitionId=<string>&decisionDefinitionIdIn=<string>&name=<string>&nameLike=<string>&deploymentId=<string>&deployedAfter=<dateTime>&deployedAt=<dateTime>&key=<string>&keyLike=<string>&category=<string>&categoryLike=<string>&version=<integer>&latestVersion=<boolean>&resourceName=<string>&resourceNameLike=<string>&decisionRequirementsDefinitionId=<string>&decisionRequirementsDefinitionKey=<string>&withoutDecisionRequirementsDefinition=<boolean>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeDecisionDefinitionsWithoutTenantId=<boolean>&versionTag=<string>&versionTagLike=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decision-definition",
										"count"
									],
									"query": [
										{
											"key": "decisionDefinitionId",
											"value": "<string>",
											"description": "Filter by decision definition id."
										},
										{
											"key": "decisionDefinitionIdIn",
											"value": "<string>",
											"description": "Filter by decision definition ids."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Filter by decision definition name."
										},
										{
											"key": "nameLike",
											"value": "<string>",
											"description": "Filter by decision definition names that the parameter is a substring of."
										},
										{
											"key": "deploymentId",
											"value": "<string>",
											"description": "Filter by the deployment the id belongs to."
										},
										{
											"key": "deployedAfter",
											"value": "<dateTime>",
											"description": "Filter by the deploy time of the deployment the decision definition belongs to.\nOnly selects decision definitions that have been deployed after (exclusive) a specific time."
										},
										{
											"key": "deployedAt",
											"value": "<dateTime>",
											"description": "Filter by the deploy time of the deployment the decision definition belongs to.\nOnly selects decision definitions that have been deployed at a specific time (exact match)."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "Filter by decision definition key, i.e., the id in the DMN 1.0 XML. Exact match."
										},
										{
											"key": "keyLike",
											"value": "<string>",
											"description": "Filter by decision definition keys that the parameter is a substring of."
										},
										{
											"key": "category",
											"value": "<string>",
											"description": "Filter by decision definition category. Exact match."
										},
										{
											"key": "categoryLike",
											"value": "<string>",
											"description": "Filter by decision definition categories that the parameter is a substring of."
										},
										{
											"key": "version",
											"value": "<integer>",
											"description": "Filter by decision definition version."
										},
										{
											"key": "latestVersion",
											"value": "<boolean>",
											"description": "Only include those decision definitions that are latest versions.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "resourceName",
											"value": "<string>",
											"description": "Filter by the name of the decision definition resource. Exact match."
										},
										{
											"key": "resourceNameLike",
											"value": "<string>",
											"description": "Filter by names of those decision definition resources that the parameter is a substring of."
										},
										{
											"key": "decisionRequirementsDefinitionId",
											"value": "<string>",
											"description": "Filter by the id of the decision requirements definition this decision definition belongs to."
										},
										{
											"key": "decisionRequirementsDefinitionKey",
											"value": "<string>",
											"description": "Filter by the key of the decision requirements definition this decision definition belongs to."
										},
										{
											"key": "withoutDecisionRequirementsDefinition",
											"value": "<boolean>",
											"description": "Only include decision definitions which does not belongs to any decision requirements definition.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of `Strings`. A decision definition must have one of the given tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include decision definitions which belong to no tenant.\nValue can effectively only be `true`, as `false` is the default behavior."
										},
										{
											"key": "includeDecisionDefinitionsWithoutTenantId",
											"value": "<boolean>",
											"description": "Include decision definitions which belong to no tenant.\nCan be used in combination with `tenantIdIn`.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "versionTag",
											"value": "<string>",
											"description": "Filter by the version tag."
										},
										{
											"key": "versionTagLike",
											"value": "<string>",
											"description": "Filter by the version tags of those decision definition resources that the parameter is a substring of."
										}
									]
								},
								"description": "Requests the number of decision definitions that fulfill the query criteria.\nTakes the same filtering parameters as the\n[Get Decision Definition](https://docs.camunda.org/manual/7.21/reference/rest/decision-definition/get-query/) method."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/decision-definition/count?decisionDefinitionId=<string>&decisionDefinitionIdIn=<string>&name=<string>&nameLike=<string>&deploymentId=<string>&deployedAfter=<dateTime>&deployedAt=<dateTime>&key=<string>&keyLike=<string>&category=<string>&categoryLike=<string>&version=<integer>&latestVersion=<boolean>&resourceName=<string>&resourceNameLike=<string>&decisionRequirementsDefinitionId=<string>&decisionRequirementsDefinitionKey=<string>&withoutDecisionRequirementsDefinition=<boolean>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeDecisionDefinitionsWithoutTenantId=<boolean>&versionTag=<string>&versionTagLike=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision-definition",
												"count"
											],
											"query": [
												{
													"key": "decisionDefinitionId",
													"value": "<string>",
													"description": "Filter by decision definition id."
												},
												{
													"key": "decisionDefinitionIdIn",
													"value": "<string>",
													"description": "Filter by decision definition ids."
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "Filter by decision definition name."
												},
												{
													"key": "nameLike",
													"value": "<string>",
													"description": "Filter by decision definition names that the parameter is a substring of."
												},
												{
													"key": "deploymentId",
													"value": "<string>",
													"description": "Filter by the deployment the id belongs to."
												},
												{
													"key": "deployedAfter",
													"value": "<dateTime>",
													"description": "Filter by the deploy time of the deployment the decision definition belongs to.\nOnly selects decision definitions that have been deployed after (exclusive) a specific time."
												},
												{
													"key": "deployedAt",
													"value": "<dateTime>",
													"description": "Filter by the deploy time of the deployment the decision definition belongs to.\nOnly selects decision definitions that have been deployed at a specific time (exact match)."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "Filter by decision definition key, i.e., the id in the DMN 1.0 XML. Exact match."
												},
												{
													"key": "keyLike",
													"value": "<string>",
													"description": "Filter by decision definition keys that the parameter is a substring of."
												},
												{
													"key": "category",
													"value": "<string>",
													"description": "Filter by decision definition category. Exact match."
												},
												{
													"key": "categoryLike",
													"value": "<string>",
													"description": "Filter by decision definition categories that the parameter is a substring of."
												},
												{
													"key": "version",
													"value": "<integer>",
													"description": "Filter by decision definition version."
												},
												{
													"key": "latestVersion",
													"value": "<boolean>",
													"description": "Only include those decision definitions that are latest versions.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "resourceName",
													"value": "<string>",
													"description": "Filter by the name of the decision definition resource. Exact match."
												},
												{
													"key": "resourceNameLike",
													"value": "<string>",
													"description": "Filter by names of those decision definition resources that the parameter is a substring of."
												},
												{
													"key": "decisionRequirementsDefinitionId",
													"value": "<string>",
													"description": "Filter by the id of the decision requirements definition this decision definition belongs to."
												},
												{
													"key": "decisionRequirementsDefinitionKey",
													"value": "<string>",
													"description": "Filter by the key of the decision requirements definition this decision definition belongs to."
												},
												{
													"key": "withoutDecisionRequirementsDefinition",
													"value": "<boolean>",
													"description": "Only include decision definitions which does not belongs to any decision requirements definition.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of `Strings`. A decision definition must have one of the given tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include decision definitions which belong to no tenant.\nValue can effectively only be `true`, as `false` is the default behavior."
												},
												{
													"key": "includeDecisionDefinitionsWithoutTenantId",
													"value": "<boolean>",
													"description": "Include decision definitions which belong to no tenant.\nCan be used in combination with `tenantIdIn`.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "versionTag",
													"value": "<string>",
													"description": "Filter by the version tag."
												},
												{
													"key": "versionTagLike",
													"value": "<string>",
													"description": "Filter by the version tags of those decision definition resources that the parameter is a substring of."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/decision-definition/count?decisionDefinitionId=<string>&decisionDefinitionIdIn=<string>&name=<string>&nameLike=<string>&deploymentId=<string>&deployedAfter=<dateTime>&deployedAt=<dateTime>&key=<string>&keyLike=<string>&category=<string>&categoryLike=<string>&version=<integer>&latestVersion=<boolean>&resourceName=<string>&resourceNameLike=<string>&decisionRequirementsDefinitionId=<string>&decisionRequirementsDefinitionKey=<string>&withoutDecisionRequirementsDefinition=<boolean>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeDecisionDefinitionsWithoutTenantId=<boolean>&versionTag=<string>&versionTagLike=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision-definition",
												"count"
											],
											"query": [
												{
													"key": "decisionDefinitionId",
													"value": "<string>",
													"description": "Filter by decision definition id."
												},
												{
													"key": "decisionDefinitionIdIn",
													"value": "<string>",
													"description": "Filter by decision definition ids."
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "Filter by decision definition name."
												},
												{
													"key": "nameLike",
													"value": "<string>",
													"description": "Filter by decision definition names that the parameter is a substring of."
												},
												{
													"key": "deploymentId",
													"value": "<string>",
													"description": "Filter by the deployment the id belongs to."
												},
												{
													"key": "deployedAfter",
													"value": "<dateTime>",
													"description": "Filter by the deploy time of the deployment the decision definition belongs to.\nOnly selects decision definitions that have been deployed after (exclusive) a specific time."
												},
												{
													"key": "deployedAt",
													"value": "<dateTime>",
													"description": "Filter by the deploy time of the deployment the decision definition belongs to.\nOnly selects decision definitions that have been deployed at a specific time (exact match)."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "Filter by decision definition key, i.e., the id in the DMN 1.0 XML. Exact match."
												},
												{
													"key": "keyLike",
													"value": "<string>",
													"description": "Filter by decision definition keys that the parameter is a substring of."
												},
												{
													"key": "category",
													"value": "<string>",
													"description": "Filter by decision definition category. Exact match."
												},
												{
													"key": "categoryLike",
													"value": "<string>",
													"description": "Filter by decision definition categories that the parameter is a substring of."
												},
												{
													"key": "version",
													"value": "<integer>",
													"description": "Filter by decision definition version."
												},
												{
													"key": "latestVersion",
													"value": "<boolean>",
													"description": "Only include those decision definitions that are latest versions.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "resourceName",
													"value": "<string>",
													"description": "Filter by the name of the decision definition resource. Exact match."
												},
												{
													"key": "resourceNameLike",
													"value": "<string>",
													"description": "Filter by names of those decision definition resources that the parameter is a substring of."
												},
												{
													"key": "decisionRequirementsDefinitionId",
													"value": "<string>",
													"description": "Filter by the id of the decision requirements definition this decision definition belongs to."
												},
												{
													"key": "decisionRequirementsDefinitionKey",
													"value": "<string>",
													"description": "Filter by the key of the decision requirements definition this decision definition belongs to."
												},
												{
													"key": "withoutDecisionRequirementsDefinition",
													"value": "<boolean>",
													"description": "Only include decision definitions which does not belongs to any decision requirements definition.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of `Strings`. A decision definition must have one of the given tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include decision definitions which belong to no tenant.\nValue can effectively only be `true`, as `false` is the default behavior."
												},
												{
													"key": "includeDecisionDefinitionsWithoutTenantId",
													"value": "<boolean>",
													"description": "Include decision definitions which belong to no tenant.\nCan be used in combination with `tenantIdIn`.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "versionTag",
													"value": "<string>",
													"description": "Filter by the version tag."
												},
												{
													"key": "versionTagLike",
													"value": "<string>",
													"description": "Filter by the version tags of those decision definition resources that the parameter is a substring of."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "key",
					"item": [
						{
							"name": "{key}",
							"item": [
								{
									"name": "diagram",
									"item": [
										{
											"name": "Get Diagram By Key",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/octet-stream"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/decision-definition/key/:key/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-definition",
														"key",
														":key",
														"diagram"
													],
													"variable": [
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The key of the decision definition (the latest version thereof) to be retrieved."
														}
													]
												},
												"description": "Returns the diagram for the latest version of the decision definition which belongs to no tenant"
											},
											"response": [
												{
													"name": "Request successful. The image diagram of this process.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/octet-stream"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/decision-definition/key/:key/diagram",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"decision-definition",
																"key",
																":key",
																"diagram"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/octet-stream"
														}
													],
													"cookie": [],
													"body": "<string>"
												},
												{
													"name": "The decision definition doesn't have an associated diagram.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/decision-definition/key/:key/diagram",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"decision-definition",
																"key",
																":key",
																"diagram"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Decision definition with given key does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/decision-definition/key/:key/diagram",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"decision-definition",
																"key",
																":key",
																"diagram"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "evaluate",
									"item": [
										{
											"name": "Evaluate By Key",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"anim_ea\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"fugiate_4\": -72196799,\n        \"cillum_19\": \"commodo e\",\n        \"ad__c\": \"dolor offi\",\n        \"ad_2f\": false\n      }\n    },\n    \"anim88\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Excepteur975\": \"deserunt quis\"\n      }\n    },\n    \"id3f\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"cillum_2\": true\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/decision-definition/key/:key/evaluate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-definition",
														"key",
														":key",
														"evaluate"
													],
													"variable": [
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The key of the decision definition (the latest version thereof) to be evaluated."
														}
													]
												},
												"description": "Evaluates the latest version of the decision definition which belongs to no tenant.\nThe input values of the decision have to be supplied in the request body."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"variables\": {\n    \"anim_ea\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"fugiate_4\": -72196799,\n        \"cillum_19\": \"commodo e\",\n        \"ad__c\": \"dolor offi\",\n        \"ad_2f\": false\n      }\n    },\n    \"anim88\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Excepteur975\": \"deserunt quis\"\n      }\n    },\n    \"id3f\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"cillum_2\": true\n      }\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/decision-definition/key/:key/evaluate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"decision-definition",
																"key",
																":key",
																"evaluate"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"Lorem_2\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Excepteur1\": \"do aliqua\"\n      }\n    },\n    \"sunt_5b\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Lorem_4ec\": true\n      }\n    }\n  },\n  {\n    \"anime4\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"mollit_0c\": -3440756.734083101,\n        \"deserunt__5e\": false,\n        \"utb\": \"irure laborum in magna\",\n        \"nisi_8\": -13522475.498349845\n      }\n    },\n    \"dolor_a\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sunt7\": \"anim deserunt irure fugiat\",\n        \"sint_67\": false\n      }\n    }\n  }\n]"
												},
												{
													"name": "Decision definition with given key does not exist.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"variables\": {\n    \"anim_ea\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"fugiate_4\": -72196799,\n        \"cillum_19\": \"commodo e\",\n        \"ad__c\": \"dolor offi\",\n        \"ad_2f\": false\n      }\n    },\n    \"anim88\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Excepteur975\": \"deserunt quis\"\n      }\n    },\n    \"id3f\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"cillum_2\": true\n      }\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/decision-definition/key/:key/evaluate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"decision-definition",
																"key",
																":key",
																"evaluate"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "history-time-to-live",
									"item": [
										{
											"name": "Update History Time to Live By Key",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"historyTimeToLive\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/decision-definition/key/:key/history-time-to-live",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-definition",
														"key",
														":key",
														"history-time-to-live"
													],
													"variable": [
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The key of the decision definitions to change history time to live."
														}
													]
												},
												"description": "Updates the latest version of the decision definition which belongs to no tenant.\nThe field is used within [History cleanup](https://docs.camunda.org/manual/7.21/user-guide/process-engine/history/#history-cleanup)."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"historyTimeToLive\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/decision-definition/key/:key/history-time-to-live",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"decision-definition",
																"key",
																":key",
																"history-time-to-live"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if some of the request parameters are invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"historyTimeToLive\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/decision-definition/key/:key/history-time-to-live",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"decision-definition",
																"key",
																":key",
																"history-time-to-live"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "Decision definition with given key does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"historyTimeToLive\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/decision-definition/key/:key/history-time-to-live",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"decision-definition",
																"key",
																":key",
																"history-time-to-live"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "tenant-id",
									"item": [
										{
											"name": "{tenant-id}",
											"item": [
												{
													"name": "diagram",
													"item": [
														{
															"name": "Get Diagram By Key And Tenant",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/octet-stream"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/decision-definition/key/:key/tenant-id/:tenant-id/diagram",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"decision-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id",
																		"diagram"
																	],
																	"variable": [
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) The key of the decision definition (the latest version thereof) to be retrieved."
																		},
																		{
																			"key": "tenant-id",
																			"value": "<string>",
																			"description": "(Required) The id of the tenant the decision definition belongs to."
																		}
																	]
																},
																"description": "Returns the XML of the latest version of the decision definition for tenant."
															},
															"response": [
																{
																	"name": "Request successful. The image diagram of this process.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/octet-stream"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/decision-definition/key/:key/tenant-id/:tenant-id/diagram",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"decision-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"diagram"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/octet-stream"
																		}
																	],
																	"cookie": [],
																	"body": "<string>"
																},
																{
																	"name": "The decision definition doesn't have an associated diagram.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/decision-definition/key/:key/tenant-id/:tenant-id/diagram",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"decision-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"diagram"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Decision definition with given key does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/decision-definition/key/:key/tenant-id/:tenant-id/diagram",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"decision-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"diagram"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "evaluate",
													"item": [
														{
															"name": "Evaluate By Key And Tenant",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"variables\": {\n    \"anim_ea\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"fugiate_4\": -72196799,\n        \"cillum_19\": \"commodo e\",\n        \"ad__c\": \"dolor offi\",\n        \"ad_2f\": false\n      }\n    },\n    \"anim88\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Excepteur975\": \"deserunt quis\"\n      }\n    },\n    \"id3f\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"cillum_2\": true\n      }\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/decision-definition/key/:key/tenant-id/:tenant-id/evaluate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"decision-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id",
																		"evaluate"
																	],
																	"variable": [
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) The key of the decision definition (the latest version thereof) to be evaluated."
																		},
																		{
																			"key": "tenant-id",
																			"value": "<string>",
																			"description": "(Required) The id of the tenant the decision definition belongs to."
																		}
																	]
																},
																"description": "Evaluates the latest version of the decision definition for tenant.\nThe input values of the decision have to be supplied in the request body."
															},
															"response": [
																{
																	"name": "Request successful.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"variables\": {\n    \"anim_ea\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"fugiate_4\": -72196799,\n        \"cillum_19\": \"commodo e\",\n        \"ad__c\": \"dolor offi\",\n        \"ad_2f\": false\n      }\n    },\n    \"anim88\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Excepteur975\": \"deserunt quis\"\n      }\n    },\n    \"id3f\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"cillum_2\": true\n      }\n    }\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/decision-definition/key/:key/tenant-id/:tenant-id/evaluate",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"decision-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"evaluate"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"Lorem_2\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Excepteur1\": \"do aliqua\"\n      }\n    },\n    \"sunt_5b\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Lorem_4ec\": true\n      }\n    }\n  },\n  {\n    \"anime4\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"mollit_0c\": -3440756.734083101,\n        \"deserunt__5e\": false,\n        \"utb\": \"irure laborum in magna\",\n        \"nisi_8\": -13522475.498349845\n      }\n    },\n    \"dolor_a\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sunt7\": \"anim deserunt irure fugiat\",\n        \"sint_67\": false\n      }\n    }\n  }\n]"
																},
																{
																	"name": "Decision definition with given key does not exist.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"variables\": {\n    \"anim_ea\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"fugiate_4\": -72196799,\n        \"cillum_19\": \"commodo e\",\n        \"ad__c\": \"dolor offi\",\n        \"ad_2f\": false\n      }\n    },\n    \"anim88\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Excepteur975\": \"deserunt quis\"\n      }\n    },\n    \"id3f\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"cillum_2\": true\n      }\n    }\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/decision-definition/key/:key/tenant-id/:tenant-id/evaluate",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"decision-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"evaluate"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "history-time-to-live",
													"item": [
														{
															"name": "Update History Time to Live By Key And Tenant",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"historyTimeToLive\": \"<integer>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/decision-definition/key/:key/tenant-id/:tenant-id/history-time-to-live",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"decision-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id",
																		"history-time-to-live"
																	],
																	"variable": [
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) The key of the decision definitions to change history time to live."
																		},
																		{
																			"key": "tenant-id",
																			"value": "<string>",
																			"description": "(Required) The id of the tenant the decision definition belongs to."
																		}
																	]
																},
																"description": "Updates the latest version of the decision definition for tenant.\nThe field is used within [History cleanup](https://docs.camunda.org/manual/7.21/user-guide/process-engine/history/#history-cleanup).\nThe value of the update is mandatory by default and does not allow `null` values. To enable them, please\nset the feature flag `enforceHistoryTimeToLive` to `false`. Read more in [Configuration Properties]\n(https://docs.camunda.org/manual/7.21/reference/deployment-descriptors/tags/process-engine#configuration-properties)"
															},
															"response": [
																{
																	"name": "Request successful.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"historyTimeToLive\": \"<integer>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/decision-definition/key/:key/tenant-id/:tenant-id/history-time-to-live",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"decision-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"history-time-to-live"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Returned if some of the request parameters are invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"historyTimeToLive\": \"<integer>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/decision-definition/key/:key/tenant-id/:tenant-id/history-time-to-live",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"decision-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"history-time-to-live"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																},
																{
																	"name": "Decision definition with given key does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"historyTimeToLive\": \"<integer>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/decision-definition/key/:key/tenant-id/:tenant-id/history-time-to-live",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"decision-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"history-time-to-live"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "xml",
													"item": [
														{
															"name": "Get XML By Key and Tenant",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/decision-definition/key/:key/tenant-id/:tenant-id/xml",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"decision-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id",
																		"xml"
																	],
																	"variable": [
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) The key of the decision definition (the latest version thereof)."
																		},
																		{
																			"key": "tenant-id",
																			"value": "<string>",
																			"description": "(Required) The id of the tenant the decision definition belongs to."
																		}
																	]
																},
																"description": "Retrieves the XML of the latest version of the decision definition for tenant"
															},
															"response": [
																{
																	"name": "Request successful.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/decision-definition/key/:key/tenant-id/:tenant-id/xml",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"decision-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"xml"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"id\": \"<string>\",\n  \"dmnXml\": \"<string>\"\n}"
																},
																{
																	"name": "Decision definition with given key does not exist.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/decision-definition/key/:key/tenant-id/:tenant-id/xml",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"decision-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"xml"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get Decision Definition By Key And Tenant Id",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/decision-definition/key/:key/tenant-id/:tenant-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"decision-definition",
																"key",
																":key",
																"tenant-id",
																":tenant-id"
															],
															"variable": [
																{
																	"key": "key",
																	"value": "<string>",
																	"description": "(Required) The key of the decision definition (the latest version thereof) to be retrieved."
																},
																{
																	"key": "tenant-id",
																	"value": "<string>",
																	"description": "(Required) The id of the tenant the decision definition belongs to."
																}
															]
														},
														"description": "Retrieves the latest version of the decision definition for tenant"
													},
													"response": [
														{
															"name": "Request successful.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/decision-definition/key/:key/tenant-id/:tenant-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"decision-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id"
																	],
																	"variable": [
																		{
																			"key": "key"
																		},
																		{
																			"key": "tenant-id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"key\": \"<string>\",\n  \"category\": \"<string>\",\n  \"name\": \"<string>\",\n  \"version\": \"<integer>\",\n  \"resource\": \"<string>\",\n  \"deploymentId\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"decisionRequirementsDefinitionId\": \"<string>\",\n  \"decisionRequirementsDefinitionKey\": \"<string>\",\n  \"historyTimeToLive\": \"<integer>\",\n  \"versionTag\": \"<string>\"\n}"
														},
														{
															"name": "Decision definition with given key does not exist.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/decision-definition/key/:key/tenant-id/:tenant-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"decision-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id"
																	],
																	"variable": [
																		{
																			"key": "key"
																		},
																		{
																			"key": "tenant-id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "xml",
									"item": [
										{
											"name": "Get XML By Key",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/decision-definition/key/:key/xml",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-definition",
														"key",
														":key",
														"xml"
													],
													"variable": [
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The key of the decision definition (the latest version thereof)."
														}
													]
												},
												"description": "Retrieves the XML for the latest version of the decision definition which belongs to no tenant."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/decision-definition/key/:key/xml",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"decision-definition",
																"key",
																":key",
																"xml"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"dmnXml\": \"<string>\"\n}"
												},
												{
													"name": "Decision definition with given key does not exist.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/decision-definition/key/:key/xml",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"decision-definition",
																"key",
																":key",
																"xml"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Decision Definition By Key",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/decision-definition/key/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision-definition",
												"key",
												":key"
											],
											"variable": [
												{
													"key": "key",
													"value": "<string>",
													"description": "(Required) The key of the decision definition (the latest version thereof) to be retrieved."
												}
											]
										},
										"description": "Retrieves the latest version of the decision definition which belongs to no tenant."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/decision-definition/key/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-definition",
														"key",
														":key"
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"key\": \"<string>\",\n  \"category\": \"<string>\",\n  \"name\": \"<string>\",\n  \"version\": \"<integer>\",\n  \"resource\": \"<string>\",\n  \"deploymentId\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"decisionRequirementsDefinitionId\": \"<string>\",\n  \"decisionRequirementsDefinitionKey\": \"<string>\",\n  \"historyTimeToLive\": \"<integer>\",\n  \"versionTag\": \"<string>\"\n}"
										},
										{
											"name": "Decision definition with given key does not exist.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/decision-definition/key/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-definition",
														"key",
														":key"
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "diagram",
							"item": [
								{
									"name": "Get Diagram",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/octet-stream"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/decision-definition/:id/diagram",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision-definition",
												":id",
												"diagram"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the process definition."
												}
											]
										},
										"description": "Retrieves the diagram of a decision definition."
									},
									"response": [
										{
											"name": "Request successful. The image diagram of this process.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/octet-stream"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/decision-definition/:id/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-definition",
														":id",
														"diagram"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/octet-stream"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "The decision definition doesn't have an associated diagram.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/decision-definition/:id/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-definition",
														":id",
														"diagram"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Decision definition with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/decision-definition/:id/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-definition",
														":id",
														"diagram"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "evaluate",
							"item": [
								{
									"name": "Evaluate By Id",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"variables\": {\n    \"anim_ea\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"fugiate_4\": -72196799,\n        \"cillum_19\": \"commodo e\",\n        \"ad__c\": \"dolor offi\",\n        \"ad_2f\": false\n      }\n    },\n    \"anim88\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Excepteur975\": \"deserunt quis\"\n      }\n    },\n    \"id3f\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"cillum_2\": true\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/decision-definition/:id/evaluate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision-definition",
												":id",
												"evaluate"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the decision definition to be evaluated."
												}
											]
										},
										"description": "Evaluates a given decision and returns the result.\nThe input values of the decision have to be supplied in the request body."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"anim_ea\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"fugiate_4\": -72196799,\n        \"cillum_19\": \"commodo e\",\n        \"ad__c\": \"dolor offi\",\n        \"ad_2f\": false\n      }\n    },\n    \"anim88\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Excepteur975\": \"deserunt quis\"\n      }\n    },\n    \"id3f\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"cillum_2\": true\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/decision-definition/:id/evaluate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-definition",
														":id",
														"evaluate"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"Lorem_2\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Excepteur1\": \"do aliqua\"\n      }\n    },\n    \"sunt_5b\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Lorem_4ec\": true\n      }\n    }\n  },\n  {\n    \"anime4\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"mollit_0c\": -3440756.734083101,\n        \"deserunt__5e\": false,\n        \"utb\": \"irure laborum in magna\",\n        \"nisi_8\": -13522475.498349845\n      }\n    },\n    \"dolor_a\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sunt7\": \"anim deserunt irure fugiat\",\n        \"sint_67\": false\n      }\n    }\n  }\n]"
										},
										{
											"name": "Decision definition with given id does not exist.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"anim_ea\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"fugiate_4\": -72196799,\n        \"cillum_19\": \"commodo e\",\n        \"ad__c\": \"dolor offi\",\n        \"ad_2f\": false\n      }\n    },\n    \"anim88\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Excepteur975\": \"deserunt quis\"\n      }\n    },\n    \"id3f\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"cillum_2\": true\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/decision-definition/:id/evaluate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-definition",
														":id",
														"evaluate"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "history-time-to-live",
							"item": [
								{
									"name": "Update History Time to Live",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"historyTimeToLive\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/decision-definition/:id/history-time-to-live",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision-definition",
												":id",
												"history-time-to-live"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the decision definition to change history time to live."
												}
											]
										},
										"description": "Updates history time to live for decision definition.\nThe field is used within [History cleanup](https://docs.camunda.org/manual/7.21/user-guide/process-engine/history/#history-cleanup)."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"historyTimeToLive\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/decision-definition/:id/history-time-to-live",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-definition",
														":id",
														"history-time-to-live"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if some of the request parameters are invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"historyTimeToLive\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/decision-definition/:id/history-time-to-live",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-definition",
														":id",
														"history-time-to-live"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Decision definition with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"historyTimeToLive\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/decision-definition/:id/history-time-to-live",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-definition",
														":id",
														"history-time-to-live"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "xml",
							"item": [
								{
									"name": "Get XML By Id",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/decision-definition/:id/xml",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision-definition",
												":id",
												"xml"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the decision definition."
												}
											]
										},
										"description": "Retrieves the DMN XML of a decision definition."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/decision-definition/:id/xml",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-definition",
														":id",
														"xml"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"dmnXml\": \"<string>\"\n}"
										},
										{
											"name": "Decision definition with given id does not exist.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/decision-definition/:id/xml",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-definition",
														":id",
														"xml"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Decision Definition By Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decision-definition/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decision-definition",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the decision definition to be retrieved."
										}
									]
								},
								"description": "Retrieves a decision definition by id, according to the `DecisionDefinition` interface in the engine."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/decision-definition/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision-definition",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"key\": \"<string>\",\n  \"category\": \"<string>\",\n  \"name\": \"<string>\",\n  \"version\": \"<integer>\",\n  \"resource\": \"<string>\",\n  \"deploymentId\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"decisionRequirementsDefinitionId\": \"<string>\",\n  \"decisionRequirementsDefinitionKey\": \"<string>\",\n  \"historyTimeToLive\": \"<integer>\",\n  \"versionTag\": \"<string>\"\n}"
								},
								{
									"name": "Decision definition with given id does not exist.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/decision-definition/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision-definition",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/decision-definition?sortBy=deployTime&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&decisionDefinitionId=<string>&decisionDefinitionIdIn=<string>&name=<string>&nameLike=<string>&deploymentId=<string>&deployedAfter=<dateTime>&deployedAt=<dateTime>&key=<string>&keyLike=<string>&category=<string>&categoryLike=<string>&version=<integer>&latestVersion=<boolean>&resourceName=<string>&resourceNameLike=<string>&decisionRequirementsDefinitionId=<string>&decisionRequirementsDefinitionKey=<string>&withoutDecisionRequirementsDefinition=<boolean>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeDecisionDefinitionsWithoutTenantId=<boolean>&versionTag=<string>&versionTagLike=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decision-definition"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "deployTime",
									"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
								},
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return."
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
								},
								{
									"key": "decisionDefinitionId",
									"value": "<string>",
									"description": "Filter by decision definition id."
								},
								{
									"key": "decisionDefinitionIdIn",
									"value": "<string>",
									"description": "Filter by decision definition ids."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "Filter by decision definition name."
								},
								{
									"key": "nameLike",
									"value": "<string>",
									"description": "Filter by decision definition names that the parameter is a substring of."
								},
								{
									"key": "deploymentId",
									"value": "<string>",
									"description": "Filter by the deployment the id belongs to."
								},
								{
									"key": "deployedAfter",
									"value": "<dateTime>",
									"description": "Filter by the deploy time of the deployment the decision definition belongs to.\nOnly selects decision definitions that have been deployed after (exclusive) a specific time."
								},
								{
									"key": "deployedAt",
									"value": "<dateTime>",
									"description": "Filter by the deploy time of the deployment the decision definition belongs to.\nOnly selects decision definitions that have been deployed at a specific time (exact match)."
								},
								{
									"key": "key",
									"value": "<string>",
									"description": "Filter by decision definition key, i.e., the id in the DMN 1.0 XML. Exact match."
								},
								{
									"key": "keyLike",
									"value": "<string>",
									"description": "Filter by decision definition keys that the parameter is a substring of."
								},
								{
									"key": "category",
									"value": "<string>",
									"description": "Filter by decision definition category. Exact match."
								},
								{
									"key": "categoryLike",
									"value": "<string>",
									"description": "Filter by decision definition categories that the parameter is a substring of."
								},
								{
									"key": "version",
									"value": "<integer>",
									"description": "Filter by decision definition version."
								},
								{
									"key": "latestVersion",
									"value": "<boolean>",
									"description": "Only include those decision definitions that are latest versions.\nValue may only be `true`, as `false` is the default behavior."
								},
								{
									"key": "resourceName",
									"value": "<string>",
									"description": "Filter by the name of the decision definition resource. Exact match."
								},
								{
									"key": "resourceNameLike",
									"value": "<string>",
									"description": "Filter by names of those decision definition resources that the parameter is a substring of."
								},
								{
									"key": "decisionRequirementsDefinitionId",
									"value": "<string>",
									"description": "Filter by the id of the decision requirements definition this decision definition belongs to."
								},
								{
									"key": "decisionRequirementsDefinitionKey",
									"value": "<string>",
									"description": "Filter by the key of the decision requirements definition this decision definition belongs to."
								},
								{
									"key": "withoutDecisionRequirementsDefinition",
									"value": "<boolean>",
									"description": "Only include decision definitions which does not belongs to any decision requirements definition.\nValue may only be `true`, as `false` is the default behavior."
								},
								{
									"key": "tenantIdIn",
									"value": "<string>",
									"description": "Filter by a comma-separated list of `Strings`. A decision definition must have one of the given tenant ids."
								},
								{
									"key": "withoutTenantId",
									"value": "<boolean>",
									"description": "Only include decision definitions which belong to no tenant.\nValue can effectively only be `true`, as `false` is the default behavior."
								},
								{
									"key": "includeDecisionDefinitionsWithoutTenantId",
									"value": "<boolean>",
									"description": "Include decision definitions which belong to no tenant.\nCan be used in combination with `tenantIdIn`.\nValue may only be `true`, as `false` is the default behavior."
								},
								{
									"key": "versionTag",
									"value": "<string>",
									"description": "Filter by the version tag."
								},
								{
									"key": "versionTagLike",
									"value": "<string>",
									"description": "Filter by the version tags of those decision definition resources that the parameter is a substring of."
								}
							]
						},
						"description": "Queries for decision definitions that fulfill given parameters.\nParameters may be the properties of decision definitions, such as the name, key or version.\nThe size of the result set can be retrieved by using\nthe [Get Decision Definition Count](https://docs.camunda.org/manual/7.21/reference/rest/decision-definition/get-query-count/) method."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decision-definition?sortBy=deployTime&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&decisionDefinitionId=<string>&decisionDefinitionIdIn=<string>&name=<string>&nameLike=<string>&deploymentId=<string>&deployedAfter=<dateTime>&deployedAt=<dateTime>&key=<string>&keyLike=<string>&category=<string>&categoryLike=<string>&version=<integer>&latestVersion=<boolean>&resourceName=<string>&resourceNameLike=<string>&decisionRequirementsDefinitionId=<string>&decisionRequirementsDefinitionKey=<string>&withoutDecisionRequirementsDefinition=<boolean>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeDecisionDefinitionsWithoutTenantId=<boolean>&versionTag=<string>&versionTagLike=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decision-definition"
									],
									"query": [
										{
											"key": "sortBy",
											"value": "deployTime",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										},
										{
											"key": "decisionDefinitionId",
											"value": "<string>",
											"description": "Filter by decision definition id."
										},
										{
											"key": "decisionDefinitionIdIn",
											"value": "<string>",
											"description": "Filter by decision definition ids."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Filter by decision definition name."
										},
										{
											"key": "nameLike",
											"value": "<string>",
											"description": "Filter by decision definition names that the parameter is a substring of."
										},
										{
											"key": "deploymentId",
											"value": "<string>",
											"description": "Filter by the deployment the id belongs to."
										},
										{
											"key": "deployedAfter",
											"value": "<dateTime>",
											"description": "Filter by the deploy time of the deployment the decision definition belongs to.\nOnly selects decision definitions that have been deployed after (exclusive) a specific time."
										},
										{
											"key": "deployedAt",
											"value": "<dateTime>",
											"description": "Filter by the deploy time of the deployment the decision definition belongs to.\nOnly selects decision definitions that have been deployed at a specific time (exact match)."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "Filter by decision definition key, i.e., the id in the DMN 1.0 XML. Exact match."
										},
										{
											"key": "keyLike",
											"value": "<string>",
											"description": "Filter by decision definition keys that the parameter is a substring of."
										},
										{
											"key": "category",
											"value": "<string>",
											"description": "Filter by decision definition category. Exact match."
										},
										{
											"key": "categoryLike",
											"value": "<string>",
											"description": "Filter by decision definition categories that the parameter is a substring of."
										},
										{
											"key": "version",
											"value": "<integer>",
											"description": "Filter by decision definition version."
										},
										{
											"key": "latestVersion",
											"value": "<boolean>",
											"description": "Only include those decision definitions that are latest versions.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "resourceName",
											"value": "<string>",
											"description": "Filter by the name of the decision definition resource. Exact match."
										},
										{
											"key": "resourceNameLike",
											"value": "<string>",
											"description": "Filter by names of those decision definition resources that the parameter is a substring of."
										},
										{
											"key": "decisionRequirementsDefinitionId",
											"value": "<string>",
											"description": "Filter by the id of the decision requirements definition this decision definition belongs to."
										},
										{
											"key": "decisionRequirementsDefinitionKey",
											"value": "<string>",
											"description": "Filter by the key of the decision requirements definition this decision definition belongs to."
										},
										{
											"key": "withoutDecisionRequirementsDefinition",
											"value": "<boolean>",
											"description": "Only include decision definitions which does not belongs to any decision requirements definition.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of `Strings`. A decision definition must have one of the given tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include decision definitions which belong to no tenant.\nValue can effectively only be `true`, as `false` is the default behavior."
										},
										{
											"key": "includeDecisionDefinitionsWithoutTenantId",
											"value": "<boolean>",
											"description": "Include decision definitions which belong to no tenant.\nCan be used in combination with `tenantIdIn`.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "versionTag",
											"value": "<string>",
											"description": "Filter by the version tag."
										},
										{
											"key": "versionTagLike",
											"value": "<string>",
											"description": "Filter by the version tags of those decision definition resources that the parameter is a substring of."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"key\": \"<string>\",\n    \"category\": \"<string>\",\n    \"name\": \"<string>\",\n    \"version\": \"<integer>\",\n    \"resource\": \"<string>\",\n    \"deploymentId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"decisionRequirementsDefinitionId\": \"<string>\",\n    \"decisionRequirementsDefinitionKey\": \"<string>\",\n    \"historyTimeToLive\": \"<integer>\",\n    \"versionTag\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"key\": \"<string>\",\n    \"category\": \"<string>\",\n    \"name\": \"<string>\",\n    \"version\": \"<integer>\",\n    \"resource\": \"<string>\",\n    \"deploymentId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"decisionRequirementsDefinitionId\": \"<string>\",\n    \"decisionRequirementsDefinitionKey\": \"<string>\",\n    \"historyTimeToLive\": \"<integer>\",\n    \"versionTag\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Returned if some of the query parameters are invalid,\nfor example if a `sortOrder` parameter is supplied, but no `sortBy`.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decision-definition?sortBy=deployTime&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&decisionDefinitionId=<string>&decisionDefinitionIdIn=<string>&name=<string>&nameLike=<string>&deploymentId=<string>&deployedAfter=<dateTime>&deployedAt=<dateTime>&key=<string>&keyLike=<string>&category=<string>&categoryLike=<string>&version=<integer>&latestVersion=<boolean>&resourceName=<string>&resourceNameLike=<string>&decisionRequirementsDefinitionId=<string>&decisionRequirementsDefinitionKey=<string>&withoutDecisionRequirementsDefinition=<boolean>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeDecisionDefinitionsWithoutTenantId=<boolean>&versionTag=<string>&versionTagLike=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decision-definition"
									],
									"query": [
										{
											"key": "sortBy",
											"value": "deployTime",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										},
										{
											"key": "decisionDefinitionId",
											"value": "<string>",
											"description": "Filter by decision definition id."
										},
										{
											"key": "decisionDefinitionIdIn",
											"value": "<string>",
											"description": "Filter by decision definition ids."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Filter by decision definition name."
										},
										{
											"key": "nameLike",
											"value": "<string>",
											"description": "Filter by decision definition names that the parameter is a substring of."
										},
										{
											"key": "deploymentId",
											"value": "<string>",
											"description": "Filter by the deployment the id belongs to."
										},
										{
											"key": "deployedAfter",
											"value": "<dateTime>",
											"description": "Filter by the deploy time of the deployment the decision definition belongs to.\nOnly selects decision definitions that have been deployed after (exclusive) a specific time."
										},
										{
											"key": "deployedAt",
											"value": "<dateTime>",
											"description": "Filter by the deploy time of the deployment the decision definition belongs to.\nOnly selects decision definitions that have been deployed at a specific time (exact match)."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "Filter by decision definition key, i.e., the id in the DMN 1.0 XML. Exact match."
										},
										{
											"key": "keyLike",
											"value": "<string>",
											"description": "Filter by decision definition keys that the parameter is a substring of."
										},
										{
											"key": "category",
											"value": "<string>",
											"description": "Filter by decision definition category. Exact match."
										},
										{
											"key": "categoryLike",
											"value": "<string>",
											"description": "Filter by decision definition categories that the parameter is a substring of."
										},
										{
											"key": "version",
											"value": "<integer>",
											"description": "Filter by decision definition version."
										},
										{
											"key": "latestVersion",
											"value": "<boolean>",
											"description": "Only include those decision definitions that are latest versions.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "resourceName",
											"value": "<string>",
											"description": "Filter by the name of the decision definition resource. Exact match."
										},
										{
											"key": "resourceNameLike",
											"value": "<string>",
											"description": "Filter by names of those decision definition resources that the parameter is a substring of."
										},
										{
											"key": "decisionRequirementsDefinitionId",
											"value": "<string>",
											"description": "Filter by the id of the decision requirements definition this decision definition belongs to."
										},
										{
											"key": "decisionRequirementsDefinitionKey",
											"value": "<string>",
											"description": "Filter by the key of the decision requirements definition this decision definition belongs to."
										},
										{
											"key": "withoutDecisionRequirementsDefinition",
											"value": "<boolean>",
											"description": "Only include decision definitions which does not belongs to any decision requirements definition.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of `Strings`. A decision definition must have one of the given tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include decision definitions which belong to no tenant.\nValue can effectively only be `true`, as `false` is the default behavior."
										},
										{
											"key": "includeDecisionDefinitionsWithoutTenantId",
											"value": "<boolean>",
											"description": "Include decision definitions which belong to no tenant.\nCan be used in combination with `tenantIdIn`.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "versionTag",
											"value": "<string>",
											"description": "Filter by the version tag."
										},
										{
											"key": "versionTagLike",
											"value": "<string>",
											"description": "Filter by the version tags of those decision definition resources that the parameter is a substring of."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "decision-requirements-definition",
			"item": [
				{
					"name": "count",
					"item": [
						{
							"name": "Get Decision Requirements Definition Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decision-requirements-definition/count?decisionRequirementsDefinitionId=<string>&decisionRequirementsDefinitionIdIn=<string>&name=<string>&nameLike=<string>&deploymentId=<string>&key=<string>&keyLike=<string>&category=<string>&categoryLike=<string>&version=<integer>&latestVersion=<boolean>&resourceName=<string>&resourceNameLike=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeDecisionRequirementsDefinitionsWithoutTenantId=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decision-requirements-definition",
										"count"
									],
									"query": [
										{
											"key": "decisionRequirementsDefinitionId",
											"value": "<string>",
											"description": "Filter by decision requirements definition id."
										},
										{
											"key": "decisionRequirementsDefinitionIdIn",
											"value": "<string>",
											"description": "Filter by decision requirements definition ids."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Filter by decision requirements definition name."
										},
										{
											"key": "nameLike",
											"value": "<string>",
											"description": "Filter by decision requirements definition names that the parameter is a substring of."
										},
										{
											"key": "deploymentId",
											"value": "<string>",
											"description": "Filter by the id of the deployment a decision requirement definition belongs to."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "Filter by decision requirements definition key, i.e., the id in the DMN 1.3 XML. Exact\nmatch."
										},
										{
											"key": "keyLike",
											"value": "<string>",
											"description": "Filter by decision requirements definition keys that the parameter is a substring of."
										},
										{
											"key": "category",
											"value": "<string>",
											"description": "Filter by decision requirements definition category. Exact match."
										},
										{
											"key": "categoryLike",
											"value": "<string>",
											"description": "Filter by decision requirements definition categories that the parameter is a substring\nof."
										},
										{
											"key": "version",
											"value": "<integer>",
											"description": "Filter by decision requirements definition version."
										},
										{
											"key": "latestVersion",
											"value": "<boolean>",
											"description": "Only include those decision requirements definitions that are latest versions. Value may\nonly be `true`, as `false` is the default behavior."
										},
										{
											"key": "resourceName",
											"value": "<string>",
											"description": "Filter by the name of the decision requirements definition resource. Exact match."
										},
										{
											"key": "resourceNameLike",
											"value": "<string>",
											"description": "Filter by names of those decision requirements definition resources that the parameter is\na substring of."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids. A decision requirements definition must\nhave one of the given tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include decision requirements definitions which belong to no tenant. Value may only\nbe `true`, as `false` is the default behavior."
										},
										{
											"key": "includeDecisionRequirementsDefinitionsWithoutTenantId",
											"value": "<boolean>",
											"description": "Include decision requirements definitions which belong to no tenant. Can be used in\ncombination with `tenantIdIn`. Value may only be `true`, as `false` is the\ndefault behavior."
										}
									]
								},
								"description": "Requests the number of decision requirements definitions that fulfill the query\ncriteria.\nTakes the same filtering parameters as the\n[Get Decision Requirements Definitions](https://docs.camunda.org/manual/7.21/reference/rest/decision-requirements-definition/get-query/)\nmethod."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/decision-requirements-definition/count?decisionRequirementsDefinitionId=<string>&decisionRequirementsDefinitionIdIn=<string>&name=<string>&nameLike=<string>&deploymentId=<string>&key=<string>&keyLike=<string>&category=<string>&categoryLike=<string>&version=<integer>&latestVersion=<boolean>&resourceName=<string>&resourceNameLike=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeDecisionRequirementsDefinitionsWithoutTenantId=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision-requirements-definition",
												"count"
											],
											"query": [
												{
													"key": "decisionRequirementsDefinitionId",
													"value": "<string>",
													"description": "Filter by decision requirements definition id."
												},
												{
													"key": "decisionRequirementsDefinitionIdIn",
													"value": "<string>",
													"description": "Filter by decision requirements definition ids."
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "Filter by decision requirements definition name."
												},
												{
													"key": "nameLike",
													"value": "<string>",
													"description": "Filter by decision requirements definition names that the parameter is a substring of."
												},
												{
													"key": "deploymentId",
													"value": "<string>",
													"description": "Filter by the id of the deployment a decision requirement definition belongs to."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "Filter by decision requirements definition key, i.e., the id in the DMN 1.3 XML. Exact\nmatch."
												},
												{
													"key": "keyLike",
													"value": "<string>",
													"description": "Filter by decision requirements definition keys that the parameter is a substring of."
												},
												{
													"key": "category",
													"value": "<string>",
													"description": "Filter by decision requirements definition category. Exact match."
												},
												{
													"key": "categoryLike",
													"value": "<string>",
													"description": "Filter by decision requirements definition categories that the parameter is a substring\nof."
												},
												{
													"key": "version",
													"value": "<integer>",
													"description": "Filter by decision requirements definition version."
												},
												{
													"key": "latestVersion",
													"value": "<boolean>",
													"description": "Only include those decision requirements definitions that are latest versions. Value may\nonly be `true`, as `false` is the default behavior."
												},
												{
													"key": "resourceName",
													"value": "<string>",
													"description": "Filter by the name of the decision requirements definition resource. Exact match."
												},
												{
													"key": "resourceNameLike",
													"value": "<string>",
													"description": "Filter by names of those decision requirements definition resources that the parameter is\na substring of."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids. A decision requirements definition must\nhave one of the given tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include decision requirements definitions which belong to no tenant. Value may only\nbe `true`, as `false` is the default behavior."
												},
												{
													"key": "includeDecisionRequirementsDefinitionsWithoutTenantId",
													"value": "<boolean>",
													"description": "Include decision requirements definitions which belong to no tenant. Can be used in\ncombination with `tenantIdIn`. Value may only be `true`, as `false` is the\ndefault behavior."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example if\na `sortOrder` parameter is supplied, but no `sortBy`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/decision-requirements-definition/count?decisionRequirementsDefinitionId=<string>&decisionRequirementsDefinitionIdIn=<string>&name=<string>&nameLike=<string>&deploymentId=<string>&key=<string>&keyLike=<string>&category=<string>&categoryLike=<string>&version=<integer>&latestVersion=<boolean>&resourceName=<string>&resourceNameLike=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeDecisionRequirementsDefinitionsWithoutTenantId=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision-requirements-definition",
												"count"
											],
											"query": [
												{
													"key": "decisionRequirementsDefinitionId",
													"value": "<string>",
													"description": "Filter by decision requirements definition id."
												},
												{
													"key": "decisionRequirementsDefinitionIdIn",
													"value": "<string>",
													"description": "Filter by decision requirements definition ids."
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "Filter by decision requirements definition name."
												},
												{
													"key": "nameLike",
													"value": "<string>",
													"description": "Filter by decision requirements definition names that the parameter is a substring of."
												},
												{
													"key": "deploymentId",
													"value": "<string>",
													"description": "Filter by the id of the deployment a decision requirement definition belongs to."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "Filter by decision requirements definition key, i.e., the id in the DMN 1.3 XML. Exact\nmatch."
												},
												{
													"key": "keyLike",
													"value": "<string>",
													"description": "Filter by decision requirements definition keys that the parameter is a substring of."
												},
												{
													"key": "category",
													"value": "<string>",
													"description": "Filter by decision requirements definition category. Exact match."
												},
												{
													"key": "categoryLike",
													"value": "<string>",
													"description": "Filter by decision requirements definition categories that the parameter is a substring\nof."
												},
												{
													"key": "version",
													"value": "<integer>",
													"description": "Filter by decision requirements definition version."
												},
												{
													"key": "latestVersion",
													"value": "<boolean>",
													"description": "Only include those decision requirements definitions that are latest versions. Value may\nonly be `true`, as `false` is the default behavior."
												},
												{
													"key": "resourceName",
													"value": "<string>",
													"description": "Filter by the name of the decision requirements definition resource. Exact match."
												},
												{
													"key": "resourceNameLike",
													"value": "<string>",
													"description": "Filter by names of those decision requirements definition resources that the parameter is\na substring of."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids. A decision requirements definition must\nhave one of the given tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include decision requirements definitions which belong to no tenant. Value may only\nbe `true`, as `false` is the default behavior."
												},
												{
													"key": "includeDecisionRequirementsDefinitionsWithoutTenantId",
													"value": "<boolean>",
													"description": "Include decision requirements definitions which belong to no tenant. Can be used in\ncombination with `tenantIdIn`. Value may only be `true`, as `false` is the\ndefault behavior."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "key",
					"item": [
						{
							"name": "{key}",
							"item": [
								{
									"name": "diagram",
									"item": [
										{
											"name": "Get Decision Requirements Diagram by Key",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "image/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/decision-requirements-definition/key/:key/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-requirements-definition",
														"key",
														":key",
														"diagram"
													],
													"variable": [
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The key of the decision requirements definition (the latest version thereof) to be\nretrieved."
														}
													]
												},
												"description": "Retrieves the diagram of a decision requirements definition.\nReturns the diagram for the latest version of the decision requirements \ndefinition which belongs to no tenant."
											},
											"response": [
												{
													"name": "The image diagram of the decision requirements definition.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "image/*"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/decision-requirements-definition/key/:key/diagram",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"decision-requirements-definition",
																"key",
																":key",
																"diagram"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "image/*"
														}
													],
													"cookie": [],
													"body": "<string>"
												},
												{
													"name": "The decision requirements definition doesn't have an associated diagram. This\nmethod returns no content.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/decision-requirements-definition/key/:key/diagram",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"decision-requirements-definition",
																"key",
																":key",
																"diagram"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Decision requirements definition with given id or key does not\nexist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/decision-requirements-definition/key/:key/diagram",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"decision-requirements-definition",
																"key",
																":key",
																"diagram"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "tenant-id",
									"item": [
										{
											"name": "{tenant-id}",
											"item": [
												{
													"name": "diagram",
													"item": [
														{
															"name": "Get Decision Requirements Diagram by Key and Tenant ID",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "image/*"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/decision-requirements-definition/key/:key/tenant-id/:tenant-id/diagram",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"decision-requirements-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id",
																		"diagram"
																	],
																	"variable": [
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) The key of the decision requirements definition (the latest version thereof) to be\nretrieved."
																		},
																		{
																			"key": "tenant-id",
																			"value": "<string>",
																			"description": "(Required) The id of the tenant to which the decision requirements definition belongs to."
																		}
																	]
																},
																"description": "Retrieves the diagram of a decision requirements definition.\nReturns the diagram of the latest version of the decision requirements \ndefinition for a tenant."
															},
															"response": [
																{
																	"name": "The image diagram of the decision requirements definition.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "image/*"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/decision-requirements-definition/key/:key/tenant-id/:tenant-id/diagram",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"decision-requirements-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"diagram"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "image/*"
																		}
																	],
																	"cookie": [],
																	"body": "<string>"
																},
																{
																	"name": "The decision requirements definition doesn't have an associated diagram. This\nmethod returns no content.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/decision-requirements-definition/key/:key/tenant-id/:tenant-id/diagram",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"decision-requirements-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"diagram"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Decision requirements definition with given id or key does not\nexist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/decision-requirements-definition/key/:key/tenant-id/:tenant-id/diagram",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"decision-requirements-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"diagram"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "xml",
													"item": [
														{
															"name": "Get DMN XML by Key and Tenant ID",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/decision-requirements-definition/key/:key/tenant-id/:tenant-id/xml",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"decision-requirements-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id",
																		"xml"
																	],
																	"variable": [
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) The key of the decision requirements definition (the latest version thereof) to be\nretrieved."
																		},
																		{
																			"key": "tenant-id",
																			"value": "<string>",
																			"description": "(Required) The id of the tenant to which the decision requirements definition belongs to."
																		}
																	]
																},
																"description": "Retrieves the DMN XML of a decision requirements definition.\nReturns the XML of the latest version of the decision requirements \ndefinition for a tenant."
															},
															"response": [
																{
																	"name": "Request successful.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/decision-requirements-definition/key/:key/tenant-id/:tenant-id/xml",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"decision-requirements-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"xml"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"id\": \"<string>\",\n  \"dmnXml\": \"<string>\"\n}"
																},
																{
																	"name": "\nDecision requirements definition with given id or key does not\nexist.\nSee the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/decision-requirements-definition/key/:key/tenant-id/:tenant-id/xml",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"decision-requirements-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"xml"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get Decision Requirements Definition by Key and Tenant ID",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/decision-requirements-definition/key/:key/tenant-id/:tenant-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"decision-requirements-definition",
																"key",
																":key",
																"tenant-id",
																":tenant-id"
															],
															"variable": [
																{
																	"key": "key",
																	"value": "<string>",
																	"description": "(Required) The key of the decision requirements definition (the latest version thereof) to be retrieved."
																},
																{
																	"key": "tenant-id",
																	"value": "<string>",
																	"description": "(Required) The id of the tenant to which the decision requirements definition belongs to."
																}
															]
														},
														"description": "Retrieves a decision requirements definition according to the\n`DecisionRequirementsDefinition` interface in the engine.\nReturns the latest version of the decision requirements definition \nfor a tenant."
													},
													"response": [
														{
															"name": "Request successful.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/decision-requirements-definition/key/:key/tenant-id/:tenant-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"decision-requirements-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id"
																	],
																	"variable": [
																		{
																			"key": "key"
																		},
																		{
																			"key": "tenant-id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"key\": \"<string>\",\n  \"category\": \"<string>\",\n  \"name\": \"<string>\",\n  \"version\": \"<integer>\",\n  \"resource\": \"<string>\",\n  \"deploymentId\": \"<string>\",\n  \"tenantId\": \"<string>\"\n}"
														},
														{
															"name": "Decision requirements definition with given id or key does not\nexist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/decision-requirements-definition/key/:key/tenant-id/:tenant-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"decision-requirements-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id"
																	],
																	"variable": [
																		{
																			"key": "key"
																		},
																		{
																			"key": "tenant-id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "xml",
									"item": [
										{
											"name": "Get DMN XML by Key",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/decision-requirements-definition/key/:key/xml",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-requirements-definition",
														"key",
														":key",
														"xml"
													],
													"variable": [
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The key of the decision requirements definition (the latest version thereof) to be\nretrieved."
														}
													]
												},
												"description": "Retrieves the DMN XML of a decision requirements definition.\nReturns the XML for the latest version of the decision requirements \ndefinition which belongs to no tenant."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/decision-requirements-definition/key/:key/xml",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"decision-requirements-definition",
																"key",
																":key",
																"xml"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"dmnXml\": \"<string>\"\n}"
												},
												{
													"name": "\nDecision requirements definition with given id or key does not\nexist.\nSee the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/decision-requirements-definition/key/:key/xml",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"decision-requirements-definition",
																"key",
																":key",
																"xml"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Decision Requirements Definition by Key",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/decision-requirements-definition/key/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision-requirements-definition",
												"key",
												":key"
											],
											"variable": [
												{
													"key": "key",
													"value": "<string>",
													"description": "(Required) The key of the decision requirements definition (the latest version thereof) to be retrieved."
												}
											]
										},
										"description": "Retrieves a decision requirements definition according to the\n`DecisionRequirementsDefinition` interface in the engine. \nReturns the latest version of the decision requirements definition \nwhich belongs to no tenant."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/decision-requirements-definition/key/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-requirements-definition",
														"key",
														":key"
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"key\": \"<string>\",\n  \"category\": \"<string>\",\n  \"name\": \"<string>\",\n  \"version\": \"<integer>\",\n  \"resource\": \"<string>\",\n  \"deploymentId\": \"<string>\",\n  \"tenantId\": \"<string>\"\n}"
										},
										{
											"name": "Decision requirements definition with given id or key does not\nexist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/decision-requirements-definition/key/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-requirements-definition",
														"key",
														":key"
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "diagram",
							"item": [
								{
									"name": "Get Decision Requirements Diagram by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "image/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/decision-requirements-definition/:id/diagram",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision-requirements-definition",
												":id",
												"diagram"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the decision requirements definition."
												}
											]
										},
										"description": "Retrieves the diagram of a decision requirements definition."
									},
									"response": [
										{
											"name": "The image diagram of the decision requirements definition.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "image/*"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/decision-requirements-definition/:id/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-requirements-definition",
														":id",
														"diagram"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "image/*"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "The decision requirements definition doesn't have an associated diagram. This\nmethod returns no content.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/decision-requirements-definition/:id/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-requirements-definition",
														":id",
														"diagram"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Decision requirements definition with given id or key does not\nexist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/decision-requirements-definition/:id/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-requirements-definition",
														":id",
														"diagram"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "xml",
							"item": [
								{
									"name": "Get DMN XML by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/decision-requirements-definition/:id/xml",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision-requirements-definition",
												":id",
												"xml"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the decision requirements definition."
												}
											]
										},
										"description": "Retrieves the DMN XML of a decision requirements definition."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/decision-requirements-definition/:id/xml",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-requirements-definition",
														":id",
														"xml"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"dmnXml\": \"<string>\"\n}"
										},
										{
											"name": "Decision requirements definition with given id or key does not\nexist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/decision-requirements-definition/:id/xml",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"decision-requirements-definition",
														":id",
														"xml"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Decision Requirements Definition by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decision-requirements-definition/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decision-requirements-definition",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the decision requirements definition to be retrieved."
										}
									]
								},
								"description": "Retrieves a decision requirements definition according to the\n`DecisionRequirementsDefinition` interface in the engine."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/decision-requirements-definition/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision-requirements-definition",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"key\": \"<string>\",\n  \"category\": \"<string>\",\n  \"name\": \"<string>\",\n  \"version\": \"<integer>\",\n  \"resource\": \"<string>\",\n  \"deploymentId\": \"<string>\",\n  \"tenantId\": \"<string>\"\n}"
								},
								{
									"name": "Decision requirements definition with given id or key does not\nexist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/decision-requirements-definition/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"decision-requirements-definition",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get Decision Requirements Definitions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/decision-requirements-definition?decisionRequirementsDefinitionId=<string>&decisionRequirementsDefinitionIdIn=<string>&name=<string>&nameLike=<string>&deploymentId=<string>&key=<string>&keyLike=<string>&category=<string>&categoryLike=<string>&version=<integer>&latestVersion=<boolean>&resourceName=<string>&resourceNameLike=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeDecisionRequirementsDefinitionsWithoutTenantId=<boolean>&sortBy=key&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decision-requirements-definition"
							],
							"query": [
								{
									"key": "decisionRequirementsDefinitionId",
									"value": "<string>",
									"description": "Filter by decision requirements definition id."
								},
								{
									"key": "decisionRequirementsDefinitionIdIn",
									"value": "<string>",
									"description": "Filter by decision requirements definition ids."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "Filter by decision requirements definition name."
								},
								{
									"key": "nameLike",
									"value": "<string>",
									"description": "Filter by decision requirements definition names that the parameter is a substring of."
								},
								{
									"key": "deploymentId",
									"value": "<string>",
									"description": "Filter by the id of the deployment a decision requirement definition belongs to."
								},
								{
									"key": "key",
									"value": "<string>",
									"description": "Filter by decision requirements definition key, i.e., the id in the DMN 1.3 XML. Exact\nmatch."
								},
								{
									"key": "keyLike",
									"value": "<string>",
									"description": "Filter by decision requirements definition keys that the parameter is a substring of."
								},
								{
									"key": "category",
									"value": "<string>",
									"description": "Filter by decision requirements definition category. Exact match."
								},
								{
									"key": "categoryLike",
									"value": "<string>",
									"description": "Filter by decision requirements definition categories that the parameter is a substring\nof."
								},
								{
									"key": "version",
									"value": "<integer>",
									"description": "Filter by decision requirements definition version."
								},
								{
									"key": "latestVersion",
									"value": "<boolean>",
									"description": "Only include those decision requirements definitions that are latest versions. Value may\nonly be `true`, as `false` is the default behavior."
								},
								{
									"key": "resourceName",
									"value": "<string>",
									"description": "Filter by the name of the decision requirements definition resource. Exact match."
								},
								{
									"key": "resourceNameLike",
									"value": "<string>",
									"description": "Filter by names of those decision requirements definition resources that the parameter is\na substring of."
								},
								{
									"key": "tenantIdIn",
									"value": "<string>",
									"description": "Filter by a comma-separated list of tenant ids. A decision requirements definition must\nhave one of the given tenant ids."
								},
								{
									"key": "withoutTenantId",
									"value": "<boolean>",
									"description": "Only include decision requirements definitions which belong to no tenant. Value may only\nbe `true`, as `false` is the default behavior."
								},
								{
									"key": "includeDecisionRequirementsDefinitionsWithoutTenantId",
									"value": "<boolean>",
									"description": "Include decision requirements definitions which belong to no tenant. Can be used in\ncombination with `tenantIdIn`. Value may only be `true`, as `false` is the\ndefault behavior."
								},
								{
									"key": "sortBy",
									"value": "key",
									"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
								},
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return."
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
								}
							]
						},
						"description": "Queries for decision requirements definitions that fulfill given parameters.\nParameters may be the properties of decision requirements definitions, such as the name,\nkey or version.  The size of the result set can be retrieved by using the\n[Get Decision Requirements Definition Count](https://docs.camunda.org/manual/7.21/reference/rest/decision-requirements-definition/get-query-count/)\nmethod."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decision-requirements-definition?decisionRequirementsDefinitionId=<string>&decisionRequirementsDefinitionIdIn=<string>&name=<string>&nameLike=<string>&deploymentId=<string>&key=<string>&keyLike=<string>&category=<string>&categoryLike=<string>&version=<integer>&latestVersion=<boolean>&resourceName=<string>&resourceNameLike=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeDecisionRequirementsDefinitionsWithoutTenantId=<boolean>&sortBy=key&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decision-requirements-definition"
									],
									"query": [
										{
											"key": "decisionRequirementsDefinitionId",
											"value": "<string>",
											"description": "Filter by decision requirements definition id."
										},
										{
											"key": "decisionRequirementsDefinitionIdIn",
											"value": "<string>",
											"description": "Filter by decision requirements definition ids."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Filter by decision requirements definition name."
										},
										{
											"key": "nameLike",
											"value": "<string>",
											"description": "Filter by decision requirements definition names that the parameter is a substring of."
										},
										{
											"key": "deploymentId",
											"value": "<string>",
											"description": "Filter by the id of the deployment a decision requirement definition belongs to."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "Filter by decision requirements definition key, i.e., the id in the DMN 1.3 XML. Exact\nmatch."
										},
										{
											"key": "keyLike",
											"value": "<string>",
											"description": "Filter by decision requirements definition keys that the parameter is a substring of."
										},
										{
											"key": "category",
											"value": "<string>",
											"description": "Filter by decision requirements definition category. Exact match."
										},
										{
											"key": "categoryLike",
											"value": "<string>",
											"description": "Filter by decision requirements definition categories that the parameter is a substring\nof."
										},
										{
											"key": "version",
											"value": "<integer>",
											"description": "Filter by decision requirements definition version."
										},
										{
											"key": "latestVersion",
											"value": "<boolean>",
											"description": "Only include those decision requirements definitions that are latest versions. Value may\nonly be `true`, as `false` is the default behavior."
										},
										{
											"key": "resourceName",
											"value": "<string>",
											"description": "Filter by the name of the decision requirements definition resource. Exact match."
										},
										{
											"key": "resourceNameLike",
											"value": "<string>",
											"description": "Filter by names of those decision requirements definition resources that the parameter is\na substring of."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids. A decision requirements definition must\nhave one of the given tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include decision requirements definitions which belong to no tenant. Value may only\nbe `true`, as `false` is the default behavior."
										},
										{
											"key": "includeDecisionRequirementsDefinitionsWithoutTenantId",
											"value": "<boolean>",
											"description": "Include decision requirements definitions which belong to no tenant. Can be used in\ncombination with `tenantIdIn`. Value may only be `true`, as `false` is the\ndefault behavior."
										},
										{
											"key": "sortBy",
											"value": "key",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"key\": \"<string>\",\n    \"category\": \"<string>\",\n    \"name\": \"<string>\",\n    \"version\": \"<integer>\",\n    \"resource\": \"<string>\",\n    \"deploymentId\": \"<string>\",\n    \"tenantId\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"key\": \"<string>\",\n    \"category\": \"<string>\",\n    \"name\": \"<string>\",\n    \"version\": \"<integer>\",\n    \"resource\": \"<string>\",\n    \"deploymentId\": \"<string>\",\n    \"tenantId\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Returned if some of the query parameters are invalid, for example if\na `sortOrder` parameter is supplied, but no `sortBy`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decision-requirements-definition?decisionRequirementsDefinitionId=<string>&decisionRequirementsDefinitionIdIn=<string>&name=<string>&nameLike=<string>&deploymentId=<string>&key=<string>&keyLike=<string>&category=<string>&categoryLike=<string>&version=<integer>&latestVersion=<boolean>&resourceName=<string>&resourceNameLike=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeDecisionRequirementsDefinitionsWithoutTenantId=<boolean>&sortBy=key&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decision-requirements-definition"
									],
									"query": [
										{
											"key": "decisionRequirementsDefinitionId",
											"value": "<string>",
											"description": "Filter by decision requirements definition id."
										},
										{
											"key": "decisionRequirementsDefinitionIdIn",
											"value": "<string>",
											"description": "Filter by decision requirements definition ids."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Filter by decision requirements definition name."
										},
										{
											"key": "nameLike",
											"value": "<string>",
											"description": "Filter by decision requirements definition names that the parameter is a substring of."
										},
										{
											"key": "deploymentId",
											"value": "<string>",
											"description": "Filter by the id of the deployment a decision requirement definition belongs to."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "Filter by decision requirements definition key, i.e., the id in the DMN 1.3 XML. Exact\nmatch."
										},
										{
											"key": "keyLike",
											"value": "<string>",
											"description": "Filter by decision requirements definition keys that the parameter is a substring of."
										},
										{
											"key": "category",
											"value": "<string>",
											"description": "Filter by decision requirements definition category. Exact match."
										},
										{
											"key": "categoryLike",
											"value": "<string>",
											"description": "Filter by decision requirements definition categories that the parameter is a substring\nof."
										},
										{
											"key": "version",
											"value": "<integer>",
											"description": "Filter by decision requirements definition version."
										},
										{
											"key": "latestVersion",
											"value": "<boolean>",
											"description": "Only include those decision requirements definitions that are latest versions. Value may\nonly be `true`, as `false` is the default behavior."
										},
										{
											"key": "resourceName",
											"value": "<string>",
											"description": "Filter by the name of the decision requirements definition resource. Exact match."
										},
										{
											"key": "resourceNameLike",
											"value": "<string>",
											"description": "Filter by names of those decision requirements definition resources that the parameter is\na substring of."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids. A decision requirements definition must\nhave one of the given tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include decision requirements definitions which belong to no tenant. Value may only\nbe `true`, as `false` is the default behavior."
										},
										{
											"key": "includeDecisionRequirementsDefinitionsWithoutTenantId",
											"value": "<boolean>",
											"description": "Include decision requirements definitions which belong to no tenant. Can be used in\ncombination with `tenantIdIn`. Value may only be `true`, as `false` is the\ndefault behavior."
										},
										{
											"key": "sortBy",
											"value": "key",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "deployment",
			"item": [
				{
					"name": "count",
					"item": [
						{
							"name": "Get List Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deployment/count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployment",
										"count"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Filter by deployment id",
											"disabled": true
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Filter by the deployment name. Exact match.",
											"disabled": true
										},
										{
											"key": "nameLike",
											"value": "<string>",
											"description": "Filter by the deployment name that the parameter is a substring of. The parameter can include the\nwildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n(`%`name`%`).",
											"disabled": true
										},
										{
											"key": "source",
											"value": "<string>",
											"description": "Filter by the deployment source.",
											"disabled": true
										},
										{
											"key": "withoutSource",
											"value": "false",
											"description": "Filter by the deployment source whereby source is equal to `null`.",
											"disabled": true
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids.",
											"disabled": true
										},
										{
											"key": "withoutTenantId",
											"value": "false",
											"description": "Only include deployments which belong to no tenant. Value may only be `true`, as `false` is the default\nbehavior.",
											"disabled": true
										},
										{
											"key": "includeDeploymentsWithoutTenantId",
											"value": "false",
											"description": "Include deployments which belong to no tenant. Can be used in combination with `tenantIdIn`. Value may\nonly be `true`, as `false` is the default behavior.",
											"disabled": true
										},
										{
											"key": "after",
											"value": "<dateTime>",
											"description": "Restricts to all deployments after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.",
											"disabled": true
										},
										{
											"key": "before",
											"value": "<dateTime>",
											"description": "Restricts to all deployments before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.",
											"disabled": true
										}
									]
								},
								"description": "Queries for the number of deployments that fulfill given parameters. Takes the same parameters as the\n[Get Deployments](https://docs.camunda.org/manual/7.21/reference/rest/deployment/get-query/) method."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployment/count?id=<string>&name=<string>&nameLike=<string>&source=<string>&withoutSource=false&tenantIdIn=<string>&withoutTenantId=false&includeDeploymentsWithoutTenantId=false&after=<dateTime>&before=<dateTime>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployment",
												"count"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>",
													"description": "Filter by deployment id"
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "Filter by the deployment name. Exact match."
												},
												{
													"key": "nameLike",
													"value": "<string>",
													"description": "Filter by the deployment name that the parameter is a substring of. The parameter can include the\nwildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n(`%`name`%`)."
												},
												{
													"key": "source",
													"value": "<string>",
													"description": "Filter by the deployment source."
												},
												{
													"key": "withoutSource",
													"value": "false",
													"description": "Filter by the deployment source whereby source is equal to `null`."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "false",
													"description": "Only include deployments which belong to no tenant. Value may only be `true`, as `false` is the default\nbehavior."
												},
												{
													"key": "includeDeploymentsWithoutTenantId",
													"value": "false",
													"description": "Include deployments which belong to no tenant. Can be used in combination with `tenantIdIn`. Value may\nonly be `true`, as `false` is the default behavior."
												},
												{
													"key": "after",
													"value": "<dateTime>",
													"description": "Restricts to all deployments after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "before",
													"value": "<dateTime>",
													"description": "Restricts to all deployments before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example, if an invalid operator for variable\ncomparison is used. See the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployment/count?id=<string>&name=<string>&nameLike=<string>&source=<string>&withoutSource=false&tenantIdIn=<string>&withoutTenantId=false&includeDeploymentsWithoutTenantId=false&after=<dateTime>&before=<dateTime>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployment",
												"count"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>",
													"description": "Filter by deployment id"
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "Filter by the deployment name. Exact match."
												},
												{
													"key": "nameLike",
													"value": "<string>",
													"description": "Filter by the deployment name that the parameter is a substring of. The parameter can include the\nwildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n(`%`name`%`)."
												},
												{
													"key": "source",
													"value": "<string>",
													"description": "Filter by the deployment source."
												},
												{
													"key": "withoutSource",
													"value": "false",
													"description": "Filter by the deployment source whereby source is equal to `null`."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "false",
													"description": "Only include deployments which belong to no tenant. Value may only be `true`, as `false` is the default\nbehavior."
												},
												{
													"key": "includeDeploymentsWithoutTenantId",
													"value": "false",
													"description": "Include deployments which belong to no tenant. Can be used in combination with `tenantIdIn`. Value may\nonly be `true`, as `false` is the default behavior."
												},
												{
													"key": "after",
													"value": "<dateTime>",
													"description": "Restricts to all deployments after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "before",
													"value": "<dateTime>",
													"description": "Restricts to all deployments before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "create",
					"item": [
						{
							"name": "Create",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "tenant-id",
											"value": "<string>",
											"description": "The tenant id for the deployment to be created.",
											"type": "text"
										},
										{
											"key": "deployment-source",
											"value": "<string>",
											"description": "The source for the deployment to be created.",
											"type": "text"
										},
										{
											"key": "deploy-changed-only",
											"value": "false",
											"description": "A flag indicating whether the process engine should perform duplicate checking on a per-resource basis.\nIf set to true, only those resources that have actually changed are deployed.\nChecks are made against resources included previous deployments of the same name and only against the latest versions of those resources.\nIf set to true, the option enable-duplicate-filtering is overridden and set to true.",
											"type": "text"
										},
										{
											"key": "enable-duplicate-filtering",
											"value": "false",
											"description": "A flag indicating whether the process engine should perform duplicate checking for the deployment or not.\nThis allows you to check if a deployment with the same name and the same resouces already exists and\nif true, not create a new deployment but instead return the existing deployment. The default value is false.",
											"type": "text"
										},
										{
											"key": "deployment-name",
											"value": "<string>",
											"description": "The name for the deployment to be created.",
											"type": "text"
										},
										{
											"key": "deployment-activation-time",
											"value": "<dateTime>",
											"description": "Sets the date on which the process definitions contained in this deployment will be activated. This means that all process\ndefinitions will be deployed as usual, but they will be suspended from the start until the given activation date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.",
											"type": "text"
										},
										{
											"key": "data",
											"value": "<string>",
											"description": "The binary data to create the deployment resource.\nIt is possible to have more than one form part with different form part names for the binary data to create a deployment.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/deployment/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployment",
										"create"
									]
								},
								"description": "Creates a deployment.\n\n**Security Consideration**\n\nDeployments can contain custom code in form of scripts or EL expressions to customize process behavior.\nThis may be abused for remote execution of arbitrary code."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "tenant-id",
													"value": "<string>",
													"description": "The tenant id for the deployment to be created.",
													"type": "text"
												},
												{
													"key": "deployment-source",
													"value": "<string>",
													"description": "The source for the deployment to be created.",
													"type": "text"
												},
												{
													"key": "deploy-changed-only",
													"value": "false",
													"description": "A flag indicating whether the process engine should perform duplicate checking on a per-resource basis.\nIf set to true, only those resources that have actually changed are deployed.\nChecks are made against resources included previous deployments of the same name and only against the latest versions of those resources.\nIf set to true, the option enable-duplicate-filtering is overridden and set to true.",
													"type": "text"
												},
												{
													"key": "enable-duplicate-filtering",
													"value": "false",
													"description": "A flag indicating whether the process engine should perform duplicate checking for the deployment or not.\nThis allows you to check if a deployment with the same name and the same resouces already exists and\nif true, not create a new deployment but instead return the existing deployment. The default value is false.",
													"type": "text"
												},
												{
													"key": "deployment-name",
													"value": "<string>",
													"description": "The name for the deployment to be created.",
													"type": "text"
												},
												{
													"key": "deployment-activation-time",
													"value": "<dateTime>",
													"description": "Sets the date on which the process definitions contained in this deployment will be activated. This means that all process\ndefinitions will be deployed as usual, but they will be suspended from the start until the given activation date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.",
													"type": "text"
												},
												{
													"key": "data",
													"value": "<string>",
													"description": "The binary data to create the deployment resource.\nIt is possible to have more than one form part with different form part names for the binary data to create a deployment.",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/deployment/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployment",
												"create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"deployedProcessDefinitions\": {\n    \"mollit9b7\": {\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"category\": \"<string>\",\n      \"description\": \"<string>\",\n      \"name\": \"<string>\",\n      \"version\": \"<integer>\",\n      \"resource\": \"<string>\",\n      \"deploymentId\": \"<string>\",\n      \"diagram\": \"<string>\",\n      \"suspended\": \"<boolean>\",\n      \"tenantId\": \"<string>\",\n      \"versionTag\": \"<string>\",\n      \"historyTimeToLive\": \"<integer>\",\n      \"startableInTasklist\": \"<boolean>\"\n    }\n  },\n  \"deployedDecisionDefinitions\": {\n    \"consequat_5\": {\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"category\": \"<string>\",\n      \"name\": \"<string>\",\n      \"version\": \"<integer>\",\n      \"resource\": \"<string>\",\n      \"deploymentId\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"decisionRequirementsDefinitionId\": \"<string>\",\n      \"decisionRequirementsDefinitionKey\": \"<string>\",\n      \"historyTimeToLive\": \"<integer>\",\n      \"versionTag\": \"<string>\"\n    },\n    \"dolore35f\": {\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"category\": \"<string>\",\n      \"name\": \"<string>\",\n      \"version\": \"<integer>\",\n      \"resource\": \"<string>\",\n      \"deploymentId\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"decisionRequirementsDefinitionId\": \"<string>\",\n      \"decisionRequirementsDefinitionKey\": \"<string>\",\n      \"historyTimeToLive\": \"<integer>\",\n      \"versionTag\": \"<string>\"\n    }\n  },\n  \"deployedDecisionRequirementsDefinitions\": {\n    \"labore_96f\": {\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"category\": \"<string>\",\n      \"name\": \"<string>\",\n      \"version\": \"<integer>\",\n      \"resource\": \"<string>\",\n      \"deploymentId\": \"<string>\",\n      \"tenantId\": \"<string>\"\n    },\n    \"incididunt_5c7\": {\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"category\": \"<string>\",\n      \"name\": \"<string>\",\n      \"version\": \"<integer>\",\n      \"resource\": \"<string>\",\n      \"deploymentId\": \"<string>\",\n      \"tenantId\": \"<string>\"\n    }\n  },\n  \"deployedCaseDefinitions\": {\n    \"Duis___c\": {\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"category\": \"<string>\",\n      \"name\": \"<string>\",\n      \"version\": \"<integer>\",\n      \"resource\": \"<string>\",\n      \"deploymentId\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"historyTimeToLive\": \"<integer>\"\n    }\n  },\n  \"id\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"deploymentTime\": \"<dateTime>\",\n  \"source\": \"<string>\",\n  \"name\": \"<string>\",\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Bad Request. In case one of the bpmn resources cannot be parsed.\n\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#parse-exceptions) for\nthe error response format.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "tenant-id",
													"value": "<string>",
													"description": "The tenant id for the deployment to be created.",
													"type": "text"
												},
												{
													"key": "deployment-source",
													"value": "<string>",
													"description": "The source for the deployment to be created.",
													"type": "text"
												},
												{
													"key": "deploy-changed-only",
													"value": "false",
													"description": "A flag indicating whether the process engine should perform duplicate checking on a per-resource basis.\nIf set to true, only those resources that have actually changed are deployed.\nChecks are made against resources included previous deployments of the same name and only against the latest versions of those resources.\nIf set to true, the option enable-duplicate-filtering is overridden and set to true.",
													"type": "text"
												},
												{
													"key": "enable-duplicate-filtering",
													"value": "false",
													"description": "A flag indicating whether the process engine should perform duplicate checking for the deployment or not.\nThis allows you to check if a deployment with the same name and the same resouces already exists and\nif true, not create a new deployment but instead return the existing deployment. The default value is false.",
													"type": "text"
												},
												{
													"key": "deployment-name",
													"value": "<string>",
													"description": "The name for the deployment to be created.",
													"type": "text"
												},
												{
													"key": "deployment-activation-time",
													"value": "<dateTime>",
													"description": "Sets the date on which the process definitions contained in this deployment will be activated. This means that all process\ndefinitions will be deployed as usual, but they will be suspended from the start until the given activation date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.",
													"type": "text"
												},
												{
													"key": "data",
													"value": "<string>",
													"description": "The binary data to create the deployment resource.\nIt is possible to have more than one form part with different form part names for the binary data to create a deployment.",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/deployment/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployment",
												"create"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"details\": {\n    \"qui_54\": {\n      \"errors\": [\n        {\n          \"message\": \"<string>\",\n          \"line\": \"<integer>\",\n          \"column\": \"<integer>\",\n          \"mainElementId\": \"<string>\",\n          \"elementIds\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"message\": \"<string>\",\n          \"line\": \"<integer>\",\n          \"column\": \"<integer>\",\n          \"mainElementId\": \"<string>\",\n          \"elementIds\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"warnings\": [\n        {\n          \"message\": \"<string>\",\n          \"line\": \"<integer>\",\n          \"column\": \"<integer>\",\n          \"mainElementId\": \"<string>\",\n          \"elementIds\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"message\": \"<string>\",\n          \"line\": \"<integer>\",\n          \"column\": \"<integer>\",\n          \"mainElementId\": \"<string>\",\n          \"elementIds\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"voluptate_57\": {\n      \"errors\": [\n        {\n          \"message\": \"<string>\",\n          \"line\": \"<integer>\",\n          \"column\": \"<integer>\",\n          \"mainElementId\": \"<string>\",\n          \"elementIds\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"message\": \"<string>\",\n          \"line\": \"<integer>\",\n          \"column\": \"<integer>\",\n          \"mainElementId\": \"<string>\",\n          \"elementIds\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"warnings\": [\n        {\n          \"message\": \"<string>\",\n          \"line\": \"<integer>\",\n          \"column\": \"<integer>\",\n          \"mainElementId\": \"<string>\",\n          \"elementIds\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"message\": \"<string>\",\n          \"line\": \"<integer>\",\n          \"column\": \"<integer>\",\n          \"mainElementId\": \"<string>\",\n          \"elementIds\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    \"commodo_7\": {\n      \"errors\": [\n        {\n          \"message\": \"<string>\",\n          \"line\": \"<integer>\",\n          \"column\": \"<integer>\",\n          \"mainElementId\": \"<string>\",\n          \"elementIds\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"message\": \"<string>\",\n          \"line\": \"<integer>\",\n          \"column\": \"<integer>\",\n          \"mainElementId\": \"<string>\",\n          \"elementIds\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ],\n      \"warnings\": [\n        {\n          \"message\": \"<string>\",\n          \"line\": \"<integer>\",\n          \"column\": \"<integer>\",\n          \"mainElementId\": \"<string>\",\n          \"elementIds\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"message\": \"<string>\",\n          \"line\": \"<integer>\",\n          \"column\": \"<integer>\",\n          \"mainElementId\": \"<string>\",\n          \"elementIds\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    }\n  },\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "registered",
					"item": [
						{
							"name": "Get Registered Deployments",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deployment/registered",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployment",
										"registered"
									]
								},
								"description": "Queries the registered deployment IDs for the current application."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployment/registered",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployment",
												"registered"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "redeploy",
							"item": [
								{
									"name": "Redeploy",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resourceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"resourceNames\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"source\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/deployment/:id/redeploy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployment",
												":id",
												"redeploy"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the deployment to re-deploy."
												}
											]
										},
										"description": "Re-deploys an existing deployment.\n\nThe deployment resources to re-deploy can be restricted by using the properties `resourceIds` or\n`resourceNames`. If no deployment resources to re-deploy are passed then all existing resources of the\ngiven deployment are re-deployed.\n\n**Warning**: Deployments can contain custom code in form of scripts or EL expressions to customize\nprocess behavior. This may be abused for remote execution of arbitrary code. See the section on\n[security considerations for custom code](https://docs.camunda.org/manual/7.21/user-guide/process-engine/securing-custom-code/) in\nthe user guide for details."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"resourceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"resourceNames\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"source\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/deployment/:id/redeploy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployment",
														":id",
														"redeploy"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"deployedProcessDefinitions\": {\n    \"mollit9b7\": {\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"category\": \"<string>\",\n      \"description\": \"<string>\",\n      \"name\": \"<string>\",\n      \"version\": \"<integer>\",\n      \"resource\": \"<string>\",\n      \"deploymentId\": \"<string>\",\n      \"diagram\": \"<string>\",\n      \"suspended\": \"<boolean>\",\n      \"tenantId\": \"<string>\",\n      \"versionTag\": \"<string>\",\n      \"historyTimeToLive\": \"<integer>\",\n      \"startableInTasklist\": \"<boolean>\"\n    }\n  },\n  \"deployedDecisionDefinitions\": {\n    \"consequat_5\": {\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"category\": \"<string>\",\n      \"name\": \"<string>\",\n      \"version\": \"<integer>\",\n      \"resource\": \"<string>\",\n      \"deploymentId\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"decisionRequirementsDefinitionId\": \"<string>\",\n      \"decisionRequirementsDefinitionKey\": \"<string>\",\n      \"historyTimeToLive\": \"<integer>\",\n      \"versionTag\": \"<string>\"\n    },\n    \"dolore35f\": {\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"category\": \"<string>\",\n      \"name\": \"<string>\",\n      \"version\": \"<integer>\",\n      \"resource\": \"<string>\",\n      \"deploymentId\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"decisionRequirementsDefinitionId\": \"<string>\",\n      \"decisionRequirementsDefinitionKey\": \"<string>\",\n      \"historyTimeToLive\": \"<integer>\",\n      \"versionTag\": \"<string>\"\n    }\n  },\n  \"deployedDecisionRequirementsDefinitions\": {\n    \"labore_96f\": {\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"category\": \"<string>\",\n      \"name\": \"<string>\",\n      \"version\": \"<integer>\",\n      \"resource\": \"<string>\",\n      \"deploymentId\": \"<string>\",\n      \"tenantId\": \"<string>\"\n    },\n    \"incididunt_5c7\": {\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"category\": \"<string>\",\n      \"name\": \"<string>\",\n      \"version\": \"<integer>\",\n      \"resource\": \"<string>\",\n      \"deploymentId\": \"<string>\",\n      \"tenantId\": \"<string>\"\n    }\n  },\n  \"deployedCaseDefinitions\": {\n    \"Duis___c\": {\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"category\": \"<string>\",\n      \"name\": \"<string>\",\n      \"version\": \"<integer>\",\n      \"resource\": \"<string>\",\n      \"deploymentId\": \"<string>\",\n      \"tenantId\": \"<string>\",\n      \"historyTimeToLive\": \"<integer>\"\n    }\n  },\n  \"id\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"deploymentTime\": \"<dateTime>\",\n  \"source\": \"<string>\",\n  \"name\": \"<string>\",\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Deployment or a deployment resource for the given deployment does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"resourceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"resourceNames\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"source\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/deployment/:id/redeploy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployment",
														":id",
														"redeploy"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "resources",
							"item": [
								{
									"name": "{resourceId}",
									"item": [
										{
											"name": "data",
											"item": [
												{
													"name": "Get Resource (Binary)",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/octet-stream"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployment/:id/resources/:resourceId/data",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployment",
																":id",
																"resources",
																":resourceId",
																"data"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The id of the deployment."
																},
																{
																	"key": "resourceId",
																	"value": "<string>",
																	"description": "(Required) The id of the deployment resource."
																}
															]
														},
														"description": "Retrieves the binary content of a deployment resource for the given deployment by id."
													},
													"response": [
														{
															"name": "Request successful. The media type of the response depends on the filename.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/octet-stream"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployment/:id/resources/:resourceId/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployment",
																		":id",
																		"resources",
																		":resourceId",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "resourceId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/octet-stream"
																}
															],
															"cookie": [],
															"body": "<string>"
														},
														{
															"name": "Deployment Resource with given resource id or deployment id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/deployment/:id/resources/:resourceId/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"deployment",
																		":id",
																		"resources",
																		":resourceId",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "resourceId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get Resource",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployment/:id/resources/:resourceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployment",
														":id",
														"resources",
														":resourceId"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the deployment"
														},
														{
															"key": "resourceId",
															"value": "<string>",
															"description": "(Required) The id of the deployment resource"
														}
													]
												},
												"description": "Retrieves a deployment resource by resource id for the given deployment."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployment/:id/resources/:resourceId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployment",
																":id",
																"resources",
																":resourceId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "resourceId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"deploymentId\": \"<string>\"\n}"
												},
												{
													"name": "Deployment Resource with given resource id or deployment id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/deployment/:id/resources/:resourceId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"deployment",
																":id",
																"resources",
																":resourceId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "resourceId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Resources",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployment/:id/resources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployment",
												":id",
												"resources"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the deployment to retrieve the deployment resources for."
												}
											]
										},
										"description": "Retrieves all deployment resources of a given deployment."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployment/:id/resources",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployment",
														":id",
														"resources"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"deploymentId\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"deploymentId\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Deployment resources for the given deployment do not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/deployment/:id/resources",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"deployment",
														":id",
														"resources"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Delete",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deployment/:id?cascade=false&skipCustomListeners=false&skipIoMappings=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployment",
										":id"
									],
									"query": [
										{
											"key": "cascade",
											"value": "false",
											"description": "`true`, if all process instances, historic process instances and jobs for this deployment\nshould be deleted."
										},
										{
											"key": "skipCustomListeners",
											"value": "false",
											"description": "`true`, if only the built-in ExecutionListeners should be notified with the end event."
										},
										{
											"key": "skipIoMappings",
											"value": "false",
											"description": "`true`, if all input/output mappings should not be invoked."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the deployment to be deleted."
										}
									]
								},
								"description": "Deletes a deployment by id."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployment/:id?cascade=false&skipCustomListeners=false&skipIoMappings=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployment",
												":id"
											],
											"query": [
												{
													"key": "cascade",
													"value": "false",
													"description": "`true`, if all process instances, historic process instances and jobs for this deployment\nshould be deleted."
												},
												{
													"key": "skipCustomListeners",
													"value": "false",
													"description": "`true`, if only the built-in ExecutionListeners should be notified with the end event."
												},
												{
													"key": "skipIoMappings",
													"value": "false",
													"description": "`true`, if all input/output mappings should not be invoked."
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "A Deployment with the provided id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployment/:id?cascade=false&skipCustomListeners=false&skipIoMappings=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployment",
												":id"
											],
											"query": [
												{
													"key": "cascade",
													"value": "false",
													"description": "`true`, if all process instances, historic process instances and jobs for this deployment\nshould be deleted."
												},
												{
													"key": "skipCustomListeners",
													"value": "false",
													"description": "`true`, if only the built-in ExecutionListeners should be notified with the end event."
												},
												{
													"key": "skipIoMappings",
													"value": "false",
													"description": "`true`, if all input/output mappings should not be invoked."
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deployment/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployment",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "63df04be-218d-11ef-a61f-1233154f4da1",
											"description": "(Required) The id of the deployment."
										}
									]
								},
								"description": "Retrieves a deployment by id, according to the `Deployment` interface of the engine."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployment/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployment",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"deploymentTime\": \"<dateTime>\",\n  \"source\": \"<string>\",\n  \"name\": \"<string>\",\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Deployment with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/deployment/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"deployment",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deployment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deployment"
							],
							"query": [
								{
									"key": "id",
									"value": "<string>",
									"description": "Filter by deployment id",
									"disabled": true
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "Filter by the deployment name. Exact match.",
									"disabled": true
								},
								{
									"key": "nameLike",
									"value": "<string>",
									"description": "Filter by the deployment name that the parameter is a substring of. The parameter can include the\nwildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n(`%`name`%`).",
									"disabled": true
								},
								{
									"key": "source",
									"value": "<string>",
									"description": "Filter by the deployment source.",
									"disabled": true
								},
								{
									"key": "withoutSource",
									"value": "false",
									"description": "Filter by the deployment source whereby source is equal to `null`.",
									"disabled": true
								},
								{
									"key": "tenantIdIn",
									"value": "<string>",
									"description": "Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids.",
									"disabled": true
								},
								{
									"key": "withoutTenantId",
									"value": "false",
									"description": "Only include deployments which belong to no tenant. Value may only be `true`, as `false` is the default\nbehavior.",
									"disabled": true
								},
								{
									"key": "includeDeploymentsWithoutTenantId",
									"value": "false",
									"description": "Include deployments which belong to no tenant. Can be used in combination with `tenantIdIn`. Value may\nonly be `true`, as `false` is the default behavior.",
									"disabled": true
								},
								{
									"key": "after",
									"value": "<dateTime>",
									"description": "Restricts to all deployments after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.",
									"disabled": true
								},
								{
									"key": "before",
									"value": "<dateTime>",
									"description": "Restricts to all deployments before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "id",
									"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter.",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter.",
									"disabled": true
								},
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return.",
									"disabled": true
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left.",
									"disabled": true
								}
							]
						},
						"description": "Queries for deployments that fulfill given parameters. Parameters may be the properties of deployments,\nsuch as the id or name or a range of the deployment time. The size of the result set can be retrieved by\nusing the [Get Deployment count](https://docs.camunda.org/manual/7.21/reference/rest/deployment/get-query-count/) method."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deployment?id=<string>&name=<string>&nameLike=<string>&source=<string>&withoutSource=false&tenantIdIn=<string>&withoutTenantId=false&includeDeploymentsWithoutTenantId=false&after=<dateTime>&before=<dateTime>&sortBy=id&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployment"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Filter by deployment id"
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Filter by the deployment name. Exact match."
										},
										{
											"key": "nameLike",
											"value": "<string>",
											"description": "Filter by the deployment name that the parameter is a substring of. The parameter can include the\nwildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n(`%`name`%`)."
										},
										{
											"key": "source",
											"value": "<string>",
											"description": "Filter by the deployment source."
										},
										{
											"key": "withoutSource",
											"value": "false",
											"description": "Filter by the deployment source whereby source is equal to `null`."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "false",
											"description": "Only include deployments which belong to no tenant. Value may only be `true`, as `false` is the default\nbehavior."
										},
										{
											"key": "includeDeploymentsWithoutTenantId",
											"value": "false",
											"description": "Include deployments which belong to no tenant. Can be used in combination with `tenantIdIn`. Value may\nonly be `true`, as `false` is the default behavior."
										},
										{
											"key": "after",
											"value": "<dateTime>",
											"description": "Restricts to all deployments after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "before",
											"value": "<dateTime>",
											"description": "Restricts to all deployments before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "sortBy",
											"value": "id",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"deploymentTime\": \"<dateTime>\",\n    \"source\": \"<string>\",\n    \"name\": \"<string>\",\n    \"links\": [\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      },\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      }\n    ]\n  },\n  {\n    \"id\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"deploymentTime\": \"<dateTime>\",\n    \"source\": \"<string>\",\n    \"name\": \"<string>\",\n    \"links\": [\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      },\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      }\n    ]\n  }\n]"
						},
						{
							"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder` parameter is supplied,\nbut no `sortBy`, or if an invalid operator for variable comparison is used. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/res",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deployment?id=<string>&name=<string>&nameLike=<string>&source=<string>&withoutSource=false&tenantIdIn=<string>&withoutTenantId=false&includeDeploymentsWithoutTenantId=false&after=<dateTime>&before=<dateTime>&sortBy=id&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployment"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Filter by deployment id"
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Filter by the deployment name. Exact match."
										},
										{
											"key": "nameLike",
											"value": "<string>",
											"description": "Filter by the deployment name that the parameter is a substring of. The parameter can include the\nwildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n(`%`name`%`)."
										},
										{
											"key": "source",
											"value": "<string>",
											"description": "Filter by the deployment source."
										},
										{
											"key": "withoutSource",
											"value": "false",
											"description": "Filter by the deployment source whereby source is equal to `null`."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "false",
											"description": "Only include deployments which belong to no tenant. Value may only be `true`, as `false` is the default\nbehavior."
										},
										{
											"key": "includeDeploymentsWithoutTenantId",
											"value": "false",
											"description": "Include deployments which belong to no tenant. Can be used in combination with `tenantIdIn`. Value may\nonly be `true`, as `false` is the default behavior."
										},
										{
											"key": "after",
											"value": "<dateTime>",
											"description": "Restricts to all deployments after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "before",
											"value": "<dateTime>",
											"description": "Restricts to all deployments before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "sortBy",
											"value": "id",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "engine",
			"item": [
				{
					"name": "Get List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/engine",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"engine"
							]
						},
						"description": "Retrieves the names of all process engines available on your platform.\n**Note**: You cannot prepend `/engine/{name}` to this method."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/engine",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"engine"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"name\": \"<string>\"\n  },\n  {\n    \"name\": \"<string>\"\n  }\n]"
						}
					]
				}
			]
		},
		{
			"name": "event-subscription",
			"item": [
				{
					"name": "count",
					"item": [
						{
							"name": "Get List Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/event-subscription/count?eventSubscriptionId=<string>&eventName=<string>&eventType=conditional&executionId=<string>&processInstanceId=<string>&activityId=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeEventSubscriptionsWithoutTenantId=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-subscription",
										"count"
									],
									"query": [
										{
											"key": "eventSubscriptionId",
											"value": "<string>",
											"description": "Only select subscription with the given id."
										},
										{
											"key": "eventName",
											"value": "<string>",
											"description": "Only select subscriptions for events with the given name."
										},
										{
											"key": "eventType",
											"value": "conditional",
											"description": "Only select subscriptions for events with the given type.\nValid values: `message`, `signal`, `compensate` and `conditional`."
										},
										{
											"key": "executionId",
											"value": "<string>",
											"description": "Only select subscriptions that belong to an execution with the given id."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Only select subscriptions that belong to a process instance with the given id."
										},
										{
											"key": "activityId",
											"value": "<string>",
											"description": "Only select subscriptions that belong to an activity with the given id."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids.\nOnly select subscriptions that belong to one of the given tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only select subscriptions which have no tenant id.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "includeEventSubscriptionsWithoutTenantId",
											"value": "<boolean>",
											"description": "Select event subscriptions which have no tenant id.\nCan be used in combination with tenantIdIn parameter.\nValue may only be `true`, as `false` is the default behavior."
										}
									]
								},
								"description": "Queries for the number of event subscriptions that fulfill given parameters.\nTakes the same parameters as the\n[Get Event Subscriptions](https://docs.camunda.org/manual/7.21/reference/rest/event-subscription/get-query/) method."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/event-subscription/count?eventSubscriptionId=<string>&eventName=<string>&eventType=conditional&executionId=<string>&processInstanceId=<string>&activityId=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeEventSubscriptionsWithoutTenantId=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"event-subscription",
												"count"
											],
											"query": [
												{
													"key": "eventSubscriptionId",
													"value": "<string>",
													"description": "Only select subscription with the given id."
												},
												{
													"key": "eventName",
													"value": "<string>",
													"description": "Only select subscriptions for events with the given name."
												},
												{
													"key": "eventType",
													"value": "conditional",
													"description": "Only select subscriptions for events with the given type.\nValid values: `message`, `signal`, `compensate` and `conditional`."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Only select subscriptions that belong to an execution with the given id."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Only select subscriptions that belong to a process instance with the given id."
												},
												{
													"key": "activityId",
													"value": "<string>",
													"description": "Only select subscriptions that belong to an activity with the given id."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids.\nOnly select subscriptions that belong to one of the given tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only select subscriptions which have no tenant id.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "includeEventSubscriptionsWithoutTenantId",
													"value": "<boolean>",
													"description": "Select event subscriptions which have no tenant id.\nCan be used in combination with tenantIdIn parameter.\nValue may only be `true`, as `false` is the default behavior."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/event-subscription/count?eventSubscriptionId=<string>&eventName=<string>&eventType=conditional&executionId=<string>&processInstanceId=<string>&activityId=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeEventSubscriptionsWithoutTenantId=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"event-subscription",
												"count"
											],
											"query": [
												{
													"key": "eventSubscriptionId",
													"value": "<string>",
													"description": "Only select subscription with the given id."
												},
												{
													"key": "eventName",
													"value": "<string>",
													"description": "Only select subscriptions for events with the given name."
												},
												{
													"key": "eventType",
													"value": "conditional",
													"description": "Only select subscriptions for events with the given type.\nValid values: `message`, `signal`, `compensate` and `conditional`."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Only select subscriptions that belong to an execution with the given id."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Only select subscriptions that belong to a process instance with the given id."
												},
												{
													"key": "activityId",
													"value": "<string>",
													"description": "Only select subscriptions that belong to an activity with the given id."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids.\nOnly select subscriptions that belong to one of the given tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only select subscriptions which have no tenant id.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "includeEventSubscriptionsWithoutTenantId",
													"value": "<boolean>",
													"description": "Select event subscriptions which have no tenant id.\nCan be used in combination with tenantIdIn parameter.\nValue may only be `true`, as `false` is the default behavior."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/event-subscription?eventSubscriptionId=<string>&eventName=<string>&eventType=conditional&executionId=<string>&processInstanceId=<string>&activityId=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeEventSubscriptionsWithoutTenantId=<boolean>&sortBy=tenantId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-subscription"
							],
							"query": [
								{
									"key": "eventSubscriptionId",
									"value": "<string>",
									"description": "Only select subscription with the given id."
								},
								{
									"key": "eventName",
									"value": "<string>",
									"description": "Only select subscriptions for events with the given name."
								},
								{
									"key": "eventType",
									"value": "conditional",
									"description": "Only select subscriptions for events with the given type.\nValid values: `message`, `signal`, `compensate` and `conditional`."
								},
								{
									"key": "executionId",
									"value": "<string>",
									"description": "Only select subscriptions that belong to an execution with the given id."
								},
								{
									"key": "processInstanceId",
									"value": "<string>",
									"description": "Only select subscriptions that belong to a process instance with the given id."
								},
								{
									"key": "activityId",
									"value": "<string>",
									"description": "Only select subscriptions that belong to an activity with the given id."
								},
								{
									"key": "tenantIdIn",
									"value": "<string>",
									"description": "Filter by a comma-separated list of tenant ids.\nOnly select subscriptions that belong to one of the given tenant ids."
								},
								{
									"key": "withoutTenantId",
									"value": "<boolean>",
									"description": "Only select subscriptions which have no tenant id.\nValue may only be `true`, as `false` is the default behavior."
								},
								{
									"key": "includeEventSubscriptionsWithoutTenantId",
									"value": "<boolean>",
									"description": "Select event subscriptions which have no tenant id.\nCan be used in combination with tenantIdIn parameter.\nValue may only be `true`, as `false` is the default behavior."
								},
								{
									"key": "sortBy",
									"value": "tenantId",
									"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
								},
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return."
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
								}
							]
						},
						"description": "Queries for event subscriptions that fulfill given parameters.\nThe size of the result set can be retrieved by using the\n[Get Event Subscriptions count](https://docs.camunda.org/manual/7.21/reference/rest/event-subscription/get-query-count/) method."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/event-subscription?eventSubscriptionId=<string>&eventName=<string>&eventType=conditional&executionId=<string>&processInstanceId=<string>&activityId=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeEventSubscriptionsWithoutTenantId=<boolean>&sortBy=tenantId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-subscription"
									],
									"query": [
										{
											"key": "eventSubscriptionId",
											"value": "<string>",
											"description": "Only select subscription with the given id."
										},
										{
											"key": "eventName",
											"value": "<string>",
											"description": "Only select subscriptions for events with the given name."
										},
										{
											"key": "eventType",
											"value": "conditional",
											"description": "Only select subscriptions for events with the given type.\nValid values: `message`, `signal`, `compensate` and `conditional`."
										},
										{
											"key": "executionId",
											"value": "<string>",
											"description": "Only select subscriptions that belong to an execution with the given id."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Only select subscriptions that belong to a process instance with the given id."
										},
										{
											"key": "activityId",
											"value": "<string>",
											"description": "Only select subscriptions that belong to an activity with the given id."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids.\nOnly select subscriptions that belong to one of the given tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only select subscriptions which have no tenant id.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "includeEventSubscriptionsWithoutTenantId",
											"value": "<boolean>",
											"description": "Select event subscriptions which have no tenant id.\nCan be used in combination with tenantIdIn parameter.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "sortBy",
											"value": "tenantId",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"eventType\": \"<string>\",\n    \"eventName\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"tenantId\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"eventType\": \"<string>\",\n    \"eventName\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"createdDate\": \"<dateTime>\",\n    \"tenantId\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Bad Request\nReturned if some of the query parameters are invalid,\nfor example if a `sortOrder` parameter is supplied, but no `sortBy`.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error respo",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/event-subscription?eventSubscriptionId=<string>&eventName=<string>&eventType=conditional&executionId=<string>&processInstanceId=<string>&activityId=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeEventSubscriptionsWithoutTenantId=<boolean>&sortBy=tenantId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-subscription"
									],
									"query": [
										{
											"key": "eventSubscriptionId",
											"value": "<string>",
											"description": "Only select subscription with the given id."
										},
										{
											"key": "eventName",
											"value": "<string>",
											"description": "Only select subscriptions for events with the given name."
										},
										{
											"key": "eventType",
											"value": "conditional",
											"description": "Only select subscriptions for events with the given type.\nValid values: `message`, `signal`, `compensate` and `conditional`."
										},
										{
											"key": "executionId",
											"value": "<string>",
											"description": "Only select subscriptions that belong to an execution with the given id."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Only select subscriptions that belong to a process instance with the given id."
										},
										{
											"key": "activityId",
											"value": "<string>",
											"description": "Only select subscriptions that belong to an activity with the given id."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids.\nOnly select subscriptions that belong to one of the given tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only select subscriptions which have no tenant id.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "includeEventSubscriptionsWithoutTenantId",
											"value": "<boolean>",
											"description": "Select event subscriptions which have no tenant id.\nCan be used in combination with tenantIdIn parameter.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "sortBy",
											"value": "tenantId",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "execution",
			"item": [
				{
					"name": "count",
					"item": [
						{
							"name": "Get Execution Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/execution/count?businessKey=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processInstanceId=<string>&activityId=<string>&signalEventSubscriptionName=<string>&messageEventSubscriptionName=<string>&active=<boolean>&suspended=<boolean>&incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&tenantIdIn=<string>&variables=<string>&processVariables=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"execution",
										"count"
									],
									"query": [
										{
											"key": "businessKey",
											"value": "<string>",
											"description": "Filter by the business key of the process instances the executions belong to."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Filter by the process definition the executions run on."
										},
										{
											"key": "processDefinitionKey",
											"value": "<string>",
											"description": "Filter by the key of the process definition the executions run on."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Filter by the id of the process instance the execution belongs to."
										},
										{
											"key": "activityId",
											"value": "<string>",
											"description": "Filter by the id of the activity the execution currently executes."
										},
										{
											"key": "signalEventSubscriptionName",
											"value": "<string>",
											"description": "Select only those executions that expect a signal of the given name."
										},
										{
											"key": "messageEventSubscriptionName",
											"value": "<string>",
											"description": "Select only those executions that expect a message of the given name."
										},
										{
											"key": "active",
											"value": "<boolean>",
											"description": "Only include active executions. Value may only be `true`, as `false` is the default\nbehavior."
										},
										{
											"key": "suspended",
											"value": "<boolean>",
											"description": "Only include suspended executions. Value may only be `true`, as `false` is the default\nbehavior."
										},
										{
											"key": "incidentId",
											"value": "<string>",
											"description": "Filter by the incident id."
										},
										{
											"key": "incidentType",
											"value": "<string>",
											"description": "Filter by the incident type. See the [User Guide](/manual/develop/user-guide/process-engine/incidents/#incident-types) for a list of incident types."
										},
										{
											"key": "incidentMessage",
											"value": "<string>",
											"description": "Filter by the incident message. Exact match."
										},
										{
											"key": "incidentMessageLike",
											"value": "<string>",
											"description": "Filter by the incident message that the parameter is a substring of."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids. An execution must have one of the given\ntenant ids."
										},
										{
											"key": "variables",
											"value": "<string>",
											"description": "Only include executions that have variables with certain values.\nVariable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n**Note:** Values are always treated as `String` objects on server side.\n\nValid operator values are: `eq` - equal to; `neq` - not equal to; `gt` -\ngreater than;\n`gteq` - greater than or equal to; `lt` - lower than; `lteq` - lower than or\nequal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
										},
										{
											"key": "processVariables",
											"value": "<string>",
											"description": "Only include executions that belong to a process instance with variables with certain\nvalues.\nVariable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n**Note:** Values are always treated as `String` objects on server side.\n\nValid operator values are: `eq` - equal to; `neq` - not equal to.\n`key` and `value` may not contain underscore or comma characters."
										},
										{
											"key": "variableNamesIgnoreCase",
											"value": "<boolean>",
											"description": "Match all variable names provided in `variables` and `processVariables` case-\ninsensitively. If set to `true` **variableName** and **variablename** are\ntreated as equal."
										},
										{
											"key": "variableValuesIgnoreCase",
											"value": "<boolean>",
											"description": "Match all variable values provided in `variables` and `processVariables` case-\ninsensitively. If set to `true` **variableValue** and **variablevalue** are\ntreated as equal."
										}
									]
								},
								"description": "Queries for the number of executions that fulfill given parameters.\nTakes the same parameters as the [Get\nExecutions](https://docs.camunda.org/manual/7.21/reference/rest/execution/get-query/) method."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/execution/count?businessKey=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processInstanceId=<string>&activityId=<string>&signalEventSubscriptionName=<string>&messageEventSubscriptionName=<string>&active=<boolean>&suspended=<boolean>&incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&tenantIdIn=<string>&variables=<string>&processVariables=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"execution",
												"count"
											],
											"query": [
												{
													"key": "businessKey",
													"value": "<string>",
													"description": "Filter by the business key of the process instances the executions belong to."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by the process definition the executions run on."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Filter by the key of the process definition the executions run on."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by the id of the process instance the execution belongs to."
												},
												{
													"key": "activityId",
													"value": "<string>",
													"description": "Filter by the id of the activity the execution currently executes."
												},
												{
													"key": "signalEventSubscriptionName",
													"value": "<string>",
													"description": "Select only those executions that expect a signal of the given name."
												},
												{
													"key": "messageEventSubscriptionName",
													"value": "<string>",
													"description": "Select only those executions that expect a message of the given name."
												},
												{
													"key": "active",
													"value": "<boolean>",
													"description": "Only include active executions. Value may only be `true`, as `false` is the default\nbehavior."
												},
												{
													"key": "suspended",
													"value": "<boolean>",
													"description": "Only include suspended executions. Value may only be `true`, as `false` is the default\nbehavior."
												},
												{
													"key": "incidentId",
													"value": "<string>",
													"description": "Filter by the incident id."
												},
												{
													"key": "incidentType",
													"value": "<string>",
													"description": "Filter by the incident type. See the [User Guide](/manual/develop/user-guide/process-engine/incidents/#incident-types) for a list of incident types."
												},
												{
													"key": "incidentMessage",
													"value": "<string>",
													"description": "Filter by the incident message. Exact match."
												},
												{
													"key": "incidentMessageLike",
													"value": "<string>",
													"description": "Filter by the incident message that the parameter is a substring of."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids. An execution must have one of the given\ntenant ids."
												},
												{
													"key": "variables",
													"value": "<string>",
													"description": "Only include executions that have variables with certain values.\nVariable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n**Note:** Values are always treated as `String` objects on server side.\n\nValid operator values are: `eq` - equal to; `neq` - not equal to; `gt` -\ngreater than;\n`gteq` - greater than or equal to; `lt` - lower than; `lteq` - lower than or\nequal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
												},
												{
													"key": "processVariables",
													"value": "<string>",
													"description": "Only include executions that belong to a process instance with variables with certain\nvalues.\nVariable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n**Note:** Values are always treated as `String` objects on server side.\n\nValid operator values are: `eq` - equal to; `neq` - not equal to.\n`key` and `value` may not contain underscore or comma characters."
												},
												{
													"key": "variableNamesIgnoreCase",
													"value": "<boolean>",
													"description": "Match all variable names provided in `variables` and `processVariables` case-\ninsensitively. If set to `true` **variableName** and **variablename** are\ntreated as equal."
												},
												{
													"key": "variableValuesIgnoreCase",
													"value": "<boolean>",
													"description": "Match all variable values provided in `variables` and `processVariables` case-\ninsensitively. If set to `true` **variableValue** and **variablevalue** are\ntreated as equal."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example if an invalid operator\nfor variable comparison is used. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/execution/count?businessKey=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processInstanceId=<string>&activityId=<string>&signalEventSubscriptionName=<string>&messageEventSubscriptionName=<string>&active=<boolean>&suspended=<boolean>&incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&tenantIdIn=<string>&variables=<string>&processVariables=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"execution",
												"count"
											],
											"query": [
												{
													"key": "businessKey",
													"value": "<string>",
													"description": "Filter by the business key of the process instances the executions belong to."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by the process definition the executions run on."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Filter by the key of the process definition the executions run on."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by the id of the process instance the execution belongs to."
												},
												{
													"key": "activityId",
													"value": "<string>",
													"description": "Filter by the id of the activity the execution currently executes."
												},
												{
													"key": "signalEventSubscriptionName",
													"value": "<string>",
													"description": "Select only those executions that expect a signal of the given name."
												},
												{
													"key": "messageEventSubscriptionName",
													"value": "<string>",
													"description": "Select only those executions that expect a message of the given name."
												},
												{
													"key": "active",
													"value": "<boolean>",
													"description": "Only include active executions. Value may only be `true`, as `false` is the default\nbehavior."
												},
												{
													"key": "suspended",
													"value": "<boolean>",
													"description": "Only include suspended executions. Value may only be `true`, as `false` is the default\nbehavior."
												},
												{
													"key": "incidentId",
													"value": "<string>",
													"description": "Filter by the incident id."
												},
												{
													"key": "incidentType",
													"value": "<string>",
													"description": "Filter by the incident type. See the [User Guide](/manual/develop/user-guide/process-engine/incidents/#incident-types) for a list of incident types."
												},
												{
													"key": "incidentMessage",
													"value": "<string>",
													"description": "Filter by the incident message. Exact match."
												},
												{
													"key": "incidentMessageLike",
													"value": "<string>",
													"description": "Filter by the incident message that the parameter is a substring of."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids. An execution must have one of the given\ntenant ids."
												},
												{
													"key": "variables",
													"value": "<string>",
													"description": "Only include executions that have variables with certain values.\nVariable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n**Note:** Values are always treated as `String` objects on server side.\n\nValid operator values are: `eq` - equal to; `neq` - not equal to; `gt` -\ngreater than;\n`gteq` - greater than or equal to; `lt` - lower than; `lteq` - lower than or\nequal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
												},
												{
													"key": "processVariables",
													"value": "<string>",
													"description": "Only include executions that belong to a process instance with variables with certain\nvalues.\nVariable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n**Note:** Values are always treated as `String` objects on server side.\n\nValid operator values are: `eq` - equal to; `neq` - not equal to.\n`key` and `value` may not contain underscore or comma characters."
												},
												{
													"key": "variableNamesIgnoreCase",
													"value": "<boolean>",
													"description": "Match all variable names provided in `variables` and `processVariables` case-\ninsensitively. If set to `true` **variableName** and **variablename** are\ntreated as equal."
												},
												{
													"key": "variableValuesIgnoreCase",
													"value": "<boolean>",
													"description": "Match all variable values provided in `variables` and `processVariables` case-\ninsensitively. If set to `true` **variableValue** and **variablevalue** are\ntreated as equal."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get Execution Count (POST)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"businessKey\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"signalEventSubscriptionName\": \"<string>\",\n  \"messageEventSubscriptionName\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"incidentId\": \"<string>\",\n  \"incidentType\": \"<string>\",\n  \"incidentMessage\": \"<string>\",\n  \"incidentMessageLike\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"variables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"lteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gt\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"processVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gt\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"definitionId\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"tenantId\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/execution/count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"execution",
										"count"
									]
								},
								"description": "Queries for the number of executions that fulfill given parameters. This method\ntakes the same message body as the [Get Executions\nPOST](https://docs.camunda.org/manual/7.21/reference/rest/execution/post-query/) method and\ntherefore it is slightly more powerful than the [Get Execution\nCount](https://docs.camunda.org/manual/7.21/reference/rest/execution/get-query-count/) method."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"businessKey\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"signalEventSubscriptionName\": \"<string>\",\n  \"messageEventSubscriptionName\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"incidentId\": \"<string>\",\n  \"incidentType\": \"<string>\",\n  \"incidentMessage\": \"<string>\",\n  \"incidentMessageLike\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"variables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"lteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gt\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"processVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gt\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"definitionId\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"tenantId\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/execution/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"execution",
												"count"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example if an invalid operator\nfor variable comparison is used. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"businessKey\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"signalEventSubscriptionName\": \"<string>\",\n  \"messageEventSubscriptionName\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"incidentId\": \"<string>\",\n  \"incidentType\": \"<string>\",\n  \"incidentMessage\": \"<string>\",\n  \"incidentMessageLike\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"variables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"lteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gt\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"processVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gt\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"definitionId\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"tenantId\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/execution/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"execution",
												"count"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "create-incident",
							"item": [
								{
									"name": "Create Incident",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"incidentType\": \"<string>\",\n  \"configuration\": \"<string>\",\n  \"message\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/execution/:id/create-incident",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"execution",
												":id",
												"create-incident"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the execution to create a new incident for."
												}
											]
										},
										"description": "Creates a custom incident with given properties."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"incidentType\": \"<string>\",\n  \"configuration\": \"<string>\",\n  \"message\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/execution/:id/create-incident",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"execution",
														":id",
														"create-incident"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"incidentTimestamp\": \"<dateTime>\",\n  \"incidentType\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"failedActivityId\": \"<string>\",\n  \"causeIncidentId\": \"<string>\",\n  \"rootCauseIncidentId\": \"<string>\",\n  \"configuration\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"incidentMessage\": \"<string>\",\n  \"jobDefinitionId\": \"<string>\",\n  \"annotation\": \"<string>\"\n}"
										},
										{
											"name": "Returned if the incident type is null, the execution does not exist or the\nexecution is not related to any activity.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"incidentType\": \"<string>\",\n  \"configuration\": \"<string>\",\n  \"message\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/execution/:id/create-incident",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"execution",
														":id",
														"create-incident"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "localVariables",
							"item": [
								{
									"name": "{varName}",
									"item": [
										{
											"name": "data",
											"item": [
												{
													"name": "Get Local Execution Variable (Binary)",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/octet-stream"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/execution/:id/localVariables/:varName/data",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"execution",
																":id",
																"localVariables",
																":varName",
																"data"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The id of the execution to retrieve the variable from."
																},
																{
																	"key": "varName",
																	"value": "<string>",
																	"description": "(Required) The name of the variable to get."
																}
															]
														},
														"description": "Retrieves a binary variable from the context of a given execution by id. Does not\ntraverse the parent execution hierarchy. Applicable for byte array and\nfile variables."
													},
													"response": [
														{
															"name": "Request successful.\n        For binary variables or files without any MIME type information, a byte stream is returned.\n        File variables with MIME type information are returned as the saved type.\n        Additionally, for file variables the Content-",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/octet-stream"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/execution/:id/localVariables/:varName/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"execution",
																		":id",
																		"localVariables",
																		":varName",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "varName"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": "<string>"
														},
														{
															"name": "Variable instance with given id exists but is not a binary variable. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/execution/:id/localVariables/:varName/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"execution",
																		":id",
																		"localVariables",
																		":varName",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "varName"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
														},
														{
															"name": "Variable instance with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/execution/:id/localVariables/:varName/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"execution",
																		":id",
																		"localVariables",
																		":varName",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "varName"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
														}
													]
												},
												{
													"name": "Post Local Execution Variable (Binary)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "data",
																	"value": "<string>",
																	"description": "The binary data to be set.\nFor File variables, this multipart can contain the filename, binary value and MIME type of the file variable to be set\nOnly the filename is mandatory.",
																	"type": "text"
																},
																{
																	"key": "valueType",
																	"value": "Bytes",
																	"description": "The name of the variable type. Either Bytes for a byte array variable or File for a file variable. (This can only be one of Bytes,File)",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/execution/:id/localVariables/:varName/data",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"execution",
																":id",
																"localVariables",
																":varName",
																"data"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The id of the execution to set the variable for."
																},
																{
																	"key": "varName",
																	"value": "<string>",
																	"description": "(Required) The name of the variable to set."
																}
															]
														},
														"description": "Sets the serialized value for a binary variable or the binary value for a file\nvariable in the context of a given execution by id."
													},
													"response": [
														{
															"name": "Request successful. This method returns no content.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "data",
																			"value": "<string>",
																			"description": "The binary data to be set.\nFor File variables, this multipart can contain the filename, binary value and MIME type of the file variable to be set\nOnly the filename is mandatory.",
																			"type": "text"
																		},
																		{
																			"key": "valueType",
																			"value": "Bytes",
																			"description": "The name of the variable type. Either Bytes for a byte array variable or File for a file variable. (This can only be one of Bytes,File)",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/execution/:id/localVariables/:varName/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"execution",
																		":id",
																		"localVariables",
																		":varName",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "varName"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "The variable value or type is invalid, for example if no filename is set. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "data",
																			"value": "<string>",
																			"description": "The binary data to be set.\nFor File variables, this multipart can contain the filename, binary value and MIME type of the file variable to be set\nOnly the filename is mandatory.",
																			"type": "text"
																		},
																		{
																			"key": "valueType",
																			"value": "Bytes",
																			"description": "The name of the variable type. Either Bytes for a byte array variable or File for a file variable. (This can only be one of Bytes,File)",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/execution/:id/localVariables/:varName/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"execution",
																		":id",
																		"localVariables",
																		":varName",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "varName"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Delete Local Execution Variable",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/execution/:id/localVariables/:varName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"execution",
														":id",
														"localVariables",
														":varName"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the execution to delete the variable from."
														},
														{
															"key": "varName",
															"value": "<string>",
															"description": "(Required) The name of the variable to delete."
														}
													]
												},
												"description": "Deletes a variable in the context of a given execution by id. Deletion does not\npropagate upwards in the execution hierarchy."
											},
											"response": [
												{
													"name": "Request successful. This method returns no content.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/execution/:id/localVariables/:varName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"execution",
																":id",
																"localVariables",
																":varName"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get Local Execution Variable",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/execution/:id/localVariables/:varName?deserializeValue=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"execution",
														":id",
														"localVariables",
														":varName"
													],
													"query": [
														{
															"key": "deserializeValue",
															"value": "<boolean>",
															"description": "Determines whether serializable variable values (typically\nvariables that store custom Java objects) should be deserialized\non server side (default `true`).\n\nIf set to `true`, a serializable variable will be deserialized on\nserver side and transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean\nproperty introspection feature. Note that this requires the Java\nclasses of the variable value to be on the REST API's classpath.\nIf set to `false`, a serializable variable will be returned in its\nserialized format. For example, a variable that is serialized as\nXML will be returned as a JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of\nbackward compatibility, we recommend setting this parameter to\n`false` when developing web applications that are independent of\nthe Java process applications deployed to the engine."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the execution to retrieve the variable from."
														},
														{
															"key": "varName",
															"value": "<string>",
															"description": "(Required) The name of the variable to get."
														}
													]
												},
												"description": "Retrieves a variable from the context of a given execution by id. Does not traverse\nthe parent execution hierarchy."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/execution/:id/localVariables/:varName?deserializeValue=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"execution",
																":id",
																"localVariables",
																":varName"
															],
															"query": [
																{
																	"key": "deserializeValue",
																	"value": "<boolean>",
																	"description": "Determines whether serializable variable values (typically\nvariables that store custom Java objects) should be deserialized\non server side (default `true`).\n\nIf set to `true`, a serializable variable will be deserialized on\nserver side and transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean\nproperty introspection feature. Note that this requires the Java\nclasses of the variable value to be on the REST API's classpath.\nIf set to `false`, a serializable variable will be returned in its\nserialized format. For example, a variable that is serialized as\nXML will be returned as a JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of\nbackward compatibility, we recommend setting this parameter to\n`false` when developing web applications that are independent of\nthe Java process applications deployed to the engine."
																}
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"value\": {\n    \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n  },\n  \"type\": \"<string>\",\n  \"valueInfo\": {\n    \"exercitationf5_\": \"adipisicing laboris Ut\",\n    \"consectetur_e_\": \"enim in\"\n  }\n}"
												},
												{
													"name": "Variable with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/execution/:id/localVariables/:varName?deserializeValue=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"execution",
																":id",
																"localVariables",
																":varName"
															],
															"query": [
																{
																	"key": "deserializeValue",
																	"value": "<boolean>",
																	"description": "Determines whether serializable variable values (typically\nvariables that store custom Java objects) should be deserialized\non server side (default `true`).\n\nIf set to `true`, a serializable variable will be deserialized on\nserver side and transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean\nproperty introspection feature. Note that this requires the Java\nclasses of the variable value to be on the REST API's classpath.\nIf set to `false`, a serializable variable will be returned in its\nserialized format. For example, a variable that is serialized as\nXML will be returned as a JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of\nbackward compatibility, we recommend setting this parameter to\n`false` when developing web applications that are independent of\nthe Java process applications deployed to the engine."
																}
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										},
										{
											"name": "Put Local Execution Variable",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": {\n    \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n  },\n  \"type\": \"<string>\",\n  \"valueInfo\": {\n    \"exercitationf5_\": \"adipisicing laboris Ut\",\n    \"consectetur_e_\": \"enim in\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/execution/:id/localVariables/:varName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"execution",
														":id",
														"localVariables",
														":varName"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the execution to set the variable for."
														},
														{
															"key": "varName",
															"value": "<string>",
															"description": "(Required) The name of the variable to set."
														}
													]
												},
												"description": "Sets a variable in the context of a given execution by id. Update does not\npropagate upwards in the execution hierarchy."
											},
											"response": [
												{
													"name": "Request successful. This method returns no content.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"value\": {\n    \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n  },\n  \"type\": \"<string>\",\n  \"valueInfo\": {\n    \"exercitationf5_\": \"adipisicing laboris Ut\",\n    \"consectetur_e_\": \"enim in\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/execution/:id/localVariables/:varName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"execution",
																":id",
																"localVariables",
																":varName"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The variable value or type is invalid, for example if the value could not be parsed\nto an Integer value or the passed variable type is not supported.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for ",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"value\": {\n    \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n  },\n  \"type\": \"<string>\",\n  \"valueInfo\": {\n    \"exercitationf5_\": \"adipisicing laboris Ut\",\n    \"consectetur_e_\": \"enim in\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/execution/:id/localVariables/:varName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"execution",
																":id",
																"localVariables",
																":varName"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Local Execution Variables",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/execution/:id/localVariables?deserializeValues=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"execution",
												":id",
												"localVariables"
											],
											"query": [
												{
													"key": "deserializeValues",
													"value": "<boolean>",
													"description": "Determines whether serializable variable values (typically\nvariables that store custom Java objects) should be deserialized\non server side (default `true`).\n\nIf set to `true`, a serializable variable will be deserialized on\nserver side and transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean\nproperty introspection feature. Note that this requires the Java\nclasses of the variable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its\nserialized format. For example, a variable that is serialized as\nXML will be returned as a JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of\nbackward compatibility, we recommend setting this parameter to\n`false` when developing web applications that are independent of\nthe Java process applications deployed to the engine."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the execution to retrieve the variables from."
												}
											]
										},
										"description": "Retrieves all variables of a given execution by id."
									},
									"response": [
										{
											"name": "Request successful. Returns A JSON object of variables key-value pairs. Each key is a variable name and each value a VariableValueDto",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/execution/:id/localVariables?deserializeValues=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"execution",
														":id",
														"localVariables"
													],
													"query": [
														{
															"key": "deserializeValues",
															"value": "<boolean>",
															"description": "Determines whether serializable variable values (typically\nvariables that store custom Java objects) should be deserialized\non server side (default `true`).\n\nIf set to `true`, a serializable variable will be deserialized on\nserver side and transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean\nproperty introspection feature. Note that this requires the Java\nclasses of the variable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its\nserialized format. For example, a variable that is serialized as\nXML will be returned as a JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of\nbackward compatibility, we recommend setting this parameter to\n`false` when developing web applications that are independent of\nthe Java process applications deployed to the engine."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"nulla__3\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"consectetur_dfd\": \"veniam do minim occaecat\"\n    }\n  },\n  \"ut_10\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"ut_fa\": false,\n      \"mollit9\": -39701223,\n      \"velit_c1\": \"ve\"\n    }\n  },\n  \"aliquip_5\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"consectetur_34d\": -65418375,\n      \"laboriseec\": false,\n      \"doloreb\": true\n    }\n  },\n  \"mollitd\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"in_76d\": true,\n      \"pariatur_f77\": true\n    }\n  }\n}"
										},
										{
											"name": "Execution with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/execution/:id/localVariables?deserializeValues=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"execution",
														":id",
														"localVariables"
													],
													"query": [
														{
															"key": "deserializeValues",
															"value": "<boolean>",
															"description": "Determines whether serializable variable values (typically\nvariables that store custom Java objects) should be deserialized\non server side (default `true`).\n\nIf set to `true`, a serializable variable will be deserialized on\nserver side and transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean\nproperty introspection feature. Note that this requires the Java\nclasses of the variable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its\nserialized format. For example, a variable that is serialized as\nXML will be returned as a JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of\nbackward compatibility, we recommend setting this parameter to\n`false` when developing web applications that are independent of\nthe Java process applications deployed to the engine."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								},
								{
									"name": "Update/Delete Local Execution Variables",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"modifications\": {\n    \"id_4\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"irure_9\": -3709291.92365548\n      }\n    },\n    \"reprehenderita\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"nostrud_c\": 51173474\n      }\n    }\n  },\n  \"deletions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/execution/:id/localVariables",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"execution",
												":id",
												"localVariables"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the execution to set variables for."
												}
											]
										},
										"description": "Updates or deletes the variables in the context of an execution by id. The updates\ndo not propagate upwards in the execution hierarchy.\nUpdates precede deletions. So, if a variable is updated AND deleted,\nthe deletion overrides the update."
									},
									"response": [
										{
											"name": "Request successful. This method returns no content.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"modifications\": {\n    \"id_4\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"irure_9\": -3709291.92365548\n      }\n    },\n    \"reprehenderita\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"nostrud_c\": 51173474\n      }\n    }\n  },\n  \"deletions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/execution/:id/localVariables",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"execution",
														":id",
														"localVariables"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The variable value or type is invalid, for example if the value could not be parsed\nto an Integer value or the passed variable type is not supported.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for ",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"modifications\": {\n    \"id_4\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"irure_9\": -3709291.92365548\n      }\n    },\n    \"reprehenderita\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"nostrud_c\": 51173474\n      }\n    }\n  },\n  \"deletions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/execution/:id/localVariables",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"execution",
														":id",
														"localVariables"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Update or delete could not be executed, for example because the execution does not\nexist.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"modifications\": {\n    \"id_4\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"irure_9\": -3709291.92365548\n      }\n    },\n    \"reprehenderita\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"nostrud_c\": 51173474\n      }\n    }\n  },\n  \"deletions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/execution/:id/localVariables",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"execution",
														":id",
														"localVariables"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "messageSubscriptions",
							"item": [
								{
									"name": "{messageName}",
									"item": [
										{
											"name": "trigger",
											"item": [
												{
													"name": "Trigger Message Event Subscription",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"variables\": {\n    \"ullamco_da\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"etcb\": false\n      }\n    },\n    \"esse0a2\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sed2e8\": 73032475\n      }\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/execution/:id/messageSubscriptions/:messageName/trigger",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"execution",
																":id",
																"messageSubscriptions",
																":messageName",
																"trigger"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The id of the execution to submit the message to."
																},
																{
																	"key": "messageName",
																	"value": "<string>",
																	"description": "(Required) The name of the message that the addressed subscription corresponds to."
																}
															]
														},
														"description": "Delivers a message to a specific execution by id, to trigger an existing message\nevent subscription. Inject process variables as the message's\npayload."
													},
													"response": [
														{
															"name": "Request successful. This method returns no content.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"variables\": {\n    \"ullamco_da\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"etcb\": false\n      }\n    },\n    \"esse0a2\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sed2e8\": 73032475\n      }\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/execution/:id/messageSubscriptions/:messageName/trigger",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"execution",
																		":id",
																		"messageSubscriptions",
																		":messageName",
																		"trigger"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "messageName"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "The variable value or type is invalid, for example if the value could not be parsed\nto an Integer value or the passed variable type is not supported.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for ",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"variables\": {\n    \"ullamco_da\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"etcb\": false\n      }\n    },\n    \"esse0a2\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sed2e8\": 73032475\n      }\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/execution/:id/messageSubscriptions/:messageName/trigger",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"execution",
																		":id",
																		"messageSubscriptions",
																		":messageName",
																		"trigger"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "messageName"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
														},
														{
															"name": "The addressed execution has no pending message subscriptions for the given message.\nSee the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"variables\": {\n    \"ullamco_da\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"etcb\": false\n      }\n    },\n    \"esse0a2\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sed2e8\": 73032475\n      }\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/execution/:id/messageSubscriptions/:messageName/trigger",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"execution",
																		":id",
																		"messageSubscriptions",
																		":messageName",
																		"trigger"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "messageName"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get Message Event Subscription",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/execution/:id/messageSubscriptions/:messageName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"execution",
														":id",
														"messageSubscriptions",
														":messageName"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the execution that holds the subscription."
														},
														{
															"key": "messageName",
															"value": "<string>",
															"description": "(Required) The name of the message that the subscription corresponds to."
														}
													]
												},
												"description": "Retrieves a message event subscription for a given execution by id and a message\nname."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/execution/:id/messageSubscriptions/:messageName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"execution",
																":id",
																"messageSubscriptions",
																":messageName"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "messageName"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"eventType\": \"<string>\",\n  \"eventName\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"createdDate\": \"<dateTime>\",\n  \"tenantId\": \"<string>\"\n}"
												},
												{
													"name": "A message subscription for the given name and execution does not exist.\nThis may either mean that the execution does not exist, or that\nit is not subscribed on such a message.\nSee the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/over",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/execution/:id/messageSubscriptions/:messageName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"execution",
																":id",
																"messageSubscriptions",
																":messageName"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "messageName"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "signal",
							"item": [
								{
									"name": "Trigger Execution",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"variables\": {\n    \"ullamco_da\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"etcb\": false\n      }\n    },\n    \"esse0a2\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sed2e8\": 73032475\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/execution/:id/signal",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"execution",
												":id",
												"signal"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the execution to signal."
												}
											]
										},
										"description": "Signals an execution by id. Can for example be used to explicitly skip user tasks\nor signal asynchronous continuations."
									},
									"response": [
										{
											"name": "Request successful. This method returns no content.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"ullamco_da\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"etcb\": false\n      }\n    },\n    \"esse0a2\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sed2e8\": 73032475\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/execution/:id/signal",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"execution",
														":id",
														"signal"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The variable value or type is invalid, for example if the value could not be parsed\nto an Integer value or the passed variable type is not supported.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for ",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"ullamco_da\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"etcb\": false\n      }\n    },\n    \"esse0a2\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sed2e8\": 73032475\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/execution/:id/signal",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"execution",
														":id",
														"signal"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Execution",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/execution/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"execution",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the execution to be retrieved."
										}
									]
								},
								"description": "Retrieves an execution by id, according to the `Execution` interface in the\nengine."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/execution/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"execution",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"ended\": \"<boolean>\",\n  \"tenantId\": \"<string>\"\n}"
								},
								{
									"name": "Execution with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/execution/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"execution",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get Executions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/execution?businessKey=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processInstanceId=<string>&activityId=<string>&signalEventSubscriptionName=<string>&messageEventSubscriptionName=<string>&active=<boolean>&suspended=<boolean>&incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&tenantIdIn=<string>&variables=<string>&processVariables=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>&sortBy=definitionId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"execution"
							],
							"query": [
								{
									"key": "businessKey",
									"value": "<string>",
									"description": "Filter by the business key of the process instances the executions belong to."
								},
								{
									"key": "processDefinitionId",
									"value": "<string>",
									"description": "Filter by the process definition the executions run on."
								},
								{
									"key": "processDefinitionKey",
									"value": "<string>",
									"description": "Filter by the key of the process definition the executions run on."
								},
								{
									"key": "processInstanceId",
									"value": "<string>",
									"description": "Filter by the id of the process instance the execution belongs to."
								},
								{
									"key": "activityId",
									"value": "<string>",
									"description": "Filter by the id of the activity the execution currently executes."
								},
								{
									"key": "signalEventSubscriptionName",
									"value": "<string>",
									"description": "Select only those executions that expect a signal of the given name."
								},
								{
									"key": "messageEventSubscriptionName",
									"value": "<string>",
									"description": "Select only those executions that expect a message of the given name."
								},
								{
									"key": "active",
									"value": "<boolean>",
									"description": "Only include active executions. Value may only be `true`, as `false` is the default\nbehavior."
								},
								{
									"key": "suspended",
									"value": "<boolean>",
									"description": "Only include suspended executions. Value may only be `true`, as `false` is the default\nbehavior."
								},
								{
									"key": "incidentId",
									"value": "<string>",
									"description": "Filter by the incident id."
								},
								{
									"key": "incidentType",
									"value": "<string>",
									"description": "Filter by the incident type. See the [User Guide](/manual/develop/user-guide/process-engine/incidents/#incident-types) for a list of incident types."
								},
								{
									"key": "incidentMessage",
									"value": "<string>",
									"description": "Filter by the incident message. Exact match."
								},
								{
									"key": "incidentMessageLike",
									"value": "<string>",
									"description": "Filter by the incident message that the parameter is a substring of."
								},
								{
									"key": "tenantIdIn",
									"value": "<string>",
									"description": "Filter by a comma-separated list of tenant ids. An execution must have one of the given\ntenant ids."
								},
								{
									"key": "variables",
									"value": "<string>",
									"description": "Only include executions that have variables with certain values.\nVariable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n**Note:** Values are always treated as `String` objects on server side.\n\nValid operator values are: `eq` - equal to; `neq` - not equal to; `gt` -\ngreater than;\n`gteq` - greater than or equal to; `lt` - lower than; `lteq` - lower than or\nequal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
								},
								{
									"key": "processVariables",
									"value": "<string>",
									"description": "Only include executions that belong to a process instance with variables with certain\nvalues.\nVariable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n**Note:** Values are always treated as `String` objects on server side.\n\nValid operator values are: `eq` - equal to; `neq` - not equal to.\n`key` and `value` may not contain underscore or comma characters."
								},
								{
									"key": "variableNamesIgnoreCase",
									"value": "<boolean>",
									"description": "Match all variable names provided in `variables` and `processVariables` case-\ninsensitively. If set to `true` **variableName** and **variablename** are\ntreated as equal."
								},
								{
									"key": "variableValuesIgnoreCase",
									"value": "<boolean>",
									"description": "Match all variable values provided in `variables` and `processVariables` case-\ninsensitively. If set to `true` **variableValue** and **variablevalue** are\ntreated as equal."
								},
								{
									"key": "sortBy",
									"value": "definitionId",
									"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
								},
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return."
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
								}
							]
						},
						"description": "Queries for the executions that fulfill given parameters.\nParameters may be static as well as dynamic runtime properties of\nexecutions.\nThe size of the result set can be retrieved by using the [Get\nExecution Count](https://docs.camunda.org/manual/7.21/reference/rest/execution/get-query-count/)\nmethod."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/execution?businessKey=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processInstanceId=<string>&activityId=<string>&signalEventSubscriptionName=<string>&messageEventSubscriptionName=<string>&active=<boolean>&suspended=<boolean>&incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&tenantIdIn=<string>&variables=<string>&processVariables=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>&sortBy=definitionId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"execution"
									],
									"query": [
										{
											"key": "businessKey",
											"value": "<string>",
											"description": "Filter by the business key of the process instances the executions belong to."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Filter by the process definition the executions run on."
										},
										{
											"key": "processDefinitionKey",
											"value": "<string>",
											"description": "Filter by the key of the process definition the executions run on."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Filter by the id of the process instance the execution belongs to."
										},
										{
											"key": "activityId",
											"value": "<string>",
											"description": "Filter by the id of the activity the execution currently executes."
										},
										{
											"key": "signalEventSubscriptionName",
											"value": "<string>",
											"description": "Select only those executions that expect a signal of the given name."
										},
										{
											"key": "messageEventSubscriptionName",
											"value": "<string>",
											"description": "Select only those executions that expect a message of the given name."
										},
										{
											"key": "active",
											"value": "<boolean>",
											"description": "Only include active executions. Value may only be `true`, as `false` is the default\nbehavior."
										},
										{
											"key": "suspended",
											"value": "<boolean>",
											"description": "Only include suspended executions. Value may only be `true`, as `false` is the default\nbehavior."
										},
										{
											"key": "incidentId",
											"value": "<string>",
											"description": "Filter by the incident id."
										},
										{
											"key": "incidentType",
											"value": "<string>",
											"description": "Filter by the incident type. See the [User Guide](/manual/develop/user-guide/process-engine/incidents/#incident-types) for a list of incident types."
										},
										{
											"key": "incidentMessage",
											"value": "<string>",
											"description": "Filter by the incident message. Exact match."
										},
										{
											"key": "incidentMessageLike",
											"value": "<string>",
											"description": "Filter by the incident message that the parameter is a substring of."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids. An execution must have one of the given\ntenant ids."
										},
										{
											"key": "variables",
											"value": "<string>",
											"description": "Only include executions that have variables with certain values.\nVariable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n**Note:** Values are always treated as `String` objects on server side.\n\nValid operator values are: `eq` - equal to; `neq` - not equal to; `gt` -\ngreater than;\n`gteq` - greater than or equal to; `lt` - lower than; `lteq` - lower than or\nequal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
										},
										{
											"key": "processVariables",
											"value": "<string>",
											"description": "Only include executions that belong to a process instance with variables with certain\nvalues.\nVariable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n**Note:** Values are always treated as `String` objects on server side.\n\nValid operator values are: `eq` - equal to; `neq` - not equal to.\n`key` and `value` may not contain underscore or comma characters."
										},
										{
											"key": "variableNamesIgnoreCase",
											"value": "<boolean>",
											"description": "Match all variable names provided in `variables` and `processVariables` case-\ninsensitively. If set to `true` **variableName** and **variablename** are\ntreated as equal."
										},
										{
											"key": "variableValuesIgnoreCase",
											"value": "<boolean>",
											"description": "Match all variable values provided in `variables` and `processVariables` case-\ninsensitively. If set to `true` **variableValue** and **variablevalue** are\ntreated as equal."
										},
										{
											"key": "sortBy",
											"value": "definitionId",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"ended\": \"<boolean>\",\n    \"tenantId\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"ended\": \"<boolean>\",\n    \"tenantId\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`, or if an invalid operator\nfor variable comparison is used. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/res",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/execution?businessKey=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processInstanceId=<string>&activityId=<string>&signalEventSubscriptionName=<string>&messageEventSubscriptionName=<string>&active=<boolean>&suspended=<boolean>&incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&tenantIdIn=<string>&variables=<string>&processVariables=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>&sortBy=definitionId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"execution"
									],
									"query": [
										{
											"key": "businessKey",
											"value": "<string>",
											"description": "Filter by the business key of the process instances the executions belong to."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Filter by the process definition the executions run on."
										},
										{
											"key": "processDefinitionKey",
											"value": "<string>",
											"description": "Filter by the key of the process definition the executions run on."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Filter by the id of the process instance the execution belongs to."
										},
										{
											"key": "activityId",
											"value": "<string>",
											"description": "Filter by the id of the activity the execution currently executes."
										},
										{
											"key": "signalEventSubscriptionName",
											"value": "<string>",
											"description": "Select only those executions that expect a signal of the given name."
										},
										{
											"key": "messageEventSubscriptionName",
											"value": "<string>",
											"description": "Select only those executions that expect a message of the given name."
										},
										{
											"key": "active",
											"value": "<boolean>",
											"description": "Only include active executions. Value may only be `true`, as `false` is the default\nbehavior."
										},
										{
											"key": "suspended",
											"value": "<boolean>",
											"description": "Only include suspended executions. Value may only be `true`, as `false` is the default\nbehavior."
										},
										{
											"key": "incidentId",
											"value": "<string>",
											"description": "Filter by the incident id."
										},
										{
											"key": "incidentType",
											"value": "<string>",
											"description": "Filter by the incident type. See the [User Guide](/manual/develop/user-guide/process-engine/incidents/#incident-types) for a list of incident types."
										},
										{
											"key": "incidentMessage",
											"value": "<string>",
											"description": "Filter by the incident message. Exact match."
										},
										{
											"key": "incidentMessageLike",
											"value": "<string>",
											"description": "Filter by the incident message that the parameter is a substring of."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids. An execution must have one of the given\ntenant ids."
										},
										{
											"key": "variables",
											"value": "<string>",
											"description": "Only include executions that have variables with certain values.\nVariable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n**Note:** Values are always treated as `String` objects on server side.\n\nValid operator values are: `eq` - equal to; `neq` - not equal to; `gt` -\ngreater than;\n`gteq` - greater than or equal to; `lt` - lower than; `lteq` - lower than or\nequal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
										},
										{
											"key": "processVariables",
											"value": "<string>",
											"description": "Only include executions that belong to a process instance with variables with certain\nvalues.\nVariable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n**Note:** Values are always treated as `String` objects on server side.\n\nValid operator values are: `eq` - equal to; `neq` - not equal to.\n`key` and `value` may not contain underscore or comma characters."
										},
										{
											"key": "variableNamesIgnoreCase",
											"value": "<boolean>",
											"description": "Match all variable names provided in `variables` and `processVariables` case-\ninsensitively. If set to `true` **variableName** and **variablename** are\ntreated as equal."
										},
										{
											"key": "variableValuesIgnoreCase",
											"value": "<boolean>",
											"description": "Match all variable values provided in `variables` and `processVariables` case-\ninsensitively. If set to `true` **variableValue** and **variablevalue** are\ntreated as equal."
										},
										{
											"key": "sortBy",
											"value": "definitionId",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "Get Executions (POST)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"businessKey\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"signalEventSubscriptionName\": \"<string>\",\n  \"messageEventSubscriptionName\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"incidentId\": \"<string>\",\n  \"incidentType\": \"<string>\",\n  \"incidentMessage\": \"<string>\",\n  \"incidentMessageLike\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"variables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"lteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gt\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"processVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gt\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"definitionId\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"tenantId\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/execution?firstResult=<integer>&maxResults=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"execution"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return."
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
								}
							]
						},
						"description": "Queries for executions that fulfill given parameters through a JSON object.\nThis method is slightly more powerful than the [Get\nExecutions](https://docs.camunda.org/manual/7.21/reference/rest/execution/get-query/) method\nbecause it allows\nto filter by multiple instance and execution variables of types\n`String`, `Number` or `Boolean`."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"businessKey\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"signalEventSubscriptionName\": \"<string>\",\n  \"messageEventSubscriptionName\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"incidentId\": \"<string>\",\n  \"incidentType\": \"<string>\",\n  \"incidentMessage\": \"<string>\",\n  \"incidentMessageLike\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"variables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"lteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gt\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"processVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gt\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"definitionId\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"tenantId\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/execution?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"execution"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"ended\": \"<boolean>\",\n    \"tenantId\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"ended\": \"<boolean>\",\n    \"tenantId\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`, or if an invalid operator\nfor variable comparison is used. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/res",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"businessKey\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"signalEventSubscriptionName\": \"<string>\",\n  \"messageEventSubscriptionName\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"incidentId\": \"<string>\",\n  \"incidentType\": \"<string>\",\n  \"incidentMessage\": \"<string>\",\n  \"incidentMessageLike\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"variables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"lteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gt\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"processVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gt\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"definitionId\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"tenantId\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/execution?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"execution"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "external-task",
			"item": [
				{
					"name": "count",
					"item": [
						{
							"name": "Get List Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/external-task/count?externalTaskId=<string>&externalTaskIdIn=<string>&topicName=<string>&workerId=<string>&locked=<boolean>&notLocked=<boolean>&withRetriesLeft=<boolean>&noRetriesLeft=<boolean>&lockExpirationAfter=<dateTime>&lockExpirationBefore=<dateTime>&activityId=<string>&activityIdIn=<string>&executionId=<string>&processInstanceId=<string>&processInstanceIdIn=<string>&processDefinitionId=<string>&tenantIdIn=<string>&active=<boolean>&suspended=<boolean>&priorityHigherThanOrEquals=<long>&priorityLowerThanOrEquals=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external-task",
										"count"
									],
									"query": [
										{
											"key": "externalTaskId",
											"value": "<string>",
											"description": "Filter by an external task's id."
										},
										{
											"key": "externalTaskIdIn",
											"value": "<string>",
											"description": "Filter by the comma-separated list of external task ids."
										},
										{
											"key": "topicName",
											"value": "<string>",
											"description": "Filter by an external task topic."
										},
										{
											"key": "workerId",
											"value": "<string>",
											"description": "Filter by the id of the worker that the task was most recently locked by."
										},
										{
											"key": "locked",
											"value": "<boolean>",
											"description": "Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired).\nValue may only be `true`, as `false` matches any external task."
										},
										{
											"key": "notLocked",
											"value": "<boolean>",
											"description": "Only include external tasks that are currently not locked (i.e., they have no lock or it has expired).\nValue may only be `true`, as `false` matches any external task."
										},
										{
											"key": "withRetriesLeft",
											"value": "<boolean>",
											"description": "Only include external tasks that have a positive (&gt; 0) number of retries (or `null`). Value may only be\n`true`, as `false` matches any external task."
										},
										{
											"key": "noRetriesLeft",
											"value": "<boolean>",
											"description": "Only include external tasks that have 0 retries. Value may only be `true`, as `false` matches any\nexternal task."
										},
										{
											"key": "lockExpirationAfter",
											"value": "<dateTime>",
											"description": "Restrict to external tasks that have a lock that expires after a given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "lockExpirationBefore",
											"value": "<dateTime>",
											"description": "Restrict to external tasks that have a lock that expires before a given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "activityId",
											"value": "<string>",
											"description": "Filter by the id of the activity that an external task is created for."
										},
										{
											"key": "activityIdIn",
											"value": "<string>",
											"description": "Filter by the comma-separated list of ids of the activities that an external task is created for."
										},
										{
											"key": "executionId",
											"value": "<string>",
											"description": "Filter by the id of the execution that an external task belongs to."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Filter by the id of the process instance that an external task belongs to."
										},
										{
											"key": "processInstanceIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of process instance ids that an external task may belong to."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Filter by the id of the process definition that an external task belongs to."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids.\nAn external task must have one of the given tenant ids."
										},
										{
											"key": "active",
											"value": "<boolean>",
											"description": "Only include active tasks. Value may only be `true`, as `false` matches any external task."
										},
										{
											"key": "suspended",
											"value": "<boolean>",
											"description": "Only include suspended tasks. Value may only be `true`, as `false` matches any external task."
										},
										{
											"key": "priorityHigherThanOrEquals",
											"value": "<long>",
											"description": "Only include jobs with a priority higher than or equal to the given value.\nValue must be a valid `long` value."
										},
										{
											"key": "priorityLowerThanOrEquals",
											"value": "<long>",
											"description": "Only include jobs with a priority lower than or equal to the given value.\nValue must be a valid `long` value."
										}
									]
								},
								"description": "Queries for the number of external tasks that fulfill given parameters. Takes the same parameters as the\n[Get External Tasks](https://docs.camunda.org/manual/7.21/reference/rest/external-task/get-query/) method."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external-task/count?externalTaskId=<string>&externalTaskIdIn=<string>&topicName=<string>&workerId=<string>&locked=<boolean>&notLocked=<boolean>&withRetriesLeft=<boolean>&noRetriesLeft=<boolean>&lockExpirationAfter=<dateTime>&lockExpirationBefore=<dateTime>&activityId=<string>&activityIdIn=<string>&executionId=<string>&processInstanceId=<string>&processInstanceIdIn=<string>&processDefinitionId=<string>&tenantIdIn=<string>&active=<boolean>&suspended=<boolean>&priorityHigherThanOrEquals=<long>&priorityLowerThanOrEquals=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												"count"
											],
											"query": [
												{
													"key": "externalTaskId",
													"value": "<string>",
													"description": "Filter by an external task's id."
												},
												{
													"key": "externalTaskIdIn",
													"value": "<string>",
													"description": "Filter by the comma-separated list of external task ids."
												},
												{
													"key": "topicName",
													"value": "<string>",
													"description": "Filter by an external task topic."
												},
												{
													"key": "workerId",
													"value": "<string>",
													"description": "Filter by the id of the worker that the task was most recently locked by."
												},
												{
													"key": "locked",
													"value": "<boolean>",
													"description": "Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired).\nValue may only be `true`, as `false` matches any external task."
												},
												{
													"key": "notLocked",
													"value": "<boolean>",
													"description": "Only include external tasks that are currently not locked (i.e., they have no lock or it has expired).\nValue may only be `true`, as `false` matches any external task."
												},
												{
													"key": "withRetriesLeft",
													"value": "<boolean>",
													"description": "Only include external tasks that have a positive (&gt; 0) number of retries (or `null`). Value may only be\n`true`, as `false` matches any external task."
												},
												{
													"key": "noRetriesLeft",
													"value": "<boolean>",
													"description": "Only include external tasks that have 0 retries. Value may only be `true`, as `false` matches any\nexternal task."
												},
												{
													"key": "lockExpirationAfter",
													"value": "<dateTime>",
													"description": "Restrict to external tasks that have a lock that expires after a given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "lockExpirationBefore",
													"value": "<dateTime>",
													"description": "Restrict to external tasks that have a lock that expires before a given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "activityId",
													"value": "<string>",
													"description": "Filter by the id of the activity that an external task is created for."
												},
												{
													"key": "activityIdIn",
													"value": "<string>",
													"description": "Filter by the comma-separated list of ids of the activities that an external task is created for."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Filter by the id of the execution that an external task belongs to."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by the id of the process instance that an external task belongs to."
												},
												{
													"key": "processInstanceIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of process instance ids that an external task may belong to."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by the id of the process definition that an external task belongs to."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids.\nAn external task must have one of the given tenant ids."
												},
												{
													"key": "active",
													"value": "<boolean>",
													"description": "Only include active tasks. Value may only be `true`, as `false` matches any external task."
												},
												{
													"key": "suspended",
													"value": "<boolean>",
													"description": "Only include suspended tasks. Value may only be `true`, as `false` matches any external task."
												},
												{
													"key": "priorityHigherThanOrEquals",
													"value": "<long>",
													"description": "Only include jobs with a priority higher than or equal to the given value.\nValue must be a valid `long` value."
												},
												{
													"key": "priorityLowerThanOrEquals",
													"value": "<long>",
													"description": "Only include jobs with a priority lower than or equal to the given value.\nValue must be a valid `long` value."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external-task/count?externalTaskId=<string>&externalTaskIdIn=<string>&topicName=<string>&workerId=<string>&locked=<boolean>&notLocked=<boolean>&withRetriesLeft=<boolean>&noRetriesLeft=<boolean>&lockExpirationAfter=<dateTime>&lockExpirationBefore=<dateTime>&activityId=<string>&activityIdIn=<string>&executionId=<string>&processInstanceId=<string>&processInstanceIdIn=<string>&processDefinitionId=<string>&tenantIdIn=<string>&active=<boolean>&suspended=<boolean>&priorityHigherThanOrEquals=<long>&priorityLowerThanOrEquals=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												"count"
											],
											"query": [
												{
													"key": "externalTaskId",
													"value": "<string>",
													"description": "Filter by an external task's id."
												},
												{
													"key": "externalTaskIdIn",
													"value": "<string>",
													"description": "Filter by the comma-separated list of external task ids."
												},
												{
													"key": "topicName",
													"value": "<string>",
													"description": "Filter by an external task topic."
												},
												{
													"key": "workerId",
													"value": "<string>",
													"description": "Filter by the id of the worker that the task was most recently locked by."
												},
												{
													"key": "locked",
													"value": "<boolean>",
													"description": "Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired).\nValue may only be `true`, as `false` matches any external task."
												},
												{
													"key": "notLocked",
													"value": "<boolean>",
													"description": "Only include external tasks that are currently not locked (i.e., they have no lock or it has expired).\nValue may only be `true`, as `false` matches any external task."
												},
												{
													"key": "withRetriesLeft",
													"value": "<boolean>",
													"description": "Only include external tasks that have a positive (&gt; 0) number of retries (or `null`). Value may only be\n`true`, as `false` matches any external task."
												},
												{
													"key": "noRetriesLeft",
													"value": "<boolean>",
													"description": "Only include external tasks that have 0 retries. Value may only be `true`, as `false` matches any\nexternal task."
												},
												{
													"key": "lockExpirationAfter",
													"value": "<dateTime>",
													"description": "Restrict to external tasks that have a lock that expires after a given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "lockExpirationBefore",
													"value": "<dateTime>",
													"description": "Restrict to external tasks that have a lock that expires before a given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "activityId",
													"value": "<string>",
													"description": "Filter by the id of the activity that an external task is created for."
												},
												{
													"key": "activityIdIn",
													"value": "<string>",
													"description": "Filter by the comma-separated list of ids of the activities that an external task is created for."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Filter by the id of the execution that an external task belongs to."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by the id of the process instance that an external task belongs to."
												},
												{
													"key": "processInstanceIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of process instance ids that an external task may belong to."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by the id of the process definition that an external task belongs to."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids.\nAn external task must have one of the given tenant ids."
												},
												{
													"key": "active",
													"value": "<boolean>",
													"description": "Only include active tasks. Value may only be `true`, as `false` matches any external task."
												},
												{
													"key": "suspended",
													"value": "<boolean>",
													"description": "Only include suspended tasks. Value may only be `true`, as `false` matches any external task."
												},
												{
													"key": "priorityHigherThanOrEquals",
													"value": "<long>",
													"description": "Only include jobs with a priority higher than or equal to the given value.\nValue must be a valid `long` value."
												},
												{
													"key": "priorityLowerThanOrEquals",
													"value": "<long>",
													"description": "Only include jobs with a priority lower than or equal to the given value.\nValue must be a valid `long` value."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get List Count (POST)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"externalTaskId\": \"<string>\",\n  \"externalTaskIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"topicName\": \"<string>\",\n  \"workerId\": \"<string>\",\n  \"locked\": \"<boolean>\",\n  \"notLocked\": \"<boolean>\",\n  \"withRetriesLeft\": \"<boolean>\",\n  \"noRetriesLeft\": \"<boolean>\",\n  \"lockExpirationAfter\": \"<dateTime>\",\n  \"lockExpirationBefore\": \"<dateTime>\",\n  \"activityId\": \"<string>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionId\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"priorityHigherThanOrEquals\": \"<long>\",\n  \"priorityLowerThanOrEquals\": \"<long>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"processDefinitionKey\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"id\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/external-task/count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external-task",
										"count"
									]
								},
								"description": "Queries for the number of external tasks that fulfill given parameters. This method takes the same message\nbody as the [Get External Tasks (POST)](https://docs.camunda.org/manual/7.21/reference/rest/external-task/post-query/) method."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalTaskId\": \"<string>\",\n  \"externalTaskIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"topicName\": \"<string>\",\n  \"workerId\": \"<string>\",\n  \"locked\": \"<boolean>\",\n  \"notLocked\": \"<boolean>\",\n  \"withRetriesLeft\": \"<boolean>\",\n  \"noRetriesLeft\": \"<boolean>\",\n  \"lockExpirationAfter\": \"<dateTime>\",\n  \"lockExpirationBefore\": \"<dateTime>\",\n  \"activityId\": \"<string>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionId\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"priorityHigherThanOrEquals\": \"<long>\",\n  \"priorityLowerThanOrEquals\": \"<long>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"processDefinitionKey\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"id\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/external-task/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												"count"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"externalTaskId\": \"<string>\",\n  \"externalTaskIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"topicName\": \"<string>\",\n  \"workerId\": \"<string>\",\n  \"locked\": \"<boolean>\",\n  \"notLocked\": \"<boolean>\",\n  \"withRetriesLeft\": \"<boolean>\",\n  \"noRetriesLeft\": \"<boolean>\",\n  \"lockExpirationAfter\": \"<dateTime>\",\n  \"lockExpirationBefore\": \"<dateTime>\",\n  \"activityId\": \"<string>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionId\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"priorityHigherThanOrEquals\": \"<long>\",\n  \"priorityLowerThanOrEquals\": \"<long>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"processDefinitionKey\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"id\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/external-task/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												"count"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "fetchAndLock",
					"item": [
						{
							"name": "Fetch and Lock",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"workerId\": \"<string>\",\n  \"maxTasks\": \"<integer>\",\n  \"usePriority\": \"<boolean>\",\n  \"asyncResponseTimeout\": \"<long>\",\n  \"topics\": [\n    {\n      \"topicName\": \"<string>\",\n      \"lockDuration\": \"<long>\",\n      \"variables\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"localVariables\": false,\n      \"businessKey\": \"<string>\",\n      \"processDefinitionId\": \"<string>\",\n      \"processDefinitionIdIn\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"processDefinitionKey\": \"<string>\",\n      \"processDefinitionKeyIn\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"processDefinitionVersionTag\": \"<string>\",\n      \"withoutTenantId\": false,\n      \"tenantIdIn\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"processVariables\": {\n        \"quisfc\": true,\n        \"ut943\": \"reprehenderit id laboris dolor non\",\n        \"voluptate75\": -37190795.34036527\n      },\n      \"deserializeValues\": false,\n      \"includeExtensionProperties\": false\n    },\n    {\n      \"topicName\": \"<string>\",\n      \"lockDuration\": \"<long>\",\n      \"variables\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"localVariables\": false,\n      \"businessKey\": \"<string>\",\n      \"processDefinitionId\": \"<string>\",\n      \"processDefinitionIdIn\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"processDefinitionKey\": \"<string>\",\n      \"processDefinitionKeyIn\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"processDefinitionVersionTag\": \"<string>\",\n      \"withoutTenantId\": false,\n      \"tenantIdIn\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"processVariables\": {\n        \"in__6\": 97499079.0873377,\n        \"fugiat_ae\": false,\n        \"eu_e\": -40664303,\n        \"in0\": \"aliqua \"\n      },\n      \"deserializeValues\": false,\n      \"includeExtensionProperties\": false\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"createTime\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"createTime\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/external-task/fetchAndLock",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external-task",
										"fetchAndLock"
									]
								},
								"description": "Fetches and locks a specific number of external tasks for execution by a worker. Query can be restricted\nto specific task topics and for each task topic an individual lock time can be provided."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"workerId\": \"<string>\",\n  \"maxTasks\": \"<integer>\",\n  \"usePriority\": \"<boolean>\",\n  \"asyncResponseTimeout\": \"<long>\",\n  \"topics\": [\n    {\n      \"topicName\": \"<string>\",\n      \"lockDuration\": \"<long>\",\n      \"variables\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"localVariables\": false,\n      \"businessKey\": \"<string>\",\n      \"processDefinitionId\": \"<string>\",\n      \"processDefinitionIdIn\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"processDefinitionKey\": \"<string>\",\n      \"processDefinitionKeyIn\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"processDefinitionVersionTag\": \"<string>\",\n      \"withoutTenantId\": false,\n      \"tenantIdIn\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"processVariables\": {\n        \"quisfc\": true,\n        \"ut943\": \"reprehenderit id laboris dolor non\",\n        \"voluptate75\": -37190795.34036527\n      },\n      \"deserializeValues\": false,\n      \"includeExtensionProperties\": false\n    },\n    {\n      \"topicName\": \"<string>\",\n      \"lockDuration\": \"<long>\",\n      \"variables\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"localVariables\": false,\n      \"businessKey\": \"<string>\",\n      \"processDefinitionId\": \"<string>\",\n      \"processDefinitionIdIn\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"processDefinitionKey\": \"<string>\",\n      \"processDefinitionKeyIn\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"processDefinitionVersionTag\": \"<string>\",\n      \"withoutTenantId\": false,\n      \"tenantIdIn\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"processVariables\": {\n        \"in__6\": 97499079.0873377,\n        \"fugiat_ae\": false,\n        \"eu_e\": -40664303,\n        \"in0\": \"aliqua \"\n      },\n      \"deserializeValues\": false,\n      \"includeExtensionProperties\": false\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"createTime\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"createTime\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/external-task/fetchAndLock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												"fetchAndLock"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"activityId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"errorMessage\": \"<string>\",\n    \"errorDetails\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lockExpirationTime\": \"<dateTime>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionVersionTag\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"retries\": \"<integer>\",\n    \"suspended\": \"<boolean>\",\n    \"workerId\": \"<string>\",\n    \"priority\": \"<long>\",\n    \"topicName\": \"<string>\",\n    \"businessKey\": \"<string>\",\n    \"variables\": {\n      \"voluptate_6f\": {\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"laborum0_\": -19955993\n        }\n      },\n      \"irure8\": {\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"quis353\": 72890637.53509161\n        }\n      },\n      \"esse0\": {\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"eiusmod_36\": 57051850.74646413,\n          \"enim8_2\": true\n        }\n      }\n    }\n  },\n  {\n    \"activityId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"errorMessage\": \"<string>\",\n    \"errorDetails\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lockExpirationTime\": \"<dateTime>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionVersionTag\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"retries\": \"<integer>\",\n    \"suspended\": \"<boolean>\",\n    \"workerId\": \"<string>\",\n    \"priority\": \"<long>\",\n    \"topicName\": \"<string>\",\n    \"businessKey\": \"<string>\",\n    \"variables\": {\n      \"ad5\": {\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"culpa_ee\": false\n        }\n      },\n      \"ex_e40\": {\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"proident_959\": \"in velit amet sunt deserunt\"\n        }\n      }\n    }\n  }\n]"
								},
								{
									"name": "Bad Request. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"workerId\": \"<string>\",\n  \"maxTasks\": \"<integer>\",\n  \"usePriority\": \"<boolean>\",\n  \"asyncResponseTimeout\": \"<long>\",\n  \"topics\": [\n    {\n      \"topicName\": \"<string>\",\n      \"lockDuration\": \"<long>\",\n      \"variables\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"localVariables\": false,\n      \"businessKey\": \"<string>\",\n      \"processDefinitionId\": \"<string>\",\n      \"processDefinitionIdIn\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"processDefinitionKey\": \"<string>\",\n      \"processDefinitionKeyIn\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"processDefinitionVersionTag\": \"<string>\",\n      \"withoutTenantId\": false,\n      \"tenantIdIn\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"processVariables\": {\n        \"quisfc\": true,\n        \"ut943\": \"reprehenderit id laboris dolor non\",\n        \"voluptate75\": -37190795.34036527\n      },\n      \"deserializeValues\": false,\n      \"includeExtensionProperties\": false\n    },\n    {\n      \"topicName\": \"<string>\",\n      \"lockDuration\": \"<long>\",\n      \"variables\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"localVariables\": false,\n      \"businessKey\": \"<string>\",\n      \"processDefinitionId\": \"<string>\",\n      \"processDefinitionIdIn\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"processDefinitionKey\": \"<string>\",\n      \"processDefinitionKeyIn\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"processDefinitionVersionTag\": \"<string>\",\n      \"withoutTenantId\": false,\n      \"tenantIdIn\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"processVariables\": {\n        \"in__6\": 97499079.0873377,\n        \"fugiat_ae\": false,\n        \"eu_e\": -40664303,\n        \"in0\": \"aliqua \"\n      },\n      \"deserializeValues\": false,\n      \"includeExtensionProperties\": false\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"createTime\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"createTime\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/external-task/fetchAndLock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												"fetchAndLock"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "retries",
					"item": [
						{
							"name": "Set Retries Sync",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"retries\": \"<integer>\",\n  \"externalTaskIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"externalTaskQuery\": {\n    \"externalTaskId\": \"<string>\",\n    \"externalTaskIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"topicName\": \"<string>\",\n    \"workerId\": \"<string>\",\n    \"locked\": \"<boolean>\",\n    \"notLocked\": \"<boolean>\",\n    \"withRetriesLeft\": \"<boolean>\",\n    \"noRetriesLeft\": \"<boolean>\",\n    \"lockExpirationAfter\": \"<dateTime>\",\n    \"lockExpirationBefore\": \"<dateTime>\",\n    \"activityId\": \"<string>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"executionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"priorityHigherThanOrEquals\": \"<long>\",\n    \"priorityLowerThanOrEquals\": \"<long>\",\n    \"sorting\": [\n      {\n        \"sortBy\": \"createTime\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"taskPriority\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionId\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"open\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"like\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionName\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"endTime\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/external-task/retries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external-task",
										"retries"
									]
								},
								"description": "Sets the number of retries left to execute external tasks by id synchronously. If retries are set to 0, \nan incident is created."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"retries\": \"<integer>\",\n  \"externalTaskIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"externalTaskQuery\": {\n    \"externalTaskId\": \"<string>\",\n    \"externalTaskIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"topicName\": \"<string>\",\n    \"workerId\": \"<string>\",\n    \"locked\": \"<boolean>\",\n    \"notLocked\": \"<boolean>\",\n    \"withRetriesLeft\": \"<boolean>\",\n    \"noRetriesLeft\": \"<boolean>\",\n    \"lockExpirationAfter\": \"<dateTime>\",\n    \"lockExpirationBefore\": \"<dateTime>\",\n    \"activityId\": \"<string>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"executionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"priorityHigherThanOrEquals\": \"<long>\",\n    \"priorityLowerThanOrEquals\": \"<long>\",\n    \"sorting\": [\n      {\n        \"sortBy\": \"createTime\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"taskPriority\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionId\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"open\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"like\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionName\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"endTime\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/external-task/retries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												"retries"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "In case the number of retries is negative or null, an exception of type `InvalidRequestException` is\nreturned. See the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"retries\": \"<integer>\",\n  \"externalTaskIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"externalTaskQuery\": {\n    \"externalTaskId\": \"<string>\",\n    \"externalTaskIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"topicName\": \"<string>\",\n    \"workerId\": \"<string>\",\n    \"locked\": \"<boolean>\",\n    \"notLocked\": \"<boolean>\",\n    \"withRetriesLeft\": \"<boolean>\",\n    \"noRetriesLeft\": \"<boolean>\",\n    \"lockExpirationAfter\": \"<dateTime>\",\n    \"lockExpirationBefore\": \"<dateTime>\",\n    \"activityId\": \"<string>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"executionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"priorityHigherThanOrEquals\": \"<long>\",\n    \"priorityLowerThanOrEquals\": \"<long>\",\n    \"sorting\": [\n      {\n        \"sortBy\": \"createTime\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"taskPriority\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionId\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"open\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"like\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionName\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"endTime\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/external-task/retries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												"retries"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "Returned if the task does not exist. This could indicate a wrong task id as well as a cancelled task, \ne.g., due to a caught BPMN boundary event. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the ",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"retries\": \"<integer>\",\n  \"externalTaskIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"externalTaskQuery\": {\n    \"externalTaskId\": \"<string>\",\n    \"externalTaskIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"topicName\": \"<string>\",\n    \"workerId\": \"<string>\",\n    \"locked\": \"<boolean>\",\n    \"notLocked\": \"<boolean>\",\n    \"withRetriesLeft\": \"<boolean>\",\n    \"noRetriesLeft\": \"<boolean>\",\n    \"lockExpirationAfter\": \"<dateTime>\",\n    \"lockExpirationBefore\": \"<dateTime>\",\n    \"activityId\": \"<string>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"executionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"priorityHigherThanOrEquals\": \"<long>\",\n    \"priorityLowerThanOrEquals\": \"<long>\",\n    \"sorting\": [\n      {\n        \"sortBy\": \"createTime\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"taskPriority\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionId\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"open\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"like\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionName\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"endTime\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/external-task/retries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												"retries"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "retries-async",
					"item": [
						{
							"name": "Set Retries Async",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"retries\": \"<integer>\",\n  \"externalTaskIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"externalTaskQuery\": {\n    \"externalTaskId\": \"<string>\",\n    \"externalTaskIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"topicName\": \"<string>\",\n    \"workerId\": \"<string>\",\n    \"locked\": \"<boolean>\",\n    \"notLocked\": \"<boolean>\",\n    \"withRetriesLeft\": \"<boolean>\",\n    \"noRetriesLeft\": \"<boolean>\",\n    \"lockExpirationAfter\": \"<dateTime>\",\n    \"lockExpirationBefore\": \"<dateTime>\",\n    \"activityId\": \"<string>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"executionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"priorityHigherThanOrEquals\": \"<long>\",\n    \"priorityLowerThanOrEquals\": \"<long>\",\n    \"sorting\": [\n      {\n        \"sortBy\": \"createTime\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"taskPriority\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionId\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"open\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"like\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionName\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"endTime\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/external-task/retries-async",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external-task",
										"retries-async"
									]
								},
								"description": "Sets the number of retries left to execute external tasks by id asynchronously. If retries are set to 0,\nan incident is created."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"retries\": \"<integer>\",\n  \"externalTaskIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"externalTaskQuery\": {\n    \"externalTaskId\": \"<string>\",\n    \"externalTaskIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"topicName\": \"<string>\",\n    \"workerId\": \"<string>\",\n    \"locked\": \"<boolean>\",\n    \"notLocked\": \"<boolean>\",\n    \"withRetriesLeft\": \"<boolean>\",\n    \"noRetriesLeft\": \"<boolean>\",\n    \"lockExpirationAfter\": \"<dateTime>\",\n    \"lockExpirationBefore\": \"<dateTime>\",\n    \"activityId\": \"<string>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"executionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"priorityHigherThanOrEquals\": \"<long>\",\n    \"priorityLowerThanOrEquals\": \"<long>\",\n    \"sorting\": [\n      {\n        \"sortBy\": \"createTime\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"taskPriority\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionId\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"open\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"like\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionName\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"endTime\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/external-task/retries-async",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												"retries-async"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"totalJobs\": \"<integer>\",\n  \"jobsCreated\": \"<integer>\",\n  \"batchJobsPerSeed\": \"<integer>\",\n  \"invocationsPerBatchJob\": \"<integer>\",\n  \"seedJobDefinitionId\": \"<string>\",\n  \"monitorJobDefinitionId\": \"<string>\",\n  \"batchJobDefinitionId\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"createUserId\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"executionStartTime\": \"<dateTime>\"\n}"
								},
								{
									"name": "If neither externalTaskIds nor externalTaskQuery are present or externalTaskIds contains null value or \nthe number of retries is negative or null, an exception of type `InvalidRequestException` is returned.\nSee the [Introduction](https://docs.camunda.org/",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"retries\": \"<integer>\",\n  \"externalTaskIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"externalTaskQuery\": {\n    \"externalTaskId\": \"<string>\",\n    \"externalTaskIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"topicName\": \"<string>\",\n    \"workerId\": \"<string>\",\n    \"locked\": \"<boolean>\",\n    \"notLocked\": \"<boolean>\",\n    \"withRetriesLeft\": \"<boolean>\",\n    \"noRetriesLeft\": \"<boolean>\",\n    \"lockExpirationAfter\": \"<dateTime>\",\n    \"lockExpirationBefore\": \"<dateTime>\",\n    \"activityId\": \"<string>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"executionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"priorityHigherThanOrEquals\": \"<long>\",\n    \"priorityLowerThanOrEquals\": \"<long>\",\n    \"sorting\": [\n      {\n        \"sortBy\": \"createTime\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"taskPriority\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionId\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"open\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"like\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionName\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"endTime\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/external-task/retries-async",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												"retries-async"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "Returned if the task does not exist. This could indicate a wrong task id as well as a cancelled task, \ne.g., due to a caught BPMN boundary event. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the ",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"retries\": \"<integer>\",\n  \"externalTaskIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"externalTaskQuery\": {\n    \"externalTaskId\": \"<string>\",\n    \"externalTaskIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"topicName\": \"<string>\",\n    \"workerId\": \"<string>\",\n    \"locked\": \"<boolean>\",\n    \"notLocked\": \"<boolean>\",\n    \"withRetriesLeft\": \"<boolean>\",\n    \"noRetriesLeft\": \"<boolean>\",\n    \"lockExpirationAfter\": \"<dateTime>\",\n    \"lockExpirationBefore\": \"<dateTime>\",\n    \"activityId\": \"<string>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"executionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"priorityHigherThanOrEquals\": \"<long>\",\n    \"priorityLowerThanOrEquals\": \"<long>\",\n    \"sorting\": [\n      {\n        \"sortBy\": \"createTime\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"taskPriority\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionId\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"open\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"like\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionName\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"endTime\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/external-task/retries-async",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												"retries-async"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "topic-names",
					"item": [
						{
							"name": "Get External Task Topic Names",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/external-task/topic-names?withLockedTasks=<boolean>&withUnlockedTasks=<boolean>&withRetriesLeft=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external-task",
										"topic-names"
									],
									"query": [
										{
											"key": "withLockedTasks",
											"value": "<boolean>",
											"description": "Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired).\nValue may only be `true`, as `false` matches any external task."
										},
										{
											"key": "withUnlockedTasks",
											"value": "<boolean>",
											"description": "Only include external tasks that are currently not locked (i.e., they have no lock or it has expired).\nValue may only be `true`, as `false` matches any external task."
										},
										{
											"key": "withRetriesLeft",
											"value": "<boolean>",
											"description": "Only include external tasks that have a positive (&gt; 0) number of retries (or `null`). Value may only be\n`true`, as `false` matches any external task."
										}
									]
								},
								"description": "Queries for distinct topic names of external tasks that fulfill given parameters.\nQuery can be restricted to only tasks with retries left, tasks that are locked, or tasks\nthat are unlocked. The parameters withLockedTasks and withUnlockedTasks are\nexclusive. Setting them both to true will return an empty list.\nProviding no parameters will return a list of all distinct topic names with external tasks."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external-task/topic-names?withLockedTasks=<boolean>&withUnlockedTasks=<boolean>&withRetriesLeft=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												"topic-names"
											],
											"query": [
												{
													"key": "withLockedTasks",
													"value": "<boolean>",
													"description": "Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired).\nValue may only be `true`, as `false` matches any external task."
												},
												{
													"key": "withUnlockedTasks",
													"value": "<boolean>",
													"description": "Only include external tasks that are currently not locked (i.e., they have no lock or it has expired).\nValue may only be `true`, as `false` matches any external task."
												},
												{
													"key": "withRetriesLeft",
													"value": "<boolean>",
													"description": "Only include external tasks that have a positive (&gt; 0) number of retries (or `null`). Value may only be\n`true`, as `false` matches any external task."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
								},
								{
									"name": "Returned if some of the query parameters are invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external-task/topic-names?withLockedTasks=<boolean>&withUnlockedTasks=<boolean>&withRetriesLeft=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												"topic-names"
											],
											"query": [
												{
													"key": "withLockedTasks",
													"value": "<boolean>",
													"description": "Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired).\nValue may only be `true`, as `false` matches any external task."
												},
												{
													"key": "withUnlockedTasks",
													"value": "<boolean>",
													"description": "Only include external tasks that are currently not locked (i.e., they have no lock or it has expired).\nValue may only be `true`, as `false` matches any external task."
												},
												{
													"key": "withRetriesLeft",
													"value": "<boolean>",
													"description": "Only include external tasks that have a positive (&gt; 0) number of retries (or `null`). Value may only be\n`true`, as `false` matches any external task."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "bpmnError",
							"item": [
								{
									"name": "Handle BPMN Error",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"workerId\": \"<string>\",\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"variables\": {\n    \"aute59c\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"in_3\": \"irure\",\n        \"eue8a\": \"sint eiusmod do voluptate\",\n        \"irure27\": -14215612.142224193\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/external-task/:id/bpmnError",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												":id",
												"bpmnError"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the external task in which context a BPMN error is reported."
												}
											]
										},
										"description": "Reports a business error in the context of a running external task by id. The error code must be specified\nto identify the BPMN error handler."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"workerId\": \"<string>\",\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"variables\": {\n    \"aute59c\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"in_3\": \"irure\",\n        \"eue8a\": \"sint eiusmod do voluptate\",\n        \"irure27\": -14215612.142224193\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/bpmnError",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"bpmnError"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the task's most recent lock was not acquired by the provided worker.\n\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"workerId\": \"<string>\",\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"variables\": {\n    \"aute59c\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"in_3\": \"irure\",\n        \"eue8a\": \"sint eiusmod do voluptate\",\n        \"irure27\": -14215612.142224193\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/bpmnError",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"bpmnError"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Returned if the task does not exist. This could indicate a wrong task id as well as a cancelled task,\ne.g., due to a caught BPMN boundary event.\n\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the ",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"workerId\": \"<string>\",\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"variables\": {\n    \"aute59c\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"in_3\": \"irure\",\n        \"eue8a\": \"sint eiusmod do voluptate\",\n        \"irure27\": -14215612.142224193\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/bpmnError",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"bpmnError"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Returned if the corresponding process instance could not be resumed successfully.\n\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"workerId\": \"<string>\",\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"variables\": {\n    \"aute59c\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"in_3\": \"irure\",\n        \"eue8a\": \"sint eiusmod do voluptate\",\n        \"irure27\": -14215612.142224193\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/bpmnError",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"bpmnError"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "complete",
							"item": [
								{
									"name": "Complete",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"variables\": {\n    \"non9\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sintb37\": 93496848.55249652,\n        \"eu00\": -61997034\n      }\n    }\n  },\n  \"localVariables\": {\n    \"deserunt_d58\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"nulla_c4\": 16567634,\n        \"sit_d\": -47911235,\n        \"deserunteba\": true,\n        \"quisb4\": true\n      }\n    },\n    \"dolor_3_6\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"doa_\": 33376709.764474332,\n        \"aliqua_4d\": -31945585\n      }\n    },\n    \"id_5\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"aute_7ef\": \"velit\",\n        \"non_5f\": false,\n        \"dolor2_\": 41145732\n      }\n    }\n  },\n  \"workerId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/external-task/:id/complete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												":id",
												"complete"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the task to complete."
												}
											]
										},
										"description": "Completes an external task by id and updates process variables."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"non9\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sintb37\": 93496848.55249652,\n        \"eu00\": -61997034\n      }\n    }\n  },\n  \"localVariables\": {\n    \"deserunt_d58\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"nulla_c4\": 16567634,\n        \"sit_d\": -47911235,\n        \"deserunteba\": true,\n        \"quisb4\": true\n      }\n    },\n    \"dolor_3_6\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"doa_\": 33376709.764474332,\n        \"aliqua_4d\": -31945585\n      }\n    },\n    \"id_5\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"aute_7ef\": \"velit\",\n        \"non_5f\": false,\n        \"dolor2_\": 41145732\n      }\n    }\n  },\n  \"workerId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/complete",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"complete"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the task's most recent lock was not acquired by the provided worker. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"non9\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sintb37\": 93496848.55249652,\n        \"eu00\": -61997034\n      }\n    }\n  },\n  \"localVariables\": {\n    \"deserunt_d58\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"nulla_c4\": 16567634,\n        \"sit_d\": -47911235,\n        \"deserunteba\": true,\n        \"quisb4\": true\n      }\n    },\n    \"dolor_3_6\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"doa_\": 33376709.764474332,\n        \"aliqua_4d\": -31945585\n      }\n    },\n    \"id_5\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"aute_7ef\": \"velit\",\n        \"non_5f\": false,\n        \"dolor2_\": 41145732\n      }\n    }\n  },\n  \"workerId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/complete",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"complete"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Returned if the task does not exist. This could indicate a wrong task id as well as a cancelled task,\ne.g., due to a caught BPMN boundary event. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the e",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"non9\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sintb37\": 93496848.55249652,\n        \"eu00\": -61997034\n      }\n    }\n  },\n  \"localVariables\": {\n    \"deserunt_d58\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"nulla_c4\": 16567634,\n        \"sit_d\": -47911235,\n        \"deserunteba\": true,\n        \"quisb4\": true\n      }\n    },\n    \"dolor_3_6\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"doa_\": 33376709.764474332,\n        \"aliqua_4d\": -31945585\n      }\n    },\n    \"id_5\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"aute_7ef\": \"velit\",\n        \"non_5f\": false,\n        \"dolor2_\": 41145732\n      }\n    }\n  },\n  \"workerId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/complete",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"complete"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Returned if the corresponding process instance could not be resumed successfully. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"non9\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sintb37\": 93496848.55249652,\n        \"eu00\": -61997034\n      }\n    }\n  },\n  \"localVariables\": {\n    \"deserunt_d58\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"nulla_c4\": 16567634,\n        \"sit_d\": -47911235,\n        \"deserunteba\": true,\n        \"quisb4\": true\n      }\n    },\n    \"dolor_3_6\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"doa_\": 33376709.764474332,\n        \"aliqua_4d\": -31945585\n      }\n    },\n    \"id_5\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"aute_7ef\": \"velit\",\n        \"non_5f\": false,\n        \"dolor2_\": 41145732\n      }\n    }\n  },\n  \"workerId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/complete",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"complete"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "errorDetails",
							"item": [
								{
									"name": "Get Error Details",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external-task/:id/errorDetails",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												":id",
												"errorDetails"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the external task for which the error details should be retrieved."
												}
											]
										},
										"description": "Retrieves the error details in the context of a running external task by id."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/errorDetails",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"errorDetails"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Request successful. In case the external task has no error details.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/errorDetails",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"errorDetails"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "An external task with the given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/errorDetails",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"errorDetails"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "extendLock",
							"item": [
								{
									"name": "Extend Lock",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"newDuration\": \"<long>\",\n  \"workerId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/external-task/:id/extendLock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												":id",
												"extendLock"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the external task."
												}
											]
										},
										"description": "Extends the timeout of the lock by a given amount of time."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"newDuration\": \"<long>\",\n  \"workerId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/extendLock",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"extendLock"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "In case the new lock duration is negative or the external task is not locked by the given worker or not \nlocked at all, an exception of type `InvalidRequestException` is returned. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"newDuration\": \"<long>\",\n  \"workerId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/extendLock",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"extendLock"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Returned if the task does not exist. This could indicate a wrong task id as well as a cancelled task,\ne.g., due to a caught BPMN boundary event. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the e",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"newDuration\": \"<long>\",\n  \"workerId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/extendLock",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"extendLock"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "failure",
							"item": [
								{
									"name": "Handle Failure",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": \"<string>\",\n  \"retries\": \"<integer>\",\n  \"retryTimeout\": \"<long>\",\n  \"variables\": {\n    \"cupidatat4ef\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"velit_1\": -12895414,\n        \"consequat_a\": -88480217,\n        \"ind\": -97903357\n      }\n    },\n    \"proident_79\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"cupidatat_c\": \"nulla cillum\",\n        \"eiusmod_4\": \"sunt consectetur deserunt anim veniam\"\n      }\n    }\n  },\n  \"localVariables\": {\n    \"eu_3_a\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"pariatur4\": -9571180.133794412\n      }\n    }\n  },\n  \"workerId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/external-task/:id/failure",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												":id",
												"failure"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the external task to report a failure for."
												}
											]
										},
										"description": "Reports a failure to execute an external task by id. A number of retries and a timeout until the task can\nbe retried can be specified. If retries are set to 0, an incident for this task is created."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": \"<string>\",\n  \"retries\": \"<integer>\",\n  \"retryTimeout\": \"<long>\",\n  \"variables\": {\n    \"cupidatat4ef\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"velit_1\": -12895414,\n        \"consequat_a\": -88480217,\n        \"ind\": -97903357\n      }\n    },\n    \"proident_79\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"cupidatat_c\": \"nulla cillum\",\n        \"eiusmod_4\": \"sunt consectetur deserunt anim veniam\"\n      }\n    }\n  },\n  \"localVariables\": {\n    \"eu_3_a\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"pariatur4\": -9571180.133794412\n      }\n    }\n  },\n  \"workerId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/failure",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"failure"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the task's most recent lock was not acquired by the provided worker. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": \"<string>\",\n  \"retries\": \"<integer>\",\n  \"retryTimeout\": \"<long>\",\n  \"variables\": {\n    \"cupidatat4ef\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"velit_1\": -12895414,\n        \"consequat_a\": -88480217,\n        \"ind\": -97903357\n      }\n    },\n    \"proident_79\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"cupidatat_c\": \"nulla cillum\",\n        \"eiusmod_4\": \"sunt consectetur deserunt anim veniam\"\n      }\n    }\n  },\n  \"localVariables\": {\n    \"eu_3_a\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"pariatur4\": -9571180.133794412\n      }\n    }\n  },\n  \"workerId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/failure",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"failure"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Returned if the task does not exist. This could indicate a wrong task id as well as a cancelled task,\ne.g., due to a caught BPMN boundary event. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the e",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": \"<string>\",\n  \"retries\": \"<integer>\",\n  \"retryTimeout\": \"<long>\",\n  \"variables\": {\n    \"cupidatat4ef\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"velit_1\": -12895414,\n        \"consequat_a\": -88480217,\n        \"ind\": -97903357\n      }\n    },\n    \"proident_79\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"cupidatat_c\": \"nulla cillum\",\n        \"eiusmod_4\": \"sunt consectetur deserunt anim veniam\"\n      }\n    }\n  },\n  \"localVariables\": {\n    \"eu_3_a\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"pariatur4\": -9571180.133794412\n      }\n    }\n  },\n  \"workerId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/failure",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"failure"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Returned if the corresponding process instance could not be resumed successfully. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"errorMessage\": \"<string>\",\n  \"errorDetails\": \"<string>\",\n  \"retries\": \"<integer>\",\n  \"retryTimeout\": \"<long>\",\n  \"variables\": {\n    \"cupidatat4ef\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"velit_1\": -12895414,\n        \"consequat_a\": -88480217,\n        \"ind\": -97903357\n      }\n    },\n    \"proident_79\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"cupidatat_c\": \"nulla cillum\",\n        \"eiusmod_4\": \"sunt consectetur deserunt anim veniam\"\n      }\n    }\n  },\n  \"localVariables\": {\n    \"eu_3_a\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"pariatur4\": -9571180.133794412\n      }\n    }\n  },\n  \"workerId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/failure",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"failure"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "lock",
							"item": [
								{
									"name": "lock",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"lockDuration\": \"<long>\",\n  \"workerId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/external-task/:id/lock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												":id",
												"lock"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the external task."
												}
											]
										},
										"description": "Lock an external task by a given id for a specified worker and amount of time."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"lockDuration\": \"<long>\",\n  \"workerId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/lock",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"lock"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "In case the lock duration is negative or the external task is already locked by\na different worker, an exception of type `InvalidRequestException` is returned. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-hand",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"lockDuration\": \"<long>\",\n  \"workerId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/lock",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"lock"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Returned if the task does not exist. This could indicate a wrong task id as well as a cancelled task,\ne.g., due to a caught BPMN boundary event. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the e",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"lockDuration\": \"<long>\",\n  \"workerId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/lock",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"lock"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "priority",
							"item": [
								{
									"name": "Set Priority",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"priority\": \"<long>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/external-task/:id/priority",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												":id",
												"priority"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the external task to set the priority for."
												}
											]
										},
										"description": "Sets the priority of an existing external task by id. The default value of a priority is 0."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"priority\": \"<long>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/priority",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"priority"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the task does not exist. This could indicate a wrong task id as well as a cancelled task,\ne.g., due to a caught BPMN boundary event. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the e",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"priority\": \"<long>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/priority",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"priority"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "retries",
							"item": [
								{
									"name": "Set Retries",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"retries\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/external-task/:id/retries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												":id",
												"retries"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the external task to set the number of retries for."
												}
											]
										},
										"description": "Sets the number of retries left to execute an external task by id. If retries are set to 0, an \nincident is created."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"retries\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/retries",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"retries"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the task does not exist. This could indicate a wrong task id as well as a cancelled task,\ne.g., due to a caught BPMN boundary event. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the e",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"retries\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/retries",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"retries"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "In case the number of retries is negative or null, an exception of type `InvalidRequestException`\nis returned. See the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"retries\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/retries",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"retries"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "unlock",
							"item": [
								{
									"name": "Unlock",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external-task/:id/unlock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												":id",
												"unlock"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the external task to unlock."
												}
											]
										},
										"description": "Unlocks an external task by id. Clears the task's lock expiration time and worker id."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/unlock",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"unlock"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the task does not exist. This could indicate a wrong task id as well as a cancelled task,\ne.g., due to a caught BPMN boundary event. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the e",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/external-task/:id/unlock",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"external-task",
														":id",
														"unlock"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/external-task/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external-task",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the external task to be retrieved."
										}
									]
								},
								"description": "Retrieves an external task by id, corresponding to the `ExternalTask` interface in the engine."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external-task/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"activityId\": \"<string>\",\n  \"activityInstanceId\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"id\": \"<string>\",\n  \"lockExpirationTime\": \"<dateTime>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionVersionTag\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"retries\": \"<integer>\",\n  \"suspended\": \"<boolean>\",\n  \"workerId\": \"<string>\",\n  \"topicName\": \"<string>\",\n  \"priority\": \"<long>\",\n  \"businessKey\": \"<string>\"\n}"
								},
								{
									"name": "External task with the given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/external-task/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"external-task",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/external-task?externalTaskId=<string>&externalTaskIdIn=<string>&topicName=<string>&workerId=<string>&locked=<boolean>&notLocked=<boolean>&withRetriesLeft=<boolean>&noRetriesLeft=<boolean>&lockExpirationAfter=<dateTime>&lockExpirationBefore=<dateTime>&activityId=<string>&activityIdIn=<string>&executionId=<string>&processInstanceId=<string>&processInstanceIdIn=<string>&processDefinitionId=<string>&tenantIdIn=<string>&active=<boolean>&suspended=<boolean>&priorityHigherThanOrEquals=<long>&priorityLowerThanOrEquals=<long>&sortBy=processDefinitionKey&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"external-task"
							],
							"query": [
								{
									"key": "externalTaskId",
									"value": "<string>",
									"description": "Filter by an external task's id."
								},
								{
									"key": "externalTaskIdIn",
									"value": "<string>",
									"description": "Filter by the comma-separated list of external task ids."
								},
								{
									"key": "topicName",
									"value": "<string>",
									"description": "Filter by an external task topic."
								},
								{
									"key": "workerId",
									"value": "<string>",
									"description": "Filter by the id of the worker that the task was most recently locked by."
								},
								{
									"key": "locked",
									"value": "<boolean>",
									"description": "Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired).\nValue may only be `true`, as `false` matches any external task."
								},
								{
									"key": "notLocked",
									"value": "<boolean>",
									"description": "Only include external tasks that are currently not locked (i.e., they have no lock or it has expired).\nValue may only be `true`, as `false` matches any external task."
								},
								{
									"key": "withRetriesLeft",
									"value": "<boolean>",
									"description": "Only include external tasks that have a positive (&gt; 0) number of retries (or `null`). Value may only be\n`true`, as `false` matches any external task."
								},
								{
									"key": "noRetriesLeft",
									"value": "<boolean>",
									"description": "Only include external tasks that have 0 retries. Value may only be `true`, as `false` matches any\nexternal task."
								},
								{
									"key": "lockExpirationAfter",
									"value": "<dateTime>",
									"description": "Restrict to external tasks that have a lock that expires after a given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
								},
								{
									"key": "lockExpirationBefore",
									"value": "<dateTime>",
									"description": "Restrict to external tasks that have a lock that expires before a given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
								},
								{
									"key": "activityId",
									"value": "<string>",
									"description": "Filter by the id of the activity that an external task is created for."
								},
								{
									"key": "activityIdIn",
									"value": "<string>",
									"description": "Filter by the comma-separated list of ids of the activities that an external task is created for."
								},
								{
									"key": "executionId",
									"value": "<string>",
									"description": "Filter by the id of the execution that an external task belongs to."
								},
								{
									"key": "processInstanceId",
									"value": "<string>",
									"description": "Filter by the id of the process instance that an external task belongs to."
								},
								{
									"key": "processInstanceIdIn",
									"value": "<string>",
									"description": "Filter by a comma-separated list of process instance ids that an external task may belong to."
								},
								{
									"key": "processDefinitionId",
									"value": "<string>",
									"description": "Filter by the id of the process definition that an external task belongs to."
								},
								{
									"key": "tenantIdIn",
									"value": "<string>",
									"description": "Filter by a comma-separated list of tenant ids.\nAn external task must have one of the given tenant ids."
								},
								{
									"key": "active",
									"value": "<boolean>",
									"description": "Only include active tasks. Value may only be `true`, as `false` matches any external task."
								},
								{
									"key": "suspended",
									"value": "<boolean>",
									"description": "Only include suspended tasks. Value may only be `true`, as `false` matches any external task."
								},
								{
									"key": "priorityHigherThanOrEquals",
									"value": "<long>",
									"description": "Only include jobs with a priority higher than or equal to the given value.\nValue must be a valid `long` value."
								},
								{
									"key": "priorityLowerThanOrEquals",
									"value": "<long>",
									"description": "Only include jobs with a priority lower than or equal to the given value.\nValue must be a valid `long` value."
								},
								{
									"key": "sortBy",
									"value": "processDefinitionKey",
									"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
								},
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return."
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
								}
							]
						},
						"description": "Queries for the external tasks that fulfill given parameters. Parameters may be static as well as dynamic\nruntime properties of executions. The size of the result set can be retrieved by using the\n[Get External Task Count](https://docs.camunda.org/manual/7.21/reference/rest/external-task/get-query-count/) method."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/external-task?externalTaskId=<string>&externalTaskIdIn=<string>&topicName=<string>&workerId=<string>&locked=<boolean>&notLocked=<boolean>&withRetriesLeft=<boolean>&noRetriesLeft=<boolean>&lockExpirationAfter=<dateTime>&lockExpirationBefore=<dateTime>&activityId=<string>&activityIdIn=<string>&executionId=<string>&processInstanceId=<string>&processInstanceIdIn=<string>&processDefinitionId=<string>&tenantIdIn=<string>&active=<boolean>&suspended=<boolean>&priorityHigherThanOrEquals=<long>&priorityLowerThanOrEquals=<long>&sortBy=processDefinitionKey&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external-task"
									],
									"query": [
										{
											"key": "externalTaskId",
											"value": "<string>",
											"description": "Filter by an external task's id."
										},
										{
											"key": "externalTaskIdIn",
											"value": "<string>",
											"description": "Filter by the comma-separated list of external task ids."
										},
										{
											"key": "topicName",
											"value": "<string>",
											"description": "Filter by an external task topic."
										},
										{
											"key": "workerId",
											"value": "<string>",
											"description": "Filter by the id of the worker that the task was most recently locked by."
										},
										{
											"key": "locked",
											"value": "<boolean>",
											"description": "Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired).\nValue may only be `true`, as `false` matches any external task."
										},
										{
											"key": "notLocked",
											"value": "<boolean>",
											"description": "Only include external tasks that are currently not locked (i.e., they have no lock or it has expired).\nValue may only be `true`, as `false` matches any external task."
										},
										{
											"key": "withRetriesLeft",
											"value": "<boolean>",
											"description": "Only include external tasks that have a positive (&gt; 0) number of retries (or `null`). Value may only be\n`true`, as `false` matches any external task."
										},
										{
											"key": "noRetriesLeft",
											"value": "<boolean>",
											"description": "Only include external tasks that have 0 retries. Value may only be `true`, as `false` matches any\nexternal task."
										},
										{
											"key": "lockExpirationAfter",
											"value": "<dateTime>",
											"description": "Restrict to external tasks that have a lock that expires after a given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "lockExpirationBefore",
											"value": "<dateTime>",
											"description": "Restrict to external tasks that have a lock that expires before a given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "activityId",
											"value": "<string>",
											"description": "Filter by the id of the activity that an external task is created for."
										},
										{
											"key": "activityIdIn",
											"value": "<string>",
											"description": "Filter by the comma-separated list of ids of the activities that an external task is created for."
										},
										{
											"key": "executionId",
											"value": "<string>",
											"description": "Filter by the id of the execution that an external task belongs to."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Filter by the id of the process instance that an external task belongs to."
										},
										{
											"key": "processInstanceIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of process instance ids that an external task may belong to."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Filter by the id of the process definition that an external task belongs to."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids.\nAn external task must have one of the given tenant ids."
										},
										{
											"key": "active",
											"value": "<boolean>",
											"description": "Only include active tasks. Value may only be `true`, as `false` matches any external task."
										},
										{
											"key": "suspended",
											"value": "<boolean>",
											"description": "Only include suspended tasks. Value may only be `true`, as `false` matches any external task."
										},
										{
											"key": "priorityHigherThanOrEquals",
											"value": "<long>",
											"description": "Only include jobs with a priority higher than or equal to the given value.\nValue must be a valid `long` value."
										},
										{
											"key": "priorityLowerThanOrEquals",
											"value": "<long>",
											"description": "Only include jobs with a priority lower than or equal to the given value.\nValue must be a valid `long` value."
										},
										{
											"key": "sortBy",
											"value": "processDefinitionKey",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"activityId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"errorMessage\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lockExpirationTime\": \"<dateTime>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionVersionTag\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"retries\": \"<integer>\",\n    \"suspended\": \"<boolean>\",\n    \"workerId\": \"<string>\",\n    \"topicName\": \"<string>\",\n    \"priority\": \"<long>\",\n    \"businessKey\": \"<string>\"\n  },\n  {\n    \"activityId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"errorMessage\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lockExpirationTime\": \"<dateTime>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionVersionTag\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"retries\": \"<integer>\",\n    \"suspended\": \"<boolean>\",\n    \"workerId\": \"<string>\",\n    \"topicName\": \"<string>\",\n    \"priority\": \"<long>\",\n    \"businessKey\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder` parameter is supplied,\nbut no `sortBy`. See the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/external-task?externalTaskId=<string>&externalTaskIdIn=<string>&topicName=<string>&workerId=<string>&locked=<boolean>&notLocked=<boolean>&withRetriesLeft=<boolean>&noRetriesLeft=<boolean>&lockExpirationAfter=<dateTime>&lockExpirationBefore=<dateTime>&activityId=<string>&activityIdIn=<string>&executionId=<string>&processInstanceId=<string>&processInstanceIdIn=<string>&processDefinitionId=<string>&tenantIdIn=<string>&active=<boolean>&suspended=<boolean>&priorityHigherThanOrEquals=<long>&priorityLowerThanOrEquals=<long>&sortBy=processDefinitionKey&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external-task"
									],
									"query": [
										{
											"key": "externalTaskId",
											"value": "<string>",
											"description": "Filter by an external task's id."
										},
										{
											"key": "externalTaskIdIn",
											"value": "<string>",
											"description": "Filter by the comma-separated list of external task ids."
										},
										{
											"key": "topicName",
											"value": "<string>",
											"description": "Filter by an external task topic."
										},
										{
											"key": "workerId",
											"value": "<string>",
											"description": "Filter by the id of the worker that the task was most recently locked by."
										},
										{
											"key": "locked",
											"value": "<boolean>",
											"description": "Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired).\nValue may only be `true`, as `false` matches any external task."
										},
										{
											"key": "notLocked",
											"value": "<boolean>",
											"description": "Only include external tasks that are currently not locked (i.e., they have no lock or it has expired).\nValue may only be `true`, as `false` matches any external task."
										},
										{
											"key": "withRetriesLeft",
											"value": "<boolean>",
											"description": "Only include external tasks that have a positive (&gt; 0) number of retries (or `null`). Value may only be\n`true`, as `false` matches any external task."
										},
										{
											"key": "noRetriesLeft",
											"value": "<boolean>",
											"description": "Only include external tasks that have 0 retries. Value may only be `true`, as `false` matches any\nexternal task."
										},
										{
											"key": "lockExpirationAfter",
											"value": "<dateTime>",
											"description": "Restrict to external tasks that have a lock that expires after a given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "lockExpirationBefore",
											"value": "<dateTime>",
											"description": "Restrict to external tasks that have a lock that expires before a given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "activityId",
											"value": "<string>",
											"description": "Filter by the id of the activity that an external task is created for."
										},
										{
											"key": "activityIdIn",
											"value": "<string>",
											"description": "Filter by the comma-separated list of ids of the activities that an external task is created for."
										},
										{
											"key": "executionId",
											"value": "<string>",
											"description": "Filter by the id of the execution that an external task belongs to."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Filter by the id of the process instance that an external task belongs to."
										},
										{
											"key": "processInstanceIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of process instance ids that an external task may belong to."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Filter by the id of the process definition that an external task belongs to."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids.\nAn external task must have one of the given tenant ids."
										},
										{
											"key": "active",
											"value": "<boolean>",
											"description": "Only include active tasks. Value may only be `true`, as `false` matches any external task."
										},
										{
											"key": "suspended",
											"value": "<boolean>",
											"description": "Only include suspended tasks. Value may only be `true`, as `false` matches any external task."
										},
										{
											"key": "priorityHigherThanOrEquals",
											"value": "<long>",
											"description": "Only include jobs with a priority higher than or equal to the given value.\nValue must be a valid `long` value."
										},
										{
											"key": "priorityLowerThanOrEquals",
											"value": "<long>",
											"description": "Only include jobs with a priority lower than or equal to the given value.\nValue must be a valid `long` value."
										},
										{
											"key": "sortBy",
											"value": "processDefinitionKey",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "Get List (POST)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"externalTaskId\": \"<string>\",\n  \"externalTaskIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"topicName\": \"<string>\",\n  \"workerId\": \"<string>\",\n  \"locked\": \"<boolean>\",\n  \"notLocked\": \"<boolean>\",\n  \"withRetriesLeft\": \"<boolean>\",\n  \"noRetriesLeft\": \"<boolean>\",\n  \"lockExpirationAfter\": \"<dateTime>\",\n  \"lockExpirationBefore\": \"<dateTime>\",\n  \"activityId\": \"<string>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionId\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"priorityHigherThanOrEquals\": \"<long>\",\n  \"priorityLowerThanOrEquals\": \"<long>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"processDefinitionKey\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"id\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/external-task?firstResult=<integer>&maxResults=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"external-task"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return."
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
								}
							]
						},
						"description": "Queries for external tasks that fulfill given parameters in the form of a JSON object.\n\nThis method is slightly more powerful than the\n[Get External Tasks](https://docs.camunda.org/manual/7.21/reference/rest/external-task/get-query/) method because it allows to\nspecify a hierarchical result sorting."
					},
					"response": [
						{
							"name": "Request successful. The Response is a JSON array of external task objects.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"externalTaskId\": \"<string>\",\n  \"externalTaskIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"topicName\": \"<string>\",\n  \"workerId\": \"<string>\",\n  \"locked\": \"<boolean>\",\n  \"notLocked\": \"<boolean>\",\n  \"withRetriesLeft\": \"<boolean>\",\n  \"noRetriesLeft\": \"<boolean>\",\n  \"lockExpirationAfter\": \"<dateTime>\",\n  \"lockExpirationBefore\": \"<dateTime>\",\n  \"activityId\": \"<string>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionId\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"priorityHigherThanOrEquals\": \"<long>\",\n  \"priorityLowerThanOrEquals\": \"<long>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"processDefinitionKey\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"id\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/external-task?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external-task"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"activityId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"errorMessage\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lockExpirationTime\": \"<dateTime>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionVersionTag\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"retries\": \"<integer>\",\n    \"suspended\": \"<boolean>\",\n    \"workerId\": \"<string>\",\n    \"topicName\": \"<string>\",\n    \"priority\": \"<long>\",\n    \"businessKey\": \"<string>\"\n  },\n  {\n    \"activityId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"errorMessage\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"id\": \"<string>\",\n    \"lockExpirationTime\": \"<dateTime>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionVersionTag\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"retries\": \"<integer>\",\n    \"suspended\": \"<boolean>\",\n    \"workerId\": \"<string>\",\n    \"topicName\": \"<string>\",\n    \"priority\": \"<long>\",\n    \"businessKey\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder` parameter is supplied,\nbut no `sortBy`. See the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"externalTaskId\": \"<string>\",\n  \"externalTaskIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"topicName\": \"<string>\",\n  \"workerId\": \"<string>\",\n  \"locked\": \"<boolean>\",\n  \"notLocked\": \"<boolean>\",\n  \"withRetriesLeft\": \"<boolean>\",\n  \"noRetriesLeft\": \"<boolean>\",\n  \"lockExpirationAfter\": \"<dateTime>\",\n  \"lockExpirationBefore\": \"<dateTime>\",\n  \"activityId\": \"<string>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionId\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"priorityHigherThanOrEquals\": \"<long>\",\n  \"priorityLowerThanOrEquals\": \"<long>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"processDefinitionKey\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"id\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/external-task?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"external-task"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "filter",
			"item": [
				{
					"name": "count",
					"item": [
						{
							"name": "Get Filter Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/filter/count?filterId=<string>&resourceType=<string>&name=<string>&nameLike=<string>&owner=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"filter",
										"count"
									],
									"query": [
										{
											"key": "filterId",
											"value": "<string>",
											"description": "Filter by the id of the filter."
										},
										{
											"key": "resourceType",
											"value": "<string>",
											"description": "Filter by the resource type of the filter, e.g., `Task`."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Filter by the name of the filter."
										},
										{
											"key": "nameLike",
											"value": "<string>",
											"description": "Filter by the name that the parameter is a substring of."
										},
										{
											"key": "owner",
											"value": "<string>",
											"description": "Filter by the user id of the owner of the filter."
										}
									]
								},
								"description": "Retrieves the number of filters that fulfill a provided query. Corresponds to the\nsize of the result set when using the \n[Get Filters](https://docs.camunda.org/manual/7.21/reference/rest/filter/get-query/) method."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/filter/count?filterId=<string>&resourceType=<string>&name=<string>&nameLike=<string>&owner=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"filter",
												"count"
											],
											"query": [
												{
													"key": "filterId",
													"value": "<string>",
													"description": "Filter by the id of the filter."
												},
												{
													"key": "resourceType",
													"value": "<string>",
													"description": "Filter by the resource type of the filter, e.g., `Task`."
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "Filter by the name of the filter."
												},
												{
													"key": "nameLike",
													"value": "<string>",
													"description": "Filter by the name that the parameter is a substring of."
												},
												{
													"key": "owner",
													"value": "<string>",
													"description": "Filter by the user id of the owner of the filter."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "\nReturned if some of the query parameters are invalid, for example if\na `sortOrder`parameter is supplied, but no `sortBy`, or if an invalid operator\nfor variable comparison is used. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/res",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/filter/count?filterId=<string>&resourceType=<string>&name=<string>&nameLike=<string>&owner=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"filter",
												"count"
											],
											"query": [
												{
													"key": "filterId",
													"value": "<string>",
													"description": "Filter by the id of the filter."
												},
												{
													"key": "resourceType",
													"value": "<string>",
													"description": "Filter by the resource type of the filter, e.g., `Task`."
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "Filter by the name of the filter."
												},
												{
													"key": "nameLike",
													"value": "<string>",
													"description": "Filter by the name that the parameter is a substring of."
												},
												{
													"key": "owner",
													"value": "<string>",
													"description": "Filter by the user id of the owner of the filter."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "create",
					"item": [
						{
							"name": "Create Filter",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"resourceType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"query\": {},\n  \"properties\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/filter/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"filter",
										"create"
									]
								},
								"description": "Creates a new filter."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resourceType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"query\": {},\n  \"properties\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/filter/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"filter",
												"create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"resourceType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"query\": {},\n  \"properties\": {},\n  \"itemCount\": \"<long>\"\n}"
								},
								{
									"name": "\nFilter was invalid. See\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resourceType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"query\": {},\n  \"properties\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/filter/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"filter",
												"create"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "\nThe authenticated user is unauthorized to create a new filter. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resourceType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"query\": {},\n  \"properties\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/filter/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"filter",
												"create"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "count",
							"item": [
								{
									"name": "Execute Filter Count",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/filter/:id/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"filter",
												":id",
												"count"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the filter to execute."
												}
											]
										},
										"description": "Executes the saved query of the filter by id and returns the count."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/filter/:id/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"filter",
														":id",
														"count"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<long>\"\n}"
										},
										{
											"name": "\nThe authenticated user is unauthorized to read this filter. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/filter/:id/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"filter",
														":id",
														"count"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "\nFilter with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/filter/:id/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"filter",
														":id",
														"count"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								},
								{
									"name": "Execute Filter Count (POST)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/filter/:id/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"filter",
												":id",
												"count"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the filter to execute."
												}
											]
										},
										"description": "Executes the saved query of the filter by id and returns the count. This method is\nslightly more powerful then the [Get Execute Filter Count](https://docs.camunda.org/manual/7.21/reference/rest/filter/get-execute-count/) \nmethod because it allows to extend the saved query of the filter."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/filter/:id/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"filter",
														":id",
														"count"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<long>\"\n}"
										},
										{
											"name": "\nThe extending query was invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/filter/:id/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"filter",
														":id",
														"count"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "\nThe authenticated user is unauthorized to read this filter. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/filter/:id/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"filter",
														":id",
														"count"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "\nFilter with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/filter/:id/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"filter",
														":id",
														"count"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "list",
							"item": [
								{
									"name": "Execute Filter List",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/filter/:id/list?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"filter",
												":id",
												"list"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the filter to execute."
												}
											]
										},
										"description": "Executes the saved query of the filter by id and returns the result list."
									},
									"response": [
										{
											"name": "Request successful. A JSON array containing JSON objects corresponding to the matching entity interface in the engine. This depends on the saved query in the filter. Therefore it is not possible to specify a generic result format, i.e., if the resource ty",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/filter/:id/list?firstResult=<integer>&maxResults=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"filter",
														":id",
														"list"
													],
													"query": [
														{
															"key": "firstResult",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the index of the first result to return."
														},
														{
															"key": "maxResults",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										},
										{
											"name": "\nThe authenticated user is unauthorized to read this filter.\nSee the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/filter/:id/list?firstResult=<integer>&maxResults=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"filter",
														":id",
														"list"
													],
													"query": [
														{
															"key": "firstResult",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the index of the first result to return."
														},
														{
															"key": "maxResults",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "\nFilter with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/filter/:id/list?firstResult=<integer>&maxResults=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"filter",
														":id",
														"list"
													],
													"query": [
														{
															"key": "firstResult",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the index of the first result to return."
														},
														{
															"key": "maxResults",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								},
								{
									"name": "Execute Filter List (POST)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/filter/:id/list?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"filter",
												":id",
												"list"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the filter to execute."
												}
											]
										},
										"description": "Executes the saved query of the filter by id and returns the result list. This\nmethod is slightly more powerful then the \n[Get Execute FilterList](https://docs.camunda.org/manual/7.21/reference/rest/filter/get-execute-list/) method\nbecause it allows to extend the saved query of the filter."
									},
									"response": [
										{
											"name": "Request successful. A JSON array containing JSON objects corresponding to the matching entity interface in the engine. This depends on the saved query in the filter. Therefore it is not possible to specify a generic result format, i.e., if the resource ty",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/filter/:id/list?firstResult=<integer>&maxResults=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"filter",
														":id",
														"list"
													],
													"query": [
														{
															"key": "firstResult",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the index of the first result to return."
														},
														{
															"key": "maxResults",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										},
										{
											"name": "\nThe extending query was invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/filter/:id/list?firstResult=<integer>&maxResults=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"filter",
														":id",
														"list"
													],
													"query": [
														{
															"key": "firstResult",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the index of the first result to return."
														},
														{
															"key": "maxResults",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "\nThe authenticated user is unauthorized to read this filter.\nSee the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/filter/:id/list?firstResult=<integer>&maxResults=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"filter",
														":id",
														"list"
													],
													"query": [
														{
															"key": "firstResult",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the index of the first result to return."
														},
														{
															"key": "maxResults",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "\nFilter with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/filter/:id/list?firstResult=<integer>&maxResults=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"filter",
														":id",
														"list"
													],
													"query": [
														{
															"key": "firstResult",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the index of the first result to return."
														},
														{
															"key": "maxResults",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "singleResult",
							"item": [
								{
									"name": "Execute Filter Single Result",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/filter/:id/singleResult",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"filter",
												":id",
												"singleResult"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the filter to execute."
												}
											]
										},
										"description": "Executes the saved query of the filter by id and returns the single result."
									},
									"response": [
										{
											"name": "Request successful. A JSON object corresponding to the matching entity interface in the engine. This depends on the saved query in the filter. Therefore it is not possible to specify a generic result format, i.e., if the resource type of the filter is Tas",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/filter/:id/singleResult",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"filter",
														":id",
														"singleResult"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Request successful, but the result was empty. This method returns no content.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/filter/:id/singleResult",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"filter",
														":id",
														"singleResult"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "\nThe executed filter returned more than one single result. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/filter/:id/singleResult",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"filter",
														":id",
														"singleResult"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "\nThe authenticated user is unauthorized to read this filter.\nSee the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/filter/:id/singleResult",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"filter",
														":id",
														"singleResult"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "\nFilter with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/filter/:id/singleResult",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"filter",
														":id",
														"singleResult"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								},
								{
									"name": "Execute Filter Single Result (POST)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/filter/:id/singleResult",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"filter",
												":id",
												"singleResult"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the filter to execute."
												}
											]
										},
										"description": "Executes the saved query of the filter by id and returns the single result. This method is slightly more\npowerful then the [Get Execute Filter Single Result](https://docs.camunda.org/manual/7.21/reference/rest/filter/get-execute-single-result/)\nmethod because it allows to extend the saved query of the filter."
									},
									"response": [
										{
											"name": "Request successful. A JSON object corresponding to the corresponding entity interface in the engine. This depends on the saved query in the filter. Therefore it is not possible specify a generic result format, i.e., if the resource type of the filter is T",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/filter/:id/singleResult",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"filter",
														":id",
														"singleResult"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Request successful, but the result was empty. This method returns no content.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/filter/:id/singleResult",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"filter",
														":id",
														"singleResult"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "\nThe executed filter returned more than one single result or the\nextending query was invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/filter/:id/singleResult",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"filter",
														":id",
														"singleResult"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "\nThe authenticated user is unauthorized to read this filter. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/filter/:id/singleResult",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"filter",
														":id",
														"singleResult"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "\nFilter with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/filter/:id/singleResult",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"filter",
														":id",
														"singleResult"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Delete Filter",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/filter/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"filter",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the filter to be deleted."
										}
									]
								},
								"description": "Deletes a filter by id."
							},
							"response": [
								{
									"name": "Request successful. This method returns no content.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/filter/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"filter",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "\nThe authenticated user is unauthorized to delete this filter.\nSee the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/filter/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"filter",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "\nFilter cannot be found. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/filter/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"filter",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get Single Filter",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/filter/:id?itemCount=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"filter",
										":id"
									],
									"query": [
										{
											"key": "itemCount",
											"value": "<boolean>",
											"description": "If set to `true`, each filter result will contain an `itemCount`\nproperty with the number of items matched by the filter itself."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the filter to be retrieved."
										}
									]
								},
								"description": "Retrieves a single filter by id, according to the `Filter` interface in the engine."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/filter/:id?itemCount=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"filter",
												":id"
											],
											"query": [
												{
													"key": "itemCount",
													"value": "<boolean>",
													"description": "If set to `true`, each filter result will contain an `itemCount`\nproperty with the number of items matched by the filter itself."
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"resourceType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"query\": {},\n  \"properties\": {},\n  \"itemCount\": \"<long>\"\n}"
								},
								{
									"name": "The authenticated user is unauthorized to read this filter.\nSee the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/filter/:id?itemCount=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"filter",
												":id"
											],
											"query": [
												{
													"key": "itemCount",
													"value": "<boolean>",
													"description": "If set to `true`, each filter result will contain an `itemCount`\nproperty with the number of items matched by the filter itself."
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "Filter with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/filter/:id?itemCount=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"filter",
												":id"
											],
											"query": [
												{
													"key": "itemCount",
													"value": "<boolean>",
													"description": "If set to `true`, each filter result will contain an `itemCount`\nproperty with the number of items matched by the filter itself."
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Filter Resource Options",
							"request": {
								"method": "OPTIONS",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/filter/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"filter",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the filter to be checked."
										}
									]
								},
								"description": "The OPTIONS request allows you to check for the set of available operations \nthat the currently authenticated user can perform on the `/filter` resource.\nWhether the user can perform an operation or not may depend on various\nfactors, including the users authorizations to interact with this\nresource and the internal configuration of the process engine."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "OPTIONS",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/filter/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"filter",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update Filter",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"resourceType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"query\": {},\n  \"properties\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/filter/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"filter",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the filter to be updated."
										}
									]
								},
								"description": "Updates an existing filter."
							},
							"response": [
								{
									"name": "Request successful. This method returns no content.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resourceType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"query\": {},\n  \"properties\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/filter/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"filter",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "\nFilter was invalid. See\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resourceType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"query\": {},\n  \"properties\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/filter/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"filter",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "\nThe authenticated user is unauthorized to update this filter.\nSee the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resourceType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"query\": {},\n  \"properties\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/filter/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"filter",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "\nFilter cannot be found. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resourceType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"query\": {},\n  \"properties\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/filter/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"filter",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get Filters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/filter?filterId=<string>&resourceType=<string>&name=<string>&nameLike=<string>&owner=<string>&itemCount=<boolean>&sortBy=resourceType&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"filter"
							],
							"query": [
								{
									"key": "filterId",
									"value": "<string>",
									"description": "Filter by the id of the filter."
								},
								{
									"key": "resourceType",
									"value": "<string>",
									"description": "Filter by the resource type of the filter, e.g., `Task`."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "Filter by the name of the filter."
								},
								{
									"key": "nameLike",
									"value": "<string>",
									"description": "Filter by the name that the parameter is a substring of."
								},
								{
									"key": "owner",
									"value": "<string>",
									"description": "Filter by the user id of the owner of the filter."
								},
								{
									"key": "itemCount",
									"value": "<boolean>",
									"description": "If set to `true`, each filter result will contain an `itemCount` property\nwith the number of items matched by the filter itself."
								},
								{
									"key": "sortBy",
									"value": "resourceType",
									"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
								},
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return."
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
								}
							]
						},
						"description": "Queries for a list of filters using a list of parameters. The size of the result\nset can be retrieved\nby using the [Get Filter Count](https://docs.camunda.org/manual/7.21/reference/rest/filter/get-query-count/) method."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/filter?filterId=<string>&resourceType=<string>&name=<string>&nameLike=<string>&owner=<string>&itemCount=<boolean>&sortBy=resourceType&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"filter"
									],
									"query": [
										{
											"key": "filterId",
											"value": "<string>",
											"description": "Filter by the id of the filter."
										},
										{
											"key": "resourceType",
											"value": "<string>",
											"description": "Filter by the resource type of the filter, e.g., `Task`."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Filter by the name of the filter."
										},
										{
											"key": "nameLike",
											"value": "<string>",
											"description": "Filter by the name that the parameter is a substring of."
										},
										{
											"key": "owner",
											"value": "<string>",
											"description": "Filter by the user id of the owner of the filter."
										},
										{
											"key": "itemCount",
											"value": "<boolean>",
											"description": "If set to `true`, each filter result will contain an `itemCount` property\nwith the number of items matched by the filter itself."
										},
										{
											"key": "sortBy",
											"value": "resourceType",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"resourceType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"query\": {},\n    \"properties\": {},\n    \"itemCount\": \"<long>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"resourceType\": \"<string>\",\n    \"name\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"query\": {},\n    \"properties\": {},\n    \"itemCount\": \"<long>\"\n  }\n]"
						},
						{
							"name": "\nReturned if some of the query parameters are invalid, for example if\na `sortOrder`\nparameter is supplied, but no `sortBy` is specified. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error res",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/filter?filterId=<string>&resourceType=<string>&name=<string>&nameLike=<string>&owner=<string>&itemCount=<boolean>&sortBy=resourceType&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"filter"
									],
									"query": [
										{
											"key": "filterId",
											"value": "<string>",
											"description": "Filter by the id of the filter."
										},
										{
											"key": "resourceType",
											"value": "<string>",
											"description": "Filter by the resource type of the filter, e.g., `Task`."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Filter by the name of the filter."
										},
										{
											"key": "nameLike",
											"value": "<string>",
											"description": "Filter by the name that the parameter is a substring of."
										},
										{
											"key": "owner",
											"value": "<string>",
											"description": "Filter by the user id of the owner of the filter."
										},
										{
											"key": "itemCount",
											"value": "<boolean>",
											"description": "If set to `true`, each filter result will contain an `itemCount` property\nwith the number of items matched by the filter itself."
										},
										{
											"key": "sortBy",
											"value": "resourceType",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "Filter Resource Options",
					"request": {
						"method": "OPTIONS",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/filter",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"filter"
							]
						},
						"description": "The OPTIONS request allows you to check for the set of available operations \nthat the currently authenticated user can perform on the `/filter` resource.\nWhether the user can perform an operation or not may depend on various\nfactors, including the users authorizations to interact with this\nresource and the internal configuration of the process engine."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "OPTIONS",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/filter",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"filter"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "group",
			"item": [
				{
					"name": "count",
					"item": [
						{
							"name": "Get List Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/group/count?id=<string>&idIn=<string>&name=<string>&nameLike=<string>&type=<string>&member=<string>&memberOfTenant=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group",
										"count"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Filter by the id of the group."
										},
										{
											"key": "idIn",
											"value": "<string>",
											"description": "Filter by a comma seperated list of group ids."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Filter by the name of the group."
										},
										{
											"key": "nameLike",
											"value": "<string>",
											"description": "Filter by the name that the parameter is a substring of."
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "Filter by the type of the group."
										},
										{
											"key": "member",
											"value": "<string>",
											"description": "Only retrieve groups where the given user id is a member of."
										},
										{
											"key": "memberOfTenant",
											"value": "<string>",
											"description": "Only retrieve groups which are members of the given tenant."
										}
									]
								},
								"description": "Queries for groups using a list of parameters and retrieves the count."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/group/count?id=<string>&idIn=<string>&name=<string>&nameLike=<string>&type=<string>&member=<string>&memberOfTenant=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"count"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>",
													"description": "Filter by the id of the group."
												},
												{
													"key": "idIn",
													"value": "<string>",
													"description": "Filter by a comma seperated list of group ids."
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "Filter by the name of the group."
												},
												{
													"key": "nameLike",
													"value": "<string>",
													"description": "Filter by the name that the parameter is a substring of."
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "Filter by the type of the group."
												},
												{
													"key": "member",
													"value": "<string>",
													"description": "Only retrieve groups where the given user id is a member of."
												},
												{
													"key": "memberOfTenant",
													"value": "<string>",
													"description": "Only retrieve groups which are members of the given tenant."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response\nformat.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/group/count?id=<string>&idIn=<string>&name=<string>&nameLike=<string>&type=<string>&member=<string>&memberOfTenant=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"count"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>",
													"description": "Filter by the id of the group."
												},
												{
													"key": "idIn",
													"value": "<string>",
													"description": "Filter by a comma seperated list of group ids."
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "Filter by the name of the group."
												},
												{
													"key": "nameLike",
													"value": "<string>",
													"description": "Filter by the name that the parameter is a substring of."
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "Filter by the type of the group."
												},
												{
													"key": "member",
													"value": "<string>",
													"description": "Only retrieve groups where the given user id is a member of."
												},
												{
													"key": "memberOfTenant",
													"value": "<string>",
													"description": "Only retrieve groups which are members of the given tenant."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get List Count (POST)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"idIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"nameLike\": \"<string>\",\n  \"type\": \"<string>\",\n  \"member\": \"<string>\",\n  \"memberOfTenant\": \"<string>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"name\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"id\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/group/count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group",
										"count"
									]
								},
								"description": "Queries for groups using a list of parameters and retrieves the count."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"idIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"nameLike\": \"<string>\",\n  \"type\": \"<string>\",\n  \"member\": \"<string>\",\n  \"memberOfTenant\": \"<string>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"name\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"id\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"count"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response\nformat.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"idIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"nameLike\": \"<string>\",\n  \"type\": \"<string>\",\n  \"member\": \"<string>\",\n  \"memberOfTenant\": \"<string>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"name\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"id\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"count"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "create",
					"item": [
						{
							"name": "Create Group",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/group/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group",
										"create"
									]
								},
								"description": "Creates a new group."
							},
							"response": [
								{
									"name": "Request successful. This method returns no content.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"create"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Identity service is read-only (Cannot modify users / groups / memberships).",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"create"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "The group could not be created due to an internal server error. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the\nerror response format.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"create"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "members",
							"item": [
								{
									"name": "{userId}",
									"item": [
										{
											"name": "Delete a Group Member",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/group/:id/members/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														":id",
														"members",
														":userId"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the group."
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) The id of user to remove from the group."
														}
													]
												},
												"description": "Removes a member from a group."
											},
											"response": [
												{
													"name": "Request successful. This method returns no content.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/group/:id/members/:userId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"group",
																":id",
																"members",
																":userId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Identity service is read-only (Cannot modify users / groups / memberships).",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/group/:id/members/:userId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"group",
																":id",
																"members",
																":userId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "In case an error occurs. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/group/:id/members/:userId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"group",
																":id",
																"members",
																":userId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										},
										{
											"name": "Create Group Member",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/group/:id/members/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														":id",
														"members",
														":userId"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the group."
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) The id of user to add to the group."
														}
													]
												},
												"description": "Adds a member to a group."
											},
											"response": [
												{
													"name": "Request successful. This method returns no content.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/group/:id/members/:userId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"group",
																":id",
																"members",
																":userId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Identity service is read-only (Cannot modify users / groups / memberships).",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/group/:id/members/:userId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"group",
																":id",
																"members",
																":userId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "In case an internal error occurs. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/group/:id/members/:userId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"group",
																":id",
																"members",
																":userId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Group Membership Resource Options",
									"request": {
										"method": "OPTIONS",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/group/:id/members",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												":id",
												"members"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the group."
												}
											]
										},
										"description": "The OPTIONS request allows checking for the set of available operations that the currently authenticated\nuser can perform on the resource. If the user can perform an operation or not may depend on various\nthings, including the users authorizations to interact with this resource and the internal configuration\nof the process engine."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "OPTIONS",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/group/:id/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														":id",
														"members"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Delete Group",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/group/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the group to be deleted."
										}
									]
								},
								"description": "Deletes a group by id."
							},
							"response": [
								{
									"name": "Request successful. This method returns no content.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/group/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Identity service is read-only (Cannot modify users / groups / memberships).",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/group/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "Group cannot be found. See the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for\nthe error response format.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/group/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get Group",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/group/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the group to be retrieved."
										}
									]
								},
								"description": "Retrieves a group by id."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/group/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\"\n}"
								},
								{
									"name": "Group with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/group/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Group Resource Instance Options",
							"request": {
								"method": "OPTIONS",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/group/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the group."
										}
									]
								},
								"description": "The `/group` resource supports two custom OPTIONS requests, one for the resource as such and this one for individual group instances.\nThe OPTIONS request allows checking for the set of available operations that the currently authenticated user can perform on the\n`/group/{id}` resource instance. If the user can perform an operation or not may depend on various things, including the users authorizations\nto interact with this resource and the internal configuration of the process engine."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "OPTIONS",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/group/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update Group",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/group/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the group."
										}
									]
								},
								"description": "Updates a given group by id."
							},
							"response": [
								{
									"name": "Request successful. No content.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Identity service is read-only (Cannot modify users / groups / memberships).",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "If the group with the requested Id cannot be found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "The group could not be updated due to an internal server error.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error\nresponse format.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/group?memberOfTenant=4f5283f1a814929aa6cf5eee9a972e6e",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"group"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "type",
									"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter.",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter.",
									"disabled": true
								},
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return.",
									"disabled": true
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left.",
									"disabled": true
								},
								{
									"key": "id",
									"value": "<string>",
									"description": "Filter by the id of the group.",
									"disabled": true
								},
								{
									"key": "idIn",
									"value": "<string>",
									"description": "Filter by a comma seperated list of group ids.",
									"disabled": true
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "Filter by the name of the group.",
									"disabled": true
								},
								{
									"key": "nameLike",
									"value": "<string>",
									"description": "Filter by the name that the parameter is a substring of.",
									"disabled": true
								},
								{
									"key": "type",
									"value": "<string>",
									"description": "Filter by the type of the group.",
									"disabled": true
								},
								{
									"key": "member",
									"value": "4f5283f1a814929aa6cf5eee9a972e6e",
									"description": "Only retrieve groups where the given user id is a member of.",
									"disabled": true
								},
								{
									"key": "memberOfTenant",
									"value": "4f5283f1a814929aa6cf5eee9a972e6e",
									"description": "Only retrieve groups which are members of the given tenant."
								}
							]
						},
						"description": "Queries for a list of groups using a list of parameters. The size of the result set can be retrieved\nby using the [Get Group Count](https://docs.camunda.org/manual/7.21/reference/rest/group/get-query-count) method."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/group?sortBy=type&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&id=<string>&idIn=<string>&name=<string>&nameLike=<string>&type=<string>&member=<string>&memberOfTenant=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group"
									],
									"query": [
										{
											"key": "sortBy",
											"value": "type",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										},
										{
											"key": "id",
											"value": "<string>",
											"description": "Filter by the id of the group."
										},
										{
											"key": "idIn",
											"value": "<string>",
											"description": "Filter by a comma seperated list of group ids."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Filter by the name of the group."
										},
										{
											"key": "nameLike",
											"value": "<string>",
											"description": "Filter by the name that the parameter is a substring of."
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "Filter by the type of the group."
										},
										{
											"key": "member",
											"value": "<string>",
											"description": "Only retrieve groups where the given user id is a member of."
										},
										{
											"key": "memberOfTenant",
											"value": "<string>",
											"description": "Only retrieve groups which are members of the given tenant."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder` parameter is supplied,\nbut no `sortBy` is specified. See the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error resp",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/group?sortBy=type&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&id=<string>&idIn=<string>&name=<string>&nameLike=<string>&type=<string>&member=<string>&memberOfTenant=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group"
									],
									"query": [
										{
											"key": "sortBy",
											"value": "type",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										},
										{
											"key": "id",
											"value": "<string>",
											"description": "Filter by the id of the group."
										},
										{
											"key": "idIn",
											"value": "<string>",
											"description": "Filter by a comma seperated list of group ids."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Filter by the name of the group."
										},
										{
											"key": "nameLike",
											"value": "<string>",
											"description": "Filter by the name that the parameter is a substring of."
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "Filter by the type of the group."
										},
										{
											"key": "member",
											"value": "<string>",
											"description": "Only retrieve groups where the given user id is a member of."
										},
										{
											"key": "memberOfTenant",
											"value": "<string>",
											"description": "Only retrieve groups which are members of the given tenant."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "Group Resource Options",
					"request": {
						"method": "OPTIONS",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/group",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"group"
							]
						},
						"description": "The `/group` resource supports two custom OPTIONS requests, this one for the resource as such and one for\nindividual group instances. The OPTIONS request allows checking for the set of available operations that\nthe currently authenticated user can perform on the `/group` resource. If the user can perform an operation\nor not may depend on various things, including the users authorizations to interact with this resource and\nthe internal configuration of the process engine."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "OPTIONS",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/group",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get List (POST)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<string>\",\n  \"idIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"nameLike\": \"<string>\",\n  \"type\": \"<string>\",\n  \"member\": \"<string>\",\n  \"memberOfTenant\": \"<string>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"name\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"id\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/group?firstResult=<integer>&maxResults=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"group"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return."
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
								}
							]
						},
						"description": "Queries for a list of groups using a list of parameters.\nThe size of the result set can be retrieved by using the\n[Get Group Count (POST)](https://docs.camunda.org/manual/7.21/reference/rest/group/post-query-count/) method."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"idIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"nameLike\": \"<string>\",\n  \"type\": \"<string>\",\n  \"member\": \"<string>\",\n  \"memberOfTenant\": \"<string>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"name\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"id\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/group?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder` parameter is supplied,\nbut no `sortBy` is specified. See the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error resp",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"idIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"nameLike\": \"<string>\",\n  \"type\": \"<string>\",\n  \"member\": \"<string>\",\n  \"memberOfTenant\": \"<string>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"name\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"id\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/group?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "history",
			"item": [
				{
					"name": "activity-instance",
					"item": [
						{
							"name": "count",
							"item": [
								{
									"name": "Get List Count",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/activity-instance/count?activityInstanceId=<string>&processInstanceId=<string>&processDefinitionId=<string>&executionId=<string>&activityId=<string>&activityName=<string>&activityType=<string>&taskAssignee=<string>&finished=<boolean>&unfinished=<boolean>&canceled=<boolean>&completeScope=<boolean>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&tenantIdIn=<string>&withoutTenantId=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"activity-instance",
												"count"
											],
											"query": [
												{
													"key": "activityInstanceId",
													"value": "<string>",
													"description": "Filter by activity instance id."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by process instance id."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by process definition id."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Filter by the id of the execution that executed the activity instance."
												},
												{
													"key": "activityId",
													"value": "<string>",
													"description": "Filter by the activity id (according to BPMN 2.0 XML)."
												},
												{
													"key": "activityName",
													"value": "<string>",
													"description": "Filter by the activity name (according to BPMN 2.0 XML)."
												},
												{
													"key": "activityType",
													"value": "<string>",
													"description": "Filter by activity type."
												},
												{
													"key": "taskAssignee",
													"value": "<string>",
													"description": "Only include activity instances that are user tasks and assigned to a given user."
												},
												{
													"key": "finished",
													"value": "<boolean>",
													"description": "Only include finished activity instances.\nValue may only be `true`, as `false` behaves the same as when the property is not set."
												},
												{
													"key": "unfinished",
													"value": "<boolean>",
													"description": "Only include unfinished activity instances.\nValue may only be `true`, as `false` behaves the same as when the property is not set."
												},
												{
													"key": "canceled",
													"value": "<boolean>",
													"description": "Only include canceled activity instances.\nValue may only be `true`, as `false` behaves the same as when the property is not set."
												},
												{
													"key": "completeScope",
													"value": "<boolean>",
													"description": "Only include activity instances which completed a scope.\nValue may only be `true`, as `false` behaves the same as when the property is not set."
												},
												{
													"key": "startedBefore",
													"value": "<dateTime>",
													"description": "Restrict to instances that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "startedAfter",
													"value": "<dateTime>",
													"description": "Restrict to instances that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "finishedBefore",
													"value": "<dateTime>",
													"description": "Restrict to instances that were finished before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "finishedAfter",
													"value": "<dateTime>",
													"description": "Restrict to instances that were finished after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of ids. An activity instance must have one of the given tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic activity instances that belong to no tenant. Value may only be `true`, as `false` is the default behavior."
												}
											]
										},
										"description": "Queries for the number of historic activity instances that fulfill the given parameters.\nTakes the same parameters as the [Get Historic Activity Instance](https://docs.camunda.org/manual/7.21/reference/rest/history/activity-instance/get-activity-instance-query/)  method."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/activity-instance/count?activityInstanceId=<string>&processInstanceId=<string>&processDefinitionId=<string>&executionId=<string>&activityId=<string>&activityName=<string>&activityType=<string>&taskAssignee=<string>&finished=<boolean>&unfinished=<boolean>&canceled=<boolean>&completeScope=<boolean>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&tenantIdIn=<string>&withoutTenantId=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"activity-instance",
														"count"
													],
													"query": [
														{
															"key": "activityInstanceId",
															"value": "<string>",
															"description": "Filter by activity instance id."
														},
														{
															"key": "processInstanceId",
															"value": "<string>",
															"description": "Filter by process instance id."
														},
														{
															"key": "processDefinitionId",
															"value": "<string>",
															"description": "Filter by process definition id."
														},
														{
															"key": "executionId",
															"value": "<string>",
															"description": "Filter by the id of the execution that executed the activity instance."
														},
														{
															"key": "activityId",
															"value": "<string>",
															"description": "Filter by the activity id (according to BPMN 2.0 XML)."
														},
														{
															"key": "activityName",
															"value": "<string>",
															"description": "Filter by the activity name (according to BPMN 2.0 XML)."
														},
														{
															"key": "activityType",
															"value": "<string>",
															"description": "Filter by activity type."
														},
														{
															"key": "taskAssignee",
															"value": "<string>",
															"description": "Only include activity instances that are user tasks and assigned to a given user."
														},
														{
															"key": "finished",
															"value": "<boolean>",
															"description": "Only include finished activity instances.\nValue may only be `true`, as `false` behaves the same as when the property is not set."
														},
														{
															"key": "unfinished",
															"value": "<boolean>",
															"description": "Only include unfinished activity instances.\nValue may only be `true`, as `false` behaves the same as when the property is not set."
														},
														{
															"key": "canceled",
															"value": "<boolean>",
															"description": "Only include canceled activity instances.\nValue may only be `true`, as `false` behaves the same as when the property is not set."
														},
														{
															"key": "completeScope",
															"value": "<boolean>",
															"description": "Only include activity instances which completed a scope.\nValue may only be `true`, as `false` behaves the same as when the property is not set."
														},
														{
															"key": "startedBefore",
															"value": "<dateTime>",
															"description": "Restrict to instances that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "startedAfter",
															"value": "<dateTime>",
															"description": "Restrict to instances that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "finishedBefore",
															"value": "<dateTime>",
															"description": "Restrict to instances that were finished before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "finishedAfter",
															"value": "<dateTime>",
															"description": "Restrict to instances that were finished after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Filter by a comma-separated list of ids. An activity instance must have one of the given tenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include historic activity instances that belong to no tenant. Value may only be `true`, as `false` is the default behavior."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<long>\"\n}"
										},
										{
											"name": "Bad Request\nReturned if some of the query parameters are invalid.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/activity-instance/count?activityInstanceId=<string>&processInstanceId=<string>&processDefinitionId=<string>&executionId=<string>&activityId=<string>&activityName=<string>&activityType=<string>&taskAssignee=<string>&finished=<boolean>&unfinished=<boolean>&canceled=<boolean>&completeScope=<boolean>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&tenantIdIn=<string>&withoutTenantId=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"activity-instance",
														"count"
													],
													"query": [
														{
															"key": "activityInstanceId",
															"value": "<string>",
															"description": "Filter by activity instance id."
														},
														{
															"key": "processInstanceId",
															"value": "<string>",
															"description": "Filter by process instance id."
														},
														{
															"key": "processDefinitionId",
															"value": "<string>",
															"description": "Filter by process definition id."
														},
														{
															"key": "executionId",
															"value": "<string>",
															"description": "Filter by the id of the execution that executed the activity instance."
														},
														{
															"key": "activityId",
															"value": "<string>",
															"description": "Filter by the activity id (according to BPMN 2.0 XML)."
														},
														{
															"key": "activityName",
															"value": "<string>",
															"description": "Filter by the activity name (according to BPMN 2.0 XML)."
														},
														{
															"key": "activityType",
															"value": "<string>",
															"description": "Filter by activity type."
														},
														{
															"key": "taskAssignee",
															"value": "<string>",
															"description": "Only include activity instances that are user tasks and assigned to a given user."
														},
														{
															"key": "finished",
															"value": "<boolean>",
															"description": "Only include finished activity instances.\nValue may only be `true`, as `false` behaves the same as when the property is not set."
														},
														{
															"key": "unfinished",
															"value": "<boolean>",
															"description": "Only include unfinished activity instances.\nValue may only be `true`, as `false` behaves the same as when the property is not set."
														},
														{
															"key": "canceled",
															"value": "<boolean>",
															"description": "Only include canceled activity instances.\nValue may only be `true`, as `false` behaves the same as when the property is not set."
														},
														{
															"key": "completeScope",
															"value": "<boolean>",
															"description": "Only include activity instances which completed a scope.\nValue may only be `true`, as `false` behaves the same as when the property is not set."
														},
														{
															"key": "startedBefore",
															"value": "<dateTime>",
															"description": "Restrict to instances that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "startedAfter",
															"value": "<dateTime>",
															"description": "Restrict to instances that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "finishedBefore",
															"value": "<dateTime>",
															"description": "Restrict to instances that were finished before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "finishedAfter",
															"value": "<dateTime>",
															"description": "Restrict to instances that were finished after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Filter by a comma-separated list of ids. An activity instance must have one of the given tenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include historic activity instances that belong to no tenant. Value may only be `true`, as `false` is the default behavior."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								},
								{
									"name": "Get List Count (POST)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"activityInstanceId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"activityName\": \"<string>\",\n  \"activityType\": \"<string>\",\n  \"taskAssignee\": \"<string>\",\n  \"finished\": \"<boolean>\",\n  \"unfinished\": \"<boolean>\",\n  \"canceled\": \"<boolean>\",\n  \"completeScope\": \"<boolean>\",\n  \"startedBefore\": \"<dateTime>\",\n  \"startedAfter\": \"<dateTime>\",\n  \"finishedBefore\": \"<dateTime>\",\n  \"finishedAfter\": \"<dateTime>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"definitionId\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"instanceId\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/activity-instance/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"activity-instance",
												"count"
											]
										},
										"description": "Queries for the number of historic activity instances that fulfill the given parameters."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"activityInstanceId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"activityName\": \"<string>\",\n  \"activityType\": \"<string>\",\n  \"taskAssignee\": \"<string>\",\n  \"finished\": \"<boolean>\",\n  \"unfinished\": \"<boolean>\",\n  \"canceled\": \"<boolean>\",\n  \"completeScope\": \"<boolean>\",\n  \"startedBefore\": \"<dateTime>\",\n  \"startedAfter\": \"<dateTime>\",\n  \"finishedBefore\": \"<dateTime>\",\n  \"finishedAfter\": \"<dateTime>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"definitionId\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"instanceId\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/history/activity-instance/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"activity-instance",
														"count"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<long>\"\n}"
										},
										{
											"name": "Bad Request\nReturned if some of the query parameters are invalid.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"activityInstanceId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"activityName\": \"<string>\",\n  \"activityType\": \"<string>\",\n  \"taskAssignee\": \"<string>\",\n  \"finished\": \"<boolean>\",\n  \"unfinished\": \"<boolean>\",\n  \"canceled\": \"<boolean>\",\n  \"completeScope\": \"<boolean>\",\n  \"startedBefore\": \"<dateTime>\",\n  \"startedAfter\": \"<dateTime>\",\n  \"finishedBefore\": \"<dateTime>\",\n  \"finishedAfter\": \"<dateTime>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"definitionId\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"instanceId\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/history/activity-instance/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"activity-instance",
														"count"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/activity-instance/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"activity-instance",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the historic activity instance to be retrieved."
												}
											]
										},
										"description": "Retrieves a historic activity instance by id, according to the `HistoricActivityInstance` interface in the engine."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/activity-instance/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"activity-instance",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"parentActivityInstanceId\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"activityName\": \"<string>\",\n  \"activityType\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"taskId\": \"<string>\",\n  \"assignee\": \"<string>\",\n  \"calledProcessInstanceId\": \"<string>\",\n  \"calledCaseInstanceId\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"endTime\": \"<dateTime>\",\n  \"durationInMillis\": \"<long>\",\n  \"canceled\": \"<boolean>\",\n  \"completeScope\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"removalTime\": \"<dateTime>\",\n  \"rootProcessInstanceId\": \"<string>\"\n}"
										},
										{
											"name": "Not Found\nHistoric activity instance with given id does not exist.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/activity-instance/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"activity-instance",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/history/activity-instance?sortBy=executionId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&activityInstanceId=<string>&processInstanceId=<string>&processDefinitionId=<string>&executionId=<string>&activityId=<string>&activityName=<string>&activityType=<string>&taskAssignee=<string>&finished=<boolean>&unfinished=<boolean>&canceled=<boolean>&completeScope=<boolean>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&tenantIdIn=<string>&withoutTenantId=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"history",
										"activity-instance"
									],
									"query": [
										{
											"key": "sortBy",
											"value": "executionId",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										},
										{
											"key": "activityInstanceId",
											"value": "<string>",
											"description": "Filter by activity instance id."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Filter by process instance id."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Filter by process definition id."
										},
										{
											"key": "executionId",
											"value": "<string>",
											"description": "Filter by the id of the execution that executed the activity instance."
										},
										{
											"key": "activityId",
											"value": "<string>",
											"description": "Filter by the activity id (according to BPMN 2.0 XML)."
										},
										{
											"key": "activityName",
											"value": "<string>",
											"description": "Filter by the activity name (according to BPMN 2.0 XML)."
										},
										{
											"key": "activityType",
											"value": "<string>",
											"description": "Filter by activity type."
										},
										{
											"key": "taskAssignee",
											"value": "<string>",
											"description": "Only include activity instances that are user tasks and assigned to a given user."
										},
										{
											"key": "finished",
											"value": "<boolean>",
											"description": "Only include finished activity instances.\nValue may only be `true`, as `false` behaves the same as when the property is not set."
										},
										{
											"key": "unfinished",
											"value": "<boolean>",
											"description": "Only include unfinished activity instances.\nValue may only be `true`, as `false` behaves the same as when the property is not set."
										},
										{
											"key": "canceled",
											"value": "<boolean>",
											"description": "Only include canceled activity instances.\nValue may only be `true`, as `false` behaves the same as when the property is not set."
										},
										{
											"key": "completeScope",
											"value": "<boolean>",
											"description": "Only include activity instances which completed a scope.\nValue may only be `true`, as `false` behaves the same as when the property is not set."
										},
										{
											"key": "startedBefore",
											"value": "<dateTime>",
											"description": "Restrict to instances that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "startedAfter",
											"value": "<dateTime>",
											"description": "Restrict to instances that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "finishedBefore",
											"value": "<dateTime>",
											"description": "Restrict to instances that were finished before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "finishedAfter",
											"value": "<dateTime>",
											"description": "Restrict to instances that were finished after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of ids. An activity instance must have one of the given tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include historic activity instances that belong to no tenant. Value may only be `true`, as `false` is the default behavior."
										}
									]
								},
								"description": "Queries for historic activity instances that fulfill the given parameters.\nThe size of the result set can be retrieved by using the\n[Get Historic Activity Instance Count](https://docs.camunda.org/manual/7.21/reference/rest/history/activity-instance/get-activity-instance-query-count/) method."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/activity-instance?sortBy=executionId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&activityInstanceId=<string>&processInstanceId=<string>&processDefinitionId=<string>&executionId=<string>&activityId=<string>&activityName=<string>&activityType=<string>&taskAssignee=<string>&finished=<boolean>&unfinished=<boolean>&canceled=<boolean>&completeScope=<boolean>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&tenantIdIn=<string>&withoutTenantId=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"activity-instance"
											],
											"query": [
												{
													"key": "sortBy",
													"value": "executionId",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												},
												{
													"key": "activityInstanceId",
													"value": "<string>",
													"description": "Filter by activity instance id."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by process instance id."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by process definition id."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Filter by the id of the execution that executed the activity instance."
												},
												{
													"key": "activityId",
													"value": "<string>",
													"description": "Filter by the activity id (according to BPMN 2.0 XML)."
												},
												{
													"key": "activityName",
													"value": "<string>",
													"description": "Filter by the activity name (according to BPMN 2.0 XML)."
												},
												{
													"key": "activityType",
													"value": "<string>",
													"description": "Filter by activity type."
												},
												{
													"key": "taskAssignee",
													"value": "<string>",
													"description": "Only include activity instances that are user tasks and assigned to a given user."
												},
												{
													"key": "finished",
													"value": "<boolean>",
													"description": "Only include finished activity instances.\nValue may only be `true`, as `false` behaves the same as when the property is not set."
												},
												{
													"key": "unfinished",
													"value": "<boolean>",
													"description": "Only include unfinished activity instances.\nValue may only be `true`, as `false` behaves the same as when the property is not set."
												},
												{
													"key": "canceled",
													"value": "<boolean>",
													"description": "Only include canceled activity instances.\nValue may only be `true`, as `false` behaves the same as when the property is not set."
												},
												{
													"key": "completeScope",
													"value": "<boolean>",
													"description": "Only include activity instances which completed a scope.\nValue may only be `true`, as `false` behaves the same as when the property is not set."
												},
												{
													"key": "startedBefore",
													"value": "<dateTime>",
													"description": "Restrict to instances that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "startedAfter",
													"value": "<dateTime>",
													"description": "Restrict to instances that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "finishedBefore",
													"value": "<dateTime>",
													"description": "Restrict to instances that were finished before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "finishedAfter",
													"value": "<dateTime>",
													"description": "Restrict to instances that were finished after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of ids. An activity instance must have one of the given tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic activity instances that belong to no tenant. Value may only be `true`, as `false` is the default behavior."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"parentActivityInstanceId\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"activityName\": \"<string>\",\n    \"activityType\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"assignee\": \"<string>\",\n    \"calledProcessInstanceId\": \"<string>\",\n    \"calledCaseInstanceId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"endTime\": \"<dateTime>\",\n    \"durationInMillis\": \"<long>\",\n    \"canceled\": \"<boolean>\",\n    \"completeScope\": \"<boolean>\",\n    \"tenantId\": \"<string>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"parentActivityInstanceId\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"activityName\": \"<string>\",\n    \"activityType\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"assignee\": \"<string>\",\n    \"calledProcessInstanceId\": \"<string>\",\n    \"calledCaseInstanceId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"endTime\": \"<dateTime>\",\n    \"durationInMillis\": \"<long>\",\n    \"canceled\": \"<boolean>\",\n    \"completeScope\": \"<boolean>\",\n    \"tenantId\": \"<string>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Bad Request\nReturned if some of the query parameters are invalid, for example if a sortOrder parameter is supplied, but no sortBy.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response ",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/activity-instance?sortBy=executionId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&activityInstanceId=<string>&processInstanceId=<string>&processDefinitionId=<string>&executionId=<string>&activityId=<string>&activityName=<string>&activityType=<string>&taskAssignee=<string>&finished=<boolean>&unfinished=<boolean>&canceled=<boolean>&completeScope=<boolean>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&tenantIdIn=<string>&withoutTenantId=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"activity-instance"
											],
											"query": [
												{
													"key": "sortBy",
													"value": "executionId",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												},
												{
													"key": "activityInstanceId",
													"value": "<string>",
													"description": "Filter by activity instance id."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by process instance id."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by process definition id."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Filter by the id of the execution that executed the activity instance."
												},
												{
													"key": "activityId",
													"value": "<string>",
													"description": "Filter by the activity id (according to BPMN 2.0 XML)."
												},
												{
													"key": "activityName",
													"value": "<string>",
													"description": "Filter by the activity name (according to BPMN 2.0 XML)."
												},
												{
													"key": "activityType",
													"value": "<string>",
													"description": "Filter by activity type."
												},
												{
													"key": "taskAssignee",
													"value": "<string>",
													"description": "Only include activity instances that are user tasks and assigned to a given user."
												},
												{
													"key": "finished",
													"value": "<boolean>",
													"description": "Only include finished activity instances.\nValue may only be `true`, as `false` behaves the same as when the property is not set."
												},
												{
													"key": "unfinished",
													"value": "<boolean>",
													"description": "Only include unfinished activity instances.\nValue may only be `true`, as `false` behaves the same as when the property is not set."
												},
												{
													"key": "canceled",
													"value": "<boolean>",
													"description": "Only include canceled activity instances.\nValue may only be `true`, as `false` behaves the same as when the property is not set."
												},
												{
													"key": "completeScope",
													"value": "<boolean>",
													"description": "Only include activity instances which completed a scope.\nValue may only be `true`, as `false` behaves the same as when the property is not set."
												},
												{
													"key": "startedBefore",
													"value": "<dateTime>",
													"description": "Restrict to instances that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "startedAfter",
													"value": "<dateTime>",
													"description": "Restrict to instances that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "finishedBefore",
													"value": "<dateTime>",
													"description": "Restrict to instances that were finished before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "finishedAfter",
													"value": "<dateTime>",
													"description": "Restrict to instances that were finished after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of ids. An activity instance must have one of the given tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic activity instances that belong to no tenant. Value may only be `true`, as `false` is the default behavior."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get List (POST)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"activityInstanceId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"activityName\": \"<string>\",\n  \"activityType\": \"<string>\",\n  \"taskAssignee\": \"<string>\",\n  \"finished\": \"<boolean>\",\n  \"unfinished\": \"<boolean>\",\n  \"canceled\": \"<boolean>\",\n  \"completeScope\": \"<boolean>\",\n  \"startedBefore\": \"<dateTime>\",\n  \"startedAfter\": \"<dateTime>\",\n  \"finishedBefore\": \"<dateTime>\",\n  \"finishedAfter\": \"<dateTime>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"definitionId\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"instanceId\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/history/activity-instance?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"history",
										"activity-instance"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								},
								"description": "Queries for historic activity instances that fulfill the given parameters.\nThe size of the result set can be retrieved by using the\n[Get Historic Activity Instance Count](https://docs.camunda.org/manual/7.21/reference/rest/history/activity-instance/get-activity-instance-query-count/) method."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"activityInstanceId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"activityName\": \"<string>\",\n  \"activityType\": \"<string>\",\n  \"taskAssignee\": \"<string>\",\n  \"finished\": \"<boolean>\",\n  \"unfinished\": \"<boolean>\",\n  \"canceled\": \"<boolean>\",\n  \"completeScope\": \"<boolean>\",\n  \"startedBefore\": \"<dateTime>\",\n  \"startedAfter\": \"<dateTime>\",\n  \"finishedBefore\": \"<dateTime>\",\n  \"finishedAfter\": \"<dateTime>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"definitionId\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"instanceId\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/activity-instance?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"activity-instance"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"parentActivityInstanceId\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"activityName\": \"<string>\",\n    \"activityType\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"assignee\": \"<string>\",\n    \"calledProcessInstanceId\": \"<string>\",\n    \"calledCaseInstanceId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"endTime\": \"<dateTime>\",\n    \"durationInMillis\": \"<long>\",\n    \"canceled\": \"<boolean>\",\n    \"completeScope\": \"<boolean>\",\n    \"tenantId\": \"<string>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"parentActivityInstanceId\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"activityName\": \"<string>\",\n    \"activityType\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"assignee\": \"<string>\",\n    \"calledProcessInstanceId\": \"<string>\",\n    \"calledCaseInstanceId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"endTime\": \"<dateTime>\",\n    \"durationInMillis\": \"<long>\",\n    \"canceled\": \"<boolean>\",\n    \"completeScope\": \"<boolean>\",\n    \"tenantId\": \"<string>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Bad Request\nReturned if some of the query parameters are invalid, for example if a sortOrder parameter is supplied, but no sortBy.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response ",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"activityInstanceId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"activityName\": \"<string>\",\n  \"activityType\": \"<string>\",\n  \"taskAssignee\": \"<string>\",\n  \"finished\": \"<boolean>\",\n  \"unfinished\": \"<boolean>\",\n  \"canceled\": \"<boolean>\",\n  \"completeScope\": \"<boolean>\",\n  \"startedBefore\": \"<dateTime>\",\n  \"startedAfter\": \"<dateTime>\",\n  \"finishedBefore\": \"<dateTime>\",\n  \"finishedAfter\": \"<dateTime>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"definitionId\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"instanceId\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/activity-instance?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"activity-instance"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "batch",
					"item": [
						{
							"name": "cleanable-batch-report",
							"item": [
								{
									"name": "count",
									"item": [
										{
											"name": "Get Cleanable Batch Report Count",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/batch/cleanable-batch-report/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"batch",
														"cleanable-batch-report",
														"count"
													]
												},
												"description": "Queries for the number of report results about a historic batch operations relevant\nto history cleanup (see\n[History cleanup](https://docs.camunda.org/manual/7.21/user-guide/process-engine/history/#history-cleanup)\n).\nTakes the same parameters as the\n[Get Cleanable Batch Report](https://docs.camunda.org/manual/7.21/reference/rest/history/batch/get-cleanable-batch-report/)\nmethod."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/history/batch/cleanable-batch-report/count",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"batch",
																"cleanable-batch-report",
																"count"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": \"<long>\"\n}"
												},
												{
													"name": "See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/history/batch/cleanable-batch-report/count",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"batch",
																"cleanable-batch-report",
																"count"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Cleanable Batch Report",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/batch/cleanable-batch-report?sortBy=finished&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"batch",
												"cleanable-batch-report"
											],
											"query": [
												{
													"key": "sortBy",
													"value": "finished",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										},
										"description": "Retrieves a report about a historic batch operations relevant to history cleanup\n(see\n[History cleanup](https://docs.camunda.org/manual/7.21/user-guide/process-engine/history/#history-cleanup)\n) so that you can tune the history time to live.\nThese reports include the count of the finished batches, cleanable\nbatches and type of the batch.\nThe size of the result set can be retrieved by using the\n[Get Cleanable Batch Report Count](https://docs.camunda.org/manual/7.21/reference/rest/history/batch/get-cleanable-batch-report-count/)\nmethod.\n\n**Please note:**\nThe history time to live for batch operations does not support [Multi-Tenancy](https://docs.camunda.org/manual/7.21/user-guide/process-engine/multi-tenancy.md).\nThe report will return an information for all batch operations (for all tenants) if you have permissions\nto see the history.\n"
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/batch/cleanable-batch-report?sortBy=finished&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"batch",
														"cleanable-batch-report"
													],
													"query": [
														{
															"key": "sortBy",
															"value": "finished",
															"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
														},
														{
															"key": "sortOrder",
															"value": "asc",
															"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
														},
														{
															"key": "firstResult",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the index of the first result to return."
														},
														{
															"key": "maxResults",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"batchType\": \"<string>\",\n    \"historyTimeToLive\": \"<integer>\",\n    \"finishedBatchesCount\": \"<long>\",\n    \"cleanableBatchesCount\": \"<long>\"\n  },\n  {\n    \"batchType\": \"<string>\",\n    \"historyTimeToLive\": \"<integer>\",\n    \"finishedBatchesCount\": \"<long>\",\n    \"cleanableBatchesCount\": \"<long>\"\n  }\n]"
										},
										{
											"name": "See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/batch/cleanable-batch-report?sortBy=finished&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"batch",
														"cleanable-batch-report"
													],
													"query": [
														{
															"key": "sortBy",
															"value": "finished",
															"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
														},
														{
															"key": "sortOrder",
															"value": "asc",
															"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
														},
														{
															"key": "firstResult",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the index of the first result to return."
														},
														{
															"key": "maxResults",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "count",
							"item": [
								{
									"name": "Get Historic Batch Count",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/batch/count?batchId=<string>&type=<string>&completed=<boolean>&tenantIdIn=<string>&withoutTenantId=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"batch",
												"count"
											],
											"query": [
												{
													"key": "batchId",
													"value": "<string>",
													"description": "Filter by batch id."
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "Filter by batch type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/batch/#creating-a-batch)\nfor more information about batch types."
												},
												{
													"key": "completed",
													"value": "<boolean>",
													"description": "\nFilter completed or not completed batches. If the value is\n`true`, only completed batches, i.e., end time is set, are\nreturned. Otherwise, if the value is `false`, only running\nbatches, i.e., end time is null, are returned."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids. A batch matches if it has one of the given\ntenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include batches which belong to no tenant. Value can effectively only be `true`, as `false` is the default behavior."
												}
											]
										},
										"description": "Requests the number of historic batches that fulfill the query criteria.\nTakes the same filtering parameters as the\n[Get Historic Batches](https://docs.camunda.org/manual/7.21/reference/rest/history/batch/get-query/)\nmethod."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/batch/count?batchId=<string>&type=<string>&completed=<boolean>&tenantIdIn=<string>&withoutTenantId=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"batch",
														"count"
													],
													"query": [
														{
															"key": "batchId",
															"value": "<string>",
															"description": "Filter by batch id."
														},
														{
															"key": "type",
															"value": "<string>",
															"description": "Filter by batch type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/batch/#creating-a-batch)\nfor more information about batch types."
														},
														{
															"key": "completed",
															"value": "<boolean>",
															"description": "\nFilter completed or not completed batches. If the value is\n`true`, only completed batches, i.e., end time is set, are\nreturned. Otherwise, if the value is `false`, only running\nbatches, i.e., end time is null, are returned."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Filter by a comma-separated list of tenant ids. A batch matches if it has one of the given\ntenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include batches which belong to no tenant. Value can effectively only be `true`, as `false` is the default behavior."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<long>\"\n}"
										},
										{
											"name": "\nReturned if some of the query parameters are invalid, for example if\na `sortOrder` parameter is supplied, but no `sortBy`.\nSee the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/batch/count?batchId=<string>&type=<string>&completed=<boolean>&tenantIdIn=<string>&withoutTenantId=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"batch",
														"count"
													],
													"query": [
														{
															"key": "batchId",
															"value": "<string>",
															"description": "Filter by batch id."
														},
														{
															"key": "type",
															"value": "<string>",
															"description": "Filter by batch type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/batch/#creating-a-batch)\nfor more information about batch types."
														},
														{
															"key": "completed",
															"value": "<boolean>",
															"description": "\nFilter completed or not completed batches. If the value is\n`true`, only completed batches, i.e., end time is set, are\nreturned. Otherwise, if the value is `false`, only running\nbatches, i.e., end time is null, are returned."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Filter by a comma-separated list of tenant ids. A batch matches if it has one of the given\ntenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include batches which belong to no tenant. Value can effectively only be `true`, as `false` is the default behavior."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "set-removal-time",
							"item": [
								{
									"name": "Set Removal Time Async (POST)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"historicBatchQuery\": {},\n  \"historicBatchIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"absoluteRemovalTime\": \"<dateTime>\",\n  \"clearedRemovalTime\": \"<boolean>\",\n  \"calculatedRemovalTime\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/batch/set-removal-time",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"batch",
												"set-removal-time"
											]
										},
										"description": "Sets the removal time to multiple historic batches asynchronously (batch).\n\nAt least __historicBatchIds__ or __historicBatchQuery__ has to be\nprovided. If both are provided,\nall instances matching query criterion and instances from the list\nwill be updated with a removal time."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"historicBatchQuery\": {},\n  \"historicBatchIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"absoluteRemovalTime\": \"<dateTime>\",\n  \"clearedRemovalTime\": \"<boolean>\",\n  \"calculatedRemovalTime\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/history/batch/set-removal-time",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"batch",
														"set-removal-time"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"totalJobs\": \"<integer>\",\n  \"jobsCreated\": \"<integer>\",\n  \"batchJobsPerSeed\": \"<integer>\",\n  \"invocationsPerBatchJob\": \"<integer>\",\n  \"seedJobDefinitionId\": \"<string>\",\n  \"monitorJobDefinitionId\": \"<string>\",\n  \"batchJobDefinitionId\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"createUserId\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"executionStartTime\": \"<dateTime>\"\n}"
										},
										{
											"name": "\nRequest was unsuccessful due to a bad user request. This occurs if\nsome of the query parameters are invalid, e.g. if neither\nhistoricBatchIds nor historicBatchQuery is present or if no mode is\nspecified.\n\nSee the\n[Introduction](https://docs.camunda.org/m",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"historicBatchQuery\": {},\n  \"historicBatchIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"absoluteRemovalTime\": \"<dateTime>\",\n  \"clearedRemovalTime\": \"<boolean>\",\n  \"calculatedRemovalTime\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/history/batch/set-removal-time",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"batch",
														"set-removal-time"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete Historic Batch",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/batch/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"batch",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the batch to be deleted."
												}
											]
										},
										"description": "Deletes a historic batch by id, including related historic job logs."
									},
									"response": [
										{
											"name": "Request successful. This method returns no content.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/batch/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"batch",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Historic batch with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/batch/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"batch",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								},
								{
									"name": "Get Historic Batch",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/batch/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"batch",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the historic batch to be retrieved."
												}
											]
										},
										"description": "Retrieves a historic batch by id, according to the `HistoricBatch` interface in the\nengine."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/batch/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"batch",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"totalJobs\": \"<integer>\",\n  \"batchJobsPerSeed\": \"<integer>\",\n  \"invocationsPerBatchJob\": \"<integer>\",\n  \"seedJobDefinitionId\": \"<string>\",\n  \"monitorJobDefinitionId\": \"<string>\",\n  \"batchJobDefinitionId\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"createUserId\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"executionStartTime\": \"<dateTime>\",\n  \"endTime\": \"<dateTime>\",\n  \"removalTime\": \"<dateTime>\"\n}"
										},
										{
											"name": "\nHistoric batch with given id does not exist.\nSee the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/batch/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"batch",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Historic Batches",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/history/batch?batchId=<string>&type=<string>&completed=<boolean>&tenantIdIn=<string>&withoutTenantId=<boolean>&sortBy=tenantId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"history",
										"batch"
									],
									"query": [
										{
											"key": "batchId",
											"value": "<string>",
											"description": "Filter by batch id."
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "Filter by batch type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/batch/#creating-a-batch)\nfor more information about batch types."
										},
										{
											"key": "completed",
											"value": "<boolean>",
											"description": "\nFilter completed or not completed batches. If the value is\n`true`, only completed batches, i.e., end time is set, are\nreturned. Otherwise, if the value is `false`, only running\nbatches, i.e., end time is null, are returned."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids. A batch matches if it has one of the given\ntenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include batches which belong to no tenant. Value can effectively only be `true`, as `false` is the default behavior."
										},
										{
											"key": "sortBy",
											"value": "tenantId",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								},
								"description": "Queries for historic batches that fulfill given parameters. Parameters may be\nthe properties of batches, such as the id or type. The\nsize of the result set can be retrieved by using the\n[Get Historic Batch Count](https://docs.camunda.org/manual/7.21/reference/rest/history/batch/get-query-count/)\nmethod."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/batch?batchId=<string>&type=<string>&completed=<boolean>&tenantIdIn=<string>&withoutTenantId=<boolean>&sortBy=tenantId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"batch"
											],
											"query": [
												{
													"key": "batchId",
													"value": "<string>",
													"description": "Filter by batch id."
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "Filter by batch type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/batch/#creating-a-batch)\nfor more information about batch types."
												},
												{
													"key": "completed",
													"value": "<boolean>",
													"description": "\nFilter completed or not completed batches. If the value is\n`true`, only completed batches, i.e., end time is set, are\nreturned. Otherwise, if the value is `false`, only running\nbatches, i.e., end time is null, are returned."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids. A batch matches if it has one of the given\ntenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include batches which belong to no tenant. Value can effectively only be `true`, as `false` is the default behavior."
												},
												{
													"key": "sortBy",
													"value": "tenantId",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\",\n    \"totalJobs\": \"<integer>\",\n    \"batchJobsPerSeed\": \"<integer>\",\n    \"invocationsPerBatchJob\": \"<integer>\",\n    \"seedJobDefinitionId\": \"<string>\",\n    \"monitorJobDefinitionId\": \"<string>\",\n    \"batchJobDefinitionId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"createUserId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"executionStartTime\": \"<dateTime>\",\n    \"endTime\": \"<dateTime>\",\n    \"removalTime\": \"<dateTime>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\",\n    \"totalJobs\": \"<integer>\",\n    \"batchJobsPerSeed\": \"<integer>\",\n    \"invocationsPerBatchJob\": \"<integer>\",\n    \"seedJobDefinitionId\": \"<string>\",\n    \"monitorJobDefinitionId\": \"<string>\",\n    \"batchJobDefinitionId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"createUserId\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"executionStartTime\": \"<dateTime>\",\n    \"endTime\": \"<dateTime>\",\n    \"removalTime\": \"<dateTime>\"\n  }\n]"
								},
								{
									"name": "\nReturned if some of the query parameters are invalid, for example if\na `sortOrder` parameter is supplied, but no `sortBy`.\nSee the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/batch?batchId=<string>&type=<string>&completed=<boolean>&tenantIdIn=<string>&withoutTenantId=<boolean>&sortBy=tenantId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"batch"
											],
											"query": [
												{
													"key": "batchId",
													"value": "<string>",
													"description": "Filter by batch id."
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "Filter by batch type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/batch/#creating-a-batch)\nfor more information about batch types."
												},
												{
													"key": "completed",
													"value": "<boolean>",
													"description": "\nFilter completed or not completed batches. If the value is\n`true`, only completed batches, i.e., end time is set, are\nreturned. Otherwise, if the value is `false`, only running\nbatches, i.e., end time is null, are returned."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids. A batch matches if it has one of the given\ntenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include batches which belong to no tenant. Value can effectively only be `true`, as `false` is the default behavior."
												},
												{
													"key": "sortBy",
													"value": "tenantId",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "cleanup",
					"item": [
						{
							"name": "configuration",
							"item": [
								{
									"name": "Get History Cleanup Configuration",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/cleanup/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"cleanup",
												"configuration"
											]
										},
										"description": "Retrieves history cleanup batch window configuration (See\n[History cleanup](https://docs.camunda.org/manual/7.21/user-guide/process-engine/history/#history-cleanup))."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/cleanup/configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"cleanup",
														"configuration"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"batchWindowStartTime\": \"<dateTime>\",\n  \"batchWindowEndTime\": \"<dateTime>\",\n  \"enabled\": \"<boolean>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "job",
							"item": [
								{
									"name": "Find clean up history job (GET)",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/cleanup/job",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"cleanup",
												"job"
											]
										},
										"description": "**Deprecated!** Use `GET /history/cleanup/jobs` instead.\n\nFinds history cleanup job (See\n[History cleanup](https://docs.camunda.org/manual/7.21/user-guide/process-engine/history/#history-cleanup))."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/cleanup/job",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"cleanup",
														"job"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"jobDefinitionId\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"processInstanceId\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"retries\": \"<integer>\",\n  \"exceptionMessage\": \"<string>\",\n  \"failedActivityId\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"priority\": \"<long>\",\n  \"tenantId\": \"<string>\",\n  \"createTime\": \"<dateTime>\"\n}"
										},
										{
											"name": "History clean up job does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/cleanup/job",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"cleanup",
														"job"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "jobs",
							"item": [
								{
									"name": "Find clean up history jobs (GET)",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/cleanup/jobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"cleanup",
												"jobs"
											]
										},
										"description": "Finds history cleanup jobs (See\n[History cleanup](https://docs.camunda.org/manual/7.21/user-guide/process-engine/history/#history-cleanup))."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/cleanup/jobs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"cleanup",
														"jobs"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<string>\",\n    \"jobDefinitionId\": \"<string>\",\n    \"dueDate\": \"<dateTime>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"retries\": \"<integer>\",\n    \"exceptionMessage\": \"<string>\",\n    \"failedActivityId\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"priority\": \"<long>\",\n    \"tenantId\": \"<string>\",\n    \"createTime\": \"<dateTime>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"jobDefinitionId\": \"<string>\",\n    \"dueDate\": \"<dateTime>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"retries\": \"<integer>\",\n    \"exceptionMessage\": \"<string>\",\n    \"failedActivityId\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"priority\": \"<long>\",\n    \"tenantId\": \"<string>\",\n    \"createTime\": \"<dateTime>\"\n  }\n]"
										},
										{
											"name": "History clean up jobs are empty.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/cleanup/jobs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"cleanup",
														"jobs"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Clean up history (POST)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/history/cleanup?immediatelyDue=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"history",
										"cleanup"
									],
									"query": [
										{
											"key": "immediatelyDue",
											"value": "<boolean>",
											"description": "When true the job will be scheduled for nearest future. When `false`, the job will be\nscheduled for next batch window start time. Default is `true`."
										}
									]
								},
								"description": "Schedules asynchronous history cleanup (See\n[History cleanup](https://docs.camunda.org/manual/7.21/user-guide/process-engine/history/#history-cleanup)).\n\n**Note:** This endpoint will return at most a single history cleanup job.\nSince version `7.9.0` it is possible to configure multiple\n[parallel history cleanup jobs](https://docs.camunda.org/manual/7.21/user-guide/process-engine/history/#parallel-execution). Use\n[`GET /history/cleanup/jobs`](https://docs.camunda.org/manual/7.21/reference/rest/history/history-cleanup/get-history-cleanup-jobs)\nto find all the available history cleanup jobs."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/cleanup?immediatelyDue=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"cleanup"
											],
											"query": [
												{
													"key": "immediatelyDue",
													"value": "<boolean>",
													"description": "When true the job will be scheduled for nearest future. When `false`, the job will be\nscheduled for next batch window start time. Default is `true`."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"jobDefinitionId\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"processInstanceId\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"retries\": \"<integer>\",\n  \"exceptionMessage\": \"<string>\",\n  \"failedActivityId\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"priority\": \"<long>\",\n  \"tenantId\": \"<string>\",\n  \"createTime\": \"<dateTime>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid or the engine\ndoes not participate in history cleanup. See\n[Cleanup Execution Participation per Node](https://docs.camunda.org/manual/7.21/user-guide/process-engine/history/#cleanup-execution-participat",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/cleanup?immediatelyDue=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"cleanup"
											],
											"query": [
												{
													"key": "immediatelyDue",
													"value": "<boolean>",
													"description": "When true the job will be scheduled for nearest future. When `false`, the job will be\nscheduled for next batch window start time. Default is `true`."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "decision-definition",
					"item": [
						{
							"name": "cleanable-decision-instance-report",
							"item": [
								{
									"name": "count",
									"item": [
										{
											"name": "Get Cleanable Decision Instance Report Count",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/decision-definition/cleanable-decision-instance-report/count?decisionDefinitionIdIn=<string>&decisionDefinitionKeyIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&compact=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"decision-definition",
														"cleanable-decision-instance-report",
														"count"
													],
													"query": [
														{
															"key": "decisionDefinitionIdIn",
															"value": "<string>",
															"description": "Filter by decision definition ids. Must be a comma-separated list of decision definition ids."
														},
														{
															"key": "decisionDefinitionKeyIn",
															"value": "<string>",
															"description": "Filter by decision definition keys. Must be a comma-separated list of decision definition keys."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Filter by a comma-separated list of tenant ids. A decision definition must have one of the given tenant \nids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include decision definitions which belong to no tenant. Value may only be `true`, as `false` \nis the default behavior."
														},
														{
															"key": "compact",
															"value": "<boolean>",
															"description": "Only include decision instances which have more than zero finished instances. Value may only be `true`, \nas `false` is the default behavior."
														}
													]
												},
												"description": "Queries for the number of report results about a decision definition and finished\ndecision instances relevant to history cleanup (see\n[History cleanup](https://docs.camunda.org/manual/7.21/user-guide/process-engine/history/#history-cleanup)).\nTakes the same parameters as the [Get Cleanable Decision Instance Report](https://docs.camunda.org/manual/7.21/reference/rest/history/decision-definition/get-cleanable-decision-instance-report/) \nmethod."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/history/decision-definition/cleanable-decision-instance-report/count?decisionDefinitionIdIn=<string>&decisionDefinitionKeyIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&compact=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"decision-definition",
																"cleanable-decision-instance-report",
																"count"
															],
															"query": [
																{
																	"key": "decisionDefinitionIdIn",
																	"value": "<string>",
																	"description": "Filter by decision definition ids. Must be a comma-separated list of decision definition ids."
																},
																{
																	"key": "decisionDefinitionKeyIn",
																	"value": "<string>",
																	"description": "Filter by decision definition keys. Must be a comma-separated list of decision definition keys."
																},
																{
																	"key": "tenantIdIn",
																	"value": "<string>",
																	"description": "Filter by a comma-separated list of tenant ids. A decision definition must have one of the given tenant \nids."
																},
																{
																	"key": "withoutTenantId",
																	"value": "<boolean>",
																	"description": "Only include decision definitions which belong to no tenant. Value may only be `true`, as `false` \nis the default behavior."
																},
																{
																	"key": "compact",
																	"value": "<boolean>",
																	"description": "Only include decision instances which have more than zero finished instances. Value may only be `true`, \nas `false` is the default behavior."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": \"<long>\"\n}"
												},
												{
													"name": "See the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the\nerror response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/history/decision-definition/cleanable-decision-instance-report/count?decisionDefinitionIdIn=<string>&decisionDefinitionKeyIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&compact=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"decision-definition",
																"cleanable-decision-instance-report",
																"count"
															],
															"query": [
																{
																	"key": "decisionDefinitionIdIn",
																	"value": "<string>",
																	"description": "Filter by decision definition ids. Must be a comma-separated list of decision definition ids."
																},
																{
																	"key": "decisionDefinitionKeyIn",
																	"value": "<string>",
																	"description": "Filter by decision definition keys. Must be a comma-separated list of decision definition keys."
																},
																{
																	"key": "tenantIdIn",
																	"value": "<string>",
																	"description": "Filter by a comma-separated list of tenant ids. A decision definition must have one of the given tenant \nids."
																},
																{
																	"key": "withoutTenantId",
																	"value": "<boolean>",
																	"description": "Only include decision definitions which belong to no tenant. Value may only be `true`, as `false` \nis the default behavior."
																},
																{
																	"key": "compact",
																	"value": "<boolean>",
																	"description": "Only include decision instances which have more than zero finished instances. Value may only be `true`, \nas `false` is the default behavior."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Cleanable Decision Instance Report",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/decision-definition/cleanable-decision-instance-report?decisionDefinitionIdIn=<string>&decisionDefinitionKeyIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&compact=<boolean>&sortBy=finished&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"decision-definition",
												"cleanable-decision-instance-report"
											],
											"query": [
												{
													"key": "decisionDefinitionIdIn",
													"value": "<string>",
													"description": "Filter by decision definition ids. Must be a comma-separated list of decision definition ids."
												},
												{
													"key": "decisionDefinitionKeyIn",
													"value": "<string>",
													"description": "Filter by decision definition keys. Must be a comma-separated list of decision definition keys."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids. A decision definition must have one of the given tenant \nids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include decision definitions which belong to no tenant. Value may only be `true`, as `false` \nis the default behavior."
												},
												{
													"key": "compact",
													"value": "<boolean>",
													"description": "Only include decision instances which have more than zero finished instances. Value may only be `true`, \nas `false` is the default behavior."
												},
												{
													"key": "sortBy",
													"value": "finished",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										},
										"description": "Retrieves a report about a decision definition and finished decision instances\nrelevant to history cleanup (see\n[History cleanup](https://docs.camunda.org/manual/7.21/user-guide/process-engine/history/#history-cleanup)), \nso that you can tune the history time to live.\nThese reports include the count of the finished historic decision\ninstances, cleanable decision instances and basic decision definition\ndata - id, key, name and version.\nThe size of the result set can be retrieved by using the \n[Get Cleanable Decision Instance Report Count](https://docs.camunda.org/manual/7.21/reference/rest/history/decision-definition/get-cleanable-decision-instance-report-count/) method."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/decision-definition/cleanable-decision-instance-report?decisionDefinitionIdIn=<string>&decisionDefinitionKeyIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&compact=<boolean>&sortBy=finished&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"decision-definition",
														"cleanable-decision-instance-report"
													],
													"query": [
														{
															"key": "decisionDefinitionIdIn",
															"value": "<string>",
															"description": "Filter by decision definition ids. Must be a comma-separated list of decision definition ids."
														},
														{
															"key": "decisionDefinitionKeyIn",
															"value": "<string>",
															"description": "Filter by decision definition keys. Must be a comma-separated list of decision definition keys."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Filter by a comma-separated list of tenant ids. A decision definition must have one of the given tenant \nids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include decision definitions which belong to no tenant. Value may only be `true`, as `false` \nis the default behavior."
														},
														{
															"key": "compact",
															"value": "<boolean>",
															"description": "Only include decision instances which have more than zero finished instances. Value may only be `true`, \nas `false` is the default behavior."
														},
														{
															"key": "sortBy",
															"value": "finished",
															"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
														},
														{
															"key": "sortOrder",
															"value": "asc",
															"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
														},
														{
															"key": "firstResult",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the index of the first result to return."
														},
														{
															"key": "maxResults",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"decisionDefinitionId\": \"<string>\",\n    \"decisionDefinitionKey\": \"<string>\",\n    \"decisionDefinitionName\": \"<string>\",\n    \"decisionDefinitionVersion\": \"<integer>\",\n    \"historyTimeToLive\": \"<integer>\",\n    \"finishedDecisionInstanceCount\": \"<long>\",\n    \"cleanableDecisionInstanceCount\": \"<long>\",\n    \"tenantId\": \"<string>\"\n  },\n  {\n    \"decisionDefinitionId\": \"<string>\",\n    \"decisionDefinitionKey\": \"<string>\",\n    \"decisionDefinitionName\": \"<string>\",\n    \"decisionDefinitionVersion\": \"<integer>\",\n    \"historyTimeToLive\": \"<integer>\",\n    \"finishedDecisionInstanceCount\": \"<long>\",\n    \"cleanableDecisionInstanceCount\": \"<long>\",\n    \"tenantId\": \"<string>\"\n  }\n]"
										},
										{
											"name": "See the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the\nerror response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/decision-definition/cleanable-decision-instance-report?decisionDefinitionIdIn=<string>&decisionDefinitionKeyIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&compact=<boolean>&sortBy=finished&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"decision-definition",
														"cleanable-decision-instance-report"
													],
													"query": [
														{
															"key": "decisionDefinitionIdIn",
															"value": "<string>",
															"description": "Filter by decision definition ids. Must be a comma-separated list of decision definition ids."
														},
														{
															"key": "decisionDefinitionKeyIn",
															"value": "<string>",
															"description": "Filter by decision definition keys. Must be a comma-separated list of decision definition keys."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Filter by a comma-separated list of tenant ids. A decision definition must have one of the given tenant \nids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include decision definitions which belong to no tenant. Value may only be `true`, as `false` \nis the default behavior."
														},
														{
															"key": "compact",
															"value": "<boolean>",
															"description": "Only include decision instances which have more than zero finished instances. Value may only be `true`, \nas `false` is the default behavior."
														},
														{
															"key": "sortBy",
															"value": "finished",
															"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
														},
														{
															"key": "sortOrder",
															"value": "asc",
															"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
														},
														{
															"key": "firstResult",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the index of the first result to return."
														},
														{
															"key": "maxResults",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "decision-instance",
					"item": [
						{
							"name": "count",
							"item": [
								{
									"name": "Get Historic Decision Instance Count",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/decision-instance/count?decisionInstanceId=<string>&decisionInstanceIdIn=<string>&decisionDefinitionId=<string>&decisionDefinitionIdIn=<string>&decisionDefinitionKey=<string>&decisionDefinitionKeyIn=<string>&decisionDefinitionName=<string>&decisionDefinitionNameLike=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processInstanceId=<string>&caseDefinitionId=<string>&caseDefinitionKey=<string>&caseInstanceId=<string>&activityIdIn=<string>&activityInstanceIdIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&evaluatedBefore=<dateTime>&evaluatedAfter=<dateTime>&userId=<string>&rootDecisionInstanceId=<string>&rootDecisionInstancesOnly=<boolean>&decisionRequirementsDefinitionId=<string>&decisionRequirementsDefinitionKey=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"decision-instance",
												"count"
											],
											"query": [
												{
													"key": "decisionInstanceId",
													"value": "<string>",
													"description": "Filter by decision instance id."
												},
												{
													"key": "decisionInstanceIdIn",
													"value": "<string>",
													"description": "Filter by decision instance ids. Must be a comma-separated list of decision instance ids."
												},
												{
													"key": "decisionDefinitionId",
													"value": "<string>",
													"description": "Filter by the decision definition the instances belongs to."
												},
												{
													"key": "decisionDefinitionIdIn",
													"value": "<string>",
													"description": "Filter by the decision definitions the instances belongs to. Must be a\ncomma-separated list of decision definition ids."
												},
												{
													"key": "decisionDefinitionKey",
													"value": "<string>",
													"description": "Filter by the key of the decision definition the instances belongs to."
												},
												{
													"key": "decisionDefinitionKeyIn",
													"value": "<string>",
													"description": "Filter by the keys of the decision definition the instances belongs to. Must be a comma-\nseparated list of decision definition keys."
												},
												{
													"key": "decisionDefinitionName",
													"value": "<string>",
													"description": "Filter by the name of the decision definition the instances belongs to."
												},
												{
													"key": "decisionDefinitionNameLike",
													"value": "<string>",
													"description": "Filter by the name of the decision definition the instances belongs to, that the parameter\nis a substring of."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by the process definition the instances belongs to."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Filter by the key of the process definition the instances belongs to."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by the process instance the instances belongs to."
												},
												{
													"key": "caseDefinitionId",
													"value": "<string>",
													"description": "Filter by the case definition the instances belongs to."
												},
												{
													"key": "caseDefinitionKey",
													"value": "<string>",
													"description": "Filter by the key of the case definition the instances belongs to."
												},
												{
													"key": "caseInstanceId",
													"value": "<string>",
													"description": "Filter by the case instance the instances belongs to."
												},
												{
													"key": "activityIdIn",
													"value": "<string>",
													"description": "Filter by the activity ids the instances belongs to.\nMust be a comma-separated list of acitvity ids."
												},
												{
													"key": "activityInstanceIdIn",
													"value": "<string>",
													"description": "Filter by the activity instance ids the instances belongs to.\nMust be a comma-separated list of acitvity instance ids."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids. A historic decision instance must have one\nof the given tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic decision instances that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
												},
												{
													"key": "evaluatedBefore",
													"value": "<dateTime>",
													"description": "Restrict to instances that were evaluated before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-\ndd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "evaluatedAfter",
													"value": "<dateTime>",
													"description": "Restrict to instances that were evaluated after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-\ndd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "userId",
													"value": "<string>",
													"description": "Restrict to instances that were evaluated by the given user."
												},
												{
													"key": "rootDecisionInstanceId",
													"value": "<string>",
													"description": "Restrict to instances that have a given root decision instance id.\nThis also includes the decision instance with the given id."
												},
												{
													"key": "rootDecisionInstancesOnly",
													"value": "<boolean>",
													"description": "Restrict to instances those are the root decision instance of an evaluation.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "decisionRequirementsDefinitionId",
													"value": "<string>",
													"description": "Filter by the decision requirements definition the instances belongs to."
												},
												{
													"key": "decisionRequirementsDefinitionKey",
													"value": "<string>",
													"description": "Filter by the key of the decision requirements definition the instances belongs to."
												}
											]
										},
										"description": "Queries for the number of historic decision instances that fulfill the given parameters. \nTakes the same parameters as the \n[Get Historic Decision Instances](https://docs.camunda.org/manual/7.21/reference/rest/history/decision-instance/get-decision-instance-query/) \nmethod."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/decision-instance/count?decisionInstanceId=<string>&decisionInstanceIdIn=<string>&decisionDefinitionId=<string>&decisionDefinitionIdIn=<string>&decisionDefinitionKey=<string>&decisionDefinitionKeyIn=<string>&decisionDefinitionName=<string>&decisionDefinitionNameLike=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processInstanceId=<string>&caseDefinitionId=<string>&caseDefinitionKey=<string>&caseInstanceId=<string>&activityIdIn=<string>&activityInstanceIdIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&evaluatedBefore=<dateTime>&evaluatedAfter=<dateTime>&userId=<string>&rootDecisionInstanceId=<string>&rootDecisionInstancesOnly=<boolean>&decisionRequirementsDefinitionId=<string>&decisionRequirementsDefinitionKey=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"decision-instance",
														"count"
													],
													"query": [
														{
															"key": "decisionInstanceId",
															"value": "<string>",
															"description": "Filter by decision instance id."
														},
														{
															"key": "decisionInstanceIdIn",
															"value": "<string>",
															"description": "Filter by decision instance ids. Must be a comma-separated list of decision instance ids."
														},
														{
															"key": "decisionDefinitionId",
															"value": "<string>",
															"description": "Filter by the decision definition the instances belongs to."
														},
														{
															"key": "decisionDefinitionIdIn",
															"value": "<string>",
															"description": "Filter by the decision definitions the instances belongs to. Must be a\ncomma-separated list of decision definition ids."
														},
														{
															"key": "decisionDefinitionKey",
															"value": "<string>",
															"description": "Filter by the key of the decision definition the instances belongs to."
														},
														{
															"key": "decisionDefinitionKeyIn",
															"value": "<string>",
															"description": "Filter by the keys of the decision definition the instances belongs to. Must be a comma-\nseparated list of decision definition keys."
														},
														{
															"key": "decisionDefinitionName",
															"value": "<string>",
															"description": "Filter by the name of the decision definition the instances belongs to."
														},
														{
															"key": "decisionDefinitionNameLike",
															"value": "<string>",
															"description": "Filter by the name of the decision definition the instances belongs to, that the parameter\nis a substring of."
														},
														{
															"key": "processDefinitionId",
															"value": "<string>",
															"description": "Filter by the process definition the instances belongs to."
														},
														{
															"key": "processDefinitionKey",
															"value": "<string>",
															"description": "Filter by the key of the process definition the instances belongs to."
														},
														{
															"key": "processInstanceId",
															"value": "<string>",
															"description": "Filter by the process instance the instances belongs to."
														},
														{
															"key": "caseDefinitionId",
															"value": "<string>",
															"description": "Filter by the case definition the instances belongs to."
														},
														{
															"key": "caseDefinitionKey",
															"value": "<string>",
															"description": "Filter by the key of the case definition the instances belongs to."
														},
														{
															"key": "caseInstanceId",
															"value": "<string>",
															"description": "Filter by the case instance the instances belongs to."
														},
														{
															"key": "activityIdIn",
															"value": "<string>",
															"description": "Filter by the activity ids the instances belongs to.\nMust be a comma-separated list of acitvity ids."
														},
														{
															"key": "activityInstanceIdIn",
															"value": "<string>",
															"description": "Filter by the activity instance ids the instances belongs to.\nMust be a comma-separated list of acitvity instance ids."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Filter by a comma-separated list of tenant ids. A historic decision instance must have one\nof the given tenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include historic decision instances that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
														},
														{
															"key": "evaluatedBefore",
															"value": "<dateTime>",
															"description": "Restrict to instances that were evaluated before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-\ndd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "evaluatedAfter",
															"value": "<dateTime>",
															"description": "Restrict to instances that were evaluated after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-\ndd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "Restrict to instances that were evaluated by the given user."
														},
														{
															"key": "rootDecisionInstanceId",
															"value": "<string>",
															"description": "Restrict to instances that have a given root decision instance id.\nThis also includes the decision instance with the given id."
														},
														{
															"key": "rootDecisionInstancesOnly",
															"value": "<boolean>",
															"description": "Restrict to instances those are the root decision instance of an evaluation.\nValue may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "decisionRequirementsDefinitionId",
															"value": "<string>",
															"description": "Filter by the decision requirements definition the instances belongs to."
														},
														{
															"key": "decisionRequirementsDefinitionKey",
															"value": "<string>",
															"description": "Filter by the key of the decision requirements definition the instances belongs to."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<long>\"\n}"
										},
										{
											"name": "Returned if some of the query parameters are invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/decision-instance/count?decisionInstanceId=<string>&decisionInstanceIdIn=<string>&decisionDefinitionId=<string>&decisionDefinitionIdIn=<string>&decisionDefinitionKey=<string>&decisionDefinitionKeyIn=<string>&decisionDefinitionName=<string>&decisionDefinitionNameLike=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processInstanceId=<string>&caseDefinitionId=<string>&caseDefinitionKey=<string>&caseInstanceId=<string>&activityIdIn=<string>&activityInstanceIdIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&evaluatedBefore=<dateTime>&evaluatedAfter=<dateTime>&userId=<string>&rootDecisionInstanceId=<string>&rootDecisionInstancesOnly=<boolean>&decisionRequirementsDefinitionId=<string>&decisionRequirementsDefinitionKey=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"decision-instance",
														"count"
													],
													"query": [
														{
															"key": "decisionInstanceId",
															"value": "<string>",
															"description": "Filter by decision instance id."
														},
														{
															"key": "decisionInstanceIdIn",
															"value": "<string>",
															"description": "Filter by decision instance ids. Must be a comma-separated list of decision instance ids."
														},
														{
															"key": "decisionDefinitionId",
															"value": "<string>",
															"description": "Filter by the decision definition the instances belongs to."
														},
														{
															"key": "decisionDefinitionIdIn",
															"value": "<string>",
															"description": "Filter by the decision definitions the instances belongs to. Must be a\ncomma-separated list of decision definition ids."
														},
														{
															"key": "decisionDefinitionKey",
															"value": "<string>",
															"description": "Filter by the key of the decision definition the instances belongs to."
														},
														{
															"key": "decisionDefinitionKeyIn",
															"value": "<string>",
															"description": "Filter by the keys of the decision definition the instances belongs to. Must be a comma-\nseparated list of decision definition keys."
														},
														{
															"key": "decisionDefinitionName",
															"value": "<string>",
															"description": "Filter by the name of the decision definition the instances belongs to."
														},
														{
															"key": "decisionDefinitionNameLike",
															"value": "<string>",
															"description": "Filter by the name of the decision definition the instances belongs to, that the parameter\nis a substring of."
														},
														{
															"key": "processDefinitionId",
															"value": "<string>",
															"description": "Filter by the process definition the instances belongs to."
														},
														{
															"key": "processDefinitionKey",
															"value": "<string>",
															"description": "Filter by the key of the process definition the instances belongs to."
														},
														{
															"key": "processInstanceId",
															"value": "<string>",
															"description": "Filter by the process instance the instances belongs to."
														},
														{
															"key": "caseDefinitionId",
															"value": "<string>",
															"description": "Filter by the case definition the instances belongs to."
														},
														{
															"key": "caseDefinitionKey",
															"value": "<string>",
															"description": "Filter by the key of the case definition the instances belongs to."
														},
														{
															"key": "caseInstanceId",
															"value": "<string>",
															"description": "Filter by the case instance the instances belongs to."
														},
														{
															"key": "activityIdIn",
															"value": "<string>",
															"description": "Filter by the activity ids the instances belongs to.\nMust be a comma-separated list of acitvity ids."
														},
														{
															"key": "activityInstanceIdIn",
															"value": "<string>",
															"description": "Filter by the activity instance ids the instances belongs to.\nMust be a comma-separated list of acitvity instance ids."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Filter by a comma-separated list of tenant ids. A historic decision instance must have one\nof the given tenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include historic decision instances that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
														},
														{
															"key": "evaluatedBefore",
															"value": "<dateTime>",
															"description": "Restrict to instances that were evaluated before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-\ndd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "evaluatedAfter",
															"value": "<dateTime>",
															"description": "Restrict to instances that were evaluated after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-\ndd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "Restrict to instances that were evaluated by the given user."
														},
														{
															"key": "rootDecisionInstanceId",
															"value": "<string>",
															"description": "Restrict to instances that have a given root decision instance id.\nThis also includes the decision instance with the given id."
														},
														{
															"key": "rootDecisionInstancesOnly",
															"value": "<boolean>",
															"description": "Restrict to instances those are the root decision instance of an evaluation.\nValue may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "decisionRequirementsDefinitionId",
															"value": "<string>",
															"description": "Filter by the decision requirements definition the instances belongs to."
														},
														{
															"key": "decisionRequirementsDefinitionKey",
															"value": "<string>",
															"description": "Filter by the key of the decision requirements definition the instances belongs to."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "delete",
							"item": [
								{
									"name": "Delete Async (POST)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"historicDecisionInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"historicDecisionInstanceQuery\": {\n    \"decisionInstanceId\": \"<string>\",\n    \"decisionInstanceIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"decisionDefinitionId\": \"<string>\",\n    \"decisionDefinitionIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"decisionDefinitionKey\": \"<string>\",\n    \"decisionDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"decisionDefinitionName\": \"<string>\",\n    \"decisionDefinitionNameLike\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseDefinitionKey\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activityInstanceIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"evaluatedBefore\": \"<dateTime>\",\n    \"evaluatedAfter\": \"<dateTime>\",\n    \"userId\": \"<string>\",\n    \"rootDecisionInstanceId\": \"<string>\",\n    \"rootDecisionInstancesOnly\": \"<boolean>\",\n    \"decisionRequirementsDefinitionId\": \"<string>\",\n    \"decisionRequirementsDefinitionKey\": \"<string>\",\n    \"includeInputs\": \"<boolean>\",\n    \"includeOutputs\": \"<boolean>\",\n    \"disableBinaryFetching\": \"<boolean>\",\n    \"disableCustomObjectDeserialization\": \"<boolean>\"\n  },\n  \"deleteReason\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/decision-instance/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"decision-instance",
												"delete"
											]
										},
										"description": "Delete multiple historic decision instances asynchronously (batch).\nAt least `historicDecisionInstanceIds` or `historicDecisionInstanceQuery` \nhas to be provided. If both are provided then all instances matching query \ncriterion and instances from the list will be deleted."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"historicDecisionInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"historicDecisionInstanceQuery\": {\n    \"decisionInstanceId\": \"<string>\",\n    \"decisionInstanceIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"decisionDefinitionId\": \"<string>\",\n    \"decisionDefinitionIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"decisionDefinitionKey\": \"<string>\",\n    \"decisionDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"decisionDefinitionName\": \"<string>\",\n    \"decisionDefinitionNameLike\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseDefinitionKey\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activityInstanceIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"evaluatedBefore\": \"<dateTime>\",\n    \"evaluatedAfter\": \"<dateTime>\",\n    \"userId\": \"<string>\",\n    \"rootDecisionInstanceId\": \"<string>\",\n    \"rootDecisionInstancesOnly\": \"<boolean>\",\n    \"decisionRequirementsDefinitionId\": \"<string>\",\n    \"decisionRequirementsDefinitionKey\": \"<string>\",\n    \"includeInputs\": \"<boolean>\",\n    \"includeOutputs\": \"<boolean>\",\n    \"disableBinaryFetching\": \"<boolean>\",\n    \"disableCustomObjectDeserialization\": \"<boolean>\"\n  },\n  \"deleteReason\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/history/decision-instance/delete",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"decision-instance",
														"delete"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"totalJobs\": \"<integer>\",\n  \"jobsCreated\": \"<integer>\",\n  \"batchJobsPerSeed\": \"<integer>\",\n  \"invocationsPerBatchJob\": \"<integer>\",\n  \"seedJobDefinitionId\": \"<string>\",\n  \"monitorJobDefinitionId\": \"<string>\",\n  \"batchJobDefinitionId\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"createUserId\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"executionStartTime\": \"<dateTime>\"\n}"
										},
										{
											"name": "Returned if some of the query parameters are invalid, i.e. neither\n`historicDecisionInstanceIds` nor `historicDecisionInstanceQuery` is\npresent. See the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) \nfor the ",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"historicDecisionInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"historicDecisionInstanceQuery\": {\n    \"decisionInstanceId\": \"<string>\",\n    \"decisionInstanceIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"decisionDefinitionId\": \"<string>\",\n    \"decisionDefinitionIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"decisionDefinitionKey\": \"<string>\",\n    \"decisionDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"decisionDefinitionName\": \"<string>\",\n    \"decisionDefinitionNameLike\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseDefinitionKey\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activityInstanceIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"evaluatedBefore\": \"<dateTime>\",\n    \"evaluatedAfter\": \"<dateTime>\",\n    \"userId\": \"<string>\",\n    \"rootDecisionInstanceId\": \"<string>\",\n    \"rootDecisionInstancesOnly\": \"<boolean>\",\n    \"decisionRequirementsDefinitionId\": \"<string>\",\n    \"decisionRequirementsDefinitionKey\": \"<string>\",\n    \"includeInputs\": \"<boolean>\",\n    \"includeOutputs\": \"<boolean>\",\n    \"disableBinaryFetching\": \"<boolean>\",\n    \"disableCustomObjectDeserialization\": \"<boolean>\"\n  },\n  \"deleteReason\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/history/decision-instance/delete",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"decision-instance",
														"delete"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "set-removal-time",
							"item": [
								{
									"name": "Set Removal Time Async (POST)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"hierarchical\": \"<boolean>\",\n  \"historicDecisionInstanceQuery\": {\n    \"decisionInstanceId\": \"<string>\",\n    \"decisionInstanceIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"decisionDefinitionId\": \"<string>\",\n    \"decisionDefinitionIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"decisionDefinitionKey\": \"<string>\",\n    \"decisionDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"decisionDefinitionName\": \"<string>\",\n    \"decisionDefinitionNameLike\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseDefinitionKey\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activityInstanceIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"evaluatedBefore\": \"<dateTime>\",\n    \"evaluatedAfter\": \"<dateTime>\",\n    \"userId\": \"<string>\",\n    \"rootDecisionInstanceId\": \"<string>\",\n    \"rootDecisionInstancesOnly\": \"<boolean>\",\n    \"decisionRequirementsDefinitionId\": \"<string>\",\n    \"decisionRequirementsDefinitionKey\": \"<string>\",\n    \"includeInputs\": \"<boolean>\",\n    \"includeOutputs\": \"<boolean>\",\n    \"disableBinaryFetching\": \"<boolean>\",\n    \"disableCustomObjectDeserialization\": \"<boolean>\"\n  },\n  \"historicDecisionInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"absoluteRemovalTime\": \"<dateTime>\",\n  \"clearedRemovalTime\": \"<boolean>\",\n  \"calculatedRemovalTime\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/decision-instance/set-removal-time",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"decision-instance",
												"set-removal-time"
											]
										},
										"description": "Sets the removal time to multiple historic decision instances asynchronously\n(batch).\n\nAt least `historicDecisionInstanceIds` or\n`historicDecisionInstanceQuery` has to be provided. If both are\nprovided, all instances matching query criterion and instances from the list\nwill be updated with a removal time."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"hierarchical\": \"<boolean>\",\n  \"historicDecisionInstanceQuery\": {\n    \"decisionInstanceId\": \"<string>\",\n    \"decisionInstanceIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"decisionDefinitionId\": \"<string>\",\n    \"decisionDefinitionIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"decisionDefinitionKey\": \"<string>\",\n    \"decisionDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"decisionDefinitionName\": \"<string>\",\n    \"decisionDefinitionNameLike\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseDefinitionKey\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activityInstanceIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"evaluatedBefore\": \"<dateTime>\",\n    \"evaluatedAfter\": \"<dateTime>\",\n    \"userId\": \"<string>\",\n    \"rootDecisionInstanceId\": \"<string>\",\n    \"rootDecisionInstancesOnly\": \"<boolean>\",\n    \"decisionRequirementsDefinitionId\": \"<string>\",\n    \"decisionRequirementsDefinitionKey\": \"<string>\",\n    \"includeInputs\": \"<boolean>\",\n    \"includeOutputs\": \"<boolean>\",\n    \"disableBinaryFetching\": \"<boolean>\",\n    \"disableCustomObjectDeserialization\": \"<boolean>\"\n  },\n  \"historicDecisionInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"absoluteRemovalTime\": \"<dateTime>\",\n  \"clearedRemovalTime\": \"<boolean>\",\n  \"calculatedRemovalTime\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/history/decision-instance/set-removal-time",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"decision-instance",
														"set-removal-time"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"totalJobs\": \"<integer>\",\n  \"jobsCreated\": \"<integer>\",\n  \"batchJobsPerSeed\": \"<integer>\",\n  \"invocationsPerBatchJob\": \"<integer>\",\n  \"seedJobDefinitionId\": \"<string>\",\n  \"monitorJobDefinitionId\": \"<string>\",\n  \"batchJobDefinitionId\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"createUserId\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"executionStartTime\": \"<dateTime>\"\n}"
										},
										{
											"name": "Request was unsuccessfull due to a bad user request. This occurs if\nsome of the query parameters are invalid, e. g. if neither\nhistoricDecisionInstances nor historicDecisionInstanceQuery is\npresent or if no mode is specified.\n\nSee the\n[Introduction](https",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"hierarchical\": \"<boolean>\",\n  \"historicDecisionInstanceQuery\": {\n    \"decisionInstanceId\": \"<string>\",\n    \"decisionInstanceIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"decisionDefinitionId\": \"<string>\",\n    \"decisionDefinitionIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"decisionDefinitionKey\": \"<string>\",\n    \"decisionDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"decisionDefinitionName\": \"<string>\",\n    \"decisionDefinitionNameLike\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseDefinitionKey\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activityInstanceIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"evaluatedBefore\": \"<dateTime>\",\n    \"evaluatedAfter\": \"<dateTime>\",\n    \"userId\": \"<string>\",\n    \"rootDecisionInstanceId\": \"<string>\",\n    \"rootDecisionInstancesOnly\": \"<boolean>\",\n    \"decisionRequirementsDefinitionId\": \"<string>\",\n    \"decisionRequirementsDefinitionKey\": \"<string>\",\n    \"includeInputs\": \"<boolean>\",\n    \"includeOutputs\": \"<boolean>\",\n    \"disableBinaryFetching\": \"<boolean>\",\n    \"disableCustomObjectDeserialization\": \"<boolean>\"\n  },\n  \"historicDecisionInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"absoluteRemovalTime\": \"<dateTime>\",\n  \"clearedRemovalTime\": \"<boolean>\",\n  \"calculatedRemovalTime\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/history/decision-instance/set-removal-time",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"decision-instance",
														"set-removal-time"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get Historic Decision Instance",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/decision-instance/:id?includeInputs=<boolean>&includeOutputs=<boolean>&disableBinaryFetching=<boolean>&disableCustomObjectDeserialization=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"decision-instance",
												":id"
											],
											"query": [
												{
													"key": "includeInputs",
													"value": "<boolean>",
													"description": "Include input values in the result.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "includeOutputs",
													"value": "<boolean>",
													"description": "Include output values in the result.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "disableBinaryFetching",
													"value": "<boolean>",
													"description": "Disables fetching of byte array input and output values.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "disableCustomObjectDeserialization",
													"value": "<boolean>",
													"description": "Disables deserialization of input and output values that are custom objects.\nValue may only be `true`, as `false` is the default behavior."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the historic decision instance to be retrieved."
												}
											]
										},
										"description": "Retrieves a historic decision instance by id, according to the \n`HistoricDecisionInstance` interface in the engine."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/decision-instance/:id?includeInputs=<boolean>&includeOutputs=<boolean>&disableBinaryFetching=<boolean>&disableCustomObjectDeserialization=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"decision-instance",
														":id"
													],
													"query": [
														{
															"key": "includeInputs",
															"value": "<boolean>",
															"description": "Include input values in the result.\nValue may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "includeOutputs",
															"value": "<boolean>",
															"description": "Include output values in the result.\nValue may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "disableBinaryFetching",
															"value": "<boolean>",
															"description": "Disables fetching of byte array input and output values.\nValue may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "disableCustomObjectDeserialization",
															"value": "<boolean>",
															"description": "Disables deserialization of input and output values that are custom objects.\nValue may only be `true`, as `false` is the default behavior."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"decisionDefinitionId\": \"<string>\",\n  \"decisionDefinitionKey\": \"<string>\",\n  \"decisionDefinitionName\": \"<string>\",\n  \"evaluationTime\": \"<dateTime>\",\n  \"removalTime\": \"<dateTime>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"caseDefinitionId\": \"<string>\",\n  \"caseDefinitionKey\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"activityInstanceId\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"userId\": \"<string>\",\n  \"inputs\": [\n    {\n      \"id\": \"<string>\",\n      \"decisionInstanceId\": \"<string>\",\n      \"clauseId\": \"<string>\",\n      \"clauseName\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"type\": \"<string>\",\n      \"createTime\": \"<dateTime>\",\n      \"removalTime\": \"<dateTime>\",\n      \"rootProcessInstanceId\": \"<string>\",\n      \"value\": {},\n      \"valueInfo\": {\n        \"Ut_ff\": 62307298.637945026\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"decisionInstanceId\": \"<string>\",\n      \"clauseId\": \"<string>\",\n      \"clauseName\": \"<string>\",\n      \"errorMessage\": \"<string>\",\n      \"type\": \"<string>\",\n      \"createTime\": \"<dateTime>\",\n      \"removalTime\": \"<dateTime>\",\n      \"rootProcessInstanceId\": \"<string>\",\n      \"value\": {},\n      \"valueInfo\": {\n        \"non_4b\": \"enim nisi adipisicing\",\n        \"dolora_\": true\n      }\n    }\n  ],\n  \"ouputs\": [\n    {\n      \"id\": \"<string>\",\n      \"decisionInstanceId\": \"<string>\",\n      \"clauseId\": \"<string>\",\n      \"clauseName\": \"<string>\",\n      \"ruleId\": \"<string>\",\n      \"ruleOrder\": \"<integer>\",\n      \"errorMessage\": \"<string>\",\n      \"variableName\": \"<string>\",\n      \"type\": \"<string>\",\n      \"createTime\": \"<dateTime>\",\n      \"removalTime\": \"<dateTime>\",\n      \"rootProcessInstanceId\": \"<string>\",\n      \"value\": {},\n      \"valueInfo\": {\n        \"sed_8c8\": 96487930.10082194,\n        \"incididunt_2_8\": 11723012\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"decisionInstanceId\": \"<string>\",\n      \"clauseId\": \"<string>\",\n      \"clauseName\": \"<string>\",\n      \"ruleId\": \"<string>\",\n      \"ruleOrder\": \"<integer>\",\n      \"errorMessage\": \"<string>\",\n      \"variableName\": \"<string>\",\n      \"type\": \"<string>\",\n      \"createTime\": \"<dateTime>\",\n      \"removalTime\": \"<dateTime>\",\n      \"rootProcessInstanceId\": \"<string>\",\n      \"value\": {},\n      \"valueInfo\": {\n        \"Lorem__\": 19474241\n      }\n    }\n  ],\n  \"collectResultValue\": \"<double>\",\n  \"rootDecisionInstanceId\": \"<string>\",\n  \"rootProcessInstanceId\": \"<string>\",\n  \"decisionRequirementsDefinitionId\": \"<string>\",\n  \"decisionRequirementsDefinitionKey\": \"<string>\"\n}"
										},
										{
											"name": "Historic decision instance with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/decision-instance/:id?includeInputs=<boolean>&includeOutputs=<boolean>&disableBinaryFetching=<boolean>&disableCustomObjectDeserialization=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"decision-instance",
														":id"
													],
													"query": [
														{
															"key": "includeInputs",
															"value": "<boolean>",
															"description": "Include input values in the result.\nValue may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "includeOutputs",
															"value": "<boolean>",
															"description": "Include output values in the result.\nValue may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "disableBinaryFetching",
															"value": "<boolean>",
															"description": "Disables fetching of byte array input and output values.\nValue may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "disableCustomObjectDeserialization",
															"value": "<boolean>",
															"description": "Disables deserialization of input and output values that are custom objects.\nValue may only be `true`, as `false` is the default behavior."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Historic Decision Instances",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/history/decision-instance?decisionInstanceId=<string>&decisionInstanceIdIn=<string>&decisionDefinitionId=<string>&decisionDefinitionIdIn=<string>&decisionDefinitionKey=<string>&decisionDefinitionKeyIn=<string>&decisionDefinitionName=<string>&decisionDefinitionNameLike=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processInstanceId=<string>&caseDefinitionId=<string>&caseDefinitionKey=<string>&caseInstanceId=<string>&activityIdIn=<string>&activityInstanceIdIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&evaluatedBefore=<dateTime>&evaluatedAfter=<dateTime>&userId=<string>&rootDecisionInstanceId=<string>&rootDecisionInstancesOnly=<boolean>&decisionRequirementsDefinitionId=<string>&decisionRequirementsDefinitionKey=<string>&includeInputs=<boolean>&includeOutputs=<boolean>&disableBinaryFetching=<boolean>&disableCustomObjectDeserialization=<boolean>&sortBy=tenantId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"history",
										"decision-instance"
									],
									"query": [
										{
											"key": "decisionInstanceId",
											"value": "<string>",
											"description": "Filter by decision instance id."
										},
										{
											"key": "decisionInstanceIdIn",
											"value": "<string>",
											"description": "Filter by decision instance ids. Must be a comma-separated list of decision instance ids."
										},
										{
											"key": "decisionDefinitionId",
											"value": "<string>",
											"description": "Filter by the decision definition the instances belongs to."
										},
										{
											"key": "decisionDefinitionIdIn",
											"value": "<string>",
											"description": "Filter by the decision definitions the instances belongs to. Must be a\ncomma-separated list of decision definition ids."
										},
										{
											"key": "decisionDefinitionKey",
											"value": "<string>",
											"description": "Filter by the key of the decision definition the instances belongs to."
										},
										{
											"key": "decisionDefinitionKeyIn",
											"value": "<string>",
											"description": "Filter by the keys of the decision definition the instances belongs to. Must be a comma-\nseparated list of decision definition keys."
										},
										{
											"key": "decisionDefinitionName",
											"value": "<string>",
											"description": "Filter by the name of the decision definition the instances belongs to."
										},
										{
											"key": "decisionDefinitionNameLike",
											"value": "<string>",
											"description": "Filter by the name of the decision definition the instances belongs to, that the parameter\nis a substring of."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Filter by the process definition the instances belongs to."
										},
										{
											"key": "processDefinitionKey",
											"value": "<string>",
											"description": "Filter by the key of the process definition the instances belongs to."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Filter by the process instance the instances belongs to."
										},
										{
											"key": "caseDefinitionId",
											"value": "<string>",
											"description": "Filter by the case definition the instances belongs to."
										},
										{
											"key": "caseDefinitionKey",
											"value": "<string>",
											"description": "Filter by the key of the case definition the instances belongs to."
										},
										{
											"key": "caseInstanceId",
											"value": "<string>",
											"description": "Filter by the case instance the instances belongs to."
										},
										{
											"key": "activityIdIn",
											"value": "<string>",
											"description": "Filter by the activity ids the instances belongs to.\nMust be a comma-separated list of acitvity ids."
										},
										{
											"key": "activityInstanceIdIn",
											"value": "<string>",
											"description": "Filter by the activity instance ids the instances belongs to.\nMust be a comma-separated list of acitvity instance ids."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids. A historic decision instance must have one\nof the given tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include historic decision instances that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
										},
										{
											"key": "evaluatedBefore",
											"value": "<dateTime>",
											"description": "Restrict to instances that were evaluated before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-\ndd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "evaluatedAfter",
											"value": "<dateTime>",
											"description": "Restrict to instances that were evaluated after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-\ndd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "userId",
											"value": "<string>",
											"description": "Restrict to instances that were evaluated by the given user."
										},
										{
											"key": "rootDecisionInstanceId",
											"value": "<string>",
											"description": "Restrict to instances that have a given root decision instance id.\nThis also includes the decision instance with the given id."
										},
										{
											"key": "rootDecisionInstancesOnly",
											"value": "<boolean>",
											"description": "Restrict to instances those are the root decision instance of an evaluation.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "decisionRequirementsDefinitionId",
											"value": "<string>",
											"description": "Filter by the decision requirements definition the instances belongs to."
										},
										{
											"key": "decisionRequirementsDefinitionKey",
											"value": "<string>",
											"description": "Filter by the key of the decision requirements definition the instances belongs to."
										},
										{
											"key": "includeInputs",
											"value": "<boolean>",
											"description": "Include input values in the result.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "includeOutputs",
											"value": "<boolean>",
											"description": "Include output values in the result.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "disableBinaryFetching",
											"value": "<boolean>",
											"description": "Disables fetching of byte array input and output values.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "disableCustomObjectDeserialization",
											"value": "<boolean>",
											"description": "Disables deserialization of input and output values that are custom objects.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "sortBy",
											"value": "tenantId",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								},
								"description": "Queries for historic decision instances that fulfill the given parameters. \nThe size of the result set can be retrieved by using the \n[Get Historic Decision Instance Count](https://docs.camunda.org/manual/7.21/reference/rest/history/decision-instance/get-decision-instance-query-count/) \nmethod."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/decision-instance?decisionInstanceId=<string>&decisionInstanceIdIn=<string>&decisionDefinitionId=<string>&decisionDefinitionIdIn=<string>&decisionDefinitionKey=<string>&decisionDefinitionKeyIn=<string>&decisionDefinitionName=<string>&decisionDefinitionNameLike=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processInstanceId=<string>&caseDefinitionId=<string>&caseDefinitionKey=<string>&caseInstanceId=<string>&activityIdIn=<string>&activityInstanceIdIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&evaluatedBefore=<dateTime>&evaluatedAfter=<dateTime>&userId=<string>&rootDecisionInstanceId=<string>&rootDecisionInstancesOnly=<boolean>&decisionRequirementsDefinitionId=<string>&decisionRequirementsDefinitionKey=<string>&includeInputs=<boolean>&includeOutputs=<boolean>&disableBinaryFetching=<boolean>&disableCustomObjectDeserialization=<boolean>&sortBy=tenantId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"decision-instance"
											],
											"query": [
												{
													"key": "decisionInstanceId",
													"value": "<string>",
													"description": "Filter by decision instance id."
												},
												{
													"key": "decisionInstanceIdIn",
													"value": "<string>",
													"description": "Filter by decision instance ids. Must be a comma-separated list of decision instance ids."
												},
												{
													"key": "decisionDefinitionId",
													"value": "<string>",
													"description": "Filter by the decision definition the instances belongs to."
												},
												{
													"key": "decisionDefinitionIdIn",
													"value": "<string>",
													"description": "Filter by the decision definitions the instances belongs to. Must be a\ncomma-separated list of decision definition ids."
												},
												{
													"key": "decisionDefinitionKey",
													"value": "<string>",
													"description": "Filter by the key of the decision definition the instances belongs to."
												},
												{
													"key": "decisionDefinitionKeyIn",
													"value": "<string>",
													"description": "Filter by the keys of the decision definition the instances belongs to. Must be a comma-\nseparated list of decision definition keys."
												},
												{
													"key": "decisionDefinitionName",
													"value": "<string>",
													"description": "Filter by the name of the decision definition the instances belongs to."
												},
												{
													"key": "decisionDefinitionNameLike",
													"value": "<string>",
													"description": "Filter by the name of the decision definition the instances belongs to, that the parameter\nis a substring of."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by the process definition the instances belongs to."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Filter by the key of the process definition the instances belongs to."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by the process instance the instances belongs to."
												},
												{
													"key": "caseDefinitionId",
													"value": "<string>",
													"description": "Filter by the case definition the instances belongs to."
												},
												{
													"key": "caseDefinitionKey",
													"value": "<string>",
													"description": "Filter by the key of the case definition the instances belongs to."
												},
												{
													"key": "caseInstanceId",
													"value": "<string>",
													"description": "Filter by the case instance the instances belongs to."
												},
												{
													"key": "activityIdIn",
													"value": "<string>",
													"description": "Filter by the activity ids the instances belongs to.\nMust be a comma-separated list of acitvity ids."
												},
												{
													"key": "activityInstanceIdIn",
													"value": "<string>",
													"description": "Filter by the activity instance ids the instances belongs to.\nMust be a comma-separated list of acitvity instance ids."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids. A historic decision instance must have one\nof the given tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic decision instances that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
												},
												{
													"key": "evaluatedBefore",
													"value": "<dateTime>",
													"description": "Restrict to instances that were evaluated before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-\ndd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "evaluatedAfter",
													"value": "<dateTime>",
													"description": "Restrict to instances that were evaluated after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-\ndd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "userId",
													"value": "<string>",
													"description": "Restrict to instances that were evaluated by the given user."
												},
												{
													"key": "rootDecisionInstanceId",
													"value": "<string>",
													"description": "Restrict to instances that have a given root decision instance id.\nThis also includes the decision instance with the given id."
												},
												{
													"key": "rootDecisionInstancesOnly",
													"value": "<boolean>",
													"description": "Restrict to instances those are the root decision instance of an evaluation.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "decisionRequirementsDefinitionId",
													"value": "<string>",
													"description": "Filter by the decision requirements definition the instances belongs to."
												},
												{
													"key": "decisionRequirementsDefinitionKey",
													"value": "<string>",
													"description": "Filter by the key of the decision requirements definition the instances belongs to."
												},
												{
													"key": "includeInputs",
													"value": "<boolean>",
													"description": "Include input values in the result.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "includeOutputs",
													"value": "<boolean>",
													"description": "Include output values in the result.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "disableBinaryFetching",
													"value": "<boolean>",
													"description": "Disables fetching of byte array input and output values.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "disableCustomObjectDeserialization",
													"value": "<boolean>",
													"description": "Disables deserialization of input and output values that are custom objects.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "sortBy",
													"value": "tenantId",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"decisionDefinitionId\": \"<string>\",\n    \"decisionDefinitionKey\": \"<string>\",\n    \"decisionDefinitionName\": \"<string>\",\n    \"evaluationTime\": \"<dateTime>\",\n    \"removalTime\": \"<dateTime>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseDefinitionKey\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"inputs\": [\n      {\n        \"id\": \"<string>\",\n        \"decisionInstanceId\": \"<string>\",\n        \"clauseId\": \"<string>\",\n        \"clauseName\": \"<string>\",\n        \"errorMessage\": \"<string>\",\n        \"type\": \"<string>\",\n        \"createTime\": \"<dateTime>\",\n        \"removalTime\": \"<dateTime>\",\n        \"rootProcessInstanceId\": \"<string>\",\n        \"value\": {},\n        \"valueInfo\": {\n          \"mollitd20\": -48515920.47899915\n        }\n      },\n      {\n        \"id\": \"<string>\",\n        \"decisionInstanceId\": \"<string>\",\n        \"clauseId\": \"<string>\",\n        \"clauseName\": \"<string>\",\n        \"errorMessage\": \"<string>\",\n        \"type\": \"<string>\",\n        \"createTime\": \"<dateTime>\",\n        \"removalTime\": \"<dateTime>\",\n        \"rootProcessInstanceId\": \"<string>\",\n        \"value\": {},\n        \"valueInfo\": {\n          \"minim_d\": 8560083,\n          \"do1\": 13998613,\n          \"in31\": false,\n          \"ut_2\": -81697343\n        }\n      }\n    ],\n    \"ouputs\": [\n      {\n        \"id\": \"<string>\",\n        \"decisionInstanceId\": \"<string>\",\n        \"clauseId\": \"<string>\",\n        \"clauseName\": \"<string>\",\n        \"ruleId\": \"<string>\",\n        \"ruleOrder\": \"<integer>\",\n        \"errorMessage\": \"<string>\",\n        \"variableName\": \"<string>\",\n        \"type\": \"<string>\",\n        \"createTime\": \"<dateTime>\",\n        \"removalTime\": \"<dateTime>\",\n        \"rootProcessInstanceId\": \"<string>\",\n        \"value\": {},\n        \"valueInfo\": {\n          \"etbe2\": false,\n          \"magna_451\": 28892086.881658405\n        }\n      },\n      {\n        \"id\": \"<string>\",\n        \"decisionInstanceId\": \"<string>\",\n        \"clauseId\": \"<string>\",\n        \"clauseName\": \"<string>\",\n        \"ruleId\": \"<string>\",\n        \"ruleOrder\": \"<integer>\",\n        \"errorMessage\": \"<string>\",\n        \"variableName\": \"<string>\",\n        \"type\": \"<string>\",\n        \"createTime\": \"<dateTime>\",\n        \"removalTime\": \"<dateTime>\",\n        \"rootProcessInstanceId\": \"<string>\",\n        \"value\": {},\n        \"valueInfo\": {\n          \"sit_12a\": -54995494,\n          \"consequat_430\": 60453794\n        }\n      }\n    ],\n    \"collectResultValue\": \"<double>\",\n    \"rootDecisionInstanceId\": \"<string>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"decisionRequirementsDefinitionId\": \"<string>\",\n    \"decisionRequirementsDefinitionKey\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"decisionDefinitionId\": \"<string>\",\n    \"decisionDefinitionKey\": \"<string>\",\n    \"decisionDefinitionName\": \"<string>\",\n    \"evaluationTime\": \"<dateTime>\",\n    \"removalTime\": \"<dateTime>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseDefinitionKey\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"inputs\": [\n      {\n        \"id\": \"<string>\",\n        \"decisionInstanceId\": \"<string>\",\n        \"clauseId\": \"<string>\",\n        \"clauseName\": \"<string>\",\n        \"errorMessage\": \"<string>\",\n        \"type\": \"<string>\",\n        \"createTime\": \"<dateTime>\",\n        \"removalTime\": \"<dateTime>\",\n        \"rootProcessInstanceId\": \"<string>\",\n        \"value\": {},\n        \"valueInfo\": {\n          \"sintd\": \"consequat tempor in\"\n        }\n      },\n      {\n        \"id\": \"<string>\",\n        \"decisionInstanceId\": \"<string>\",\n        \"clauseId\": \"<string>\",\n        \"clauseName\": \"<string>\",\n        \"errorMessage\": \"<string>\",\n        \"type\": \"<string>\",\n        \"createTime\": \"<dateTime>\",\n        \"removalTime\": \"<dateTime>\",\n        \"rootProcessInstanceId\": \"<string>\",\n        \"value\": {},\n        \"valueInfo\": {\n          \"inb2\": true,\n          \"labore_360\": true\n        }\n      }\n    ],\n    \"ouputs\": [\n      {\n        \"id\": \"<string>\",\n        \"decisionInstanceId\": \"<string>\",\n        \"clauseId\": \"<string>\",\n        \"clauseName\": \"<string>\",\n        \"ruleId\": \"<string>\",\n        \"ruleOrder\": \"<integer>\",\n        \"errorMessage\": \"<string>\",\n        \"variableName\": \"<string>\",\n        \"type\": \"<string>\",\n        \"createTime\": \"<dateTime>\",\n        \"removalTime\": \"<dateTime>\",\n        \"rootProcessInstanceId\": \"<string>\",\n        \"value\": {},\n        \"valueInfo\": {\n          \"ipsum8\": false\n        }\n      },\n      {\n        \"id\": \"<string>\",\n        \"decisionInstanceId\": \"<string>\",\n        \"clauseId\": \"<string>\",\n        \"clauseName\": \"<string>\",\n        \"ruleId\": \"<string>\",\n        \"ruleOrder\": \"<integer>\",\n        \"errorMessage\": \"<string>\",\n        \"variableName\": \"<string>\",\n        \"type\": \"<string>\",\n        \"createTime\": \"<dateTime>\",\n        \"removalTime\": \"<dateTime>\",\n        \"rootProcessInstanceId\": \"<string>\",\n        \"value\": {},\n        \"valueInfo\": {\n          \"labore_19b\": true,\n          \"sint6c\": -21506811,\n          \"non97\": \"dolor aliqua tempor\"\n        }\n      }\n    ],\n    \"collectResultValue\": \"<double>\",\n    \"rootDecisionInstanceId\": \"<string>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"decisionRequirementsDefinitionId\": \"<string>\",\n    \"decisionRequirementsDefinitionKey\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/decision-instance?decisionInstanceId=<string>&decisionInstanceIdIn=<string>&decisionDefinitionId=<string>&decisionDefinitionIdIn=<string>&decisionDefinitionKey=<string>&decisionDefinitionKeyIn=<string>&decisionDefinitionName=<string>&decisionDefinitionNameLike=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processInstanceId=<string>&caseDefinitionId=<string>&caseDefinitionKey=<string>&caseInstanceId=<string>&activityIdIn=<string>&activityInstanceIdIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&evaluatedBefore=<dateTime>&evaluatedAfter=<dateTime>&userId=<string>&rootDecisionInstanceId=<string>&rootDecisionInstancesOnly=<boolean>&decisionRequirementsDefinitionId=<string>&decisionRequirementsDefinitionKey=<string>&includeInputs=<boolean>&includeOutputs=<boolean>&disableBinaryFetching=<boolean>&disableCustomObjectDeserialization=<boolean>&sortBy=tenantId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"decision-instance"
											],
											"query": [
												{
													"key": "decisionInstanceId",
													"value": "<string>",
													"description": "Filter by decision instance id."
												},
												{
													"key": "decisionInstanceIdIn",
													"value": "<string>",
													"description": "Filter by decision instance ids. Must be a comma-separated list of decision instance ids."
												},
												{
													"key": "decisionDefinitionId",
													"value": "<string>",
													"description": "Filter by the decision definition the instances belongs to."
												},
												{
													"key": "decisionDefinitionIdIn",
													"value": "<string>",
													"description": "Filter by the decision definitions the instances belongs to. Must be a\ncomma-separated list of decision definition ids."
												},
												{
													"key": "decisionDefinitionKey",
													"value": "<string>",
													"description": "Filter by the key of the decision definition the instances belongs to."
												},
												{
													"key": "decisionDefinitionKeyIn",
													"value": "<string>",
													"description": "Filter by the keys of the decision definition the instances belongs to. Must be a comma-\nseparated list of decision definition keys."
												},
												{
													"key": "decisionDefinitionName",
													"value": "<string>",
													"description": "Filter by the name of the decision definition the instances belongs to."
												},
												{
													"key": "decisionDefinitionNameLike",
													"value": "<string>",
													"description": "Filter by the name of the decision definition the instances belongs to, that the parameter\nis a substring of."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by the process definition the instances belongs to."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Filter by the key of the process definition the instances belongs to."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by the process instance the instances belongs to."
												},
												{
													"key": "caseDefinitionId",
													"value": "<string>",
													"description": "Filter by the case definition the instances belongs to."
												},
												{
													"key": "caseDefinitionKey",
													"value": "<string>",
													"description": "Filter by the key of the case definition the instances belongs to."
												},
												{
													"key": "caseInstanceId",
													"value": "<string>",
													"description": "Filter by the case instance the instances belongs to."
												},
												{
													"key": "activityIdIn",
													"value": "<string>",
													"description": "Filter by the activity ids the instances belongs to.\nMust be a comma-separated list of acitvity ids."
												},
												{
													"key": "activityInstanceIdIn",
													"value": "<string>",
													"description": "Filter by the activity instance ids the instances belongs to.\nMust be a comma-separated list of acitvity instance ids."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids. A historic decision instance must have one\nof the given tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic decision instances that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
												},
												{
													"key": "evaluatedBefore",
													"value": "<dateTime>",
													"description": "Restrict to instances that were evaluated before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-\ndd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "evaluatedAfter",
													"value": "<dateTime>",
													"description": "Restrict to instances that were evaluated after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-\ndd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "userId",
													"value": "<string>",
													"description": "Restrict to instances that were evaluated by the given user."
												},
												{
													"key": "rootDecisionInstanceId",
													"value": "<string>",
													"description": "Restrict to instances that have a given root decision instance id.\nThis also includes the decision instance with the given id."
												},
												{
													"key": "rootDecisionInstancesOnly",
													"value": "<boolean>",
													"description": "Restrict to instances those are the root decision instance of an evaluation.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "decisionRequirementsDefinitionId",
													"value": "<string>",
													"description": "Filter by the decision requirements definition the instances belongs to."
												},
												{
													"key": "decisionRequirementsDefinitionKey",
													"value": "<string>",
													"description": "Filter by the key of the decision requirements definition the instances belongs to."
												},
												{
													"key": "includeInputs",
													"value": "<boolean>",
													"description": "Include input values in the result.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "includeOutputs",
													"value": "<boolean>",
													"description": "Include output values in the result.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "disableBinaryFetching",
													"value": "<boolean>",
													"description": "Disables fetching of byte array input and output values.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "disableCustomObjectDeserialization",
													"value": "<boolean>",
													"description": "Disables deserialization of input and output values that are custom objects.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "sortBy",
													"value": "tenantId",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "decision-requirements-definition",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "statistics",
									"item": [
										{
											"name": "Get DRD Statistics",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/decision-requirements-definition/:id/statistics?decisionInstanceId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"decision-requirements-definition",
														":id",
														"statistics"
													],
													"query": [
														{
															"key": "decisionInstanceId",
															"value": "<string>",
															"description": "Restrict query results to be based only on specific evaluation\ninstance of a given decision requirements definition."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the decision requirements definition."
														}
													]
												},
												"description": "Retrieves evaluation statistics of a given decision requirements definition."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/history/decision-requirements-definition/:id/statistics?decisionInstanceId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"decision-requirements-definition",
																":id",
																"statistics"
															],
															"query": [
																{
																	"key": "decisionInstanceId",
																	"value": "<string>",
																	"description": "Restrict query results to be based only on specific evaluation\ninstance of a given decision requirements definition."
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"decisionDefinitionKey\": \"<string>\",\n    \"evaluations\": \"<integer>\"\n  },\n  {\n    \"decisionDefinitionKey\": \"<string>\",\n    \"evaluations\": \"<integer>\"\n  }\n]"
												},
												{
													"name": "Returned if some of the query parameters are invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/history/decision-requirements-definition/:id/statistics?decisionInstanceId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"decision-requirements-definition",
																":id",
																"statistics"
															],
															"query": [
																{
																	"key": "decisionInstanceId",
																	"value": "<string>",
																	"description": "Restrict query results to be based only on specific evaluation\ninstance of a given decision requirements definition."
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "detail",
					"item": [
						{
							"name": "count",
							"item": [
								{
									"name": "Get Historic Detail Count",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/detail/count?processInstanceId=<string>&processInstanceIdIn=<string>&executionId=<string>&taskId=<string>&activityInstanceId=<string>&caseInstanceId=<string>&caseExecutionId=<string>&variableInstanceId=<string>&variableTypeIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&userOperationId=<string>&formFields=<boolean>&variableUpdates=<boolean>&excludeTaskDetails=<boolean>&initial=<boolean>&occurredBefore=<dateTime>&occurredAfter=<dateTime>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"detail",
												"count"
											],
											"query": [
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by process instance id."
												},
												{
													"key": "processInstanceIdIn",
													"value": "<string>",
													"description": "Only include historic details which belong to one of the passed comma-separated process instance ids."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Filter by execution id."
												},
												{
													"key": "taskId",
													"value": "<string>",
													"description": "Filter by task id."
												},
												{
													"key": "activityInstanceId",
													"value": "<string>",
													"description": "Filter by activity instance id."
												},
												{
													"key": "caseInstanceId",
													"value": "<string>",
													"description": "Filter by case instance id."
												},
												{
													"key": "caseExecutionId",
													"value": "<string>",
													"description": "Filter by case execution id."
												},
												{
													"key": "variableInstanceId",
													"value": "<string>",
													"description": "Filter by variable instance id."
												},
												{
													"key": "variableTypeIn",
													"value": "<string>",
													"description": "Only include historic details where the variable updates belong to one of the passed comma-separated\nlist of variable types. A list of all supported variable types can be found\n[here](https://docs.camunda.org/manual/7.21/user-guide/process-engine/variables/#supported-variable-values).\n**Note:** All non-primitive variables are associated with the type `serializable`."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic details that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
												},
												{
													"key": "userOperationId",
													"value": "<string>",
													"description": "Filter by a user operation id."
												},
												{
													"key": "formFields",
													"value": "<boolean>",
													"description": "Only include `HistoricFormFields`. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "variableUpdates",
													"value": "<boolean>",
													"description": "Only include `HistoricVariableUpdates`. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "excludeTaskDetails",
													"value": "<boolean>",
													"description": "Excludes all task-related `HistoricDetails`, so only items which have no task id set will be selected.\nWhen this parameter is used together with `taskId`, this call is ignored and task details are not excluded.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "initial",
													"value": "<boolean>",
													"description": "Restrict to historic variable updates that contain only initial variable values.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "occurredBefore",
													"value": "<dateTime>",
													"description": "Restrict to historic details that occured before the given date (including the date).\nDefault [format](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/)\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., 2013-01-23T14:42:45.000+0200."
												},
												{
													"key": "occurredAfter",
													"value": "<dateTime>",
													"description": "Restrict to historic details that occured after the given date (including the date).\nDefault [format](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/)\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., 2013-01-23T14:42:45.000+0200."
												}
											]
										},
										"description": "Queries for the number of historic details that fulfill the given parameters.\nTakes the same parameters as the [Get Historic\nDetails](https://docs.camunda.org/manual/7.21/reference/rest/history/detail/get-detail-query/)\nmethod."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/detail/count?processInstanceId=<string>&processInstanceIdIn=<string>&executionId=<string>&taskId=<string>&activityInstanceId=<string>&caseInstanceId=<string>&caseExecutionId=<string>&variableInstanceId=<string>&variableTypeIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&userOperationId=<string>&formFields=<boolean>&variableUpdates=<boolean>&excludeTaskDetails=<boolean>&initial=<boolean>&occurredBefore=<dateTime>&occurredAfter=<dateTime>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"detail",
														"count"
													],
													"query": [
														{
															"key": "processInstanceId",
															"value": "<string>",
															"description": "Filter by process instance id."
														},
														{
															"key": "processInstanceIdIn",
															"value": "<string>",
															"description": "Only include historic details which belong to one of the passed comma-separated process instance ids."
														},
														{
															"key": "executionId",
															"value": "<string>",
															"description": "Filter by execution id."
														},
														{
															"key": "taskId",
															"value": "<string>",
															"description": "Filter by task id."
														},
														{
															"key": "activityInstanceId",
															"value": "<string>",
															"description": "Filter by activity instance id."
														},
														{
															"key": "caseInstanceId",
															"value": "<string>",
															"description": "Filter by case instance id."
														},
														{
															"key": "caseExecutionId",
															"value": "<string>",
															"description": "Filter by case execution id."
														},
														{
															"key": "variableInstanceId",
															"value": "<string>",
															"description": "Filter by variable instance id."
														},
														{
															"key": "variableTypeIn",
															"value": "<string>",
															"description": "Only include historic details where the variable updates belong to one of the passed comma-separated\nlist of variable types. A list of all supported variable types can be found\n[here](https://docs.camunda.org/manual/7.21/user-guide/process-engine/variables/#supported-variable-values).\n**Note:** All non-primitive variables are associated with the type `serializable`."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Filter by a comma-separated list of tenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include historic details that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
														},
														{
															"key": "userOperationId",
															"value": "<string>",
															"description": "Filter by a user operation id."
														},
														{
															"key": "formFields",
															"value": "<boolean>",
															"description": "Only include `HistoricFormFields`. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "variableUpdates",
															"value": "<boolean>",
															"description": "Only include `HistoricVariableUpdates`. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "excludeTaskDetails",
															"value": "<boolean>",
															"description": "Excludes all task-related `HistoricDetails`, so only items which have no task id set will be selected.\nWhen this parameter is used together with `taskId`, this call is ignored and task details are not excluded.\nValue may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "initial",
															"value": "<boolean>",
															"description": "Restrict to historic variable updates that contain only initial variable values.\nValue may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "occurredBefore",
															"value": "<dateTime>",
															"description": "Restrict to historic details that occured before the given date (including the date).\nDefault [format](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/)\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., 2013-01-23T14:42:45.000+0200."
														},
														{
															"key": "occurredAfter",
															"value": "<dateTime>",
															"description": "Restrict to historic details that occured after the given date (including the date).\nDefault [format](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/)\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., 2013-01-23T14:42:45.000+0200."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<long>\"\n}"
										},
										{
											"name": "Returned if some of the query parameters are invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/detail/count?processInstanceId=<string>&processInstanceIdIn=<string>&executionId=<string>&taskId=<string>&activityInstanceId=<string>&caseInstanceId=<string>&caseExecutionId=<string>&variableInstanceId=<string>&variableTypeIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&userOperationId=<string>&formFields=<boolean>&variableUpdates=<boolean>&excludeTaskDetails=<boolean>&initial=<boolean>&occurredBefore=<dateTime>&occurredAfter=<dateTime>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"detail",
														"count"
													],
													"query": [
														{
															"key": "processInstanceId",
															"value": "<string>",
															"description": "Filter by process instance id."
														},
														{
															"key": "processInstanceIdIn",
															"value": "<string>",
															"description": "Only include historic details which belong to one of the passed comma-separated process instance ids."
														},
														{
															"key": "executionId",
															"value": "<string>",
															"description": "Filter by execution id."
														},
														{
															"key": "taskId",
															"value": "<string>",
															"description": "Filter by task id."
														},
														{
															"key": "activityInstanceId",
															"value": "<string>",
															"description": "Filter by activity instance id."
														},
														{
															"key": "caseInstanceId",
															"value": "<string>",
															"description": "Filter by case instance id."
														},
														{
															"key": "caseExecutionId",
															"value": "<string>",
															"description": "Filter by case execution id."
														},
														{
															"key": "variableInstanceId",
															"value": "<string>",
															"description": "Filter by variable instance id."
														},
														{
															"key": "variableTypeIn",
															"value": "<string>",
															"description": "Only include historic details where the variable updates belong to one of the passed comma-separated\nlist of variable types. A list of all supported variable types can be found\n[here](https://docs.camunda.org/manual/7.21/user-guide/process-engine/variables/#supported-variable-values).\n**Note:** All non-primitive variables are associated with the type `serializable`."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Filter by a comma-separated list of tenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include historic details that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
														},
														{
															"key": "userOperationId",
															"value": "<string>",
															"description": "Filter by a user operation id."
														},
														{
															"key": "formFields",
															"value": "<boolean>",
															"description": "Only include `HistoricFormFields`. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "variableUpdates",
															"value": "<boolean>",
															"description": "Only include `HistoricVariableUpdates`. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "excludeTaskDetails",
															"value": "<boolean>",
															"description": "Excludes all task-related `HistoricDetails`, so only items which have no task id set will be selected.\nWhen this parameter is used together with `taskId`, this call is ignored and task details are not excluded.\nValue may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "initial",
															"value": "<boolean>",
															"description": "Restrict to historic variable updates that contain only initial variable values.\nValue may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "occurredBefore",
															"value": "<dateTime>",
															"description": "Restrict to historic details that occured before the given date (including the date).\nDefault [format](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/)\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., 2013-01-23T14:42:45.000+0200."
														},
														{
															"key": "occurredAfter",
															"value": "<dateTime>",
															"description": "Restrict to historic details that occured after the given date (including the date).\nDefault [format](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/)\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., 2013-01-23T14:42:45.000+0200."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "data",
									"item": [
										{
											"name": "Get Historic Detail (Binary)",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/octet-stream"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/detail/:id/data",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"detail",
														":id",
														"data"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the historic variable update."
														}
													]
												},
												"description": "Retrieves the content of a historic variable update by id. Applicable for byte\narray and file variables."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/octet-stream"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/history/detail/:id/data",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"detail",
																":id",
																"data"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/octet-stream"
														}
													],
													"cookie": [],
													"body": "<string>"
												},
												{
													"name": "Detail with given id exists but is not a binary variable. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/history/detail/:id/data",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"detail",
																":id",
																"data"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "Detail with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/history/detail/:id/data",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"detail",
																":id",
																"data"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Historic Detail",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/detail/:id?deserializeValue=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"detail",
												":id"
											],
											"query": [
												{
													"key": "deserializeValue",
													"value": "<boolean>",
													"description": "Determines whether serializable variable values (typically\nvariables that store custom Java objects) should be deserialized\non server side (default `true`).\n\nIf set to `true`, a serializable variable will be deserialized on\nserver side and transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean\nproperty introspection feature. Note that this requires the Java\nclasses of the variable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its\nserialized format. For example, a variable that is serialized as\nXML will be returned as a JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of\nbackward compatibility, we recommend setting this parameter to\n`false` when developing web applications that are independent of\nthe Java process applications deployed to the engine."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the detail."
												}
											]
										},
										"description": "Retrieves a historic detail by id."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/detail/:id?deserializeValue=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"detail",
														":id"
													],
													"query": [
														{
															"key": "deserializeValue",
															"value": "<boolean>",
															"description": "Determines whether serializable variable values (typically\nvariables that store custom Java objects) should be deserialized\non server side (default `true`).\n\nIf set to `true`, a serializable variable will be deserialized on\nserver side and transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean\nproperty introspection feature. Note that this requires the Java\nclasses of the variable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its\nserialized format. For example, a variable that is serialized as\nXML will be returned as a JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of\nbackward compatibility, we recommend setting this parameter to\n`false` when developing web applications that are independent of\nthe Java process applications deployed to the engine."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"activityInstanceId\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"caseDefinitionKey\": \"<string>\",\n  \"caseDefinitionId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"taskId\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"userOperationId\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"removalTime\": \"<dateTime>\",\n  \"rootProcessInstanceId\": \"<string>\",\n  \"fieldId\": \"<string>\",\n  \"fieldValue\": {},\n  \"variableName\": \"<string>\",\n  \"variableInstanceId\": \"<string>\",\n  \"variableType\": \"<string>\",\n  \"value\": {},\n  \"valueInfo\": {\n    \"amet_0f\": \"in reprehenderit aliquip magna\",\n    \"consectetur_98\": \"cillum Ut\",\n    \"ipsum3b9\": -3159416.63989681,\n    \"anim_2\": false,\n    \"aliqua_02\": \"et ullamco laborum deserunt\"\n  },\n  \"initial\": \"<boolean>\",\n  \"revision\": \"<integer>\",\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"name": "Variable with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/detail/:id?deserializeValue=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"detail",
														":id"
													],
													"query": [
														{
															"key": "deserializeValue",
															"value": "<boolean>",
															"description": "Determines whether serializable variable values (typically\nvariables that store custom Java objects) should be deserialized\non server side (default `true`).\n\nIf set to `true`, a serializable variable will be deserialized on\nserver side and transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean\nproperty introspection feature. Note that this requires the Java\nclasses of the variable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its\nserialized format. For example, a variable that is serialized as\nXML will be returned as a JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of\nbackward compatibility, we recommend setting this parameter to\n`false` when developing web applications that are independent of\nthe Java process applications deployed to the engine."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Historic Details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/history/detail?processInstanceId=<string>&processInstanceIdIn=<string>&executionId=<string>&taskId=<string>&activityInstanceId=<string>&caseInstanceId=<string>&caseExecutionId=<string>&variableInstanceId=<string>&variableTypeIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&userOperationId=<string>&formFields=<boolean>&variableUpdates=<boolean>&excludeTaskDetails=<boolean>&initial=<boolean>&occurredBefore=<dateTime>&occurredAfter=<dateTime>&sortBy=variableType&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&deserializeValues=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"history",
										"detail"
									],
									"query": [
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Filter by process instance id."
										},
										{
											"key": "processInstanceIdIn",
											"value": "<string>",
											"description": "Only include historic details which belong to one of the passed comma-separated process instance ids."
										},
										{
											"key": "executionId",
											"value": "<string>",
											"description": "Filter by execution id."
										},
										{
											"key": "taskId",
											"value": "<string>",
											"description": "Filter by task id."
										},
										{
											"key": "activityInstanceId",
											"value": "<string>",
											"description": "Filter by activity instance id."
										},
										{
											"key": "caseInstanceId",
											"value": "<string>",
											"description": "Filter by case instance id."
										},
										{
											"key": "caseExecutionId",
											"value": "<string>",
											"description": "Filter by case execution id."
										},
										{
											"key": "variableInstanceId",
											"value": "<string>",
											"description": "Filter by variable instance id."
										},
										{
											"key": "variableTypeIn",
											"value": "<string>",
											"description": "Only include historic details where the variable updates belong to one of the passed comma-separated\nlist of variable types. A list of all supported variable types can be found\n[here](https://docs.camunda.org/manual/7.21/user-guide/process-engine/variables/#supported-variable-values).\n**Note:** All non-primitive variables are associated with the type `serializable`."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include historic details that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
										},
										{
											"key": "userOperationId",
											"value": "<string>",
											"description": "Filter by a user operation id."
										},
										{
											"key": "formFields",
											"value": "<boolean>",
											"description": "Only include `HistoricFormFields`. Value may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "variableUpdates",
											"value": "<boolean>",
											"description": "Only include `HistoricVariableUpdates`. Value may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "excludeTaskDetails",
											"value": "<boolean>",
											"description": "Excludes all task-related `HistoricDetails`, so only items which have no task id set will be selected.\nWhen this parameter is used together with `taskId`, this call is ignored and task details are not excluded.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "initial",
											"value": "<boolean>",
											"description": "Restrict to historic variable updates that contain only initial variable values.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "occurredBefore",
											"value": "<dateTime>",
											"description": "Restrict to historic details that occured before the given date (including the date).\nDefault [format](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/)\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., 2013-01-23T14:42:45.000+0200."
										},
										{
											"key": "occurredAfter",
											"value": "<dateTime>",
											"description": "Restrict to historic details that occured after the given date (including the date).\nDefault [format](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/)\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., 2013-01-23T14:42:45.000+0200."
										},
										{
											"key": "sortBy",
											"value": "variableType",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										},
										{
											"key": "deserializeValues",
											"value": "<boolean>",
											"description": "Determines whether serializable variable values (typically variables that\nstore custom Java objects) should be deserialized on server side (default\n`true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side\nand transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean property\nintrospection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized\nformat. For example, a variable that is serialized as XML will be returned as\na JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of backward\ncompatibility, we recommend setting this parameter to `false` when developing\nweb applications that are independent of the Java process applications\ndeployed to the engine."
										}
									]
								},
								"description": "Queries for historic details that fulfill the given parameters.\nThe size of the result set can be retrieved by using the\n[Get Historic Detail Count](https://docs.camunda.org/manual/7.21/reference/rest/history/detail/get-detail-query-count/) method."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/detail?processInstanceId=<string>&processInstanceIdIn=<string>&executionId=<string>&taskId=<string>&activityInstanceId=<string>&caseInstanceId=<string>&caseExecutionId=<string>&variableInstanceId=<string>&variableTypeIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&userOperationId=<string>&formFields=<boolean>&variableUpdates=<boolean>&excludeTaskDetails=<boolean>&initial=<boolean>&occurredBefore=<dateTime>&occurredAfter=<dateTime>&sortBy=variableType&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&deserializeValues=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"detail"
											],
											"query": [
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by process instance id."
												},
												{
													"key": "processInstanceIdIn",
													"value": "<string>",
													"description": "Only include historic details which belong to one of the passed comma-separated process instance ids."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Filter by execution id."
												},
												{
													"key": "taskId",
													"value": "<string>",
													"description": "Filter by task id."
												},
												{
													"key": "activityInstanceId",
													"value": "<string>",
													"description": "Filter by activity instance id."
												},
												{
													"key": "caseInstanceId",
													"value": "<string>",
													"description": "Filter by case instance id."
												},
												{
													"key": "caseExecutionId",
													"value": "<string>",
													"description": "Filter by case execution id."
												},
												{
													"key": "variableInstanceId",
													"value": "<string>",
													"description": "Filter by variable instance id."
												},
												{
													"key": "variableTypeIn",
													"value": "<string>",
													"description": "Only include historic details where the variable updates belong to one of the passed comma-separated\nlist of variable types. A list of all supported variable types can be found\n[here](https://docs.camunda.org/manual/7.21/user-guide/process-engine/variables/#supported-variable-values).\n**Note:** All non-primitive variables are associated with the type `serializable`."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic details that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
												},
												{
													"key": "userOperationId",
													"value": "<string>",
													"description": "Filter by a user operation id."
												},
												{
													"key": "formFields",
													"value": "<boolean>",
													"description": "Only include `HistoricFormFields`. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "variableUpdates",
													"value": "<boolean>",
													"description": "Only include `HistoricVariableUpdates`. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "excludeTaskDetails",
													"value": "<boolean>",
													"description": "Excludes all task-related `HistoricDetails`, so only items which have no task id set will be selected.\nWhen this parameter is used together with `taskId`, this call is ignored and task details are not excluded.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "initial",
													"value": "<boolean>",
													"description": "Restrict to historic variable updates that contain only initial variable values.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "occurredBefore",
													"value": "<dateTime>",
													"description": "Restrict to historic details that occured before the given date (including the date).\nDefault [format](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/)\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., 2013-01-23T14:42:45.000+0200."
												},
												{
													"key": "occurredAfter",
													"value": "<dateTime>",
													"description": "Restrict to historic details that occured after the given date (including the date).\nDefault [format](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/)\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., 2013-01-23T14:42:45.000+0200."
												},
												{
													"key": "sortBy",
													"value": "variableType",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												},
												{
													"key": "deserializeValues",
													"value": "<boolean>",
													"description": "Determines whether serializable variable values (typically variables that\nstore custom Java objects) should be deserialized on server side (default\n`true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side\nand transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean property\nintrospection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized\nformat. For example, a variable that is serialized as XML will be returned as\na JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of backward\ncompatibility, we recommend setting this parameter to `false` when developing\nweb applications that are independent of the Java process applications\ndeployed to the engine."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"caseDefinitionKey\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"caseExecutionId\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"userOperationId\": \"<string>\",\n    \"time\": \"<dateTime>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"fieldId\": \"<string>\",\n    \"fieldValue\": {},\n    \"variableName\": \"<string>\",\n    \"variableInstanceId\": \"<string>\",\n    \"variableType\": \"<string>\",\n    \"value\": {},\n    \"valueInfo\": {\n      \"voluptate_2\": false\n    },\n    \"initial\": \"<boolean>\",\n    \"revision\": \"<integer>\",\n    \"errorMessage\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"caseDefinitionKey\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"caseExecutionId\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"userOperationId\": \"<string>\",\n    \"time\": \"<dateTime>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"fieldId\": \"<string>\",\n    \"fieldValue\": {},\n    \"variableName\": \"<string>\",\n    \"variableInstanceId\": \"<string>\",\n    \"variableType\": \"<string>\",\n    \"value\": {},\n    \"valueInfo\": {\n      \"mollit_f_4\": -40422295.54763046,\n      \"sunt2e4\": \"enim amet\"\n    },\n    \"initial\": \"<boolean>\",\n    \"revision\": \"<integer>\",\n    \"errorMessage\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/detail?processInstanceId=<string>&processInstanceIdIn=<string>&executionId=<string>&taskId=<string>&activityInstanceId=<string>&caseInstanceId=<string>&caseExecutionId=<string>&variableInstanceId=<string>&variableTypeIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&userOperationId=<string>&formFields=<boolean>&variableUpdates=<boolean>&excludeTaskDetails=<boolean>&initial=<boolean>&occurredBefore=<dateTime>&occurredAfter=<dateTime>&sortBy=variableType&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&deserializeValues=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"detail"
											],
											"query": [
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by process instance id."
												},
												{
													"key": "processInstanceIdIn",
													"value": "<string>",
													"description": "Only include historic details which belong to one of the passed comma-separated process instance ids."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Filter by execution id."
												},
												{
													"key": "taskId",
													"value": "<string>",
													"description": "Filter by task id."
												},
												{
													"key": "activityInstanceId",
													"value": "<string>",
													"description": "Filter by activity instance id."
												},
												{
													"key": "caseInstanceId",
													"value": "<string>",
													"description": "Filter by case instance id."
												},
												{
													"key": "caseExecutionId",
													"value": "<string>",
													"description": "Filter by case execution id."
												},
												{
													"key": "variableInstanceId",
													"value": "<string>",
													"description": "Filter by variable instance id."
												},
												{
													"key": "variableTypeIn",
													"value": "<string>",
													"description": "Only include historic details where the variable updates belong to one of the passed comma-separated\nlist of variable types. A list of all supported variable types can be found\n[here](https://docs.camunda.org/manual/7.21/user-guide/process-engine/variables/#supported-variable-values).\n**Note:** All non-primitive variables are associated with the type `serializable`."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic details that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
												},
												{
													"key": "userOperationId",
													"value": "<string>",
													"description": "Filter by a user operation id."
												},
												{
													"key": "formFields",
													"value": "<boolean>",
													"description": "Only include `HistoricFormFields`. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "variableUpdates",
													"value": "<boolean>",
													"description": "Only include `HistoricVariableUpdates`. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "excludeTaskDetails",
													"value": "<boolean>",
													"description": "Excludes all task-related `HistoricDetails`, so only items which have no task id set will be selected.\nWhen this parameter is used together with `taskId`, this call is ignored and task details are not excluded.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "initial",
													"value": "<boolean>",
													"description": "Restrict to historic variable updates that contain only initial variable values.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "occurredBefore",
													"value": "<dateTime>",
													"description": "Restrict to historic details that occured before the given date (including the date).\nDefault [format](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/)\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., 2013-01-23T14:42:45.000+0200."
												},
												{
													"key": "occurredAfter",
													"value": "<dateTime>",
													"description": "Restrict to historic details that occured after the given date (including the date).\nDefault [format](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/)\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., 2013-01-23T14:42:45.000+0200."
												},
												{
													"key": "sortBy",
													"value": "variableType",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												},
												{
													"key": "deserializeValues",
													"value": "<boolean>",
													"description": "Determines whether serializable variable values (typically variables that\nstore custom Java objects) should be deserialized on server side (default\n`true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side\nand transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean property\nintrospection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized\nformat. For example, a variable that is serialized as XML will be returned as\na JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of backward\ncompatibility, we recommend setting this parameter to `false` when developing\nweb applications that are independent of the Java process applications\ndeployed to the engine."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get Historic Details (POST)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionId\": \"<string>\",\n  \"taskId\": \"<string>\",\n  \"activityInstanceId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"variableInstanceId\": \"<string>\",\n  \"variableTypeIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"userOperationId\": \"<string>\",\n  \"formFields\": \"<boolean>\",\n  \"variableUpdates\": \"<boolean>\",\n  \"excludeTaskDetails\": \"<boolean>\",\n  \"initial\": \"<boolean>\",\n  \"occurredBefore\": \"<dateTime>\",\n  \"occurredAfter\": \"<dateTime>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"variableRevision\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"tenantId\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/history/detail?firstResult=<integer>&maxResults=<integer>&deserializeValues=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"history",
										"detail"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										},
										{
											"key": "deserializeValues",
											"value": "<boolean>",
											"description": "Determines whether serializable variable values (typically variables that\nstore custom Java objects) should be deserialized on server side (default\n`true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side\nand transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean property\nintrospection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized\nformat. For example, a variable that is serialized as XML will be returned as\na JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of backward\ncompatibility, we recommend setting this parameter to `false` when developing\nweb applications that are independent of the Java process applications\ndeployed to the engine."
										}
									]
								},
								"description": "Queries for historic details that fulfill the given parameters. This method is slightly more\npowerful than the [Get Historic Details](https://docs.camunda.org/manual/7.21/reference/rest/history/detail/get-detail-query/)\nmethod because it allows sorting by multiple parameters. The size of the result set can be retrieved by\nusing the [Get Historic Detail Count](https://docs.camunda.org/manual/7.21/reference/rest/history/detail/get-detail-query-count/)\nmethod."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionId\": \"<string>\",\n  \"taskId\": \"<string>\",\n  \"activityInstanceId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"variableInstanceId\": \"<string>\",\n  \"variableTypeIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"userOperationId\": \"<string>\",\n  \"formFields\": \"<boolean>\",\n  \"variableUpdates\": \"<boolean>\",\n  \"excludeTaskDetails\": \"<boolean>\",\n  \"initial\": \"<boolean>\",\n  \"occurredBefore\": \"<dateTime>\",\n  \"occurredAfter\": \"<dateTime>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"variableRevision\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"tenantId\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/detail?firstResult=<integer>&maxResults=<integer>&deserializeValues=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"detail"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												},
												{
													"key": "deserializeValues",
													"value": "<boolean>",
													"description": "Determines whether serializable variable values (typically variables that\nstore custom Java objects) should be deserialized on server side (default\n`true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side\nand transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean property\nintrospection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized\nformat. For example, a variable that is serialized as XML will be returned as\na JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of backward\ncompatibility, we recommend setting this parameter to `false` when developing\nweb applications that are independent of the Java process applications\ndeployed to the engine."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"caseDefinitionKey\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"caseExecutionId\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"userOperationId\": \"<string>\",\n    \"time\": \"<dateTime>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"fieldId\": \"<string>\",\n    \"fieldValue\": {},\n    \"variableName\": \"<string>\",\n    \"variableInstanceId\": \"<string>\",\n    \"variableType\": \"<string>\",\n    \"value\": {},\n    \"valueInfo\": {\n      \"voluptate_2\": false\n    },\n    \"initial\": \"<boolean>\",\n    \"revision\": \"<integer>\",\n    \"errorMessage\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"caseDefinitionKey\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"caseExecutionId\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"userOperationId\": \"<string>\",\n    \"time\": \"<dateTime>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"fieldId\": \"<string>\",\n    \"fieldValue\": {},\n    \"variableName\": \"<string>\",\n    \"variableInstanceId\": \"<string>\",\n    \"variableType\": \"<string>\",\n    \"value\": {},\n    \"valueInfo\": {\n      \"mollit_f_4\": -40422295.54763046,\n      \"sunt2e4\": \"enim amet\"\n    },\n    \"initial\": \"<boolean>\",\n    \"revision\": \"<integer>\",\n    \"errorMessage\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionId\": \"<string>\",\n  \"taskId\": \"<string>\",\n  \"activityInstanceId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"variableInstanceId\": \"<string>\",\n  \"variableTypeIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"userOperationId\": \"<string>\",\n  \"formFields\": \"<boolean>\",\n  \"variableUpdates\": \"<boolean>\",\n  \"excludeTaskDetails\": \"<boolean>\",\n  \"initial\": \"<boolean>\",\n  \"occurredBefore\": \"<dateTime>\",\n  \"occurredAfter\": \"<dateTime>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"variableRevision\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"tenantId\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/detail?firstResult=<integer>&maxResults=<integer>&deserializeValues=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"detail"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												},
												{
													"key": "deserializeValues",
													"value": "<boolean>",
													"description": "Determines whether serializable variable values (typically variables that\nstore custom Java objects) should be deserialized on server side (default\n`true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side\nand transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean property\nintrospection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized\nformat. For example, a variable that is serialized as XML will be returned as\na JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of backward\ncompatibility, we recommend setting this parameter to `false` when developing\nweb applications that are independent of the Java process applications\ndeployed to the engine."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "external-task-log",
					"item": [
						{
							"name": "count",
							"item": [
								{
									"name": "Get External Task Log Count",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/external-task-log/count?logId=<string>&externalTaskId=<string>&topicName=<string>&workerId=<string>&errorMessage=<string>&activityIdIn=<string>&activityInstanceIdIn=<string>&executionIdIn=<string>&processInstanceId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&priorityLowerThanOrEquals=<long>&priorityHigherThanOrEquals=<long>&creationLog=<boolean>&failureLog=<boolean>&successLog=<boolean>&deletionLog=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"external-task-log",
												"count"
											],
											"query": [
												{
													"key": "logId",
													"value": "<string>",
													"description": "Filter by historic external task log id."
												},
												{
													"key": "externalTaskId",
													"value": "<string>",
													"description": "Filter by external task id."
												},
												{
													"key": "topicName",
													"value": "<string>",
													"description": "Filter by an external task topic."
												},
												{
													"key": "workerId",
													"value": "<string>",
													"description": "Filter by the id of the worker that the task was most recently locked by."
												},
												{
													"key": "errorMessage",
													"value": "<string>",
													"description": "Filter by external task exception message."
												},
												{
													"key": "activityIdIn",
													"value": "<string>",
													"description": "Only include historic external task logs which belong to one of the passed activity ids."
												},
												{
													"key": "activityInstanceIdIn",
													"value": "<string>",
													"description": "Only include historic external task logs which belong to one of the passed activity\ninstance ids."
												},
												{
													"key": "executionIdIn",
													"value": "<string>",
													"description": "Only include historic external task logs which belong to one of the passed execution ids."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by process instance id."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by process definition id."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Filter by process definition key."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Only include historic external task log entries which belong to one of the passed and\ncomma-separated tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic external task log entries that belong to no tenant. Value may only\nbe `true`, as `false` is the default behavior."
												},
												{
													"key": "priorityLowerThanOrEquals",
													"value": "<long>",
													"description": "Only include logs for which the associated external task had a priority lower than or\nequal to the given value. Value must be a valid `long` value."
												},
												{
													"key": "priorityHigherThanOrEquals",
													"value": "<long>",
													"description": "Only include logs for which the associated external task had a priority higher than or\nequal to the given value. Value must be a valid `long` value."
												},
												{
													"key": "creationLog",
													"value": "<boolean>",
													"description": "Only include creation logs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "failureLog",
													"value": "<boolean>",
													"description": "Only include failure logs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "successLog",
													"value": "<boolean>",
													"description": "Only include success logs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "deletionLog",
													"value": "<boolean>",
													"description": "Only include deletion logs. Value may only be `true`, as `false` is the default behavior."
												}
											]
										},
										"description": "Queries for the number of historic external task logs that fulfill the given\nparameters.\nTakes the same parameters as the\n[Get External Task Logs](https://docs.camunda.org/manual/7.21/reference/rest/history/external-task-log/get-external-task-log-query/)\nmethod."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/external-task-log/count?logId=<string>&externalTaskId=<string>&topicName=<string>&workerId=<string>&errorMessage=<string>&activityIdIn=<string>&activityInstanceIdIn=<string>&executionIdIn=<string>&processInstanceId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&priorityLowerThanOrEquals=<long>&priorityHigherThanOrEquals=<long>&creationLog=<boolean>&failureLog=<boolean>&successLog=<boolean>&deletionLog=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"external-task-log",
														"count"
													],
													"query": [
														{
															"key": "logId",
															"value": "<string>",
															"description": "Filter by historic external task log id."
														},
														{
															"key": "externalTaskId",
															"value": "<string>",
															"description": "Filter by external task id."
														},
														{
															"key": "topicName",
															"value": "<string>",
															"description": "Filter by an external task topic."
														},
														{
															"key": "workerId",
															"value": "<string>",
															"description": "Filter by the id of the worker that the task was most recently locked by."
														},
														{
															"key": "errorMessage",
															"value": "<string>",
															"description": "Filter by external task exception message."
														},
														{
															"key": "activityIdIn",
															"value": "<string>",
															"description": "Only include historic external task logs which belong to one of the passed activity ids."
														},
														{
															"key": "activityInstanceIdIn",
															"value": "<string>",
															"description": "Only include historic external task logs which belong to one of the passed activity\ninstance ids."
														},
														{
															"key": "executionIdIn",
															"value": "<string>",
															"description": "Only include historic external task logs which belong to one of the passed execution ids."
														},
														{
															"key": "processInstanceId",
															"value": "<string>",
															"description": "Filter by process instance id."
														},
														{
															"key": "processDefinitionId",
															"value": "<string>",
															"description": "Filter by process definition id."
														},
														{
															"key": "processDefinitionKey",
															"value": "<string>",
															"description": "Filter by process definition key."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Only include historic external task log entries which belong to one of the passed and\ncomma-separated tenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include historic external task log entries that belong to no tenant. Value may only\nbe `true`, as `false` is the default behavior."
														},
														{
															"key": "priorityLowerThanOrEquals",
															"value": "<long>",
															"description": "Only include logs for which the associated external task had a priority lower than or\nequal to the given value. Value must be a valid `long` value."
														},
														{
															"key": "priorityHigherThanOrEquals",
															"value": "<long>",
															"description": "Only include logs for which the associated external task had a priority higher than or\nequal to the given value. Value must be a valid `long` value."
														},
														{
															"key": "creationLog",
															"value": "<boolean>",
															"description": "Only include creation logs. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "failureLog",
															"value": "<boolean>",
															"description": "Only include failure logs. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "successLog",
															"value": "<boolean>",
															"description": "Only include success logs. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "deletionLog",
															"value": "<boolean>",
															"description": "Only include deletion logs. Value may only be `true`, as `false` is the default behavior."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<long>\"\n}"
										},
										{
											"name": "Returned if some of the query parameters are invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/external-task-log/count?logId=<string>&externalTaskId=<string>&topicName=<string>&workerId=<string>&errorMessage=<string>&activityIdIn=<string>&activityInstanceIdIn=<string>&executionIdIn=<string>&processInstanceId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&priorityLowerThanOrEquals=<long>&priorityHigherThanOrEquals=<long>&creationLog=<boolean>&failureLog=<boolean>&successLog=<boolean>&deletionLog=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"external-task-log",
														"count"
													],
													"query": [
														{
															"key": "logId",
															"value": "<string>",
															"description": "Filter by historic external task log id."
														},
														{
															"key": "externalTaskId",
															"value": "<string>",
															"description": "Filter by external task id."
														},
														{
															"key": "topicName",
															"value": "<string>",
															"description": "Filter by an external task topic."
														},
														{
															"key": "workerId",
															"value": "<string>",
															"description": "Filter by the id of the worker that the task was most recently locked by."
														},
														{
															"key": "errorMessage",
															"value": "<string>",
															"description": "Filter by external task exception message."
														},
														{
															"key": "activityIdIn",
															"value": "<string>",
															"description": "Only include historic external task logs which belong to one of the passed activity ids."
														},
														{
															"key": "activityInstanceIdIn",
															"value": "<string>",
															"description": "Only include historic external task logs which belong to one of the passed activity\ninstance ids."
														},
														{
															"key": "executionIdIn",
															"value": "<string>",
															"description": "Only include historic external task logs which belong to one of the passed execution ids."
														},
														{
															"key": "processInstanceId",
															"value": "<string>",
															"description": "Filter by process instance id."
														},
														{
															"key": "processDefinitionId",
															"value": "<string>",
															"description": "Filter by process definition id."
														},
														{
															"key": "processDefinitionKey",
															"value": "<string>",
															"description": "Filter by process definition key."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Only include historic external task log entries which belong to one of the passed and\ncomma-separated tenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include historic external task log entries that belong to no tenant. Value may only\nbe `true`, as `false` is the default behavior."
														},
														{
															"key": "priorityLowerThanOrEquals",
															"value": "<long>",
															"description": "Only include logs for which the associated external task had a priority lower than or\nequal to the given value. Value must be a valid `long` value."
														},
														{
															"key": "priorityHigherThanOrEquals",
															"value": "<long>",
															"description": "Only include logs for which the associated external task had a priority higher than or\nequal to the given value. Value must be a valid `long` value."
														},
														{
															"key": "creationLog",
															"value": "<boolean>",
															"description": "Only include creation logs. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "failureLog",
															"value": "<boolean>",
															"description": "Only include failure logs. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "successLog",
															"value": "<boolean>",
															"description": "Only include success logs. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "deletionLog",
															"value": "<boolean>",
															"description": "Only include deletion logs. Value may only be `true`, as `false` is the default behavior."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								},
								{
									"name": "Get External Task Log Count (POST)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"logId\": \"<string>\",\n  \"externalTaskId\": \"<string>\",\n  \"topicName\": \"<string>\",\n  \"workerId\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"priorityLowerThanOrEquals\": \"<long>\",\n  \"priorityHigherThanOrEquals\": \"<long>\",\n  \"creationLog\": \"<boolean>\",\n  \"failureLog\": \"<boolean>\",\n  \"successLog\": \"<boolean>\",\n  \"deletionLog\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"processDefinitionId\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"priority\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/external-task-log/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"external-task-log",
												"count"
											]
										},
										"description": "Queries for the number of historic external task logs that fulfill the given\nparameters.\nThis method takes the same message body as the\n[Get External Task Logs (POST)](https://docs.camunda.org/manual/7.21/reference/rest/history/external-task-log/post-external-task-log-query/)\nmethod and therefore it is slightly more powerful than the\n[Get External Task Log Count](https://docs.camunda.org/manual/7.21/reference/rest/history/external-task-log/get-external-task-log-query-count/)\nmethod."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"logId\": \"<string>\",\n  \"externalTaskId\": \"<string>\",\n  \"topicName\": \"<string>\",\n  \"workerId\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"priorityLowerThanOrEquals\": \"<long>\",\n  \"priorityHigherThanOrEquals\": \"<long>\",\n  \"creationLog\": \"<boolean>\",\n  \"failureLog\": \"<boolean>\",\n  \"successLog\": \"<boolean>\",\n  \"deletionLog\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"processDefinitionId\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"priority\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/history/external-task-log/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"external-task-log",
														"count"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<long>\"\n}"
										},
										{
											"name": "Returned if some of the query parameters are invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"logId\": \"<string>\",\n  \"externalTaskId\": \"<string>\",\n  \"topicName\": \"<string>\",\n  \"workerId\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"priorityLowerThanOrEquals\": \"<long>\",\n  \"priorityHigherThanOrEquals\": \"<long>\",\n  \"creationLog\": \"<boolean>\",\n  \"failureLog\": \"<boolean>\",\n  \"successLog\": \"<boolean>\",\n  \"deletionLog\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"processDefinitionId\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"priority\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/history/external-task-log/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"external-task-log",
														"count"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "error-details",
									"item": [
										{
											"name": "Get External Task Log Error Details",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/external-task-log/:id/error-details",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"external-task-log",
														":id",
														"error-details"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the historic external task log to get the error details for."
														}
													]
												},
												"description": "Retrieves the corresponding error details of the passed historic external task log\nby id."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/history/external-task-log/:id/error-details",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"external-task-log",
																":id",
																"error-details"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Historic external task log with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/history/external-task-log/:id/error-details",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"external-task-log",
																":id",
																"error-details"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get External Task Log",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/external-task-log/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"external-task-log",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the log entry."
												}
											]
										},
										"description": "Retrieves a historic external task log by id."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/external-task-log/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"external-task-log",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"externalTaskId\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"topicName\": \"<string>\",\n  \"workerId\": \"<string>\",\n  \"retries\": \"<integer>\",\n  \"priority\": \"<long>\",\n  \"errorMessage\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"activityInstanceId\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"creationLog\": \"<boolean>\",\n  \"failureLog\": \"<boolean>\",\n  \"successLog\": \"<boolean>\",\n  \"deletionLog\": \"<boolean>\",\n  \"removalTime\": \"<dateTime>\",\n  \"rootProcessInstanceId\": \"<string>\"\n}"
										},
										{
											"name": "Historic external task log with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/external-task-log/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"external-task-log",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get External Task Logs",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/history/external-task-log?logId=<string>&externalTaskId=<string>&topicName=<string>&workerId=<string>&errorMessage=<string>&activityIdIn=<string>&activityInstanceIdIn=<string>&executionIdIn=<string>&processInstanceId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&priorityLowerThanOrEquals=<long>&priorityHigherThanOrEquals=<long>&creationLog=<boolean>&failureLog=<boolean>&successLog=<boolean>&deletionLog=<boolean>&sortBy=processInstanceId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"history",
										"external-task-log"
									],
									"query": [
										{
											"key": "logId",
											"value": "<string>",
											"description": "Filter by historic external task log id."
										},
										{
											"key": "externalTaskId",
											"value": "<string>",
											"description": "Filter by external task id."
										},
										{
											"key": "topicName",
											"value": "<string>",
											"description": "Filter by an external task topic."
										},
										{
											"key": "workerId",
											"value": "<string>",
											"description": "Filter by the id of the worker that the task was most recently locked by."
										},
										{
											"key": "errorMessage",
											"value": "<string>",
											"description": "Filter by external task exception message."
										},
										{
											"key": "activityIdIn",
											"value": "<string>",
											"description": "Only include historic external task logs which belong to one of the passed activity ids."
										},
										{
											"key": "activityInstanceIdIn",
											"value": "<string>",
											"description": "Only include historic external task logs which belong to one of the passed activity\ninstance ids."
										},
										{
											"key": "executionIdIn",
											"value": "<string>",
											"description": "Only include historic external task logs which belong to one of the passed execution ids."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Filter by process instance id."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Filter by process definition id."
										},
										{
											"key": "processDefinitionKey",
											"value": "<string>",
											"description": "Filter by process definition key."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Only include historic external task log entries which belong to one of the passed and\ncomma-separated tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include historic external task log entries that belong to no tenant. Value may only\nbe `true`, as `false` is the default behavior."
										},
										{
											"key": "priorityLowerThanOrEquals",
											"value": "<long>",
											"description": "Only include logs for which the associated external task had a priority lower than or\nequal to the given value. Value must be a valid `long` value."
										},
										{
											"key": "priorityHigherThanOrEquals",
											"value": "<long>",
											"description": "Only include logs for which the associated external task had a priority higher than or\nequal to the given value. Value must be a valid `long` value."
										},
										{
											"key": "creationLog",
											"value": "<boolean>",
											"description": "Only include creation logs. Value may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "failureLog",
											"value": "<boolean>",
											"description": "Only include failure logs. Value may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "successLog",
											"value": "<boolean>",
											"description": "Only include success logs. Value may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "deletionLog",
											"value": "<boolean>",
											"description": "Only include deletion logs. Value may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "sortBy",
											"value": "processInstanceId",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								},
								"description": "Queries for historic external task logs that fulfill the given parameters.\nThe size of the result set can be retrieved by using the\n[Get External Task Log Count](https://docs.camunda.org/manual/7.21/reference/rest/history/external-task-log/get-external-task-log-query-count/)\nmethod."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/external-task-log?logId=<string>&externalTaskId=<string>&topicName=<string>&workerId=<string>&errorMessage=<string>&activityIdIn=<string>&activityInstanceIdIn=<string>&executionIdIn=<string>&processInstanceId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&priorityLowerThanOrEquals=<long>&priorityHigherThanOrEquals=<long>&creationLog=<boolean>&failureLog=<boolean>&successLog=<boolean>&deletionLog=<boolean>&sortBy=processInstanceId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"external-task-log"
											],
											"query": [
												{
													"key": "logId",
													"value": "<string>",
													"description": "Filter by historic external task log id."
												},
												{
													"key": "externalTaskId",
													"value": "<string>",
													"description": "Filter by external task id."
												},
												{
													"key": "topicName",
													"value": "<string>",
													"description": "Filter by an external task topic."
												},
												{
													"key": "workerId",
													"value": "<string>",
													"description": "Filter by the id of the worker that the task was most recently locked by."
												},
												{
													"key": "errorMessage",
													"value": "<string>",
													"description": "Filter by external task exception message."
												},
												{
													"key": "activityIdIn",
													"value": "<string>",
													"description": "Only include historic external task logs which belong to one of the passed activity ids."
												},
												{
													"key": "activityInstanceIdIn",
													"value": "<string>",
													"description": "Only include historic external task logs which belong to one of the passed activity\ninstance ids."
												},
												{
													"key": "executionIdIn",
													"value": "<string>",
													"description": "Only include historic external task logs which belong to one of the passed execution ids."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by process instance id."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by process definition id."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Filter by process definition key."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Only include historic external task log entries which belong to one of the passed and\ncomma-separated tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic external task log entries that belong to no tenant. Value may only\nbe `true`, as `false` is the default behavior."
												},
												{
													"key": "priorityLowerThanOrEquals",
													"value": "<long>",
													"description": "Only include logs for which the associated external task had a priority lower than or\nequal to the given value. Value must be a valid `long` value."
												},
												{
													"key": "priorityHigherThanOrEquals",
													"value": "<long>",
													"description": "Only include logs for which the associated external task had a priority higher than or\nequal to the given value. Value must be a valid `long` value."
												},
												{
													"key": "creationLog",
													"value": "<boolean>",
													"description": "Only include creation logs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "failureLog",
													"value": "<boolean>",
													"description": "Only include failure logs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "successLog",
													"value": "<boolean>",
													"description": "Only include success logs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "deletionLog",
													"value": "<boolean>",
													"description": "Only include deletion logs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "sortBy",
													"value": "processInstanceId",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"externalTaskId\": \"<string>\",\n    \"timestamp\": \"<dateTime>\",\n    \"topicName\": \"<string>\",\n    \"workerId\": \"<string>\",\n    \"retries\": \"<integer>\",\n    \"priority\": \"<long>\",\n    \"errorMessage\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"creationLog\": \"<boolean>\",\n    \"failureLog\": \"<boolean>\",\n    \"successLog\": \"<boolean>\",\n    \"deletionLog\": \"<boolean>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"externalTaskId\": \"<string>\",\n    \"timestamp\": \"<dateTime>\",\n    \"topicName\": \"<string>\",\n    \"workerId\": \"<string>\",\n    \"retries\": \"<integer>\",\n    \"priority\": \"<long>\",\n    \"errorMessage\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"creationLog\": \"<boolean>\",\n    \"failureLog\": \"<boolean>\",\n    \"successLog\": \"<boolean>\",\n    \"deletionLog\": \"<boolean>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/external-task-log?logId=<string>&externalTaskId=<string>&topicName=<string>&workerId=<string>&errorMessage=<string>&activityIdIn=<string>&activityInstanceIdIn=<string>&executionIdIn=<string>&processInstanceId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&priorityLowerThanOrEquals=<long>&priorityHigherThanOrEquals=<long>&creationLog=<boolean>&failureLog=<boolean>&successLog=<boolean>&deletionLog=<boolean>&sortBy=processInstanceId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"external-task-log"
											],
											"query": [
												{
													"key": "logId",
													"value": "<string>",
													"description": "Filter by historic external task log id."
												},
												{
													"key": "externalTaskId",
													"value": "<string>",
													"description": "Filter by external task id."
												},
												{
													"key": "topicName",
													"value": "<string>",
													"description": "Filter by an external task topic."
												},
												{
													"key": "workerId",
													"value": "<string>",
													"description": "Filter by the id of the worker that the task was most recently locked by."
												},
												{
													"key": "errorMessage",
													"value": "<string>",
													"description": "Filter by external task exception message."
												},
												{
													"key": "activityIdIn",
													"value": "<string>",
													"description": "Only include historic external task logs which belong to one of the passed activity ids."
												},
												{
													"key": "activityInstanceIdIn",
													"value": "<string>",
													"description": "Only include historic external task logs which belong to one of the passed activity\ninstance ids."
												},
												{
													"key": "executionIdIn",
													"value": "<string>",
													"description": "Only include historic external task logs which belong to one of the passed execution ids."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by process instance id."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by process definition id."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Filter by process definition key."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Only include historic external task log entries which belong to one of the passed and\ncomma-separated tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic external task log entries that belong to no tenant. Value may only\nbe `true`, as `false` is the default behavior."
												},
												{
													"key": "priorityLowerThanOrEquals",
													"value": "<long>",
													"description": "Only include logs for which the associated external task had a priority lower than or\nequal to the given value. Value must be a valid `long` value."
												},
												{
													"key": "priorityHigherThanOrEquals",
													"value": "<long>",
													"description": "Only include logs for which the associated external task had a priority higher than or\nequal to the given value. Value must be a valid `long` value."
												},
												{
													"key": "creationLog",
													"value": "<boolean>",
													"description": "Only include creation logs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "failureLog",
													"value": "<boolean>",
													"description": "Only include failure logs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "successLog",
													"value": "<boolean>",
													"description": "Only include success logs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "deletionLog",
													"value": "<boolean>",
													"description": "Only include deletion logs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "sortBy",
													"value": "processInstanceId",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get External Task Logs (POST)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"logId\": \"<string>\",\n  \"externalTaskId\": \"<string>\",\n  \"topicName\": \"<string>\",\n  \"workerId\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"priorityLowerThanOrEquals\": \"<long>\",\n  \"priorityHigherThanOrEquals\": \"<long>\",\n  \"creationLog\": \"<boolean>\",\n  \"failureLog\": \"<boolean>\",\n  \"successLog\": \"<boolean>\",\n  \"deletionLog\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"processDefinitionId\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"priority\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/history/external-task-log",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"history",
										"external-task-log"
									]
								},
								"description": "Queries for historic external task logs that fulfill the given parameters.\nThis method is slightly more powerful than the\n[Get External Task Logs](https://docs.camunda.org/manual/7.21/reference/rest/history/external-task-log/get-external-task-log-query/)\nmethod because it allows filtering by historic external task logs\nvalues of the different types `String`, `Number` or `Boolean`."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"logId\": \"<string>\",\n  \"externalTaskId\": \"<string>\",\n  \"topicName\": \"<string>\",\n  \"workerId\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"priorityLowerThanOrEquals\": \"<long>\",\n  \"priorityHigherThanOrEquals\": \"<long>\",\n  \"creationLog\": \"<boolean>\",\n  \"failureLog\": \"<boolean>\",\n  \"successLog\": \"<boolean>\",\n  \"deletionLog\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"processDefinitionId\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"priority\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/external-task-log",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"external-task-log"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"externalTaskId\": \"<string>\",\n    \"timestamp\": \"<dateTime>\",\n    \"topicName\": \"<string>\",\n    \"workerId\": \"<string>\",\n    \"retries\": \"<integer>\",\n    \"priority\": \"<long>\",\n    \"errorMessage\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"creationLog\": \"<boolean>\",\n    \"failureLog\": \"<boolean>\",\n    \"successLog\": \"<boolean>\",\n    \"deletionLog\": \"<boolean>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"externalTaskId\": \"<string>\",\n    \"timestamp\": \"<dateTime>\",\n    \"topicName\": \"<string>\",\n    \"workerId\": \"<string>\",\n    \"retries\": \"<integer>\",\n    \"priority\": \"<long>\",\n    \"errorMessage\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"creationLog\": \"<boolean>\",\n    \"failureLog\": \"<boolean>\",\n    \"successLog\": \"<boolean>\",\n    \"deletionLog\": \"<boolean>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"logId\": \"<string>\",\n  \"externalTaskId\": \"<string>\",\n  \"topicName\": \"<string>\",\n  \"workerId\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"priorityLowerThanOrEquals\": \"<long>\",\n  \"priorityHigherThanOrEquals\": \"<long>\",\n  \"creationLog\": \"<boolean>\",\n  \"failureLog\": \"<boolean>\",\n  \"successLog\": \"<boolean>\",\n  \"deletionLog\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"processDefinitionId\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"priority\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/external-task-log",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"external-task-log"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "identity-link-log",
					"item": [
						{
							"name": "count",
							"item": [
								{
									"name": "Get Identity Link Log Count",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/identity-link-log/count?type=<string>&userId=<string>&groupId=<string>&dateBefore=<dateTime>&dateAfter=<dateTime>&taskId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&operationType=<string>&assignerId=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"identity-link-log",
												"count"
											],
											"query": [
												{
													"key": "type",
													"value": "<string>",
													"description": "Restricts to identity links that have the given type (candidate/assignee/owner)."
												},
												{
													"key": "userId",
													"value": "<string>",
													"description": "Restricts to identity links that have the given user id."
												},
												{
													"key": "groupId",
													"value": "<string>",
													"description": "Restricts to identity links that have the given group id."
												},
												{
													"key": "dateBefore",
													"value": "<dateTime>",
													"description": "Restricts to identity links that have the time before the given time."
												},
												{
													"key": "dateAfter",
													"value": "<dateTime>",
													"description": "Restricts to identity links that have the time after the given time."
												},
												{
													"key": "taskId",
													"value": "<string>",
													"description": "Restricts to identity links that have the given task id."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Restricts to identity links that have the given process definition id."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Restricts to identity links that have the given process definition key."
												},
												{
													"key": "operationType",
													"value": "<string>",
													"description": "Restricts to identity links that have the given operationType (add/delete)."
												},
												{
													"key": "assignerId",
													"value": "<string>",
													"description": "Restricts to identity links that have the given assigner id."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic identity links that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
												}
											]
										},
										"description": "Queries for the number of historic identity link logs that fulfill the given\nparameters. Takes the same parameters as the\n[Get Identity-Link-Logs](https://docs.camunda.org/manual/7.21/reference/rest/history/identity-links/get-identity-link-query/)\nmethod."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/identity-link-log/count?type=<string>&userId=<string>&groupId=<string>&dateBefore=<dateTime>&dateAfter=<dateTime>&taskId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&operationType=<string>&assignerId=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"identity-link-log",
														"count"
													],
													"query": [
														{
															"key": "type",
															"value": "<string>",
															"description": "Restricts to identity links that have the given type (candidate/assignee/owner)."
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "Restricts to identity links that have the given user id."
														},
														{
															"key": "groupId",
															"value": "<string>",
															"description": "Restricts to identity links that have the given group id."
														},
														{
															"key": "dateBefore",
															"value": "<dateTime>",
															"description": "Restricts to identity links that have the time before the given time."
														},
														{
															"key": "dateAfter",
															"value": "<dateTime>",
															"description": "Restricts to identity links that have the time after the given time."
														},
														{
															"key": "taskId",
															"value": "<string>",
															"description": "Restricts to identity links that have the given task id."
														},
														{
															"key": "processDefinitionId",
															"value": "<string>",
															"description": "Restricts to identity links that have the given process definition id."
														},
														{
															"key": "processDefinitionKey",
															"value": "<string>",
															"description": "Restricts to identity links that have the given process definition key."
														},
														{
															"key": "operationType",
															"value": "<string>",
															"description": "Restricts to identity links that have the given operationType (add/delete)."
														},
														{
															"key": "assignerId",
															"value": "<string>",
															"description": "Restricts to identity links that have the given assigner id."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Filter by a comma-separated list of tenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include historic identity links that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<long>\"\n}"
										},
										{
											"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/identity-link-log/count?type=<string>&userId=<string>&groupId=<string>&dateBefore=<dateTime>&dateAfter=<dateTime>&taskId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&operationType=<string>&assignerId=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"identity-link-log",
														"count"
													],
													"query": [
														{
															"key": "type",
															"value": "<string>",
															"description": "Restricts to identity links that have the given type (candidate/assignee/owner)."
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "Restricts to identity links that have the given user id."
														},
														{
															"key": "groupId",
															"value": "<string>",
															"description": "Restricts to identity links that have the given group id."
														},
														{
															"key": "dateBefore",
															"value": "<dateTime>",
															"description": "Restricts to identity links that have the time before the given time."
														},
														{
															"key": "dateAfter",
															"value": "<dateTime>",
															"description": "Restricts to identity links that have the time after the given time."
														},
														{
															"key": "taskId",
															"value": "<string>",
															"description": "Restricts to identity links that have the given task id."
														},
														{
															"key": "processDefinitionId",
															"value": "<string>",
															"description": "Restricts to identity links that have the given process definition id."
														},
														{
															"key": "processDefinitionKey",
															"value": "<string>",
															"description": "Restricts to identity links that have the given process definition key."
														},
														{
															"key": "operationType",
															"value": "<string>",
															"description": "Restricts to identity links that have the given operationType (add/delete)."
														},
														{
															"key": "assignerId",
															"value": "<string>",
															"description": "Restricts to identity links that have the given assigner id."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Filter by a comma-separated list of tenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include historic identity links that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Identity Link Logs",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/history/identity-link-log?type=<string>&userId=<string>&groupId=<string>&dateBefore=<dateTime>&dateAfter=<dateTime>&taskId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&operationType=<string>&assignerId=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&sortBy=groupId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"history",
										"identity-link-log"
									],
									"query": [
										{
											"key": "type",
											"value": "<string>",
											"description": "Restricts to identity links that have the given type (candidate/assignee/owner)."
										},
										{
											"key": "userId",
											"value": "<string>",
											"description": "Restricts to identity links that have the given user id."
										},
										{
											"key": "groupId",
											"value": "<string>",
											"description": "Restricts to identity links that have the given group id."
										},
										{
											"key": "dateBefore",
											"value": "<dateTime>",
											"description": "Restricts to identity links that have the time before the given time."
										},
										{
											"key": "dateAfter",
											"value": "<dateTime>",
											"description": "Restricts to identity links that have the time after the given time."
										},
										{
											"key": "taskId",
											"value": "<string>",
											"description": "Restricts to identity links that have the given task id."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Restricts to identity links that have the given process definition id."
										},
										{
											"key": "processDefinitionKey",
											"value": "<string>",
											"description": "Restricts to identity links that have the given process definition key."
										},
										{
											"key": "operationType",
											"value": "<string>",
											"description": "Restricts to identity links that have the given operationType (add/delete)."
										},
										{
											"key": "assignerId",
											"value": "<string>",
											"description": "Restricts to identity links that have the given assigner id."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include historic identity links that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
										},
										{
											"key": "sortBy",
											"value": "groupId",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								},
								"description": "Queries for historic identity link logs that fulfill given parameters.\nThe size of the result set can be retrieved by using the\n[Get Identity-Link-Log Count](https://docs.camunda.org/manual/7.21/reference/rest/history/identity-links/get-identity-link-query-count/)\nmethod."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/identity-link-log?type=<string>&userId=<string>&groupId=<string>&dateBefore=<dateTime>&dateAfter=<dateTime>&taskId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&operationType=<string>&assignerId=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&sortBy=groupId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"identity-link-log"
											],
											"query": [
												{
													"key": "type",
													"value": "<string>",
													"description": "Restricts to identity links that have the given type (candidate/assignee/owner)."
												},
												{
													"key": "userId",
													"value": "<string>",
													"description": "Restricts to identity links that have the given user id."
												},
												{
													"key": "groupId",
													"value": "<string>",
													"description": "Restricts to identity links that have the given group id."
												},
												{
													"key": "dateBefore",
													"value": "<dateTime>",
													"description": "Restricts to identity links that have the time before the given time."
												},
												{
													"key": "dateAfter",
													"value": "<dateTime>",
													"description": "Restricts to identity links that have the time after the given time."
												},
												{
													"key": "taskId",
													"value": "<string>",
													"description": "Restricts to identity links that have the given task id."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Restricts to identity links that have the given process definition id."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Restricts to identity links that have the given process definition key."
												},
												{
													"key": "operationType",
													"value": "<string>",
													"description": "Restricts to identity links that have the given operationType (add/delete)."
												},
												{
													"key": "assignerId",
													"value": "<string>",
													"description": "Restricts to identity links that have the given assigner id."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic identity links that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
												},
												{
													"key": "sortBy",
													"value": "groupId",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"time\": \"<dateTime>\",\n    \"type\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"groupId\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"operationType\": \"<string>\",\n    \"assignerId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"time\": \"<dateTime>\",\n    \"type\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"groupId\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"operationType\": \"<string>\",\n    \"assignerId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/identity-link-log?type=<string>&userId=<string>&groupId=<string>&dateBefore=<dateTime>&dateAfter=<dateTime>&taskId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&operationType=<string>&assignerId=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&sortBy=groupId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"identity-link-log"
											],
											"query": [
												{
													"key": "type",
													"value": "<string>",
													"description": "Restricts to identity links that have the given type (candidate/assignee/owner)."
												},
												{
													"key": "userId",
													"value": "<string>",
													"description": "Restricts to identity links that have the given user id."
												},
												{
													"key": "groupId",
													"value": "<string>",
													"description": "Restricts to identity links that have the given group id."
												},
												{
													"key": "dateBefore",
													"value": "<dateTime>",
													"description": "Restricts to identity links that have the time before the given time."
												},
												{
													"key": "dateAfter",
													"value": "<dateTime>",
													"description": "Restricts to identity links that have the time after the given time."
												},
												{
													"key": "taskId",
													"value": "<string>",
													"description": "Restricts to identity links that have the given task id."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Restricts to identity links that have the given process definition id."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Restricts to identity links that have the given process definition key."
												},
												{
													"key": "operationType",
													"value": "<string>",
													"description": "Restricts to identity links that have the given operationType (add/delete)."
												},
												{
													"key": "assignerId",
													"value": "<string>",
													"description": "Restricts to identity links that have the given assigner id."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic identity links that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
												},
												{
													"key": "sortBy",
													"value": "groupId",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "incident",
					"item": [
						{
							"name": "count",
							"item": [
								{
									"name": "Get Incident Count",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/incident/count?incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionKeyIn=<string>&processInstanceId=<string>&executionId=<string>&createTimeBefore=<dateTime>&createTimeAfter=<dateTime>&endTimeBefore=<dateTime>&endTimeAfter=<dateTime>&activityId=<string>&failedActivityId=<string>&causeIncidentId=<string>&rootCauseIncidentId=<string>&configuration=<string>&historyConfiguration=<string>&open=<boolean>&resolved=<boolean>&deleted=<boolean>&tenantIdIn=<string>&withoutTenantId=<boolean>&jobDefinitionIdIn=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"incident",
												"count"
											],
											"query": [
												{
													"key": "incidentId",
													"value": "<string>",
													"description": "Restricts to incidents that have the given id."
												},
												{
													"key": "incidentType",
													"value": "<string>",
													"description": "Restricts to incidents that belong to the given incident type. See the [User\nGuide](/manual/develop/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
												},
												{
													"key": "incidentMessage",
													"value": "<string>",
													"description": "Restricts to incidents that have the given incident message."
												},
												{
													"key": "incidentMessageLike",
													"value": "<string>",
													"description": "Restricts to incidents that incidents message is a substring of the given value.\nThe string can include the wildcard character '%' to express\nlike-strategy: starts with (string%), ends with (%string) or contains\n(%string%).\n"
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Restricts to incidents that belong to a process definition with the given id."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Restricts to incidents that have the given processDefinitionKey."
												},
												{
													"key": "processDefinitionKeyIn",
													"value": "<string>",
													"description": "Restricts to incidents that have one of the given process definition keys."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Restricts to incidents that belong to a process instance with the given id."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Restricts to incidents that belong to an execution with the given id."
												},
												{
													"key": "createTimeBefore",
													"value": "<dateTime>",
													"description": "Restricts to incidents that have a createTime date before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "createTimeAfter",
													"value": "<dateTime>",
													"description": "Restricts to incidents that have a createTime date after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "endTimeBefore",
													"value": "<dateTime>",
													"description": "Restricts to incidents that have an endTimeBefore date before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "endTimeAfter",
													"value": "<dateTime>",
													"description": "Restricts to incidents that have an endTimeAfter date after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "activityId",
													"value": "<string>",
													"description": "Restricts to incidents that belong to an activity with the given id."
												},
												{
													"key": "failedActivityId",
													"value": "<string>",
													"description": "Restricts to incidents that were created due to the failure of an activity with the given\nid."
												},
												{
													"key": "causeIncidentId",
													"value": "<string>",
													"description": "Restricts to incidents that have the given incident id as cause incident."
												},
												{
													"key": "rootCauseIncidentId",
													"value": "<string>",
													"description": "Restricts to incidents that have the given incident id as root cause incident."
												},
												{
													"key": "configuration",
													"value": "<string>",
													"description": "Restricts to incidents that have the given parameter set as configuration."
												},
												{
													"key": "historyConfiguration",
													"value": "<string>",
													"description": "Restricts to incidents that have the given parameter set as history configuration."
												},
												{
													"key": "open",
													"value": "<boolean>",
													"description": "Restricts to incidents that are open."
												},
												{
													"key": "resolved",
													"value": "<boolean>",
													"description": "Restricts to incidents that are resolved."
												},
												{
													"key": "deleted",
													"value": "<boolean>",
													"description": "Restricts to incidents that are deleted."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Restricts to incidents that have one of the given comma-separated tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic incidents that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
												},
												{
													"key": "jobDefinitionIdIn",
													"value": "<string>",
													"description": "Restricts to incidents that have one of the given comma-separated job definition ids."
												}
											]
										},
										"description": "Queries for the number of historic incidents that fulfill the given parameters.\nTakes the same parameters as the\n[Get Incidents](https://docs.camunda.org/manual/7.21/reference/rest/history/incident/get-incident-query/)\nmethod."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/incident/count?incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionKeyIn=<string>&processInstanceId=<string>&executionId=<string>&createTimeBefore=<dateTime>&createTimeAfter=<dateTime>&endTimeBefore=<dateTime>&endTimeAfter=<dateTime>&activityId=<string>&failedActivityId=<string>&causeIncidentId=<string>&rootCauseIncidentId=<string>&configuration=<string>&historyConfiguration=<string>&open=<boolean>&resolved=<boolean>&deleted=<boolean>&tenantIdIn=<string>&withoutTenantId=<boolean>&jobDefinitionIdIn=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"incident",
														"count"
													],
													"query": [
														{
															"key": "incidentId",
															"value": "<string>",
															"description": "Restricts to incidents that have the given id."
														},
														{
															"key": "incidentType",
															"value": "<string>",
															"description": "Restricts to incidents that belong to the given incident type. See the [User\nGuide](/manual/develop/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
														},
														{
															"key": "incidentMessage",
															"value": "<string>",
															"description": "Restricts to incidents that have the given incident message."
														},
														{
															"key": "incidentMessageLike",
															"value": "<string>",
															"description": "Restricts to incidents that incidents message is a substring of the given value.\nThe string can include the wildcard character '%' to express\nlike-strategy: starts with (string%), ends with (%string) or contains\n(%string%).\n"
														},
														{
															"key": "processDefinitionId",
															"value": "<string>",
															"description": "Restricts to incidents that belong to a process definition with the given id."
														},
														{
															"key": "processDefinitionKey",
															"value": "<string>",
															"description": "Restricts to incidents that have the given processDefinitionKey."
														},
														{
															"key": "processDefinitionKeyIn",
															"value": "<string>",
															"description": "Restricts to incidents that have one of the given process definition keys."
														},
														{
															"key": "processInstanceId",
															"value": "<string>",
															"description": "Restricts to incidents that belong to a process instance with the given id."
														},
														{
															"key": "executionId",
															"value": "<string>",
															"description": "Restricts to incidents that belong to an execution with the given id."
														},
														{
															"key": "createTimeBefore",
															"value": "<dateTime>",
															"description": "Restricts to incidents that have a createTime date before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "createTimeAfter",
															"value": "<dateTime>",
															"description": "Restricts to incidents that have a createTime date after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "endTimeBefore",
															"value": "<dateTime>",
															"description": "Restricts to incidents that have an endTimeBefore date before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "endTimeAfter",
															"value": "<dateTime>",
															"description": "Restricts to incidents that have an endTimeAfter date after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "activityId",
															"value": "<string>",
															"description": "Restricts to incidents that belong to an activity with the given id."
														},
														{
															"key": "failedActivityId",
															"value": "<string>",
															"description": "Restricts to incidents that were created due to the failure of an activity with the given\nid."
														},
														{
															"key": "causeIncidentId",
															"value": "<string>",
															"description": "Restricts to incidents that have the given incident id as cause incident."
														},
														{
															"key": "rootCauseIncidentId",
															"value": "<string>",
															"description": "Restricts to incidents that have the given incident id as root cause incident."
														},
														{
															"key": "configuration",
															"value": "<string>",
															"description": "Restricts to incidents that have the given parameter set as configuration."
														},
														{
															"key": "historyConfiguration",
															"value": "<string>",
															"description": "Restricts to incidents that have the given parameter set as history configuration."
														},
														{
															"key": "open",
															"value": "<boolean>",
															"description": "Restricts to incidents that are open."
														},
														{
															"key": "resolved",
															"value": "<boolean>",
															"description": "Restricts to incidents that are resolved."
														},
														{
															"key": "deleted",
															"value": "<boolean>",
															"description": "Restricts to incidents that are deleted."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Restricts to incidents that have one of the given comma-separated tenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include historic incidents that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
														},
														{
															"key": "jobDefinitionIdIn",
															"value": "<string>",
															"description": "Restricts to incidents that have one of the given comma-separated job definition ids."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<long>\"\n}"
										},
										{
											"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/incident/count?incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionKeyIn=<string>&processInstanceId=<string>&executionId=<string>&createTimeBefore=<dateTime>&createTimeAfter=<dateTime>&endTimeBefore=<dateTime>&endTimeAfter=<dateTime>&activityId=<string>&failedActivityId=<string>&causeIncidentId=<string>&rootCauseIncidentId=<string>&configuration=<string>&historyConfiguration=<string>&open=<boolean>&resolved=<boolean>&deleted=<boolean>&tenantIdIn=<string>&withoutTenantId=<boolean>&jobDefinitionIdIn=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"incident",
														"count"
													],
													"query": [
														{
															"key": "incidentId",
															"value": "<string>",
															"description": "Restricts to incidents that have the given id."
														},
														{
															"key": "incidentType",
															"value": "<string>",
															"description": "Restricts to incidents that belong to the given incident type. See the [User\nGuide](/manual/develop/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
														},
														{
															"key": "incidentMessage",
															"value": "<string>",
															"description": "Restricts to incidents that have the given incident message."
														},
														{
															"key": "incidentMessageLike",
															"value": "<string>",
															"description": "Restricts to incidents that incidents message is a substring of the given value.\nThe string can include the wildcard character '%' to express\nlike-strategy: starts with (string%), ends with (%string) or contains\n(%string%).\n"
														},
														{
															"key": "processDefinitionId",
															"value": "<string>",
															"description": "Restricts to incidents that belong to a process definition with the given id."
														},
														{
															"key": "processDefinitionKey",
															"value": "<string>",
															"description": "Restricts to incidents that have the given processDefinitionKey."
														},
														{
															"key": "processDefinitionKeyIn",
															"value": "<string>",
															"description": "Restricts to incidents that have one of the given process definition keys."
														},
														{
															"key": "processInstanceId",
															"value": "<string>",
															"description": "Restricts to incidents that belong to a process instance with the given id."
														},
														{
															"key": "executionId",
															"value": "<string>",
															"description": "Restricts to incidents that belong to an execution with the given id."
														},
														{
															"key": "createTimeBefore",
															"value": "<dateTime>",
															"description": "Restricts to incidents that have a createTime date before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "createTimeAfter",
															"value": "<dateTime>",
															"description": "Restricts to incidents that have a createTime date after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "endTimeBefore",
															"value": "<dateTime>",
															"description": "Restricts to incidents that have an endTimeBefore date before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "endTimeAfter",
															"value": "<dateTime>",
															"description": "Restricts to incidents that have an endTimeAfter date after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "activityId",
															"value": "<string>",
															"description": "Restricts to incidents that belong to an activity with the given id."
														},
														{
															"key": "failedActivityId",
															"value": "<string>",
															"description": "Restricts to incidents that were created due to the failure of an activity with the given\nid."
														},
														{
															"key": "causeIncidentId",
															"value": "<string>",
															"description": "Restricts to incidents that have the given incident id as cause incident."
														},
														{
															"key": "rootCauseIncidentId",
															"value": "<string>",
															"description": "Restricts to incidents that have the given incident id as root cause incident."
														},
														{
															"key": "configuration",
															"value": "<string>",
															"description": "Restricts to incidents that have the given parameter set as configuration."
														},
														{
															"key": "historyConfiguration",
															"value": "<string>",
															"description": "Restricts to incidents that have the given parameter set as history configuration."
														},
														{
															"key": "open",
															"value": "<boolean>",
															"description": "Restricts to incidents that are open."
														},
														{
															"key": "resolved",
															"value": "<boolean>",
															"description": "Restricts to incidents that are resolved."
														},
														{
															"key": "deleted",
															"value": "<boolean>",
															"description": "Restricts to incidents that are deleted."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Restricts to incidents that have one of the given comma-separated tenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include historic incidents that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
														},
														{
															"key": "jobDefinitionIdIn",
															"value": "<string>",
															"description": "Restricts to incidents that have one of the given comma-separated job definition ids."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Incidents",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/history/incident?incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionKeyIn=<string>&processInstanceId=<string>&executionId=<string>&createTimeBefore=<dateTime>&createTimeAfter=<dateTime>&endTimeBefore=<dateTime>&endTimeAfter=<dateTime>&activityId=<string>&failedActivityId=<string>&causeIncidentId=<string>&rootCauseIncidentId=<string>&configuration=<string>&historyConfiguration=<string>&open=<boolean>&resolved=<boolean>&deleted=<boolean>&tenantIdIn=<string>&withoutTenantId=<boolean>&jobDefinitionIdIn=<string>&sortBy=configuration&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"history",
										"incident"
									],
									"query": [
										{
											"key": "incidentId",
											"value": "<string>",
											"description": "Restricts to incidents that have the given id."
										},
										{
											"key": "incidentType",
											"value": "<string>",
											"description": "Restricts to incidents that belong to the given incident type. See the [User\nGuide](/manual/develop/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
										},
										{
											"key": "incidentMessage",
											"value": "<string>",
											"description": "Restricts to incidents that have the given incident message."
										},
										{
											"key": "incidentMessageLike",
											"value": "<string>",
											"description": "Restricts to incidents that incidents message is a substring of the given value.\nThe string can include the wildcard character '%' to express\nlike-strategy: starts with (string%), ends with (%string) or contains\n(%string%).\n"
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Restricts to incidents that belong to a process definition with the given id."
										},
										{
											"key": "processDefinitionKey",
											"value": "<string>",
											"description": "Restricts to incidents that have the given processDefinitionKey."
										},
										{
											"key": "processDefinitionKeyIn",
											"value": "<string>",
											"description": "Restricts to incidents that have one of the given process definition keys."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Restricts to incidents that belong to a process instance with the given id."
										},
										{
											"key": "executionId",
											"value": "<string>",
											"description": "Restricts to incidents that belong to an execution with the given id."
										},
										{
											"key": "createTimeBefore",
											"value": "<dateTime>",
											"description": "Restricts to incidents that have a createTime date before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "createTimeAfter",
											"value": "<dateTime>",
											"description": "Restricts to incidents that have a createTime date after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "endTimeBefore",
											"value": "<dateTime>",
											"description": "Restricts to incidents that have an endTimeBefore date before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "endTimeAfter",
											"value": "<dateTime>",
											"description": "Restricts to incidents that have an endTimeAfter date after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "activityId",
											"value": "<string>",
											"description": "Restricts to incidents that belong to an activity with the given id."
										},
										{
											"key": "failedActivityId",
											"value": "<string>",
											"description": "Restricts to incidents that were created due to the failure of an activity with the given\nid."
										},
										{
											"key": "causeIncidentId",
											"value": "<string>",
											"description": "Restricts to incidents that have the given incident id as cause incident."
										},
										{
											"key": "rootCauseIncidentId",
											"value": "<string>",
											"description": "Restricts to incidents that have the given incident id as root cause incident."
										},
										{
											"key": "configuration",
											"value": "<string>",
											"description": "Restricts to incidents that have the given parameter set as configuration."
										},
										{
											"key": "historyConfiguration",
											"value": "<string>",
											"description": "Restricts to incidents that have the given parameter set as history configuration."
										},
										{
											"key": "open",
											"value": "<boolean>",
											"description": "Restricts to incidents that are open."
										},
										{
											"key": "resolved",
											"value": "<boolean>",
											"description": "Restricts to incidents that are resolved."
										},
										{
											"key": "deleted",
											"value": "<boolean>",
											"description": "Restricts to incidents that are deleted."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Restricts to incidents that have one of the given comma-separated tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include historic incidents that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
										},
										{
											"key": "jobDefinitionIdIn",
											"value": "<string>",
											"description": "Restricts to incidents that have one of the given comma-separated job definition ids."
										},
										{
											"key": "sortBy",
											"value": "configuration",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								},
								"description": "Queries for historic incidents that fulfill given parameters.\nThe size of the result set can be retrieved by using the\n[Get Incident Count](https://docs.camunda.org/manual/7.21/reference/rest/history/incident/get-incident-query-count/)\nmethod."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/incident?incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionKeyIn=<string>&processInstanceId=<string>&executionId=<string>&createTimeBefore=<dateTime>&createTimeAfter=<dateTime>&endTimeBefore=<dateTime>&endTimeAfter=<dateTime>&activityId=<string>&failedActivityId=<string>&causeIncidentId=<string>&rootCauseIncidentId=<string>&configuration=<string>&historyConfiguration=<string>&open=<boolean>&resolved=<boolean>&deleted=<boolean>&tenantIdIn=<string>&withoutTenantId=<boolean>&jobDefinitionIdIn=<string>&sortBy=configuration&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"incident"
											],
											"query": [
												{
													"key": "incidentId",
													"value": "<string>",
													"description": "Restricts to incidents that have the given id."
												},
												{
													"key": "incidentType",
													"value": "<string>",
													"description": "Restricts to incidents that belong to the given incident type. See the [User\nGuide](/manual/develop/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
												},
												{
													"key": "incidentMessage",
													"value": "<string>",
													"description": "Restricts to incidents that have the given incident message."
												},
												{
													"key": "incidentMessageLike",
													"value": "<string>",
													"description": "Restricts to incidents that incidents message is a substring of the given value.\nThe string can include the wildcard character '%' to express\nlike-strategy: starts with (string%), ends with (%string) or contains\n(%string%).\n"
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Restricts to incidents that belong to a process definition with the given id."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Restricts to incidents that have the given processDefinitionKey."
												},
												{
													"key": "processDefinitionKeyIn",
													"value": "<string>",
													"description": "Restricts to incidents that have one of the given process definition keys."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Restricts to incidents that belong to a process instance with the given id."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Restricts to incidents that belong to an execution with the given id."
												},
												{
													"key": "createTimeBefore",
													"value": "<dateTime>",
													"description": "Restricts to incidents that have a createTime date before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "createTimeAfter",
													"value": "<dateTime>",
													"description": "Restricts to incidents that have a createTime date after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "endTimeBefore",
													"value": "<dateTime>",
													"description": "Restricts to incidents that have an endTimeBefore date before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "endTimeAfter",
													"value": "<dateTime>",
													"description": "Restricts to incidents that have an endTimeAfter date after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "activityId",
													"value": "<string>",
													"description": "Restricts to incidents that belong to an activity with the given id."
												},
												{
													"key": "failedActivityId",
													"value": "<string>",
													"description": "Restricts to incidents that were created due to the failure of an activity with the given\nid."
												},
												{
													"key": "causeIncidentId",
													"value": "<string>",
													"description": "Restricts to incidents that have the given incident id as cause incident."
												},
												{
													"key": "rootCauseIncidentId",
													"value": "<string>",
													"description": "Restricts to incidents that have the given incident id as root cause incident."
												},
												{
													"key": "configuration",
													"value": "<string>",
													"description": "Restricts to incidents that have the given parameter set as configuration."
												},
												{
													"key": "historyConfiguration",
													"value": "<string>",
													"description": "Restricts to incidents that have the given parameter set as history configuration."
												},
												{
													"key": "open",
													"value": "<boolean>",
													"description": "Restricts to incidents that are open."
												},
												{
													"key": "resolved",
													"value": "<boolean>",
													"description": "Restricts to incidents that are resolved."
												},
												{
													"key": "deleted",
													"value": "<boolean>",
													"description": "Restricts to incidents that are deleted."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Restricts to incidents that have one of the given comma-separated tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic incidents that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
												},
												{
													"key": "jobDefinitionIdIn",
													"value": "<string>",
													"description": "Restricts to incidents that have one of the given comma-separated job definition ids."
												},
												{
													"key": "sortBy",
													"value": "configuration",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"createTime\": \"<dateTime>\",\n    \"endTime\": \"<dateTime>\",\n    \"removalTime\": \"<dateTime>\",\n    \"incidentType\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"failedActivityId\": \"<string>\",\n    \"causeIncidentId\": \"<string>\",\n    \"rootCauseIncidentId\": \"<string>\",\n    \"configuration\": \"<string>\",\n    \"historyConfiguration\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"jobDefinitionId\": \"<string>\",\n    \"open\": \"<boolean>\",\n    \"deleted\": \"<boolean>\",\n    \"resolved\": \"<boolean>\",\n    \"annotation\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"createTime\": \"<dateTime>\",\n    \"endTime\": \"<dateTime>\",\n    \"removalTime\": \"<dateTime>\",\n    \"incidentType\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"failedActivityId\": \"<string>\",\n    \"causeIncidentId\": \"<string>\",\n    \"rootCauseIncidentId\": \"<string>\",\n    \"configuration\": \"<string>\",\n    \"historyConfiguration\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"jobDefinitionId\": \"<string>\",\n    \"open\": \"<boolean>\",\n    \"deleted\": \"<boolean>\",\n    \"resolved\": \"<boolean>\",\n    \"annotation\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/incident?incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionKeyIn=<string>&processInstanceId=<string>&executionId=<string>&createTimeBefore=<dateTime>&createTimeAfter=<dateTime>&endTimeBefore=<dateTime>&endTimeAfter=<dateTime>&activityId=<string>&failedActivityId=<string>&causeIncidentId=<string>&rootCauseIncidentId=<string>&configuration=<string>&historyConfiguration=<string>&open=<boolean>&resolved=<boolean>&deleted=<boolean>&tenantIdIn=<string>&withoutTenantId=<boolean>&jobDefinitionIdIn=<string>&sortBy=configuration&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"incident"
											],
											"query": [
												{
													"key": "incidentId",
													"value": "<string>",
													"description": "Restricts to incidents that have the given id."
												},
												{
													"key": "incidentType",
													"value": "<string>",
													"description": "Restricts to incidents that belong to the given incident type. See the [User\nGuide](/manual/develop/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
												},
												{
													"key": "incidentMessage",
													"value": "<string>",
													"description": "Restricts to incidents that have the given incident message."
												},
												{
													"key": "incidentMessageLike",
													"value": "<string>",
													"description": "Restricts to incidents that incidents message is a substring of the given value.\nThe string can include the wildcard character '%' to express\nlike-strategy: starts with (string%), ends with (%string) or contains\n(%string%).\n"
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Restricts to incidents that belong to a process definition with the given id."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Restricts to incidents that have the given processDefinitionKey."
												},
												{
													"key": "processDefinitionKeyIn",
													"value": "<string>",
													"description": "Restricts to incidents that have one of the given process definition keys."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Restricts to incidents that belong to a process instance with the given id."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Restricts to incidents that belong to an execution with the given id."
												},
												{
													"key": "createTimeBefore",
													"value": "<dateTime>",
													"description": "Restricts to incidents that have a createTime date before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "createTimeAfter",
													"value": "<dateTime>",
													"description": "Restricts to incidents that have a createTime date after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "endTimeBefore",
													"value": "<dateTime>",
													"description": "Restricts to incidents that have an endTimeBefore date before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "endTimeAfter",
													"value": "<dateTime>",
													"description": "Restricts to incidents that have an endTimeAfter date after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format\n`yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "activityId",
													"value": "<string>",
													"description": "Restricts to incidents that belong to an activity with the given id."
												},
												{
													"key": "failedActivityId",
													"value": "<string>",
													"description": "Restricts to incidents that were created due to the failure of an activity with the given\nid."
												},
												{
													"key": "causeIncidentId",
													"value": "<string>",
													"description": "Restricts to incidents that have the given incident id as cause incident."
												},
												{
													"key": "rootCauseIncidentId",
													"value": "<string>",
													"description": "Restricts to incidents that have the given incident id as root cause incident."
												},
												{
													"key": "configuration",
													"value": "<string>",
													"description": "Restricts to incidents that have the given parameter set as configuration."
												},
												{
													"key": "historyConfiguration",
													"value": "<string>",
													"description": "Restricts to incidents that have the given parameter set as history configuration."
												},
												{
													"key": "open",
													"value": "<boolean>",
													"description": "Restricts to incidents that are open."
												},
												{
													"key": "resolved",
													"value": "<boolean>",
													"description": "Restricts to incidents that are resolved."
												},
												{
													"key": "deleted",
													"value": "<boolean>",
													"description": "Restricts to incidents that are deleted."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Restricts to incidents that have one of the given comma-separated tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic incidents that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
												},
												{
													"key": "jobDefinitionIdIn",
													"value": "<string>",
													"description": "Restricts to incidents that have one of the given comma-separated job definition ids."
												},
												{
													"key": "sortBy",
													"value": "configuration",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "job-log",
					"item": [
						{
							"name": "count",
							"item": [
								{
									"name": "Get Job Log Count",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/job-log/count?logId=<string>&jobId=<string>&jobExceptionMessage=<string>&jobDefinitionId=<string>&jobDefinitionType=<string>&jobDefinitionConfiguration=<string>&activityIdIn=<string>&failedActivityIdIn=<string>&executionIdIn=<string>&processInstanceId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&deploymentId=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&hostname=<string>&jobPriorityLowerThanOrEquals=<long>&jobPriorityHigherThanOrEquals=<long>&creationLog=<boolean>&failureLog=<boolean>&successLog=<boolean>&deletionLog=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"job-log",
												"count"
											],
											"query": [
												{
													"key": "logId",
													"value": "<string>",
													"description": "Filter by historic job log id."
												},
												{
													"key": "jobId",
													"value": "<string>",
													"description": "Filter by job id."
												},
												{
													"key": "jobExceptionMessage",
													"value": "<string>",
													"description": "Filter by job exception message."
												},
												{
													"key": "jobDefinitionId",
													"value": "<string>",
													"description": "Filter by job definition id."
												},
												{
													"key": "jobDefinitionType",
													"value": "<string>",
													"description": "Filter by job definition type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/the-job-executor/#job-creation)\nfor more information about job definition types."
												},
												{
													"key": "jobDefinitionConfiguration",
													"value": "<string>",
													"description": "Filter by job definition configuration."
												},
												{
													"key": "activityIdIn",
													"value": "<string>",
													"description": "Only include historic job logs which belong to one of the passed activity ids."
												},
												{
													"key": "failedActivityIdIn",
													"value": "<string>",
													"description": "Only include historic job logs which belong to failures of one of the passed activity ids."
												},
												{
													"key": "executionIdIn",
													"value": "<string>",
													"description": "Only include historic job logs which belong to one of the passed execution ids."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by process instance id."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by process definition id."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Filter by process definition key."
												},
												{
													"key": "deploymentId",
													"value": "<string>",
													"description": "Filter by deployment id."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Only include historic job log entries which belong to one of the passed and comma-\nseparated tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic job log entries that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
												},
												{
													"key": "hostname",
													"value": "<string>",
													"description": "Filter by hostname."
												},
												{
													"key": "jobPriorityLowerThanOrEquals",
													"value": "<long>",
													"description": "Only include logs for which the associated job had a priority lower than or equal to the\ngiven value. Value must be a valid `long` value."
												},
												{
													"key": "jobPriorityHigherThanOrEquals",
													"value": "<long>",
													"description": "Only include logs for which the associated job had a priority higher than or equal to the\ngiven value. Value must be a valid `long` value."
												},
												{
													"key": "creationLog",
													"value": "<boolean>",
													"description": "Only include creation logs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "failureLog",
													"value": "<boolean>",
													"description": "Only include failure logs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "successLog",
													"value": "<boolean>",
													"description": "Only include success logs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "deletionLog",
													"value": "<boolean>",
													"description": "Only include deletion logs. Value may only be `true`, as `false` is the default behavior."
												}
											]
										},
										"description": "Queries for the number of historic job logs that fulfill the given parameters.\nTakes the same parameters as the\n[Get Job Logs](https://docs.camunda.org/manual/7.21/reference/rest/history/job-log/get-job-log-query/)\nmethod."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/job-log/count?logId=<string>&jobId=<string>&jobExceptionMessage=<string>&jobDefinitionId=<string>&jobDefinitionType=<string>&jobDefinitionConfiguration=<string>&activityIdIn=<string>&failedActivityIdIn=<string>&executionIdIn=<string>&processInstanceId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&deploymentId=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&hostname=<string>&jobPriorityLowerThanOrEquals=<long>&jobPriorityHigherThanOrEquals=<long>&creationLog=<boolean>&failureLog=<boolean>&successLog=<boolean>&deletionLog=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"job-log",
														"count"
													],
													"query": [
														{
															"key": "logId",
															"value": "<string>",
															"description": "Filter by historic job log id."
														},
														{
															"key": "jobId",
															"value": "<string>",
															"description": "Filter by job id."
														},
														{
															"key": "jobExceptionMessage",
															"value": "<string>",
															"description": "Filter by job exception message."
														},
														{
															"key": "jobDefinitionId",
															"value": "<string>",
															"description": "Filter by job definition id."
														},
														{
															"key": "jobDefinitionType",
															"value": "<string>",
															"description": "Filter by job definition type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/the-job-executor/#job-creation)\nfor more information about job definition types."
														},
														{
															"key": "jobDefinitionConfiguration",
															"value": "<string>",
															"description": "Filter by job definition configuration."
														},
														{
															"key": "activityIdIn",
															"value": "<string>",
															"description": "Only include historic job logs which belong to one of the passed activity ids."
														},
														{
															"key": "failedActivityIdIn",
															"value": "<string>",
															"description": "Only include historic job logs which belong to failures of one of the passed activity ids."
														},
														{
															"key": "executionIdIn",
															"value": "<string>",
															"description": "Only include historic job logs which belong to one of the passed execution ids."
														},
														{
															"key": "processInstanceId",
															"value": "<string>",
															"description": "Filter by process instance id."
														},
														{
															"key": "processDefinitionId",
															"value": "<string>",
															"description": "Filter by process definition id."
														},
														{
															"key": "processDefinitionKey",
															"value": "<string>",
															"description": "Filter by process definition key."
														},
														{
															"key": "deploymentId",
															"value": "<string>",
															"description": "Filter by deployment id."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Only include historic job log entries which belong to one of the passed and comma-\nseparated tenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include historic job log entries that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
														},
														{
															"key": "hostname",
															"value": "<string>",
															"description": "Filter by hostname."
														},
														{
															"key": "jobPriorityLowerThanOrEquals",
															"value": "<long>",
															"description": "Only include logs for which the associated job had a priority lower than or equal to the\ngiven value. Value must be a valid `long` value."
														},
														{
															"key": "jobPriorityHigherThanOrEquals",
															"value": "<long>",
															"description": "Only include logs for which the associated job had a priority higher than or equal to the\ngiven value. Value must be a valid `long` value."
														},
														{
															"key": "creationLog",
															"value": "<boolean>",
															"description": "Only include creation logs. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "failureLog",
															"value": "<boolean>",
															"description": "Only include failure logs. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "successLog",
															"value": "<boolean>",
															"description": "Only include success logs. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "deletionLog",
															"value": "<boolean>",
															"description": "Only include deletion logs. Value may only be `true`, as `false` is the default behavior."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<long>\"\n}"
										},
										{
											"name": "Returned if some of the query parameters are invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/job-log/count?logId=<string>&jobId=<string>&jobExceptionMessage=<string>&jobDefinitionId=<string>&jobDefinitionType=<string>&jobDefinitionConfiguration=<string>&activityIdIn=<string>&failedActivityIdIn=<string>&executionIdIn=<string>&processInstanceId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&deploymentId=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&hostname=<string>&jobPriorityLowerThanOrEquals=<long>&jobPriorityHigherThanOrEquals=<long>&creationLog=<boolean>&failureLog=<boolean>&successLog=<boolean>&deletionLog=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"job-log",
														"count"
													],
													"query": [
														{
															"key": "logId",
															"value": "<string>",
															"description": "Filter by historic job log id."
														},
														{
															"key": "jobId",
															"value": "<string>",
															"description": "Filter by job id."
														},
														{
															"key": "jobExceptionMessage",
															"value": "<string>",
															"description": "Filter by job exception message."
														},
														{
															"key": "jobDefinitionId",
															"value": "<string>",
															"description": "Filter by job definition id."
														},
														{
															"key": "jobDefinitionType",
															"value": "<string>",
															"description": "Filter by job definition type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/the-job-executor/#job-creation)\nfor more information about job definition types."
														},
														{
															"key": "jobDefinitionConfiguration",
															"value": "<string>",
															"description": "Filter by job definition configuration."
														},
														{
															"key": "activityIdIn",
															"value": "<string>",
															"description": "Only include historic job logs which belong to one of the passed activity ids."
														},
														{
															"key": "failedActivityIdIn",
															"value": "<string>",
															"description": "Only include historic job logs which belong to failures of one of the passed activity ids."
														},
														{
															"key": "executionIdIn",
															"value": "<string>",
															"description": "Only include historic job logs which belong to one of the passed execution ids."
														},
														{
															"key": "processInstanceId",
															"value": "<string>",
															"description": "Filter by process instance id."
														},
														{
															"key": "processDefinitionId",
															"value": "<string>",
															"description": "Filter by process definition id."
														},
														{
															"key": "processDefinitionKey",
															"value": "<string>",
															"description": "Filter by process definition key."
														},
														{
															"key": "deploymentId",
															"value": "<string>",
															"description": "Filter by deployment id."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Only include historic job log entries which belong to one of the passed and comma-\nseparated tenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include historic job log entries that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
														},
														{
															"key": "hostname",
															"value": "<string>",
															"description": "Filter by hostname."
														},
														{
															"key": "jobPriorityLowerThanOrEquals",
															"value": "<long>",
															"description": "Only include logs for which the associated job had a priority lower than or equal to the\ngiven value. Value must be a valid `long` value."
														},
														{
															"key": "jobPriorityHigherThanOrEquals",
															"value": "<long>",
															"description": "Only include logs for which the associated job had a priority higher than or equal to the\ngiven value. Value must be a valid `long` value."
														},
														{
															"key": "creationLog",
															"value": "<boolean>",
															"description": "Only include creation logs. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "failureLog",
															"value": "<boolean>",
															"description": "Only include failure logs. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "successLog",
															"value": "<boolean>",
															"description": "Only include success logs. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "deletionLog",
															"value": "<boolean>",
															"description": "Only include deletion logs. Value may only be `true`, as `false` is the default behavior."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								},
								{
									"name": "Get Job Log Count (POST)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"logId\": \"<string>\",\n  \"jobId\": \"<string>\",\n  \"jobExceptionMessage\": \"<string>\",\n  \"jobDefinitionId\": \"<string>\",\n  \"jobDefinitionType\": \"<string>\",\n  \"jobDefinitionConfiguration\": \"<string>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"failedActivityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"deploymentId\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"hostname\": \"<string>\",\n  \"jobPriorityLowerThanOrEquals\": \"<long>\",\n  \"jobPriorityHigherThanOrEquals\": \"<long>\",\n  \"creationLog\": \"<boolean>\",\n  \"failureLog\": \"<boolean>\",\n  \"successLog\": \"<boolean>\",\n  \"deletionLog\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"tenantId\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"hostname\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/job-log/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"job-log",
												"count"
											]
										},
										"description": "Queries for the number of historic job logs that fulfill the given parameters.\nThis method takes the same message body as the\n[Get Job Logs (POST)](https://docs.camunda.org/manual/7.21/reference/rest/history/job-log/post-job-log-query/)\nmethod and therefore it is slightly more powerful than the\n[Get Job Log Count](https://docs.camunda.org/manual/7.21/reference/rest/history/job-log/get-job-log-query-count/)\nmethod."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"logId\": \"<string>\",\n  \"jobId\": \"<string>\",\n  \"jobExceptionMessage\": \"<string>\",\n  \"jobDefinitionId\": \"<string>\",\n  \"jobDefinitionType\": \"<string>\",\n  \"jobDefinitionConfiguration\": \"<string>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"failedActivityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"deploymentId\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"hostname\": \"<string>\",\n  \"jobPriorityLowerThanOrEquals\": \"<long>\",\n  \"jobPriorityHigherThanOrEquals\": \"<long>\",\n  \"creationLog\": \"<boolean>\",\n  \"failureLog\": \"<boolean>\",\n  \"successLog\": \"<boolean>\",\n  \"deletionLog\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"tenantId\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"hostname\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/history/job-log/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"job-log",
														"count"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<long>\"\n}"
										},
										{
											"name": "Returned if some of the query parameters are invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"logId\": \"<string>\",\n  \"jobId\": \"<string>\",\n  \"jobExceptionMessage\": \"<string>\",\n  \"jobDefinitionId\": \"<string>\",\n  \"jobDefinitionType\": \"<string>\",\n  \"jobDefinitionConfiguration\": \"<string>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"failedActivityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"deploymentId\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"hostname\": \"<string>\",\n  \"jobPriorityLowerThanOrEquals\": \"<long>\",\n  \"jobPriorityHigherThanOrEquals\": \"<long>\",\n  \"creationLog\": \"<boolean>\",\n  \"failureLog\": \"<boolean>\",\n  \"successLog\": \"<boolean>\",\n  \"deletionLog\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"tenantId\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"hostname\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/history/job-log/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"job-log",
														"count"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "stacktrace",
									"item": [
										{
											"name": "Get Job Log Exception Stacktrace",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/job-log/:id/stacktrace",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"job-log",
														":id",
														"stacktrace"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the historic job log to get the exception stacktrace for."
														}
													]
												},
												"description": "Retrieves the corresponding exception stacktrace to the passed historic job log by\nid."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/history/job-log/:id/stacktrace",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"job-log",
																":id",
																"stacktrace"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Historic job log with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/history/job-log/:id/stacktrace",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"job-log",
																":id",
																"stacktrace"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Job Log",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/job-log/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"job-log",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the log entry."
												}
											]
										},
										"description": "Retrieves a historic job log by id."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/job-log/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"job-log",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"timestamp\": \"<dateTime>\",\n  \"removalTime\": \"<dateTime>\",\n  \"jobId\": \"<string>\",\n  \"jobDueDate\": \"<dateTime>\",\n  \"jobRetries\": \"<integer>\",\n  \"jobPriority\": \"<long>\",\n  \"jobExceptionMessage\": \"<string>\",\n  \"failedActivityId\": \"<string>\",\n  \"jobDefinitionId\": \"<string>\",\n  \"jobDefinitionType\": \"<string>\",\n  \"jobDefinitionConfiguration\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"deploymentId\": \"<string>\",\n  \"rootProcessInstanceId\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"hostname\": \"<string>\",\n  \"creationLog\": \"<boolean>\",\n  \"failureLog\": \"<boolean>\",\n  \"successLog\": \"<boolean>\",\n  \"deletionLog\": \"<boolean>\"\n}"
										},
										{
											"name": "Historic job log with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/job-log/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"job-log",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Job Logs",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/history/job-log?logId=<string>&jobId=<string>&jobExceptionMessage=<string>&jobDefinitionId=<string>&jobDefinitionType=<string>&jobDefinitionConfiguration=<string>&activityIdIn=<string>&failedActivityIdIn=<string>&executionIdIn=<string>&processInstanceId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&deploymentId=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&hostname=<string>&jobPriorityLowerThanOrEquals=<long>&jobPriorityHigherThanOrEquals=<long>&creationLog=<boolean>&failureLog=<boolean>&successLog=<boolean>&deletionLog=<boolean>&sortBy=processDefinitionId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"history",
										"job-log"
									],
									"query": [
										{
											"key": "logId",
											"value": "<string>",
											"description": "Filter by historic job log id."
										},
										{
											"key": "jobId",
											"value": "<string>",
											"description": "Filter by job id."
										},
										{
											"key": "jobExceptionMessage",
											"value": "<string>",
											"description": "Filter by job exception message."
										},
										{
											"key": "jobDefinitionId",
											"value": "<string>",
											"description": "Filter by job definition id."
										},
										{
											"key": "jobDefinitionType",
											"value": "<string>",
											"description": "Filter by job definition type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/the-job-executor/#job-creation)\nfor more information about job definition types."
										},
										{
											"key": "jobDefinitionConfiguration",
											"value": "<string>",
											"description": "Filter by job definition configuration."
										},
										{
											"key": "activityIdIn",
											"value": "<string>",
											"description": "Only include historic job logs which belong to one of the passed activity ids."
										},
										{
											"key": "failedActivityIdIn",
											"value": "<string>",
											"description": "Only include historic job logs which belong to failures of one of the passed activity ids."
										},
										{
											"key": "executionIdIn",
											"value": "<string>",
											"description": "Only include historic job logs which belong to one of the passed execution ids."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Filter by process instance id."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Filter by process definition id."
										},
										{
											"key": "processDefinitionKey",
											"value": "<string>",
											"description": "Filter by process definition key."
										},
										{
											"key": "deploymentId",
											"value": "<string>",
											"description": "Filter by deployment id."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Only include historic job log entries which belong to one of the passed and comma-\nseparated tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include historic job log entries that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
										},
										{
											"key": "hostname",
											"value": "<string>",
											"description": "Filter by hostname."
										},
										{
											"key": "jobPriorityLowerThanOrEquals",
											"value": "<long>",
											"description": "Only include logs for which the associated job had a priority lower than or equal to the\ngiven value. Value must be a valid `long` value."
										},
										{
											"key": "jobPriorityHigherThanOrEquals",
											"value": "<long>",
											"description": "Only include logs for which the associated job had a priority higher than or equal to the\ngiven value. Value must be a valid `long` value."
										},
										{
											"key": "creationLog",
											"value": "<boolean>",
											"description": "Only include creation logs. Value may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "failureLog",
											"value": "<boolean>",
											"description": "Only include failure logs. Value may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "successLog",
											"value": "<boolean>",
											"description": "Only include success logs. Value may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "deletionLog",
											"value": "<boolean>",
											"description": "Only include deletion logs. Value may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "sortBy",
											"value": "processDefinitionId",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								},
								"description": "Queries for historic job logs that fulfill the given parameters.\nThe size of the result set can be retrieved by using the\n[Get Job Log Count](https://docs.camunda.org/manual/7.21/reference/rest/history/job-log/get-job-log-query-count/)\nmethod."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/job-log?logId=<string>&jobId=<string>&jobExceptionMessage=<string>&jobDefinitionId=<string>&jobDefinitionType=<string>&jobDefinitionConfiguration=<string>&activityIdIn=<string>&failedActivityIdIn=<string>&executionIdIn=<string>&processInstanceId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&deploymentId=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&hostname=<string>&jobPriorityLowerThanOrEquals=<long>&jobPriorityHigherThanOrEquals=<long>&creationLog=<boolean>&failureLog=<boolean>&successLog=<boolean>&deletionLog=<boolean>&sortBy=processDefinitionId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"job-log"
											],
											"query": [
												{
													"key": "logId",
													"value": "<string>",
													"description": "Filter by historic job log id."
												},
												{
													"key": "jobId",
													"value": "<string>",
													"description": "Filter by job id."
												},
												{
													"key": "jobExceptionMessage",
													"value": "<string>",
													"description": "Filter by job exception message."
												},
												{
													"key": "jobDefinitionId",
													"value": "<string>",
													"description": "Filter by job definition id."
												},
												{
													"key": "jobDefinitionType",
													"value": "<string>",
													"description": "Filter by job definition type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/the-job-executor/#job-creation)\nfor more information about job definition types."
												},
												{
													"key": "jobDefinitionConfiguration",
													"value": "<string>",
													"description": "Filter by job definition configuration."
												},
												{
													"key": "activityIdIn",
													"value": "<string>",
													"description": "Only include historic job logs which belong to one of the passed activity ids."
												},
												{
													"key": "failedActivityIdIn",
													"value": "<string>",
													"description": "Only include historic job logs which belong to failures of one of the passed activity ids."
												},
												{
													"key": "executionIdIn",
													"value": "<string>",
													"description": "Only include historic job logs which belong to one of the passed execution ids."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by process instance id."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by process definition id."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Filter by process definition key."
												},
												{
													"key": "deploymentId",
													"value": "<string>",
													"description": "Filter by deployment id."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Only include historic job log entries which belong to one of the passed and comma-\nseparated tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic job log entries that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
												},
												{
													"key": "hostname",
													"value": "<string>",
													"description": "Filter by hostname."
												},
												{
													"key": "jobPriorityLowerThanOrEquals",
													"value": "<long>",
													"description": "Only include logs for which the associated job had a priority lower than or equal to the\ngiven value. Value must be a valid `long` value."
												},
												{
													"key": "jobPriorityHigherThanOrEquals",
													"value": "<long>",
													"description": "Only include logs for which the associated job had a priority higher than or equal to the\ngiven value. Value must be a valid `long` value."
												},
												{
													"key": "creationLog",
													"value": "<boolean>",
													"description": "Only include creation logs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "failureLog",
													"value": "<boolean>",
													"description": "Only include failure logs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "successLog",
													"value": "<boolean>",
													"description": "Only include success logs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "deletionLog",
													"value": "<boolean>",
													"description": "Only include deletion logs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "sortBy",
													"value": "processDefinitionId",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"timestamp\": \"<dateTime>\",\n    \"removalTime\": \"<dateTime>\",\n    \"jobId\": \"<string>\",\n    \"jobDueDate\": \"<dateTime>\",\n    \"jobRetries\": \"<integer>\",\n    \"jobPriority\": \"<long>\",\n    \"jobExceptionMessage\": \"<string>\",\n    \"failedActivityId\": \"<string>\",\n    \"jobDefinitionId\": \"<string>\",\n    \"jobDefinitionType\": \"<string>\",\n    \"jobDefinitionConfiguration\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"deploymentId\": \"<string>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"creationLog\": \"<boolean>\",\n    \"failureLog\": \"<boolean>\",\n    \"successLog\": \"<boolean>\",\n    \"deletionLog\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"timestamp\": \"<dateTime>\",\n    \"removalTime\": \"<dateTime>\",\n    \"jobId\": \"<string>\",\n    \"jobDueDate\": \"<dateTime>\",\n    \"jobRetries\": \"<integer>\",\n    \"jobPriority\": \"<long>\",\n    \"jobExceptionMessage\": \"<string>\",\n    \"failedActivityId\": \"<string>\",\n    \"jobDefinitionId\": \"<string>\",\n    \"jobDefinitionType\": \"<string>\",\n    \"jobDefinitionConfiguration\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"deploymentId\": \"<string>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"creationLog\": \"<boolean>\",\n    \"failureLog\": \"<boolean>\",\n    \"successLog\": \"<boolean>\",\n    \"deletionLog\": \"<boolean>\"\n  }\n]"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/job-log?logId=<string>&jobId=<string>&jobExceptionMessage=<string>&jobDefinitionId=<string>&jobDefinitionType=<string>&jobDefinitionConfiguration=<string>&activityIdIn=<string>&failedActivityIdIn=<string>&executionIdIn=<string>&processInstanceId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&deploymentId=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&hostname=<string>&jobPriorityLowerThanOrEquals=<long>&jobPriorityHigherThanOrEquals=<long>&creationLog=<boolean>&failureLog=<boolean>&successLog=<boolean>&deletionLog=<boolean>&sortBy=processDefinitionId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"job-log"
											],
											"query": [
												{
													"key": "logId",
													"value": "<string>",
													"description": "Filter by historic job log id."
												},
												{
													"key": "jobId",
													"value": "<string>",
													"description": "Filter by job id."
												},
												{
													"key": "jobExceptionMessage",
													"value": "<string>",
													"description": "Filter by job exception message."
												},
												{
													"key": "jobDefinitionId",
													"value": "<string>",
													"description": "Filter by job definition id."
												},
												{
													"key": "jobDefinitionType",
													"value": "<string>",
													"description": "Filter by job definition type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/the-job-executor/#job-creation)\nfor more information about job definition types."
												},
												{
													"key": "jobDefinitionConfiguration",
													"value": "<string>",
													"description": "Filter by job definition configuration."
												},
												{
													"key": "activityIdIn",
													"value": "<string>",
													"description": "Only include historic job logs which belong to one of the passed activity ids."
												},
												{
													"key": "failedActivityIdIn",
													"value": "<string>",
													"description": "Only include historic job logs which belong to failures of one of the passed activity ids."
												},
												{
													"key": "executionIdIn",
													"value": "<string>",
													"description": "Only include historic job logs which belong to one of the passed execution ids."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by process instance id."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by process definition id."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Filter by process definition key."
												},
												{
													"key": "deploymentId",
													"value": "<string>",
													"description": "Filter by deployment id."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Only include historic job log entries which belong to one of the passed and comma-\nseparated tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic job log entries that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
												},
												{
													"key": "hostname",
													"value": "<string>",
													"description": "Filter by hostname."
												},
												{
													"key": "jobPriorityLowerThanOrEquals",
													"value": "<long>",
													"description": "Only include logs for which the associated job had a priority lower than or equal to the\ngiven value. Value must be a valid `long` value."
												},
												{
													"key": "jobPriorityHigherThanOrEquals",
													"value": "<long>",
													"description": "Only include logs for which the associated job had a priority higher than or equal to the\ngiven value. Value must be a valid `long` value."
												},
												{
													"key": "creationLog",
													"value": "<boolean>",
													"description": "Only include creation logs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "failureLog",
													"value": "<boolean>",
													"description": "Only include failure logs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "successLog",
													"value": "<boolean>",
													"description": "Only include success logs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "deletionLog",
													"value": "<boolean>",
													"description": "Only include deletion logs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "sortBy",
													"value": "processDefinitionId",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get Job Logs (POST)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"logId\": \"<string>\",\n  \"jobId\": \"<string>\",\n  \"jobExceptionMessage\": \"<string>\",\n  \"jobDefinitionId\": \"<string>\",\n  \"jobDefinitionType\": \"<string>\",\n  \"jobDefinitionConfiguration\": \"<string>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"failedActivityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"deploymentId\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"hostname\": \"<string>\",\n  \"jobPriorityLowerThanOrEquals\": \"<long>\",\n  \"jobPriorityHigherThanOrEquals\": \"<long>\",\n  \"creationLog\": \"<boolean>\",\n  \"failureLog\": \"<boolean>\",\n  \"successLog\": \"<boolean>\",\n  \"deletionLog\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"tenantId\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"hostname\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/history/job-log?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"history",
										"job-log"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								},
								"description": "Queries for historic job logs that fulfill the given parameters.\nThis method is slightly more powerful than the\n[Get Job Logs](https://docs.camunda.org/manual/7.21/reference/rest/history/job-log/get-job-log-query/)\nmethod because it allows filtering by historic job logs values of the\ndifferent types `String`, `Number` or `Boolean`."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"logId\": \"<string>\",\n  \"jobId\": \"<string>\",\n  \"jobExceptionMessage\": \"<string>\",\n  \"jobDefinitionId\": \"<string>\",\n  \"jobDefinitionType\": \"<string>\",\n  \"jobDefinitionConfiguration\": \"<string>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"failedActivityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"deploymentId\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"hostname\": \"<string>\",\n  \"jobPriorityLowerThanOrEquals\": \"<long>\",\n  \"jobPriorityHigherThanOrEquals\": \"<long>\",\n  \"creationLog\": \"<boolean>\",\n  \"failureLog\": \"<boolean>\",\n  \"successLog\": \"<boolean>\",\n  \"deletionLog\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"tenantId\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"hostname\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/job-log?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"job-log"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"timestamp\": \"<dateTime>\",\n    \"removalTime\": \"<dateTime>\",\n    \"jobId\": \"<string>\",\n    \"jobDueDate\": \"<dateTime>\",\n    \"jobRetries\": \"<integer>\",\n    \"jobPriority\": \"<long>\",\n    \"jobExceptionMessage\": \"<string>\",\n    \"failedActivityId\": \"<string>\",\n    \"jobDefinitionId\": \"<string>\",\n    \"jobDefinitionType\": \"<string>\",\n    \"jobDefinitionConfiguration\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"deploymentId\": \"<string>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"creationLog\": \"<boolean>\",\n    \"failureLog\": \"<boolean>\",\n    \"successLog\": \"<boolean>\",\n    \"deletionLog\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"timestamp\": \"<dateTime>\",\n    \"removalTime\": \"<dateTime>\",\n    \"jobId\": \"<string>\",\n    \"jobDueDate\": \"<dateTime>\",\n    \"jobRetries\": \"<integer>\",\n    \"jobPriority\": \"<long>\",\n    \"jobExceptionMessage\": \"<string>\",\n    \"failedActivityId\": \"<string>\",\n    \"jobDefinitionId\": \"<string>\",\n    \"jobDefinitionType\": \"<string>\",\n    \"jobDefinitionConfiguration\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"deploymentId\": \"<string>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"creationLog\": \"<boolean>\",\n    \"failureLog\": \"<boolean>\",\n    \"successLog\": \"<boolean>\",\n    \"deletionLog\": \"<boolean>\"\n  }\n]"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"logId\": \"<string>\",\n  \"jobId\": \"<string>\",\n  \"jobExceptionMessage\": \"<string>\",\n  \"jobDefinitionId\": \"<string>\",\n  \"jobDefinitionType\": \"<string>\",\n  \"jobDefinitionConfiguration\": \"<string>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"failedActivityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"deploymentId\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"hostname\": \"<string>\",\n  \"jobPriorityLowerThanOrEquals\": \"<long>\",\n  \"jobPriorityHigherThanOrEquals\": \"<long>\",\n  \"creationLog\": \"<boolean>\",\n  \"failureLog\": \"<boolean>\",\n  \"successLog\": \"<boolean>\",\n  \"deletionLog\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"tenantId\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"hostname\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/job-log?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"job-log"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "process-definition",
					"item": [
						{
							"name": "cleanable-process-instance-report",
							"item": [
								{
									"name": "count",
									"item": [
										{
											"name": "Get Cleanable Process Instance Report Count",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/process-definition/cleanable-process-instance-report/count?processDefinitionIdIn=<string>&processDefinitionKeyIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&compact=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"process-definition",
														"cleanable-process-instance-report",
														"count"
													],
													"query": [
														{
															"key": "processDefinitionIdIn",
															"value": "<string>",
															"description": "Filter by process definition ids. Must be a comma-separated list of process definition ids."
														},
														{
															"key": "processDefinitionKeyIn",
															"value": "<string>",
															"description": "Filter by process definition keys. Must be a comma-separated list of process definition keys."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Filter by a comma-separated list of tenant ids. A process definition must have one of the given \ntenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include process definitions which belong to no tenant. Value may only be `true`, as\n`false` is the default behavior."
														},
														{
															"key": "compact",
															"value": "<boolean>",
															"description": "Only include process instances which have more than zero finished instances. Value may\nonly be `true`, as `false` is the default behavior."
														}
													]
												},
												"description": "Queries for the number of report results about a process definition and finished\nprocess instances relevant to history cleanup (see\n[History cleanup](https://docs.camunda.org/manual/7.21/user-guide/process-engine/history/#history-cleanup)).\nTakes the same parameters as the\n[Get Cleanable Process Instance Report](https://docs.camunda.org/manual/7.21/reference/rest/history/process-definition/get-cleanable-process-instance-report/)\nmethod."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/history/process-definition/cleanable-process-instance-report/count?processDefinitionIdIn=<string>&processDefinitionKeyIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&compact=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"process-definition",
																"cleanable-process-instance-report",
																"count"
															],
															"query": [
																{
																	"key": "processDefinitionIdIn",
																	"value": "<string>",
																	"description": "Filter by process definition ids. Must be a comma-separated list of process definition ids."
																},
																{
																	"key": "processDefinitionKeyIn",
																	"value": "<string>",
																	"description": "Filter by process definition keys. Must be a comma-separated list of process definition keys."
																},
																{
																	"key": "tenantIdIn",
																	"value": "<string>",
																	"description": "Filter by a comma-separated list of tenant ids. A process definition must have one of the given \ntenant ids."
																},
																{
																	"key": "withoutTenantId",
																	"value": "<boolean>",
																	"description": "Only include process definitions which belong to no tenant. Value may only be `true`, as\n`false` is the default behavior."
																},
																{
																	"key": "compact",
																	"value": "<boolean>",
																	"description": "Only include process instances which have more than zero finished instances. Value may\nonly be `true`, as `false` is the default behavior."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": \"<long>\"\n}"
												},
												{
													"name": "See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/history/process-definition/cleanable-process-instance-report/count?processDefinitionIdIn=<string>&processDefinitionKeyIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&compact=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"process-definition",
																"cleanable-process-instance-report",
																"count"
															],
															"query": [
																{
																	"key": "processDefinitionIdIn",
																	"value": "<string>",
																	"description": "Filter by process definition ids. Must be a comma-separated list of process definition ids."
																},
																{
																	"key": "processDefinitionKeyIn",
																	"value": "<string>",
																	"description": "Filter by process definition keys. Must be a comma-separated list of process definition keys."
																},
																{
																	"key": "tenantIdIn",
																	"value": "<string>",
																	"description": "Filter by a comma-separated list of tenant ids. A process definition must have one of the given \ntenant ids."
																},
																{
																	"key": "withoutTenantId",
																	"value": "<boolean>",
																	"description": "Only include process definitions which belong to no tenant. Value may only be `true`, as\n`false` is the default behavior."
																},
																{
																	"key": "compact",
																	"value": "<boolean>",
																	"description": "Only include process instances which have more than zero finished instances. Value may\nonly be `true`, as `false` is the default behavior."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Cleanable Process Instance Report",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/process-definition/cleanable-process-instance-report?processDefinitionIdIn=<string>&processDefinitionKeyIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&compact=<boolean>&sortBy=finished&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"process-definition",
												"cleanable-process-instance-report"
											],
											"query": [
												{
													"key": "processDefinitionIdIn",
													"value": "<string>",
													"description": "Filter by process definition ids. Must be a comma-separated list of process definition ids."
												},
												{
													"key": "processDefinitionKeyIn",
													"value": "<string>",
													"description": "Filter by process definition keys. Must be a comma-separated list of process definition keys."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids. A process definition must have one of the given \ntenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include process definitions which belong to no tenant. Value may only be `true`, as\n`false` is the default behavior."
												},
												{
													"key": "compact",
													"value": "<boolean>",
													"description": "Only include process instances which have more than zero finished instances. Value may\nonly be `true`, as `false` is the default behavior."
												},
												{
													"key": "sortBy",
													"value": "finished",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										},
										"description": "Retrieves a report about a process definition and finished process instances\nrelevant to history cleanup (see\n[History cleanup](https://docs.camunda.org/manual/7.21/user-guide/process-engine/history/#history-cleanup)) \nso that you can tune the history time to live.\nThese reports include the count of the finished historic process\ninstances, cleanable process instances and basic process definition\ndata - id, key, name and version.\nThe size of the result set can be retrieved by using the\n[Get Cleanable Process Instance Report Count](https://docs.camunda.org/manual/7.21/reference/rest/history/process-definition/get-cleanable-process-instance-report-count/)\nmethod."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/process-definition/cleanable-process-instance-report?processDefinitionIdIn=<string>&processDefinitionKeyIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&compact=<boolean>&sortBy=finished&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"process-definition",
														"cleanable-process-instance-report"
													],
													"query": [
														{
															"key": "processDefinitionIdIn",
															"value": "<string>",
															"description": "Filter by process definition ids. Must be a comma-separated list of process definition ids."
														},
														{
															"key": "processDefinitionKeyIn",
															"value": "<string>",
															"description": "Filter by process definition keys. Must be a comma-separated list of process definition keys."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Filter by a comma-separated list of tenant ids. A process definition must have one of the given \ntenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include process definitions which belong to no tenant. Value may only be `true`, as\n`false` is the default behavior."
														},
														{
															"key": "compact",
															"value": "<boolean>",
															"description": "Only include process instances which have more than zero finished instances. Value may\nonly be `true`, as `false` is the default behavior."
														},
														{
															"key": "sortBy",
															"value": "finished",
															"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
														},
														{
															"key": "sortOrder",
															"value": "asc",
															"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
														},
														{
															"key": "firstResult",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the index of the first result to return."
														},
														{
															"key": "maxResults",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionVersion\": \"<integer>\",\n    \"historyTimeToLive\": \"<integer>\",\n    \"finishedProcessInstanceCount\": \"<long>\",\n    \"cleanableProcessInstanceCount\": \"<long>\",\n    \"tenantId\": \"<string>\"\n  },\n  {\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionVersion\": \"<integer>\",\n    \"historyTimeToLive\": \"<integer>\",\n    \"finishedProcessInstanceCount\": \"<long>\",\n    \"cleanableProcessInstanceCount\": \"<long>\",\n    \"tenantId\": \"<string>\"\n  }\n]"
										},
										{
											"name": "See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/process-definition/cleanable-process-instance-report?processDefinitionIdIn=<string>&processDefinitionKeyIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&compact=<boolean>&sortBy=finished&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"process-definition",
														"cleanable-process-instance-report"
													],
													"query": [
														{
															"key": "processDefinitionIdIn",
															"value": "<string>",
															"description": "Filter by process definition ids. Must be a comma-separated list of process definition ids."
														},
														{
															"key": "processDefinitionKeyIn",
															"value": "<string>",
															"description": "Filter by process definition keys. Must be a comma-separated list of process definition keys."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Filter by a comma-separated list of tenant ids. A process definition must have one of the given \ntenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include process definitions which belong to no tenant. Value may only be `true`, as\n`false` is the default behavior."
														},
														{
															"key": "compact",
															"value": "<boolean>",
															"description": "Only include process instances which have more than zero finished instances. Value may\nonly be `true`, as `false` is the default behavior."
														},
														{
															"key": "sortBy",
															"value": "finished",
															"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
														},
														{
															"key": "sortOrder",
															"value": "asc",
															"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
														},
														{
															"key": "firstResult",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the index of the first result to return."
														},
														{
															"key": "maxResults",
															"value": "<integer>",
															"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "statistics",
									"item": [
										{
											"name": "Get Historic Activity Statistics",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/process-definition/:id/statistics?canceled=<boolean>&finished=<boolean>&completeScope=<boolean>&incidents=<boolean>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&processInstanceIdIn=<string>&sortBy=activityId&sortOrder=asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"process-definition",
														":id",
														"statistics"
													],
													"query": [
														{
															"key": "canceled",
															"value": "<boolean>",
															"description": "Whether to include the number of canceled activity instances in the result or not. Valid\nvalues are `true` or `false`. Default: `false`."
														},
														{
															"key": "finished",
															"value": "<boolean>",
															"description": "Whether to include the number of finished activity instances in the result or not. Valid\nvalues are `true` or `false`. Default: `false`."
														},
														{
															"key": "completeScope",
															"value": "<boolean>",
															"description": "Whether to include the number of activity instances which completed a scope in the result\nor not. Valid values are `true` or `false`. Default: `false`."
														},
														{
															"key": "incidents",
															"value": "<boolean>",
															"description": "Whether to include the number of incidents. Valid values are `true` or `false`. Default: `false`."
														},
														{
															"key": "startedBefore",
															"value": "<dateTime>",
															"description": "Restrict to process instances that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), \nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, \ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "startedAfter",
															"value": "<dateTime>",
															"description": "Restrict to process instances that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), \nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, \ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "finishedBefore",
															"value": "<dateTime>",
															"description": "Restrict to process instances that were finished before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), \nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, \ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "finishedAfter",
															"value": "<dateTime>",
															"description": "Restrict to process instances that were finished after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), \nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, \ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "processInstanceIdIn",
															"value": "<string>",
															"description": "Restrict to process instances with the given IDs. The IDs must be provided as a comma-\nseparated list."
														},
														{
															"key": "sortBy",
															"value": "activityId",
															"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
														},
														{
															"key": "sortOrder",
															"value": "asc",
															"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the process definition."
														}
													]
												},
												"description": "Retrieves historic statistics of a given process definition, grouped by activities.\nThese statistics include the number of running activity instances and,\noptionally, the number of canceled activity instances, finished\nactivity instances and activity instances which completed a scope\n(i.e., in BPMN 2.0 manner: a scope is completed by an activity\ninstance when the activity instance consumed a token but did not emit\na new token).\n**Note:** This only includes historic data."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/history/process-definition/:id/statistics?canceled=<boolean>&finished=<boolean>&completeScope=<boolean>&incidents=<boolean>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&processInstanceIdIn=<string>&sortBy=activityId&sortOrder=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"process-definition",
																":id",
																"statistics"
															],
															"query": [
																{
																	"key": "canceled",
																	"value": "<boolean>",
																	"description": "Whether to include the number of canceled activity instances in the result or not. Valid\nvalues are `true` or `false`. Default: `false`."
																},
																{
																	"key": "finished",
																	"value": "<boolean>",
																	"description": "Whether to include the number of finished activity instances in the result or not. Valid\nvalues are `true` or `false`. Default: `false`."
																},
																{
																	"key": "completeScope",
																	"value": "<boolean>",
																	"description": "Whether to include the number of activity instances which completed a scope in the result\nor not. Valid values are `true` or `false`. Default: `false`."
																},
																{
																	"key": "incidents",
																	"value": "<boolean>",
																	"description": "Whether to include the number of incidents. Valid values are `true` or `false`. Default: `false`."
																},
																{
																	"key": "startedBefore",
																	"value": "<dateTime>",
																	"description": "Restrict to process instances that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), \nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, \ne.g., `2013-01-23T14:42:45.000+0200`."
																},
																{
																	"key": "startedAfter",
																	"value": "<dateTime>",
																	"description": "Restrict to process instances that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), \nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, \ne.g., `2013-01-23T14:42:45.000+0200`."
																},
																{
																	"key": "finishedBefore",
																	"value": "<dateTime>",
																	"description": "Restrict to process instances that were finished before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), \nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, \ne.g., `2013-01-23T14:42:45.000+0200`."
																},
																{
																	"key": "finishedAfter",
																	"value": "<dateTime>",
																	"description": "Restrict to process instances that were finished after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), \nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, \ne.g., `2013-01-23T14:42:45.000+0200`."
																},
																{
																	"key": "processInstanceIdIn",
																	"value": "<string>",
																	"description": "Restrict to process instances with the given IDs. The IDs must be provided as a comma-\nseparated list."
																},
																{
																	"key": "sortBy",
																	"value": "activityId",
																	"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
																},
																{
																	"key": "sortOrder",
																	"value": "asc",
																	"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"<string>\",\n    \"instances\": \"<long>\",\n    \"canceled\": \"<long>\",\n    \"finished\": \"<long>\",\n    \"completeScope\": \"<long>\",\n    \"openIncidents\": \"<long>\",\n    \"resolvedIncidents\": \"<long>\",\n    \"deletedIncidents\": \"<long>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"instances\": \"<long>\",\n    \"canceled\": \"<long>\",\n    \"finished\": \"<long>\",\n    \"completeScope\": \"<long>\",\n    \"openIncidents\": \"<long>\",\n    \"resolvedIncidents\": \"<long>\",\n    \"deletedIncidents\": \"<long>\"\n  }\n]"
												},
												{
													"name": "Returned if some of the query parameters are invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/history/process-definition/:id/statistics?canceled=<boolean>&finished=<boolean>&completeScope=<boolean>&incidents=<boolean>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&processInstanceIdIn=<string>&sortBy=activityId&sortOrder=asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"process-definition",
																":id",
																"statistics"
															],
															"query": [
																{
																	"key": "canceled",
																	"value": "<boolean>",
																	"description": "Whether to include the number of canceled activity instances in the result or not. Valid\nvalues are `true` or `false`. Default: `false`."
																},
																{
																	"key": "finished",
																	"value": "<boolean>",
																	"description": "Whether to include the number of finished activity instances in the result or not. Valid\nvalues are `true` or `false`. Default: `false`."
																},
																{
																	"key": "completeScope",
																	"value": "<boolean>",
																	"description": "Whether to include the number of activity instances which completed a scope in the result\nor not. Valid values are `true` or `false`. Default: `false`."
																},
																{
																	"key": "incidents",
																	"value": "<boolean>",
																	"description": "Whether to include the number of incidents. Valid values are `true` or `false`. Default: `false`."
																},
																{
																	"key": "startedBefore",
																	"value": "<dateTime>",
																	"description": "Restrict to process instances that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), \nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, \ne.g., `2013-01-23T14:42:45.000+0200`."
																},
																{
																	"key": "startedAfter",
																	"value": "<dateTime>",
																	"description": "Restrict to process instances that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), \nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, \ne.g., `2013-01-23T14:42:45.000+0200`."
																},
																{
																	"key": "finishedBefore",
																	"value": "<dateTime>",
																	"description": "Restrict to process instances that were finished before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), \nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, \ne.g., `2013-01-23T14:42:45.000+0200`."
																},
																{
																	"key": "finishedAfter",
																	"value": "<dateTime>",
																	"description": "Restrict to process instances that were finished after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), \nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, \ne.g., `2013-01-23T14:42:45.000+0200`."
																},
																{
																	"key": "processInstanceIdIn",
																	"value": "<string>",
																	"description": "Restrict to process instances with the given IDs. The IDs must be provided as a comma-\nseparated list."
																},
																{
																	"key": "sortBy",
																	"value": "activityId",
																	"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
																},
																{
																	"key": "sortOrder",
																	"value": "asc",
																	"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "process-instance",
					"item": [
						{
							"name": "count",
							"item": [
								{
									"name": "Get List Count",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/process-instance/count?processInstanceId=<string>&processInstanceIds=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionKeyIn=<string>&processDefinitionName=<string>&processDefinitionNameLike=<string>&processDefinitionKeyNotIn=<string>&processInstanceBusinessKey=<string>&processInstanceBusinessKeyIn=<string>&processInstanceBusinessKeyLike=<string>&rootProcessInstances=<boolean>&finished=<boolean>&unfinished=<boolean>&withIncidents=<boolean>&withRootIncidents=<boolean>&incidentType=<string>&incidentStatus=open&incidentMessage=<string>&incidentMessageLike=<string>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&executedActivityAfter=<dateTime>&executedActivityBefore=<dateTime>&executedJobAfter=<dateTime>&executedJobBefore=<dateTime>&startedBy=<string>&superProcessInstanceId=<string>&subProcessInstanceId=<string>&superCaseInstanceId=<string>&subCaseInstanceId=<string>&caseInstanceId=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&executedActivityIdIn=<string>&activeActivityIdIn=<string>&active=<boolean>&suspended=<boolean>&completed=<boolean>&externallyTerminated=<boolean>&internallyTerminated=<boolean>&variables=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"process-instance",
												"count"
											],
											"query": [
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by process instance id."
												},
												{
													"key": "processInstanceIds",
													"value": "<string>",
													"description": "Filter by process instance ids. Filter by a comma-separated list of `Strings`."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by the process definition the instances run on."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Filter by the key of the process definition the instances run on."
												},
												{
													"key": "processDefinitionKeyIn",
													"value": "<string>",
													"description": "Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Filter by a comma-separated list of `Strings`."
												},
												{
													"key": "processDefinitionName",
													"value": "<string>",
													"description": "Filter by the name of the process definition the instances run on."
												},
												{
													"key": "processDefinitionNameLike",
													"value": "<string>",
													"description": "Filter by process definition names that the parameter is a substring of."
												},
												{
													"key": "processDefinitionKeyNotIn",
													"value": "<string>",
													"description": "Exclude instances that belong to a set of process definitions. Filter by a comma-separated list of `Strings`."
												},
												{
													"key": "processInstanceBusinessKey",
													"value": "<string>",
													"description": "Filter by process instance business key."
												},
												{
													"key": "processInstanceBusinessKeyIn",
													"value": "<string>",
													"description": "Filter by a list of business keys. A process instance must have one of the given business keys. Filter by a comma-separated list of `Strings`"
												},
												{
													"key": "processInstanceBusinessKeyLike",
													"value": "<string>",
													"description": "Filter by process instance business key that the parameter is a substring of."
												},
												{
													"key": "rootProcessInstances",
													"value": "<boolean>",
													"description": "Restrict the query to all process instances that are top level process instances."
												},
												{
													"key": "finished",
													"value": "<boolean>",
													"description": "Only include finished process instances. This flag includes all process instances\nthat are completed or terminated. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "unfinished",
													"value": "<boolean>",
													"description": "Only include unfinished process instances. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "withIncidents",
													"value": "<boolean>",
													"description": "Only include process instances which have an incident. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "withRootIncidents",
													"value": "<boolean>",
													"description": "Only include process instances which have a root incident. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "incidentType",
													"value": "<string>",
													"description": "Filter by the incident type. See the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types) for a list of incident types."
												},
												{
													"key": "incidentStatus",
													"value": "open",
													"description": "Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents."
												},
												{
													"key": "incidentMessage",
													"value": "<string>",
													"description": "Filter by the incident message. Exact match."
												},
												{
													"key": "incidentMessageLike",
													"value": "<string>",
													"description": "Filter by the incident message that the parameter is a substring of."
												},
												{
													"key": "startedBefore",
													"value": "<dateTime>",
													"description": "Restrict to instances that were started before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "startedAfter",
													"value": "<dateTime>",
													"description": "Restrict to instances that were started after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "finishedBefore",
													"value": "<dateTime>",
													"description": "Restrict to instances that were finished before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "finishedAfter",
													"value": "<dateTime>",
													"description": "Restrict to instances that were finished after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "executedActivityAfter",
													"value": "<dateTime>",
													"description": "Restrict to instances that executed an activity after the given date (inclusive).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "executedActivityBefore",
													"value": "<dateTime>",
													"description": "Restrict to instances that executed an activity before the given date (inclusive).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "executedJobAfter",
													"value": "<dateTime>",
													"description": "Restrict to instances that executed an job after the given date (inclusive).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "executedJobBefore",
													"value": "<dateTime>",
													"description": "Restrict to instances that executed an job before the given date (inclusive).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "startedBy",
													"value": "<string>",
													"description": "Only include process instances that were started by the given user."
												},
												{
													"key": "superProcessInstanceId",
													"value": "<string>",
													"description": "Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id."
												},
												{
													"key": "subProcessInstanceId",
													"value": "<string>",
													"description": "Restrict query to one process instance that has a sub process instance with the given id."
												},
												{
													"key": "superCaseInstanceId",
													"value": "<string>",
													"description": "Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id."
												},
												{
													"key": "subCaseInstanceId",
													"value": "<string>",
													"description": "Restrict query to one process instance that has a sub case instance with the given id."
												},
												{
													"key": "caseInstanceId",
													"value": "<string>",
													"description": "Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Filter by a comma-separated list of `Strings`"
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic process instances which belong to no tenant. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "executedActivityIdIn",
													"value": "<string>",
													"description": "Restrict to instances that executed an activity with one of given ids. Filter by a comma-separated list of `Strings`"
												},
												{
													"key": "activeActivityIdIn",
													"value": "<string>",
													"description": "Restrict to instances that have an active activity with one of given ids. Filter by a comma-separated list of `Strings`"
												},
												{
													"key": "active",
													"value": "<boolean>",
													"description": "Restrict to instances that are active."
												},
												{
													"key": "suspended",
													"value": "<boolean>",
													"description": "Restrict to instances that are suspended."
												},
												{
													"key": "completed",
													"value": "<boolean>",
													"description": "Restrict to instances that are completed."
												},
												{
													"key": "externallyTerminated",
													"value": "<boolean>",
													"description": "Restrict to instances that are externallyTerminated."
												},
												{
													"key": "internallyTerminated",
													"value": "<boolean>",
													"description": "Restrict to instances that are internallyTerminated."
												},
												{
													"key": "variables",
													"value": "<string>",
													"description": "Only include process instances that have/had variables with certain values.\nVariable filtering expressions are comma-separated and are structured as follows:\nA valid parameter value has the form `key_operator_value`. `key` is the variable name, `operator` is the comparison operator to be used and `value` the variable value.\n\n**Note:** Values are always treated as String objects on server side.\n\nValid operator values are: `eq` - equal to; `neq` - not equal to; `gt` - greater than; `gteq` - greater than or equal to; `lt` - lower than; `lteq` - lower than or equal to; `like`.\n\nKey and value may not contain underscore or comma characters.\n"
												},
												{
													"key": "variableNamesIgnoreCase",
													"value": "<boolean>",
													"description": "Match all variable names provided in variables case-insensitively. If set to `true` variableName and variablename are treated as equal."
												},
												{
													"key": "variableValuesIgnoreCase",
													"value": "<boolean>",
													"description": "Match all variable values provided in variables case-insensitively. If set to `true` variableValue and variablevalue are treated as equal."
												}
											]
										},
										"description": "Queries for the number of historic process instances that fulfill the given parameters.\nTakes the same parameters as the [Get Process Instances](https://docs.camunda.org/manual/7.21/reference/rest/history/process-instance/get-process-instance-query/) method."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/process-instance/count?processInstanceId=<string>&processInstanceIds=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionKeyIn=<string>&processDefinitionName=<string>&processDefinitionNameLike=<string>&processDefinitionKeyNotIn=<string>&processInstanceBusinessKey=<string>&processInstanceBusinessKeyIn=<string>&processInstanceBusinessKeyLike=<string>&rootProcessInstances=<boolean>&finished=<boolean>&unfinished=<boolean>&withIncidents=<boolean>&withRootIncidents=<boolean>&incidentType=<string>&incidentStatus=open&incidentMessage=<string>&incidentMessageLike=<string>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&executedActivityAfter=<dateTime>&executedActivityBefore=<dateTime>&executedJobAfter=<dateTime>&executedJobBefore=<dateTime>&startedBy=<string>&superProcessInstanceId=<string>&subProcessInstanceId=<string>&superCaseInstanceId=<string>&subCaseInstanceId=<string>&caseInstanceId=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&executedActivityIdIn=<string>&activeActivityIdIn=<string>&active=<boolean>&suspended=<boolean>&completed=<boolean>&externallyTerminated=<boolean>&internallyTerminated=<boolean>&variables=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"process-instance",
														"count"
													],
													"query": [
														{
															"key": "processInstanceId",
															"value": "<string>",
															"description": "Filter by process instance id."
														},
														{
															"key": "processInstanceIds",
															"value": "<string>",
															"description": "Filter by process instance ids. Filter by a comma-separated list of `Strings`."
														},
														{
															"key": "processDefinitionId",
															"value": "<string>",
															"description": "Filter by the process definition the instances run on."
														},
														{
															"key": "processDefinitionKey",
															"value": "<string>",
															"description": "Filter by the key of the process definition the instances run on."
														},
														{
															"key": "processDefinitionKeyIn",
															"value": "<string>",
															"description": "Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Filter by a comma-separated list of `Strings`."
														},
														{
															"key": "processDefinitionName",
															"value": "<string>",
															"description": "Filter by the name of the process definition the instances run on."
														},
														{
															"key": "processDefinitionNameLike",
															"value": "<string>",
															"description": "Filter by process definition names that the parameter is a substring of."
														},
														{
															"key": "processDefinitionKeyNotIn",
															"value": "<string>",
															"description": "Exclude instances that belong to a set of process definitions. Filter by a comma-separated list of `Strings`."
														},
														{
															"key": "processInstanceBusinessKey",
															"value": "<string>",
															"description": "Filter by process instance business key."
														},
														{
															"key": "processInstanceBusinessKeyIn",
															"value": "<string>",
															"description": "Filter by a list of business keys. A process instance must have one of the given business keys. Filter by a comma-separated list of `Strings`"
														},
														{
															"key": "processInstanceBusinessKeyLike",
															"value": "<string>",
															"description": "Filter by process instance business key that the parameter is a substring of."
														},
														{
															"key": "rootProcessInstances",
															"value": "<boolean>",
															"description": "Restrict the query to all process instances that are top level process instances."
														},
														{
															"key": "finished",
															"value": "<boolean>",
															"description": "Only include finished process instances. This flag includes all process instances\nthat are completed or terminated. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "unfinished",
															"value": "<boolean>",
															"description": "Only include unfinished process instances. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "withIncidents",
															"value": "<boolean>",
															"description": "Only include process instances which have an incident. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "withRootIncidents",
															"value": "<boolean>",
															"description": "Only include process instances which have a root incident. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "incidentType",
															"value": "<string>",
															"description": "Filter by the incident type. See the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types) for a list of incident types."
														},
														{
															"key": "incidentStatus",
															"value": "open",
															"description": "Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents."
														},
														{
															"key": "incidentMessage",
															"value": "<string>",
															"description": "Filter by the incident message. Exact match."
														},
														{
															"key": "incidentMessageLike",
															"value": "<string>",
															"description": "Filter by the incident message that the parameter is a substring of."
														},
														{
															"key": "startedBefore",
															"value": "<dateTime>",
															"description": "Restrict to instances that were started before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "startedAfter",
															"value": "<dateTime>",
															"description": "Restrict to instances that were started after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "finishedBefore",
															"value": "<dateTime>",
															"description": "Restrict to instances that were finished before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "finishedAfter",
															"value": "<dateTime>",
															"description": "Restrict to instances that were finished after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "executedActivityAfter",
															"value": "<dateTime>",
															"description": "Restrict to instances that executed an activity after the given date (inclusive).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "executedActivityBefore",
															"value": "<dateTime>",
															"description": "Restrict to instances that executed an activity before the given date (inclusive).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "executedJobAfter",
															"value": "<dateTime>",
															"description": "Restrict to instances that executed an job after the given date (inclusive).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "executedJobBefore",
															"value": "<dateTime>",
															"description": "Restrict to instances that executed an job before the given date (inclusive).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "startedBy",
															"value": "<string>",
															"description": "Only include process instances that were started by the given user."
														},
														{
															"key": "superProcessInstanceId",
															"value": "<string>",
															"description": "Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id."
														},
														{
															"key": "subProcessInstanceId",
															"value": "<string>",
															"description": "Restrict query to one process instance that has a sub process instance with the given id."
														},
														{
															"key": "superCaseInstanceId",
															"value": "<string>",
															"description": "Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id."
														},
														{
															"key": "subCaseInstanceId",
															"value": "<string>",
															"description": "Restrict query to one process instance that has a sub case instance with the given id."
														},
														{
															"key": "caseInstanceId",
															"value": "<string>",
															"description": "Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Filter by a comma-separated list of `Strings`"
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include historic process instances which belong to no tenant. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "executedActivityIdIn",
															"value": "<string>",
															"description": "Restrict to instances that executed an activity with one of given ids. Filter by a comma-separated list of `Strings`"
														},
														{
															"key": "activeActivityIdIn",
															"value": "<string>",
															"description": "Restrict to instances that have an active activity with one of given ids. Filter by a comma-separated list of `Strings`"
														},
														{
															"key": "active",
															"value": "<boolean>",
															"description": "Restrict to instances that are active."
														},
														{
															"key": "suspended",
															"value": "<boolean>",
															"description": "Restrict to instances that are suspended."
														},
														{
															"key": "completed",
															"value": "<boolean>",
															"description": "Restrict to instances that are completed."
														},
														{
															"key": "externallyTerminated",
															"value": "<boolean>",
															"description": "Restrict to instances that are externallyTerminated."
														},
														{
															"key": "internallyTerminated",
															"value": "<boolean>",
															"description": "Restrict to instances that are internallyTerminated."
														},
														{
															"key": "variables",
															"value": "<string>",
															"description": "Only include process instances that have/had variables with certain values.\nVariable filtering expressions are comma-separated and are structured as follows:\nA valid parameter value has the form `key_operator_value`. `key` is the variable name, `operator` is the comparison operator to be used and `value` the variable value.\n\n**Note:** Values are always treated as String objects on server side.\n\nValid operator values are: `eq` - equal to; `neq` - not equal to; `gt` - greater than; `gteq` - greater than or equal to; `lt` - lower than; `lteq` - lower than or equal to; `like`.\n\nKey and value may not contain underscore or comma characters.\n"
														},
														{
															"key": "variableNamesIgnoreCase",
															"value": "<boolean>",
															"description": "Match all variable names provided in variables case-insensitively. If set to `true` variableName and variablename are treated as equal."
														},
														{
															"key": "variableValuesIgnoreCase",
															"value": "<boolean>",
															"description": "Match all variable values provided in variables case-insensitively. If set to `true` variableValue and variablevalue are treated as equal."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<long>\"\n}"
										},
										{
											"name": "Bad Request\nReturned if some of the query parameters are invalid.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/process-instance/count?processInstanceId=<string>&processInstanceIds=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionKeyIn=<string>&processDefinitionName=<string>&processDefinitionNameLike=<string>&processDefinitionKeyNotIn=<string>&processInstanceBusinessKey=<string>&processInstanceBusinessKeyIn=<string>&processInstanceBusinessKeyLike=<string>&rootProcessInstances=<boolean>&finished=<boolean>&unfinished=<boolean>&withIncidents=<boolean>&withRootIncidents=<boolean>&incidentType=<string>&incidentStatus=open&incidentMessage=<string>&incidentMessageLike=<string>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&executedActivityAfter=<dateTime>&executedActivityBefore=<dateTime>&executedJobAfter=<dateTime>&executedJobBefore=<dateTime>&startedBy=<string>&superProcessInstanceId=<string>&subProcessInstanceId=<string>&superCaseInstanceId=<string>&subCaseInstanceId=<string>&caseInstanceId=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&executedActivityIdIn=<string>&activeActivityIdIn=<string>&active=<boolean>&suspended=<boolean>&completed=<boolean>&externallyTerminated=<boolean>&internallyTerminated=<boolean>&variables=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"process-instance",
														"count"
													],
													"query": [
														{
															"key": "processInstanceId",
															"value": "<string>",
															"description": "Filter by process instance id."
														},
														{
															"key": "processInstanceIds",
															"value": "<string>",
															"description": "Filter by process instance ids. Filter by a comma-separated list of `Strings`."
														},
														{
															"key": "processDefinitionId",
															"value": "<string>",
															"description": "Filter by the process definition the instances run on."
														},
														{
															"key": "processDefinitionKey",
															"value": "<string>",
															"description": "Filter by the key of the process definition the instances run on."
														},
														{
															"key": "processDefinitionKeyIn",
															"value": "<string>",
															"description": "Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Filter by a comma-separated list of `Strings`."
														},
														{
															"key": "processDefinitionName",
															"value": "<string>",
															"description": "Filter by the name of the process definition the instances run on."
														},
														{
															"key": "processDefinitionNameLike",
															"value": "<string>",
															"description": "Filter by process definition names that the parameter is a substring of."
														},
														{
															"key": "processDefinitionKeyNotIn",
															"value": "<string>",
															"description": "Exclude instances that belong to a set of process definitions. Filter by a comma-separated list of `Strings`."
														},
														{
															"key": "processInstanceBusinessKey",
															"value": "<string>",
															"description": "Filter by process instance business key."
														},
														{
															"key": "processInstanceBusinessKeyIn",
															"value": "<string>",
															"description": "Filter by a list of business keys. A process instance must have one of the given business keys. Filter by a comma-separated list of `Strings`"
														},
														{
															"key": "processInstanceBusinessKeyLike",
															"value": "<string>",
															"description": "Filter by process instance business key that the parameter is a substring of."
														},
														{
															"key": "rootProcessInstances",
															"value": "<boolean>",
															"description": "Restrict the query to all process instances that are top level process instances."
														},
														{
															"key": "finished",
															"value": "<boolean>",
															"description": "Only include finished process instances. This flag includes all process instances\nthat are completed or terminated. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "unfinished",
															"value": "<boolean>",
															"description": "Only include unfinished process instances. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "withIncidents",
															"value": "<boolean>",
															"description": "Only include process instances which have an incident. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "withRootIncidents",
															"value": "<boolean>",
															"description": "Only include process instances which have a root incident. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "incidentType",
															"value": "<string>",
															"description": "Filter by the incident type. See the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types) for a list of incident types."
														},
														{
															"key": "incidentStatus",
															"value": "open",
															"description": "Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents."
														},
														{
															"key": "incidentMessage",
															"value": "<string>",
															"description": "Filter by the incident message. Exact match."
														},
														{
															"key": "incidentMessageLike",
															"value": "<string>",
															"description": "Filter by the incident message that the parameter is a substring of."
														},
														{
															"key": "startedBefore",
															"value": "<dateTime>",
															"description": "Restrict to instances that were started before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "startedAfter",
															"value": "<dateTime>",
															"description": "Restrict to instances that were started after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "finishedBefore",
															"value": "<dateTime>",
															"description": "Restrict to instances that were finished before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "finishedAfter",
															"value": "<dateTime>",
															"description": "Restrict to instances that were finished after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "executedActivityAfter",
															"value": "<dateTime>",
															"description": "Restrict to instances that executed an activity after the given date (inclusive).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "executedActivityBefore",
															"value": "<dateTime>",
															"description": "Restrict to instances that executed an activity before the given date (inclusive).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "executedJobAfter",
															"value": "<dateTime>",
															"description": "Restrict to instances that executed an job after the given date (inclusive).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "executedJobBefore",
															"value": "<dateTime>",
															"description": "Restrict to instances that executed an job before the given date (inclusive).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "startedBy",
															"value": "<string>",
															"description": "Only include process instances that were started by the given user."
														},
														{
															"key": "superProcessInstanceId",
															"value": "<string>",
															"description": "Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id."
														},
														{
															"key": "subProcessInstanceId",
															"value": "<string>",
															"description": "Restrict query to one process instance that has a sub process instance with the given id."
														},
														{
															"key": "superCaseInstanceId",
															"value": "<string>",
															"description": "Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id."
														},
														{
															"key": "subCaseInstanceId",
															"value": "<string>",
															"description": "Restrict query to one process instance that has a sub case instance with the given id."
														},
														{
															"key": "caseInstanceId",
															"value": "<string>",
															"description": "Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Filter by a comma-separated list of `Strings`"
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include historic process instances which belong to no tenant. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "executedActivityIdIn",
															"value": "<string>",
															"description": "Restrict to instances that executed an activity with one of given ids. Filter by a comma-separated list of `Strings`"
														},
														{
															"key": "activeActivityIdIn",
															"value": "<string>",
															"description": "Restrict to instances that have an active activity with one of given ids. Filter by a comma-separated list of `Strings`"
														},
														{
															"key": "active",
															"value": "<boolean>",
															"description": "Restrict to instances that are active."
														},
														{
															"key": "suspended",
															"value": "<boolean>",
															"description": "Restrict to instances that are suspended."
														},
														{
															"key": "completed",
															"value": "<boolean>",
															"description": "Restrict to instances that are completed."
														},
														{
															"key": "externallyTerminated",
															"value": "<boolean>",
															"description": "Restrict to instances that are externallyTerminated."
														},
														{
															"key": "internallyTerminated",
															"value": "<boolean>",
															"description": "Restrict to instances that are internallyTerminated."
														},
														{
															"key": "variables",
															"value": "<string>",
															"description": "Only include process instances that have/had variables with certain values.\nVariable filtering expressions are comma-separated and are structured as follows:\nA valid parameter value has the form `key_operator_value`. `key` is the variable name, `operator` is the comparison operator to be used and `value` the variable value.\n\n**Note:** Values are always treated as String objects on server side.\n\nValid operator values are: `eq` - equal to; `neq` - not equal to; `gt` - greater than; `gteq` - greater than or equal to; `lt` - lower than; `lteq` - lower than or equal to; `like`.\n\nKey and value may not contain underscore or comma characters.\n"
														},
														{
															"key": "variableNamesIgnoreCase",
															"value": "<boolean>",
															"description": "Match all variable names provided in variables case-insensitively. If set to `true` variableName and variablename are treated as equal."
														},
														{
															"key": "variableValuesIgnoreCase",
															"value": "<boolean>",
															"description": "Match all variable values provided in variables case-insensitively. If set to `true` variableValue and variablevalue are treated as equal."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								},
								{
									"name": "Get List Count (POST)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionName\": \"<string>\",\n  \"processDefinitionNameLike\": \"<string>\",\n  \"processDefinitionKeyNotIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKey\": \"<string>\",\n  \"processInstanceBusinessKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKeyLike\": \"<string>\",\n  \"rootProcessInstances\": \"<boolean>\",\n  \"finished\": \"<boolean>\",\n  \"unfinished\": \"<boolean>\",\n  \"withIncidents\": \"<boolean>\",\n  \"withRootIncidents\": \"<boolean>\",\n  \"incidentType\": \"<string>\",\n  \"incidentStatus\": \"resolved\",\n  \"incidentMessage\": \"<string>\",\n  \"incidentMessageLike\": \"<string>\",\n  \"startedBefore\": \"<dateTime>\",\n  \"startedAfter\": \"<dateTime>\",\n  \"finishedBefore\": \"<dateTime>\",\n  \"finishedAfter\": \"<dateTime>\",\n  \"executedActivityAfter\": \"<dateTime>\",\n  \"executedActivityBefore\": \"<dateTime>\",\n  \"executedJobAfter\": \"<dateTime>\",\n  \"executedJobBefore\": \"<dateTime>\",\n  \"startedBy\": \"<string>\",\n  \"superProcessInstanceId\": \"<string>\",\n  \"subProcessInstanceId\": \"<string>\",\n  \"superCaseInstanceId\": \"<string>\",\n  \"subCaseInstanceId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"executedActivityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"activeActivityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"completed\": \"<boolean>\",\n  \"externallyTerminated\": \"<boolean>\",\n  \"internallyTerminated\": \"<boolean>\",\n  \"variables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"neq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"orQueries\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"startTime\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"definitionKey\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/process-instance/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"process-instance",
												"count"
											]
										},
										"description": "Queries for the number of historic process instances that fulfill the given parameters.\nThis method takes the same message body as the [Get Process Instances (POST)](https://docs.camunda.org/manual/7.21/reference/rest/history/process-instance/get-process-instance-query/) method and\ntherefore it is slightly more powerful than the [Get Process Instance Count](https://docs.camunda.org/manual/7.21/reference/rest/history/process-instance/post-process-instance-query-count/) method."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionName\": \"<string>\",\n  \"processDefinitionNameLike\": \"<string>\",\n  \"processDefinitionKeyNotIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKey\": \"<string>\",\n  \"processInstanceBusinessKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKeyLike\": \"<string>\",\n  \"rootProcessInstances\": \"<boolean>\",\n  \"finished\": \"<boolean>\",\n  \"unfinished\": \"<boolean>\",\n  \"withIncidents\": \"<boolean>\",\n  \"withRootIncidents\": \"<boolean>\",\n  \"incidentType\": \"<string>\",\n  \"incidentStatus\": \"resolved\",\n  \"incidentMessage\": \"<string>\",\n  \"incidentMessageLike\": \"<string>\",\n  \"startedBefore\": \"<dateTime>\",\n  \"startedAfter\": \"<dateTime>\",\n  \"finishedBefore\": \"<dateTime>\",\n  \"finishedAfter\": \"<dateTime>\",\n  \"executedActivityAfter\": \"<dateTime>\",\n  \"executedActivityBefore\": \"<dateTime>\",\n  \"executedJobAfter\": \"<dateTime>\",\n  \"executedJobBefore\": \"<dateTime>\",\n  \"startedBy\": \"<string>\",\n  \"superProcessInstanceId\": \"<string>\",\n  \"subProcessInstanceId\": \"<string>\",\n  \"superCaseInstanceId\": \"<string>\",\n  \"subCaseInstanceId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"executedActivityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"activeActivityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"completed\": \"<boolean>\",\n  \"externallyTerminated\": \"<boolean>\",\n  \"internallyTerminated\": \"<boolean>\",\n  \"variables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"neq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"orQueries\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"startTime\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"definitionKey\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/history/process-instance/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"process-instance",
														"count"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<long>\"\n}"
										},
										{
											"name": "Bad Request\nReturned if some of the query parameters are invalid.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionName\": \"<string>\",\n  \"processDefinitionNameLike\": \"<string>\",\n  \"processDefinitionKeyNotIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKey\": \"<string>\",\n  \"processInstanceBusinessKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKeyLike\": \"<string>\",\n  \"rootProcessInstances\": \"<boolean>\",\n  \"finished\": \"<boolean>\",\n  \"unfinished\": \"<boolean>\",\n  \"withIncidents\": \"<boolean>\",\n  \"withRootIncidents\": \"<boolean>\",\n  \"incidentType\": \"<string>\",\n  \"incidentStatus\": \"resolved\",\n  \"incidentMessage\": \"<string>\",\n  \"incidentMessageLike\": \"<string>\",\n  \"startedBefore\": \"<dateTime>\",\n  \"startedAfter\": \"<dateTime>\",\n  \"finishedBefore\": \"<dateTime>\",\n  \"finishedAfter\": \"<dateTime>\",\n  \"executedActivityAfter\": \"<dateTime>\",\n  \"executedActivityBefore\": \"<dateTime>\",\n  \"executedJobAfter\": \"<dateTime>\",\n  \"executedJobBefore\": \"<dateTime>\",\n  \"startedBy\": \"<string>\",\n  \"superProcessInstanceId\": \"<string>\",\n  \"subProcessInstanceId\": \"<string>\",\n  \"superCaseInstanceId\": \"<string>\",\n  \"subCaseInstanceId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"executedActivityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"activeActivityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"completed\": \"<boolean>\",\n  \"externallyTerminated\": \"<boolean>\",\n  \"internallyTerminated\": \"<boolean>\",\n  \"variables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"neq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"orQueries\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"startTime\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"definitionKey\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/history/process-instance/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"process-instance",
														"count"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "delete",
							"item": [
								{
									"name": "Delete Async (POST)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"historicProcessInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionName\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"deleteReason\": \"<string>\",\n  \"failIfNotExists\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/process-instance/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"process-instance",
												"delete"
											]
										},
										"description": "Delete multiple historic process instances asynchronously (batch).\nAt least `historicProcessInstanceIds` or `historicProcessInstanceQuery` has to be provided.\nIf both are provided then all instances matching query criterion and instances from the list will be deleted."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"historicProcessInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionName\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"deleteReason\": \"<string>\",\n  \"failIfNotExists\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/history/process-instance/delete",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"process-instance",
														"delete"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"totalJobs\": \"<integer>\",\n  \"jobsCreated\": \"<integer>\",\n  \"batchJobsPerSeed\": \"<integer>\",\n  \"invocationsPerBatchJob\": \"<integer>\",\n  \"seedJobDefinitionId\": \"<string>\",\n  \"monitorJobDefinitionId\": \"<string>\",\n  \"batchJobDefinitionId\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"createUserId\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"executionStartTime\": \"<dateTime>\"\n}"
										},
										{
											"name": "Returned if some of the query parameters are invalid, i.e. neither historicProcessInstanceIds,\nnor historicProcessInstanceQuery is present. See the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error ",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"historicProcessInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionName\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"deleteReason\": \"<string>\",\n  \"failIfNotExists\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/history/process-instance/delete",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"process-instance",
														"delete"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "report",
							"item": [
								{
									"name": "Get Duration Report",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/process-instance/report?reportType=<string>&periodUnit=quarter&processDefinitionIdIn=<string>&processDefinitionKeyIn=<string>&startedBefore=<dateTime>&startedAfter=<dateTime>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"process-instance",
												"report"
											],
											"query": [
												{
													"key": "reportType",
													"value": "<string>",
													"description": "(Required) **Mandatory.** Specifies the type of the report to retrieve.\nTo retrieve a report about the duration of process instances, the value must be set to `duration`."
												},
												{
													"key": "periodUnit",
													"value": "quarter",
													"description": "(Required) **Mandatory.** Specifies the granularity of the report. Valid values are `month` and `quarter`."
												},
												{
													"key": "processDefinitionIdIn",
													"value": "<string>",
													"description": "Filter by process definition ids. Must be a comma-separated list of process definition ids."
												},
												{
													"key": "processDefinitionKeyIn",
													"value": "<string>",
													"description": "Filter by process definition keys. Must be a comma-separated list of process definition keys."
												},
												{
													"key": "startedBefore",
													"value": "<dateTime>",
													"description": "Restrict to instances that were started before the given date.\nBy [default](), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2016-01-23T14:42:45.000+0200`."
												},
												{
													"key": "startedAfter",
													"value": "<dateTime>",
													"description": "Restrict to instances that were started after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2016-01-23T14:42:45.000+0200`."
												}
											]
										},
										"description": "Retrieves a report about the duration of completed process instances, grouped by a period.\nThese reports include the maximum, minimum and average duration of all completed process instances which were started in a given period.\n\n**Note:** This only includes historic data."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/process-instance/report?reportType=<string>&periodUnit=quarter&processDefinitionIdIn=<string>&processDefinitionKeyIn=<string>&startedBefore=<dateTime>&startedAfter=<dateTime>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"process-instance",
														"report"
													],
													"query": [
														{
															"key": "reportType",
															"value": "<string>",
															"description": "(Required) **Mandatory.** Specifies the type of the report to retrieve.\nTo retrieve a report about the duration of process instances, the value must be set to `duration`."
														},
														{
															"key": "periodUnit",
															"value": "quarter",
															"description": "(Required) **Mandatory.** Specifies the granularity of the report. Valid values are `month` and `quarter`."
														},
														{
															"key": "processDefinitionIdIn",
															"value": "<string>",
															"description": "Filter by process definition ids. Must be a comma-separated list of process definition ids."
														},
														{
															"key": "processDefinitionKeyIn",
															"value": "<string>",
															"description": "Filter by process definition keys. Must be a comma-separated list of process definition keys."
														},
														{
															"key": "startedBefore",
															"value": "<dateTime>",
															"description": "Restrict to instances that were started before the given date.\nBy [default](), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2016-01-23T14:42:45.000+0200`."
														},
														{
															"key": "startedAfter",
															"value": "<dateTime>",
															"description": "Restrict to instances that were started after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2016-01-23T14:42:45.000+0200`."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"period\": \"<integer>\",\n    \"periodUnit\": \"MONTH\",\n    \"minimum\": \"<long>\",\n    \"maximum\": \"<long>\",\n    \"average\": \"<long>\"\n  },\n  {\n    \"period\": \"<integer>\",\n    \"periodUnit\": \"QUARTER\",\n    \"minimum\": \"<long>\",\n    \"maximum\": \"<long>\",\n    \"average\": \"<long>\"\n  }\n]"
										},
										{
											"name": "Returned if some of the query parameters are invalid or mandatory parameters are not supplied.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/process-instance/report?reportType=<string>&periodUnit=quarter&processDefinitionIdIn=<string>&processDefinitionKeyIn=<string>&startedBefore=<dateTime>&startedAfter=<dateTime>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"process-instance",
														"report"
													],
													"query": [
														{
															"key": "reportType",
															"value": "<string>",
															"description": "(Required) **Mandatory.** Specifies the type of the report to retrieve.\nTo retrieve a report about the duration of process instances, the value must be set to `duration`."
														},
														{
															"key": "periodUnit",
															"value": "quarter",
															"description": "(Required) **Mandatory.** Specifies the granularity of the report. Valid values are `month` and `quarter`."
														},
														{
															"key": "processDefinitionIdIn",
															"value": "<string>",
															"description": "Filter by process definition ids. Must be a comma-separated list of process definition ids."
														},
														{
															"key": "processDefinitionKeyIn",
															"value": "<string>",
															"description": "Filter by process definition keys. Must be a comma-separated list of process definition keys."
														},
														{
															"key": "startedBefore",
															"value": "<dateTime>",
															"description": "Restrict to instances that were started before the given date.\nBy [default](), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2016-01-23T14:42:45.000+0200`."
														},
														{
															"key": "startedAfter",
															"value": "<dateTime>",
															"description": "Restrict to instances that were started after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2016-01-23T14:42:45.000+0200`."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "If the authenticated user is unauthorized to read the history.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/process-instance/report?reportType=<string>&periodUnit=quarter&processDefinitionIdIn=<string>&processDefinitionKeyIn=<string>&startedBefore=<dateTime>&startedAfter=<dateTime>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"process-instance",
														"report"
													],
													"query": [
														{
															"key": "reportType",
															"value": "<string>",
															"description": "(Required) **Mandatory.** Specifies the type of the report to retrieve.\nTo retrieve a report about the duration of process instances, the value must be set to `duration`."
														},
														{
															"key": "periodUnit",
															"value": "quarter",
															"description": "(Required) **Mandatory.** Specifies the granularity of the report. Valid values are `month` and `quarter`."
														},
														{
															"key": "processDefinitionIdIn",
															"value": "<string>",
															"description": "Filter by process definition ids. Must be a comma-separated list of process definition ids."
														},
														{
															"key": "processDefinitionKeyIn",
															"value": "<string>",
															"description": "Filter by process definition keys. Must be a comma-separated list of process definition keys."
														},
														{
															"key": "startedBefore",
															"value": "<dateTime>",
															"description": "Restrict to instances that were started before the given date.\nBy [default](), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2016-01-23T14:42:45.000+0200`."
														},
														{
															"key": "startedAfter",
															"value": "<dateTime>",
															"description": "Restrict to instances that were started after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2016-01-23T14:42:45.000+0200`."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "set-removal-time",
							"item": [
								{
									"name": "Set Removal Time Async (POST)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"historicProcessInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"hierarchical\": \"<boolean>\",\n  \"updateInChunks\": \"<boolean>\",\n  \"updateChunkSize\": \"<integer>\",\n  \"absoluteRemovalTime\": \"<dateTime>\",\n  \"clearedRemovalTime\": \"<boolean>\",\n  \"calculatedRemovalTime\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/process-instance/set-removal-time",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"process-instance",
												"set-removal-time"
											]
										},
										"description": "Sets the removal time to multiple historic process instances asynchronously (batch).\n\nAt least `historicProcessInstanceIds` or `historicProcessInstanceQuery` has to be provided.\nIf both are provided, all instances matching query criterion and instances from the list will be updated with a removal time."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"historicProcessInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"hierarchical\": \"<boolean>\",\n  \"updateInChunks\": \"<boolean>\",\n  \"updateChunkSize\": \"<integer>\",\n  \"absoluteRemovalTime\": \"<dateTime>\",\n  \"clearedRemovalTime\": \"<boolean>\",\n  \"calculatedRemovalTime\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/history/process-instance/set-removal-time",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"process-instance",
														"set-removal-time"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"totalJobs\": \"<integer>\",\n  \"jobsCreated\": \"<integer>\",\n  \"batchJobsPerSeed\": \"<integer>\",\n  \"invocationsPerBatchJob\": \"<integer>\",\n  \"seedJobDefinitionId\": \"<string>\",\n  \"monitorJobDefinitionId\": \"<string>\",\n  \"batchJobDefinitionId\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"createUserId\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"executionStartTime\": \"<dateTime>\"\n}"
										},
										{
											"name": "Bad Request\nRequest was unsuccessfull due to a bad user request. This occurs if some of the query parameters are invalid,\ne. g. if neither `historicProcessInstances` nor `historicProcessInstanceQuery` is present or if no mode is specified.\n\nSee the [Intro",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"historicProcessInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"hierarchical\": \"<boolean>\",\n  \"updateInChunks\": \"<boolean>\",\n  \"updateChunkSize\": \"<integer>\",\n  \"absoluteRemovalTime\": \"<dateTime>\",\n  \"clearedRemovalTime\": \"<boolean>\",\n  \"calculatedRemovalTime\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/history/process-instance/set-removal-time",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"process-instance",
														"set-removal-time"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "variable-instances",
									"item": [
										{
											"name": "Delete Variable Instances",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/process-instance/:id/variable-instances",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"process-instance",
														":id",
														"variable-instances"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the process instance for which all historic variables are to be deleted."
														}
													]
												},
												"description": "Deletes all variables of a process instance from the history by id."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/history/process-instance/:id/variable-instances",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"process-instance",
																":id",
																"variable-instances"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not found\nHistoric process instance with given id does not exist.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#parse-exceptions) for the error response format.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/history/process-instance/:id/variable-instances",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"process-instance",
																":id",
																"variable-instances"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Delete",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/process-instance/:id?failIfNotExists=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"process-instance",
												":id"
											],
											"query": [
												{
													"key": "failIfNotExists",
													"value": "<boolean>",
													"description": "If set to `false`, the request will still be successful if the process id is not found."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the historic process instance to be deleted."
												}
											]
										},
										"description": "Deletes a process instance from the history by id."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/process-instance/:id?failIfNotExists=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"process-instance",
														":id"
													],
													"query": [
														{
															"key": "failIfNotExists",
															"value": "<boolean>",
															"description": "If set to `false`, the request will still be successful if the process id is not found."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found\nHistoric process instance with given id does not exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/process-instance/:id?failIfNotExists=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"process-instance",
														":id"
													],
													"query": [
														{
															"key": "failIfNotExists",
															"value": "<boolean>",
															"description": "If set to `false`, the request will still be successful if the process id is not found."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								},
								{
									"name": "Get",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{Authorization}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/process-instance/bcb5b721-9c10-11ef-b452-e6ee84b0b717",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"process-instance",
												"bcb5b721-9c10-11ef-b452-e6ee84b0b717"
											]
										},
										"description": "Retrieves a historic process instance by id, according to the `HistoricProcessInstance` interface in the engine."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/process-instance/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"process-instance",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"rootProcessInstanceId\": \"<string>\",\n  \"superProcessInstanceId\": \"<string>\",\n  \"superCaseInstanceId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"processDefinitionName\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionVersion\": \"<integer>\",\n  \"processDefinitionId\": \"<string>\",\n  \"businessKey\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"endTime\": \"<dateTime>\",\n  \"removalTime\": \"<dateTime>\",\n  \"durationInMillis\": \"<long>\",\n  \"startUserId\": \"<string>\",\n  \"startActivityId\": \"<string>\",\n  \"deleteReason\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"state\": \"EXTERNALLY_TERMINATED\"\n}"
										},
										{
											"name": "Not Found\nHistoric process instance with given id does not exist.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/process-instance/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"process-instance",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/history/process-instance?sortBy=definitionName&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&processInstanceId=<string>&processInstanceIds=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionKeyIn=<string>&processDefinitionName=<string>&processDefinitionNameLike=<string>&processDefinitionKeyNotIn=<string>&processInstanceBusinessKey=<string>&processInstanceBusinessKeyIn=<string>&processInstanceBusinessKeyLike=<string>&rootProcessInstances=<boolean>&finished=<boolean>&unfinished=<boolean>&withIncidents=<boolean>&withRootIncidents=<boolean>&incidentType=<string>&incidentStatus=open&incidentMessage=<string>&incidentMessageLike=<string>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&executedActivityAfter=<dateTime>&executedActivityBefore=<dateTime>&executedJobAfter=<dateTime>&executedJobBefore=<dateTime>&startedBy=<string>&superProcessInstanceId=<string>&subProcessInstanceId=<string>&superCaseInstanceId=<string>&subCaseInstanceId=<string>&caseInstanceId=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&executedActivityIdIn=<string>&activeActivityIdIn=<string>&active=<boolean>&suspended=<boolean>&completed=<boolean>&externallyTerminated=<boolean>&internallyTerminated=<boolean>&variables=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"history",
										"process-instance"
									],
									"query": [
										{
											"key": "sortBy",
											"value": "definitionName",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Filter by process instance id."
										},
										{
											"key": "processInstanceIds",
											"value": "<string>",
											"description": "Filter by process instance ids. Filter by a comma-separated list of `Strings`."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Filter by the process definition the instances run on."
										},
										{
											"key": "processDefinitionKey",
											"value": "<string>",
											"description": "Filter by the key of the process definition the instances run on."
										},
										{
											"key": "processDefinitionKeyIn",
											"value": "<string>",
											"description": "Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Filter by a comma-separated list of `Strings`."
										},
										{
											"key": "processDefinitionName",
											"value": "<string>",
											"description": "Filter by the name of the process definition the instances run on."
										},
										{
											"key": "processDefinitionNameLike",
											"value": "<string>",
											"description": "Filter by process definition names that the parameter is a substring of."
										},
										{
											"key": "processDefinitionKeyNotIn",
											"value": "<string>",
											"description": "Exclude instances that belong to a set of process definitions. Filter by a comma-separated list of `Strings`."
										},
										{
											"key": "processInstanceBusinessKey",
											"value": "<string>",
											"description": "Filter by process instance business key."
										},
										{
											"key": "processInstanceBusinessKeyIn",
											"value": "<string>",
											"description": "Filter by a list of business keys. A process instance must have one of the given business keys. Filter by a comma-separated list of `Strings`"
										},
										{
											"key": "processInstanceBusinessKeyLike",
											"value": "<string>",
											"description": "Filter by process instance business key that the parameter is a substring of."
										},
										{
											"key": "rootProcessInstances",
											"value": "<boolean>",
											"description": "Restrict the query to all process instances that are top level process instances."
										},
										{
											"key": "finished",
											"value": "<boolean>",
											"description": "Only include finished process instances. This flag includes all process instances\nthat are completed or terminated. Value may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "unfinished",
											"value": "<boolean>",
											"description": "Only include unfinished process instances. Value may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "withIncidents",
											"value": "<boolean>",
											"description": "Only include process instances which have an incident. Value may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "withRootIncidents",
											"value": "<boolean>",
											"description": "Only include process instances which have a root incident. Value may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "incidentType",
											"value": "<string>",
											"description": "Filter by the incident type. See the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types) for a list of incident types."
										},
										{
											"key": "incidentStatus",
											"value": "open",
											"description": "Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents."
										},
										{
											"key": "incidentMessage",
											"value": "<string>",
											"description": "Filter by the incident message. Exact match."
										},
										{
											"key": "incidentMessageLike",
											"value": "<string>",
											"description": "Filter by the incident message that the parameter is a substring of."
										},
										{
											"key": "startedBefore",
											"value": "<dateTime>",
											"description": "Restrict to instances that were started before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "startedAfter",
											"value": "<dateTime>",
											"description": "Restrict to instances that were started after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "finishedBefore",
											"value": "<dateTime>",
											"description": "Restrict to instances that were finished before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "finishedAfter",
											"value": "<dateTime>",
											"description": "Restrict to instances that were finished after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "executedActivityAfter",
											"value": "<dateTime>",
											"description": "Restrict to instances that executed an activity after the given date (inclusive).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "executedActivityBefore",
											"value": "<dateTime>",
											"description": "Restrict to instances that executed an activity before the given date (inclusive).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "executedJobAfter",
											"value": "<dateTime>",
											"description": "Restrict to instances that executed an job after the given date (inclusive).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "executedJobBefore",
											"value": "<dateTime>",
											"description": "Restrict to instances that executed an job before the given date (inclusive).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "startedBy",
											"value": "<string>",
											"description": "Only include process instances that were started by the given user."
										},
										{
											"key": "superProcessInstanceId",
											"value": "<string>",
											"description": "Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id."
										},
										{
											"key": "subProcessInstanceId",
											"value": "<string>",
											"description": "Restrict query to one process instance that has a sub process instance with the given id."
										},
										{
											"key": "superCaseInstanceId",
											"value": "<string>",
											"description": "Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id."
										},
										{
											"key": "subCaseInstanceId",
											"value": "<string>",
											"description": "Restrict query to one process instance that has a sub case instance with the given id."
										},
										{
											"key": "caseInstanceId",
											"value": "<string>",
											"description": "Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Filter by a comma-separated list of `Strings`"
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include historic process instances which belong to no tenant. Value may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "executedActivityIdIn",
											"value": "<string>",
											"description": "Restrict to instances that executed an activity with one of given ids. Filter by a comma-separated list of `Strings`"
										},
										{
											"key": "activeActivityIdIn",
											"value": "<string>",
											"description": "Restrict to instances that have an active activity with one of given ids. Filter by a comma-separated list of `Strings`"
										},
										{
											"key": "active",
											"value": "<boolean>",
											"description": "Restrict to instances that are active."
										},
										{
											"key": "suspended",
											"value": "<boolean>",
											"description": "Restrict to instances that are suspended."
										},
										{
											"key": "completed",
											"value": "<boolean>",
											"description": "Restrict to instances that are completed."
										},
										{
											"key": "externallyTerminated",
											"value": "<boolean>",
											"description": "Restrict to instances that are externallyTerminated."
										},
										{
											"key": "internallyTerminated",
											"value": "<boolean>",
											"description": "Restrict to instances that are internallyTerminated."
										},
										{
											"key": "variables",
											"value": "<string>",
											"description": "Only include process instances that have/had variables with certain values.\nVariable filtering expressions are comma-separated and are structured as follows:\nA valid parameter value has the form `key_operator_value`. `key` is the variable name, `operator` is the comparison operator to be used and `value` the variable value.\n\n**Note:** Values are always treated as String objects on server side.\n\nValid operator values are: `eq` - equal to; `neq` - not equal to; `gt` - greater than; `gteq` - greater than or equal to; `lt` - lower than; `lteq` - lower than or equal to; `like`.\n\nKey and value may not contain underscore or comma characters.\n"
										},
										{
											"key": "variableNamesIgnoreCase",
											"value": "<boolean>",
											"description": "Match all variable names provided in variables case-insensitively. If set to `true` variableName and variablename are treated as equal."
										},
										{
											"key": "variableValuesIgnoreCase",
											"value": "<boolean>",
											"description": "Match all variable values provided in variables case-insensitively. If set to `true` variableValue and variablevalue are treated as equal."
										}
									]
								},
								"description": "Queries for historic process instances that fulfill the given parameters.\nThe size of the result set can be retrieved by using the\n[Get Process Instance Count](https://docs.camunda.org/manual/7.21/reference/rest/history/process-instance/get-process-instance-query-count/) method."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/process-instance?sortBy=definitionName&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&processInstanceId=<string>&processInstanceIds=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionKeyIn=<string>&processDefinitionName=<string>&processDefinitionNameLike=<string>&processDefinitionKeyNotIn=<string>&processInstanceBusinessKey=<string>&processInstanceBusinessKeyIn=<string>&processInstanceBusinessKeyLike=<string>&rootProcessInstances=<boolean>&finished=<boolean>&unfinished=<boolean>&withIncidents=<boolean>&withRootIncidents=<boolean>&incidentType=<string>&incidentStatus=open&incidentMessage=<string>&incidentMessageLike=<string>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&executedActivityAfter=<dateTime>&executedActivityBefore=<dateTime>&executedJobAfter=<dateTime>&executedJobBefore=<dateTime>&startedBy=<string>&superProcessInstanceId=<string>&subProcessInstanceId=<string>&superCaseInstanceId=<string>&subCaseInstanceId=<string>&caseInstanceId=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&executedActivityIdIn=<string>&activeActivityIdIn=<string>&active=<boolean>&suspended=<boolean>&completed=<boolean>&externallyTerminated=<boolean>&internallyTerminated=<boolean>&variables=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"process-instance"
											],
											"query": [
												{
													"key": "sortBy",
													"value": "definitionName",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by process instance id."
												},
												{
													"key": "processInstanceIds",
													"value": "<string>",
													"description": "Filter by process instance ids. Filter by a comma-separated list of `Strings`."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by the process definition the instances run on."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Filter by the key of the process definition the instances run on."
												},
												{
													"key": "processDefinitionKeyIn",
													"value": "<string>",
													"description": "Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Filter by a comma-separated list of `Strings`."
												},
												{
													"key": "processDefinitionName",
													"value": "<string>",
													"description": "Filter by the name of the process definition the instances run on."
												},
												{
													"key": "processDefinitionNameLike",
													"value": "<string>",
													"description": "Filter by process definition names that the parameter is a substring of."
												},
												{
													"key": "processDefinitionKeyNotIn",
													"value": "<string>",
													"description": "Exclude instances that belong to a set of process definitions. Filter by a comma-separated list of `Strings`."
												},
												{
													"key": "processInstanceBusinessKey",
													"value": "<string>",
													"description": "Filter by process instance business key."
												},
												{
													"key": "processInstanceBusinessKeyIn",
													"value": "<string>",
													"description": "Filter by a list of business keys. A process instance must have one of the given business keys. Filter by a comma-separated list of `Strings`"
												},
												{
													"key": "processInstanceBusinessKeyLike",
													"value": "<string>",
													"description": "Filter by process instance business key that the parameter is a substring of."
												},
												{
													"key": "rootProcessInstances",
													"value": "<boolean>",
													"description": "Restrict the query to all process instances that are top level process instances."
												},
												{
													"key": "finished",
													"value": "<boolean>",
													"description": "Only include finished process instances. This flag includes all process instances\nthat are completed or terminated. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "unfinished",
													"value": "<boolean>",
													"description": "Only include unfinished process instances. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "withIncidents",
													"value": "<boolean>",
													"description": "Only include process instances which have an incident. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "withRootIncidents",
													"value": "<boolean>",
													"description": "Only include process instances which have a root incident. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "incidentType",
													"value": "<string>",
													"description": "Filter by the incident type. See the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types) for a list of incident types."
												},
												{
													"key": "incidentStatus",
													"value": "open",
													"description": "Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents."
												},
												{
													"key": "incidentMessage",
													"value": "<string>",
													"description": "Filter by the incident message. Exact match."
												},
												{
													"key": "incidentMessageLike",
													"value": "<string>",
													"description": "Filter by the incident message that the parameter is a substring of."
												},
												{
													"key": "startedBefore",
													"value": "<dateTime>",
													"description": "Restrict to instances that were started before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "startedAfter",
													"value": "<dateTime>",
													"description": "Restrict to instances that were started after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "finishedBefore",
													"value": "<dateTime>",
													"description": "Restrict to instances that were finished before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "finishedAfter",
													"value": "<dateTime>",
													"description": "Restrict to instances that were finished after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "executedActivityAfter",
													"value": "<dateTime>",
													"description": "Restrict to instances that executed an activity after the given date (inclusive).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "executedActivityBefore",
													"value": "<dateTime>",
													"description": "Restrict to instances that executed an activity before the given date (inclusive).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "executedJobAfter",
													"value": "<dateTime>",
													"description": "Restrict to instances that executed an job after the given date (inclusive).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "executedJobBefore",
													"value": "<dateTime>",
													"description": "Restrict to instances that executed an job before the given date (inclusive).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "startedBy",
													"value": "<string>",
													"description": "Only include process instances that were started by the given user."
												},
												{
													"key": "superProcessInstanceId",
													"value": "<string>",
													"description": "Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id."
												},
												{
													"key": "subProcessInstanceId",
													"value": "<string>",
													"description": "Restrict query to one process instance that has a sub process instance with the given id."
												},
												{
													"key": "superCaseInstanceId",
													"value": "<string>",
													"description": "Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id."
												},
												{
													"key": "subCaseInstanceId",
													"value": "<string>",
													"description": "Restrict query to one process instance that has a sub case instance with the given id."
												},
												{
													"key": "caseInstanceId",
													"value": "<string>",
													"description": "Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Filter by a comma-separated list of `Strings`"
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic process instances which belong to no tenant. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "executedActivityIdIn",
													"value": "<string>",
													"description": "Restrict to instances that executed an activity with one of given ids. Filter by a comma-separated list of `Strings`"
												},
												{
													"key": "activeActivityIdIn",
													"value": "<string>",
													"description": "Restrict to instances that have an active activity with one of given ids. Filter by a comma-separated list of `Strings`"
												},
												{
													"key": "active",
													"value": "<boolean>",
													"description": "Restrict to instances that are active."
												},
												{
													"key": "suspended",
													"value": "<boolean>",
													"description": "Restrict to instances that are suspended."
												},
												{
													"key": "completed",
													"value": "<boolean>",
													"description": "Restrict to instances that are completed."
												},
												{
													"key": "externallyTerminated",
													"value": "<boolean>",
													"description": "Restrict to instances that are externallyTerminated."
												},
												{
													"key": "internallyTerminated",
													"value": "<boolean>",
													"description": "Restrict to instances that are internallyTerminated."
												},
												{
													"key": "variables",
													"value": "<string>",
													"description": "Only include process instances that have/had variables with certain values.\nVariable filtering expressions are comma-separated and are structured as follows:\nA valid parameter value has the form `key_operator_value`. `key` is the variable name, `operator` is the comparison operator to be used and `value` the variable value.\n\n**Note:** Values are always treated as String objects on server side.\n\nValid operator values are: `eq` - equal to; `neq` - not equal to; `gt` - greater than; `gteq` - greater than or equal to; `lt` - lower than; `lteq` - lower than or equal to; `like`.\n\nKey and value may not contain underscore or comma characters.\n"
												},
												{
													"key": "variableNamesIgnoreCase",
													"value": "<boolean>",
													"description": "Match all variable names provided in variables case-insensitively. If set to `true` variableName and variablename are treated as equal."
												},
												{
													"key": "variableValuesIgnoreCase",
													"value": "<boolean>",
													"description": "Match all variable values provided in variables case-insensitively. If set to `true` variableValue and variablevalue are treated as equal."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionVersion\": \"<integer>\",\n    \"processDefinitionId\": \"<string>\",\n    \"businessKey\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"endTime\": \"<dateTime>\",\n    \"removalTime\": \"<dateTime>\",\n    \"durationInMillis\": \"<long>\",\n    \"startUserId\": \"<string>\",\n    \"startActivityId\": \"<string>\",\n    \"deleteReason\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"state\": \"COMPLETED\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionVersion\": \"<integer>\",\n    \"processDefinitionId\": \"<string>\",\n    \"businessKey\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"endTime\": \"<dateTime>\",\n    \"removalTime\": \"<dateTime>\",\n    \"durationInMillis\": \"<long>\",\n    \"startUserId\": \"<string>\",\n    \"startActivityId\": \"<string>\",\n    \"deleteReason\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"state\": \"ACTIVE\"\n  }\n]"
								},
								{
									"name": "Bad Request\nReturned if some of the query parameters are invalid, for example if a sortOrder parameter is supplied, but no sortBy.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response ",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/process-instance?sortBy=definitionName&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&processInstanceId=<string>&processInstanceIds=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionKeyIn=<string>&processDefinitionName=<string>&processDefinitionNameLike=<string>&processDefinitionKeyNotIn=<string>&processInstanceBusinessKey=<string>&processInstanceBusinessKeyIn=<string>&processInstanceBusinessKeyLike=<string>&rootProcessInstances=<boolean>&finished=<boolean>&unfinished=<boolean>&withIncidents=<boolean>&withRootIncidents=<boolean>&incidentType=<string>&incidentStatus=open&incidentMessage=<string>&incidentMessageLike=<string>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&executedActivityAfter=<dateTime>&executedActivityBefore=<dateTime>&executedJobAfter=<dateTime>&executedJobBefore=<dateTime>&startedBy=<string>&superProcessInstanceId=<string>&subProcessInstanceId=<string>&superCaseInstanceId=<string>&subCaseInstanceId=<string>&caseInstanceId=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&executedActivityIdIn=<string>&activeActivityIdIn=<string>&active=<boolean>&suspended=<boolean>&completed=<boolean>&externallyTerminated=<boolean>&internallyTerminated=<boolean>&variables=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"process-instance"
											],
											"query": [
												{
													"key": "sortBy",
													"value": "definitionName",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by process instance id."
												},
												{
													"key": "processInstanceIds",
													"value": "<string>",
													"description": "Filter by process instance ids. Filter by a comma-separated list of `Strings`."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by the process definition the instances run on."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Filter by the key of the process definition the instances run on."
												},
												{
													"key": "processDefinitionKeyIn",
													"value": "<string>",
													"description": "Filter by a list of process definition keys. A process instance must have one of the given process definition keys. Filter by a comma-separated list of `Strings`."
												},
												{
													"key": "processDefinitionName",
													"value": "<string>",
													"description": "Filter by the name of the process definition the instances run on."
												},
												{
													"key": "processDefinitionNameLike",
													"value": "<string>",
													"description": "Filter by process definition names that the parameter is a substring of."
												},
												{
													"key": "processDefinitionKeyNotIn",
													"value": "<string>",
													"description": "Exclude instances that belong to a set of process definitions. Filter by a comma-separated list of `Strings`."
												},
												{
													"key": "processInstanceBusinessKey",
													"value": "<string>",
													"description": "Filter by process instance business key."
												},
												{
													"key": "processInstanceBusinessKeyIn",
													"value": "<string>",
													"description": "Filter by a list of business keys. A process instance must have one of the given business keys. Filter by a comma-separated list of `Strings`"
												},
												{
													"key": "processInstanceBusinessKeyLike",
													"value": "<string>",
													"description": "Filter by process instance business key that the parameter is a substring of."
												},
												{
													"key": "rootProcessInstances",
													"value": "<boolean>",
													"description": "Restrict the query to all process instances that are top level process instances."
												},
												{
													"key": "finished",
													"value": "<boolean>",
													"description": "Only include finished process instances. This flag includes all process instances\nthat are completed or terminated. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "unfinished",
													"value": "<boolean>",
													"description": "Only include unfinished process instances. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "withIncidents",
													"value": "<boolean>",
													"description": "Only include process instances which have an incident. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "withRootIncidents",
													"value": "<boolean>",
													"description": "Only include process instances which have a root incident. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "incidentType",
													"value": "<string>",
													"description": "Filter by the incident type. See the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types) for a list of incident types."
												},
												{
													"key": "incidentStatus",
													"value": "open",
													"description": "Only include process instances which have an incident in status either open or resolved. To get all process instances, use the query parameter withIncidents."
												},
												{
													"key": "incidentMessage",
													"value": "<string>",
													"description": "Filter by the incident message. Exact match."
												},
												{
													"key": "incidentMessageLike",
													"value": "<string>",
													"description": "Filter by the incident message that the parameter is a substring of."
												},
												{
													"key": "startedBefore",
													"value": "<dateTime>",
													"description": "Restrict to instances that were started before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "startedAfter",
													"value": "<dateTime>",
													"description": "Restrict to instances that were started after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "finishedBefore",
													"value": "<dateTime>",
													"description": "Restrict to instances that were finished before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "finishedAfter",
													"value": "<dateTime>",
													"description": "Restrict to instances that were finished after the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "executedActivityAfter",
													"value": "<dateTime>",
													"description": "Restrict to instances that executed an activity after the given date (inclusive).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "executedActivityBefore",
													"value": "<dateTime>",
													"description": "Restrict to instances that executed an activity before the given date (inclusive).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "executedJobAfter",
													"value": "<dateTime>",
													"description": "Restrict to instances that executed an job after the given date (inclusive).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "executedJobBefore",
													"value": "<dateTime>",
													"description": "Restrict to instances that executed an job before the given date (inclusive).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "startedBy",
													"value": "<string>",
													"description": "Only include process instances that were started by the given user."
												},
												{
													"key": "superProcessInstanceId",
													"value": "<string>",
													"description": "Restrict query to all process instances that are sub process instances of the given process instance. Takes a process instance id."
												},
												{
													"key": "subProcessInstanceId",
													"value": "<string>",
													"description": "Restrict query to one process instance that has a sub process instance with the given id."
												},
												{
													"key": "superCaseInstanceId",
													"value": "<string>",
													"description": "Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id."
												},
												{
													"key": "subCaseInstanceId",
													"value": "<string>",
													"description": "Restrict query to one process instance that has a sub case instance with the given id."
												},
												{
													"key": "caseInstanceId",
													"value": "<string>",
													"description": "Restrict query to all process instances that are sub process instances of the given case instance. Takes a case instance id."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a list of tenant ids. A process instance must have one of the given tenant ids. Filter by a comma-separated list of `Strings`"
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic process instances which belong to no tenant. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "executedActivityIdIn",
													"value": "<string>",
													"description": "Restrict to instances that executed an activity with one of given ids. Filter by a comma-separated list of `Strings`"
												},
												{
													"key": "activeActivityIdIn",
													"value": "<string>",
													"description": "Restrict to instances that have an active activity with one of given ids. Filter by a comma-separated list of `Strings`"
												},
												{
													"key": "active",
													"value": "<boolean>",
													"description": "Restrict to instances that are active."
												},
												{
													"key": "suspended",
													"value": "<boolean>",
													"description": "Restrict to instances that are suspended."
												},
												{
													"key": "completed",
													"value": "<boolean>",
													"description": "Restrict to instances that are completed."
												},
												{
													"key": "externallyTerminated",
													"value": "<boolean>",
													"description": "Restrict to instances that are externallyTerminated."
												},
												{
													"key": "internallyTerminated",
													"value": "<boolean>",
													"description": "Restrict to instances that are internallyTerminated."
												},
												{
													"key": "variables",
													"value": "<string>",
													"description": "Only include process instances that have/had variables with certain values.\nVariable filtering expressions are comma-separated and are structured as follows:\nA valid parameter value has the form `key_operator_value`. `key` is the variable name, `operator` is the comparison operator to be used and `value` the variable value.\n\n**Note:** Values are always treated as String objects on server side.\n\nValid operator values are: `eq` - equal to; `neq` - not equal to; `gt` - greater than; `gteq` - greater than or equal to; `lt` - lower than; `lteq` - lower than or equal to; `like`.\n\nKey and value may not contain underscore or comma characters.\n"
												},
												{
													"key": "variableNamesIgnoreCase",
													"value": "<boolean>",
													"description": "Match all variable names provided in variables case-insensitively. If set to `true` variableName and variablename are treated as equal."
												},
												{
													"key": "variableValuesIgnoreCase",
													"value": "<boolean>",
													"description": "Match all variable values provided in variables case-insensitively. If set to `true` variableValue and variablevalue are treated as equal."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get List (POST)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionName\": \"<string>\",\n  \"processDefinitionNameLike\": \"<string>\",\n  \"processDefinitionKeyNotIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKey\": \"<string>\",\n  \"processInstanceBusinessKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKeyLike\": \"<string>\",\n  \"rootProcessInstances\": \"<boolean>\",\n  \"finished\": \"<boolean>\",\n  \"unfinished\": \"<boolean>\",\n  \"withIncidents\": \"<boolean>\",\n  \"withRootIncidents\": \"<boolean>\",\n  \"incidentType\": \"<string>\",\n  \"incidentStatus\": \"resolved\",\n  \"incidentMessage\": \"<string>\",\n  \"incidentMessageLike\": \"<string>\",\n  \"startedBefore\": \"<dateTime>\",\n  \"startedAfter\": \"<dateTime>\",\n  \"finishedBefore\": \"<dateTime>\",\n  \"finishedAfter\": \"<dateTime>\",\n  \"executedActivityAfter\": \"<dateTime>\",\n  \"executedActivityBefore\": \"<dateTime>\",\n  \"executedJobAfter\": \"<dateTime>\",\n  \"executedJobBefore\": \"<dateTime>\",\n  \"startedBy\": \"<string>\",\n  \"superProcessInstanceId\": \"<string>\",\n  \"subProcessInstanceId\": \"<string>\",\n  \"superCaseInstanceId\": \"<string>\",\n  \"subCaseInstanceId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"executedActivityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"activeActivityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"completed\": \"<boolean>\",\n  \"externallyTerminated\": \"<boolean>\",\n  \"internallyTerminated\": \"<boolean>\",\n  \"variables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"neq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"orQueries\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"startTime\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"definitionKey\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/history/process-instance?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"history",
										"process-instance"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								},
								"description": "Queries for historic process instances that fulfill the given parameters.\nThis method is slightly more powerful than the\n[Get Process Instance](https://docs.camunda.org/manual/7.21/reference/rest/history/process-instance/get-process-instance-query/)\nbecause it allows filtering by multiple process variables of types `String`, `Number` or `Boolean`."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionName\": \"<string>\",\n  \"processDefinitionNameLike\": \"<string>\",\n  \"processDefinitionKeyNotIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKey\": \"<string>\",\n  \"processInstanceBusinessKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKeyLike\": \"<string>\",\n  \"rootProcessInstances\": \"<boolean>\",\n  \"finished\": \"<boolean>\",\n  \"unfinished\": \"<boolean>\",\n  \"withIncidents\": \"<boolean>\",\n  \"withRootIncidents\": \"<boolean>\",\n  \"incidentType\": \"<string>\",\n  \"incidentStatus\": \"resolved\",\n  \"incidentMessage\": \"<string>\",\n  \"incidentMessageLike\": \"<string>\",\n  \"startedBefore\": \"<dateTime>\",\n  \"startedAfter\": \"<dateTime>\",\n  \"finishedBefore\": \"<dateTime>\",\n  \"finishedAfter\": \"<dateTime>\",\n  \"executedActivityAfter\": \"<dateTime>\",\n  \"executedActivityBefore\": \"<dateTime>\",\n  \"executedJobAfter\": \"<dateTime>\",\n  \"executedJobBefore\": \"<dateTime>\",\n  \"startedBy\": \"<string>\",\n  \"superProcessInstanceId\": \"<string>\",\n  \"subProcessInstanceId\": \"<string>\",\n  \"superCaseInstanceId\": \"<string>\",\n  \"subCaseInstanceId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"executedActivityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"activeActivityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"completed\": \"<boolean>\",\n  \"externallyTerminated\": \"<boolean>\",\n  \"internallyTerminated\": \"<boolean>\",\n  \"variables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"neq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"orQueries\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"startTime\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"definitionKey\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/process-instance?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"process-instance"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionVersion\": \"<integer>\",\n    \"processDefinitionId\": \"<string>\",\n    \"businessKey\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"endTime\": \"<dateTime>\",\n    \"removalTime\": \"<dateTime>\",\n    \"durationInMillis\": \"<long>\",\n    \"startUserId\": \"<string>\",\n    \"startActivityId\": \"<string>\",\n    \"deleteReason\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"state\": \"COMPLETED\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionVersion\": \"<integer>\",\n    \"processDefinitionId\": \"<string>\",\n    \"businessKey\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"endTime\": \"<dateTime>\",\n    \"removalTime\": \"<dateTime>\",\n    \"durationInMillis\": \"<long>\",\n    \"startUserId\": \"<string>\",\n    \"startActivityId\": \"<string>\",\n    \"deleteReason\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"state\": \"ACTIVE\"\n  }\n]"
								},
								{
									"name": "Bad Request\nReturned if some of the query parameters are invalid, for example if a sortOrder parameter is supplied, but no sortBy.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response ",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionName\": \"<string>\",\n  \"processDefinitionNameLike\": \"<string>\",\n  \"processDefinitionKeyNotIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKey\": \"<string>\",\n  \"processInstanceBusinessKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKeyLike\": \"<string>\",\n  \"rootProcessInstances\": \"<boolean>\",\n  \"finished\": \"<boolean>\",\n  \"unfinished\": \"<boolean>\",\n  \"withIncidents\": \"<boolean>\",\n  \"withRootIncidents\": \"<boolean>\",\n  \"incidentType\": \"<string>\",\n  \"incidentStatus\": \"resolved\",\n  \"incidentMessage\": \"<string>\",\n  \"incidentMessageLike\": \"<string>\",\n  \"startedBefore\": \"<dateTime>\",\n  \"startedAfter\": \"<dateTime>\",\n  \"finishedBefore\": \"<dateTime>\",\n  \"finishedAfter\": \"<dateTime>\",\n  \"executedActivityAfter\": \"<dateTime>\",\n  \"executedActivityBefore\": \"<dateTime>\",\n  \"executedJobAfter\": \"<dateTime>\",\n  \"executedJobBefore\": \"<dateTime>\",\n  \"startedBy\": \"<string>\",\n  \"superProcessInstanceId\": \"<string>\",\n  \"subProcessInstanceId\": \"<string>\",\n  \"superCaseInstanceId\": \"<string>\",\n  \"subCaseInstanceId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"executedActivityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"activeActivityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"completed\": \"<boolean>\",\n  \"externallyTerminated\": \"<boolean>\",\n  \"internallyTerminated\": \"<boolean>\",\n  \"variables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"neq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"orQueries\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"startTime\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"definitionKey\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/process-instance?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"process-instance"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "task",
					"item": [
						{
							"name": "count",
							"item": [
								{
									"name": "Get Task Count",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/task/count?taskId=<string>&taskParentTaskId=<string>&processInstanceId=<string>&processInstanceBusinessKey=<string>&processInstanceBusinessKeyIn=<string>&processInstanceBusinessKeyLike=<string>&executionId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionName=<string>&caseInstanceId=<string>&caseExecutionId=<string>&caseDefinitionId=<string>&caseDefinitionKey=<string>&caseDefinitionName=<string>&activityInstanceIdIn=<string>&taskName=<string>&taskNameLike=<string>&taskDescription=<string>&taskDescriptionLike=<string>&taskDefinitionKey=<string>&taskDefinitionKeyIn=<string>&taskDeleteReason=<string>&taskDeleteReasonLike=<string>&taskAssignee=<string>&taskAssigneeLike=<string>&taskOwner=<string>&taskOwnerLike=<string>&taskPriority=<integer>&assigned=<boolean>&unassigned=<boolean>&finished=<boolean>&unfinished=<boolean>&processFinished=<boolean>&processUnfinished=<boolean>&taskDueDate=<dateTime>&taskDueDateBefore=<dateTime>&taskDueDateAfter=<dateTime>&withoutTaskDueDate=<boolean>&taskFollowUpDate=<dateTime>&taskFollowUpDateBefore=<dateTime>&taskFollowUpDateAfter=<dateTime>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&tenantIdIn=<string>&withoutTenantId=<boolean>&taskVariables=<string>&processVariables=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>&taskInvolvedUser=<string>&taskInvolvedGroup=<string>&taskHadCandidateUser=<string>&taskHadCandidateGroup=<string>&withCandidateGroups=<boolean>&withoutCandidateGroups=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"task",
												"count"
											],
											"query": [
												{
													"key": "taskId",
													"value": "<string>",
													"description": "Filter by task id."
												},
												{
													"key": "taskParentTaskId",
													"value": "<string>",
													"description": "Filter by parent task id."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by process instance id."
												},
												{
													"key": "processInstanceBusinessKey",
													"value": "<string>",
													"description": "Filter by process instance business key."
												},
												{
													"key": "processInstanceBusinessKeyIn",
													"value": "<string>",
													"description": "Filter by process instances with one of the give business keys.\nThe keys need to be in a comma-separated list."
												},
												{
													"key": "processInstanceBusinessKeyLike",
													"value": "<string>",
													"description": "Filter by  process instance business key that has the parameter value as a substring."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Filter by the id of the execution that executed the task."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by process definition id."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a process definition with the given key."
												},
												{
													"key": "processDefinitionName",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a process definition with the given name."
												},
												{
													"key": "caseInstanceId",
													"value": "<string>",
													"description": "Filter by case instance id."
												},
												{
													"key": "caseExecutionId",
													"value": "<string>",
													"description": "Filter by the id of the case execution that executed the task."
												},
												{
													"key": "caseDefinitionId",
													"value": "<string>",
													"description": "Filter by case definition id."
												},
												{
													"key": "caseDefinitionKey",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a case definition with the given key."
												},
												{
													"key": "caseDefinitionName",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a case definition with the given name."
												},
												{
													"key": "activityInstanceIdIn",
													"value": "<string>",
													"description": "Only include tasks which belong to one of the passed comma-separated activity instance ids."
												},
												{
													"key": "taskName",
													"value": "<string>",
													"description": "Restrict to tasks that have the given name."
												},
												{
													"key": "taskNameLike",
													"value": "<string>",
													"description": "Restrict to tasks that have a name with the given parameter value as substring."
												},
												{
													"key": "taskDescription",
													"value": "<string>",
													"description": "Restrict to tasks that have the given description."
												},
												{
													"key": "taskDescriptionLike",
													"value": "<string>",
													"description": "Restrict to tasks that have a description that has the parameter value as a substring."
												},
												{
													"key": "taskDefinitionKey",
													"value": "<string>",
													"description": "Restrict to tasks that have the given key."
												},
												{
													"key": "taskDefinitionKeyIn",
													"value": "<string>",
													"description": "Restrict to tasks that have one of the passed comma-separated task definition keys."
												},
												{
													"key": "taskDeleteReason",
													"value": "<string>",
													"description": "Restrict to tasks that have the given delete reason."
												},
												{
													"key": "taskDeleteReasonLike",
													"value": "<string>",
													"description": "Restrict to tasks that have a delete reason that has the parameter value as a substring."
												},
												{
													"key": "taskAssignee",
													"value": "<string>",
													"description": "Restrict to tasks that the given user is assigned to."
												},
												{
													"key": "taskAssigneeLike",
													"value": "<string>",
													"description": "Restrict to tasks that are assigned to users with the parameter value as a substring."
												},
												{
													"key": "taskOwner",
													"value": "<string>",
													"description": "Restrict to tasks that the given user owns."
												},
												{
													"key": "taskOwnerLike",
													"value": "<string>",
													"description": "Restrict to tasks that are owned by users with the parameter value as a substring."
												},
												{
													"key": "taskPriority",
													"value": "<integer>",
													"description": "Restrict to tasks that have the given priority."
												},
												{
													"key": "assigned",
													"value": "<boolean>",
													"description": "If set to `true`, restricts the query to all tasks that are assigned."
												},
												{
													"key": "unassigned",
													"value": "<boolean>",
													"description": "If set to `true`, restricts the query to all tasks that are unassigned."
												},
												{
													"key": "finished",
													"value": "<boolean>",
													"description": "Only include finished tasks. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "unfinished",
													"value": "<boolean>",
													"description": "Only include unfinished tasks. Value may only be `true`, as `false` is the default\nbehavior."
												},
												{
													"key": "processFinished",
													"value": "<boolean>",
													"description": "Only include tasks of finished processes. Value may only be `true`, as `false` is the\ndefault behavior."
												},
												{
													"key": "processUnfinished",
													"value": "<boolean>",
													"description": "Only include tasks of unfinished processes. Value may only be `true`, as `false` is the\ndefault behavior."
												},
												{
													"key": "taskDueDate",
													"value": "<dateTime>",
													"description": "Restrict to tasks that are due on the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "taskDueDateBefore",
													"value": "<dateTime>",
													"description": "Restrict to tasks that are due before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "taskDueDateAfter",
													"value": "<dateTime>",
													"description": "Restrict to tasks that are due after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "withoutTaskDueDate",
													"value": "<boolean>",
													"description": "Only include tasks which have no due date. Value may only be `true`, as `false` is the\ndefault behavior."
												},
												{
													"key": "taskFollowUpDate",
													"value": "<dateTime>",
													"description": "Restrict to tasks that have a followUp date on the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "taskFollowUpDateBefore",
													"value": "<dateTime>",
													"description": "Restrict to tasks that have a followUp date before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "taskFollowUpDateAfter",
													"value": "<dateTime>",
													"description": "Restrict to tasks that have a followUp date after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "startedBefore",
													"value": "<dateTime>",
													"description": "Restrict to tasks that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "startedAfter",
													"value": "<dateTime>",
													"description": "Restrict to tasks that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "finishedBefore",
													"value": "<dateTime>",
													"description": "Restrict to tasks that were finished before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "finishedAfter",
													"value": "<dateTime>",
													"description": "Restrict to tasks that were finished after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids. A task instance must have one of the given\ntenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic task instances that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
												},
												{
													"key": "taskVariables",
													"value": "<string>",
													"description": "Only include tasks that have variables with certain values. Variable filtering expressions are\ncomma-separated and are structured as follows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n**Note:** Values are always treated as `String` objects on server side.\n\n\nValid operator values are:\n* `eq` - equal to;\n* `neq` - not equal to;\n* `gt` - greater than;\n* `gteq` - greater than or equal to;\n* `lt` - lower than;\n* `lteq` - lower than or equal to;\n* `like`.\n\n`key` and `value` may not contain underscore or comma characters."
												},
												{
													"key": "processVariables",
													"value": "<string>",
													"description": "Only include tasks that belong to process instances that have variables with certain\nvalues. Variable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n**Note:** Values are always treated as `String` objects on server side.\n\n\nValid operator values are:\n* `eq` - equal to;\n* `neq` - not equal to;\n* `gt` - greater than;\n* `gteq` - greater than or equal to;\n* `lt` - lower than;\n* `lteq` - lower than or equal to;\n* `like`;\n* `notLike`.\n\n`key` and `value` may not contain underscore or comma characters."
												},
												{
													"key": "variableNamesIgnoreCase",
													"value": "<boolean>",
													"description": "Match the variable name provided in `taskVariables` and `processVariables` case-\ninsensitively. If set to `true` **variableName** and **variablename** are\ntreated as equal."
												},
												{
													"key": "variableValuesIgnoreCase",
													"value": "<boolean>",
													"description": "Match the variable value provided in `taskVariables` and `processVariables` case-\ninsensitively. If set to `true` **variableValue** and **variablevalue** are\ntreated as equal."
												},
												{
													"key": "taskInvolvedUser",
													"value": "<string>",
													"description": "Restrict to tasks with a historic identity link to the given user."
												},
												{
													"key": "taskInvolvedGroup",
													"value": "<string>",
													"description": "Restrict to tasks with a historic identity link to the given group."
												},
												{
													"key": "taskHadCandidateUser",
													"value": "<string>",
													"description": "Restrict to tasks with a historic identity link to the given candidate user."
												},
												{
													"key": "taskHadCandidateGroup",
													"value": "<string>",
													"description": "Restrict to tasks with a historic identity link to the given candidate group."
												},
												{
													"key": "withCandidateGroups",
													"value": "<boolean>",
													"description": "Only include tasks which have a candidate group. Value may only be `true`,\nas `false` is the default behavior."
												},
												{
													"key": "withoutCandidateGroups",
													"value": "<boolean>",
													"description": "Only include tasks which have no candidate group. Value may only be `true`,\nas `false` is the default behavior."
												}
											]
										},
										"description": "Queries for the number of historic tasks that fulfill the given parameters.\nTakes the same parameters as the\n[Get Tasks (Historic)](https://docs.camunda.org/manual/7.21/reference/rest/history/task/get-task-query/)\nmethod."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/task/count?taskId=<string>&taskParentTaskId=<string>&processInstanceId=<string>&processInstanceBusinessKey=<string>&processInstanceBusinessKeyIn=<string>&processInstanceBusinessKeyLike=<string>&executionId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionName=<string>&caseInstanceId=<string>&caseExecutionId=<string>&caseDefinitionId=<string>&caseDefinitionKey=<string>&caseDefinitionName=<string>&activityInstanceIdIn=<string>&taskName=<string>&taskNameLike=<string>&taskDescription=<string>&taskDescriptionLike=<string>&taskDefinitionKey=<string>&taskDefinitionKeyIn=<string>&taskDeleteReason=<string>&taskDeleteReasonLike=<string>&taskAssignee=<string>&taskAssigneeLike=<string>&taskOwner=<string>&taskOwnerLike=<string>&taskPriority=<integer>&assigned=<boolean>&unassigned=<boolean>&finished=<boolean>&unfinished=<boolean>&processFinished=<boolean>&processUnfinished=<boolean>&taskDueDate=<dateTime>&taskDueDateBefore=<dateTime>&taskDueDateAfter=<dateTime>&withoutTaskDueDate=<boolean>&taskFollowUpDate=<dateTime>&taskFollowUpDateBefore=<dateTime>&taskFollowUpDateAfter=<dateTime>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&tenantIdIn=<string>&withoutTenantId=<boolean>&taskVariables=<string>&processVariables=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>&taskInvolvedUser=<string>&taskInvolvedGroup=<string>&taskHadCandidateUser=<string>&taskHadCandidateGroup=<string>&withCandidateGroups=<boolean>&withoutCandidateGroups=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"task",
														"count"
													],
													"query": [
														{
															"key": "taskId",
															"value": "<string>",
															"description": "Filter by task id."
														},
														{
															"key": "taskParentTaskId",
															"value": "<string>",
															"description": "Filter by parent task id."
														},
														{
															"key": "processInstanceId",
															"value": "<string>",
															"description": "Filter by process instance id."
														},
														{
															"key": "processInstanceBusinessKey",
															"value": "<string>",
															"description": "Filter by process instance business key."
														},
														{
															"key": "processInstanceBusinessKeyIn",
															"value": "<string>",
															"description": "Filter by process instances with one of the give business keys.\nThe keys need to be in a comma-separated list."
														},
														{
															"key": "processInstanceBusinessKeyLike",
															"value": "<string>",
															"description": "Filter by  process instance business key that has the parameter value as a substring."
														},
														{
															"key": "executionId",
															"value": "<string>",
															"description": "Filter by the id of the execution that executed the task."
														},
														{
															"key": "processDefinitionId",
															"value": "<string>",
															"description": "Filter by process definition id."
														},
														{
															"key": "processDefinitionKey",
															"value": "<string>",
															"description": "Restrict to tasks that belong to a process definition with the given key."
														},
														{
															"key": "processDefinitionName",
															"value": "<string>",
															"description": "Restrict to tasks that belong to a process definition with the given name."
														},
														{
															"key": "caseInstanceId",
															"value": "<string>",
															"description": "Filter by case instance id."
														},
														{
															"key": "caseExecutionId",
															"value": "<string>",
															"description": "Filter by the id of the case execution that executed the task."
														},
														{
															"key": "caseDefinitionId",
															"value": "<string>",
															"description": "Filter by case definition id."
														},
														{
															"key": "caseDefinitionKey",
															"value": "<string>",
															"description": "Restrict to tasks that belong to a case definition with the given key."
														},
														{
															"key": "caseDefinitionName",
															"value": "<string>",
															"description": "Restrict to tasks that belong to a case definition with the given name."
														},
														{
															"key": "activityInstanceIdIn",
															"value": "<string>",
															"description": "Only include tasks which belong to one of the passed comma-separated activity instance ids."
														},
														{
															"key": "taskName",
															"value": "<string>",
															"description": "Restrict to tasks that have the given name."
														},
														{
															"key": "taskNameLike",
															"value": "<string>",
															"description": "Restrict to tasks that have a name with the given parameter value as substring."
														},
														{
															"key": "taskDescription",
															"value": "<string>",
															"description": "Restrict to tasks that have the given description."
														},
														{
															"key": "taskDescriptionLike",
															"value": "<string>",
															"description": "Restrict to tasks that have a description that has the parameter value as a substring."
														},
														{
															"key": "taskDefinitionKey",
															"value": "<string>",
															"description": "Restrict to tasks that have the given key."
														},
														{
															"key": "taskDefinitionKeyIn",
															"value": "<string>",
															"description": "Restrict to tasks that have one of the passed comma-separated task definition keys."
														},
														{
															"key": "taskDeleteReason",
															"value": "<string>",
															"description": "Restrict to tasks that have the given delete reason."
														},
														{
															"key": "taskDeleteReasonLike",
															"value": "<string>",
															"description": "Restrict to tasks that have a delete reason that has the parameter value as a substring."
														},
														{
															"key": "taskAssignee",
															"value": "<string>",
															"description": "Restrict to tasks that the given user is assigned to."
														},
														{
															"key": "taskAssigneeLike",
															"value": "<string>",
															"description": "Restrict to tasks that are assigned to users with the parameter value as a substring."
														},
														{
															"key": "taskOwner",
															"value": "<string>",
															"description": "Restrict to tasks that the given user owns."
														},
														{
															"key": "taskOwnerLike",
															"value": "<string>",
															"description": "Restrict to tasks that are owned by users with the parameter value as a substring."
														},
														{
															"key": "taskPriority",
															"value": "<integer>",
															"description": "Restrict to tasks that have the given priority."
														},
														{
															"key": "assigned",
															"value": "<boolean>",
															"description": "If set to `true`, restricts the query to all tasks that are assigned."
														},
														{
															"key": "unassigned",
															"value": "<boolean>",
															"description": "If set to `true`, restricts the query to all tasks that are unassigned."
														},
														{
															"key": "finished",
															"value": "<boolean>",
															"description": "Only include finished tasks. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "unfinished",
															"value": "<boolean>",
															"description": "Only include unfinished tasks. Value may only be `true`, as `false` is the default\nbehavior."
														},
														{
															"key": "processFinished",
															"value": "<boolean>",
															"description": "Only include tasks of finished processes. Value may only be `true`, as `false` is the\ndefault behavior."
														},
														{
															"key": "processUnfinished",
															"value": "<boolean>",
															"description": "Only include tasks of unfinished processes. Value may only be `true`, as `false` is the\ndefault behavior."
														},
														{
															"key": "taskDueDate",
															"value": "<dateTime>",
															"description": "Restrict to tasks that are due on the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "taskDueDateBefore",
															"value": "<dateTime>",
															"description": "Restrict to tasks that are due before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "taskDueDateAfter",
															"value": "<dateTime>",
															"description": "Restrict to tasks that are due after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "withoutTaskDueDate",
															"value": "<boolean>",
															"description": "Only include tasks which have no due date. Value may only be `true`, as `false` is the\ndefault behavior."
														},
														{
															"key": "taskFollowUpDate",
															"value": "<dateTime>",
															"description": "Restrict to tasks that have a followUp date on the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "taskFollowUpDateBefore",
															"value": "<dateTime>",
															"description": "Restrict to tasks that have a followUp date before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "taskFollowUpDateAfter",
															"value": "<dateTime>",
															"description": "Restrict to tasks that have a followUp date after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "startedBefore",
															"value": "<dateTime>",
															"description": "Restrict to tasks that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "startedAfter",
															"value": "<dateTime>",
															"description": "Restrict to tasks that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "finishedBefore",
															"value": "<dateTime>",
															"description": "Restrict to tasks that were finished before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "finishedAfter",
															"value": "<dateTime>",
															"description": "Restrict to tasks that were finished after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Filter by a comma-separated list of tenant ids. A task instance must have one of the given\ntenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include historic task instances that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
														},
														{
															"key": "taskVariables",
															"value": "<string>",
															"description": "Only include tasks that have variables with certain values. Variable filtering expressions are\ncomma-separated and are structured as follows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n**Note:** Values are always treated as `String` objects on server side.\n\n\nValid operator values are:\n* `eq` - equal to;\n* `neq` - not equal to;\n* `gt` - greater than;\n* `gteq` - greater than or equal to;\n* `lt` - lower than;\n* `lteq` - lower than or equal to;\n* `like`.\n\n`key` and `value` may not contain underscore or comma characters."
														},
														{
															"key": "processVariables",
															"value": "<string>",
															"description": "Only include tasks that belong to process instances that have variables with certain\nvalues. Variable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n**Note:** Values are always treated as `String` objects on server side.\n\n\nValid operator values are:\n* `eq` - equal to;\n* `neq` - not equal to;\n* `gt` - greater than;\n* `gteq` - greater than or equal to;\n* `lt` - lower than;\n* `lteq` - lower than or equal to;\n* `like`;\n* `notLike`.\n\n`key` and `value` may not contain underscore or comma characters."
														},
														{
															"key": "variableNamesIgnoreCase",
															"value": "<boolean>",
															"description": "Match the variable name provided in `taskVariables` and `processVariables` case-\ninsensitively. If set to `true` **variableName** and **variablename** are\ntreated as equal."
														},
														{
															"key": "variableValuesIgnoreCase",
															"value": "<boolean>",
															"description": "Match the variable value provided in `taskVariables` and `processVariables` case-\ninsensitively. If set to `true` **variableValue** and **variablevalue** are\ntreated as equal."
														},
														{
															"key": "taskInvolvedUser",
															"value": "<string>",
															"description": "Restrict to tasks with a historic identity link to the given user."
														},
														{
															"key": "taskInvolvedGroup",
															"value": "<string>",
															"description": "Restrict to tasks with a historic identity link to the given group."
														},
														{
															"key": "taskHadCandidateUser",
															"value": "<string>",
															"description": "Restrict to tasks with a historic identity link to the given candidate user."
														},
														{
															"key": "taskHadCandidateGroup",
															"value": "<string>",
															"description": "Restrict to tasks with a historic identity link to the given candidate group."
														},
														{
															"key": "withCandidateGroups",
															"value": "<boolean>",
															"description": "Only include tasks which have a candidate group. Value may only be `true`,\nas `false` is the default behavior."
														},
														{
															"key": "withoutCandidateGroups",
															"value": "<boolean>",
															"description": "Only include tasks which have no candidate group. Value may only be `true`,\nas `false` is the default behavior."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<long>\"\n}"
										},
										{
											"name": "Returned if some of the query parameters are invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/task/count?taskId=<string>&taskParentTaskId=<string>&processInstanceId=<string>&processInstanceBusinessKey=<string>&processInstanceBusinessKeyIn=<string>&processInstanceBusinessKeyLike=<string>&executionId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionName=<string>&caseInstanceId=<string>&caseExecutionId=<string>&caseDefinitionId=<string>&caseDefinitionKey=<string>&caseDefinitionName=<string>&activityInstanceIdIn=<string>&taskName=<string>&taskNameLike=<string>&taskDescription=<string>&taskDescriptionLike=<string>&taskDefinitionKey=<string>&taskDefinitionKeyIn=<string>&taskDeleteReason=<string>&taskDeleteReasonLike=<string>&taskAssignee=<string>&taskAssigneeLike=<string>&taskOwner=<string>&taskOwnerLike=<string>&taskPriority=<integer>&assigned=<boolean>&unassigned=<boolean>&finished=<boolean>&unfinished=<boolean>&processFinished=<boolean>&processUnfinished=<boolean>&taskDueDate=<dateTime>&taskDueDateBefore=<dateTime>&taskDueDateAfter=<dateTime>&withoutTaskDueDate=<boolean>&taskFollowUpDate=<dateTime>&taskFollowUpDateBefore=<dateTime>&taskFollowUpDateAfter=<dateTime>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&tenantIdIn=<string>&withoutTenantId=<boolean>&taskVariables=<string>&processVariables=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>&taskInvolvedUser=<string>&taskInvolvedGroup=<string>&taskHadCandidateUser=<string>&taskHadCandidateGroup=<string>&withCandidateGroups=<boolean>&withoutCandidateGroups=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"task",
														"count"
													],
													"query": [
														{
															"key": "taskId",
															"value": "<string>",
															"description": "Filter by task id."
														},
														{
															"key": "taskParentTaskId",
															"value": "<string>",
															"description": "Filter by parent task id."
														},
														{
															"key": "processInstanceId",
															"value": "<string>",
															"description": "Filter by process instance id."
														},
														{
															"key": "processInstanceBusinessKey",
															"value": "<string>",
															"description": "Filter by process instance business key."
														},
														{
															"key": "processInstanceBusinessKeyIn",
															"value": "<string>",
															"description": "Filter by process instances with one of the give business keys.\nThe keys need to be in a comma-separated list."
														},
														{
															"key": "processInstanceBusinessKeyLike",
															"value": "<string>",
															"description": "Filter by  process instance business key that has the parameter value as a substring."
														},
														{
															"key": "executionId",
															"value": "<string>",
															"description": "Filter by the id of the execution that executed the task."
														},
														{
															"key": "processDefinitionId",
															"value": "<string>",
															"description": "Filter by process definition id."
														},
														{
															"key": "processDefinitionKey",
															"value": "<string>",
															"description": "Restrict to tasks that belong to a process definition with the given key."
														},
														{
															"key": "processDefinitionName",
															"value": "<string>",
															"description": "Restrict to tasks that belong to a process definition with the given name."
														},
														{
															"key": "caseInstanceId",
															"value": "<string>",
															"description": "Filter by case instance id."
														},
														{
															"key": "caseExecutionId",
															"value": "<string>",
															"description": "Filter by the id of the case execution that executed the task."
														},
														{
															"key": "caseDefinitionId",
															"value": "<string>",
															"description": "Filter by case definition id."
														},
														{
															"key": "caseDefinitionKey",
															"value": "<string>",
															"description": "Restrict to tasks that belong to a case definition with the given key."
														},
														{
															"key": "caseDefinitionName",
															"value": "<string>",
															"description": "Restrict to tasks that belong to a case definition with the given name."
														},
														{
															"key": "activityInstanceIdIn",
															"value": "<string>",
															"description": "Only include tasks which belong to one of the passed comma-separated activity instance ids."
														},
														{
															"key": "taskName",
															"value": "<string>",
															"description": "Restrict to tasks that have the given name."
														},
														{
															"key": "taskNameLike",
															"value": "<string>",
															"description": "Restrict to tasks that have a name with the given parameter value as substring."
														},
														{
															"key": "taskDescription",
															"value": "<string>",
															"description": "Restrict to tasks that have the given description."
														},
														{
															"key": "taskDescriptionLike",
															"value": "<string>",
															"description": "Restrict to tasks that have a description that has the parameter value as a substring."
														},
														{
															"key": "taskDefinitionKey",
															"value": "<string>",
															"description": "Restrict to tasks that have the given key."
														},
														{
															"key": "taskDefinitionKeyIn",
															"value": "<string>",
															"description": "Restrict to tasks that have one of the passed comma-separated task definition keys."
														},
														{
															"key": "taskDeleteReason",
															"value": "<string>",
															"description": "Restrict to tasks that have the given delete reason."
														},
														{
															"key": "taskDeleteReasonLike",
															"value": "<string>",
															"description": "Restrict to tasks that have a delete reason that has the parameter value as a substring."
														},
														{
															"key": "taskAssignee",
															"value": "<string>",
															"description": "Restrict to tasks that the given user is assigned to."
														},
														{
															"key": "taskAssigneeLike",
															"value": "<string>",
															"description": "Restrict to tasks that are assigned to users with the parameter value as a substring."
														},
														{
															"key": "taskOwner",
															"value": "<string>",
															"description": "Restrict to tasks that the given user owns."
														},
														{
															"key": "taskOwnerLike",
															"value": "<string>",
															"description": "Restrict to tasks that are owned by users with the parameter value as a substring."
														},
														{
															"key": "taskPriority",
															"value": "<integer>",
															"description": "Restrict to tasks that have the given priority."
														},
														{
															"key": "assigned",
															"value": "<boolean>",
															"description": "If set to `true`, restricts the query to all tasks that are assigned."
														},
														{
															"key": "unassigned",
															"value": "<boolean>",
															"description": "If set to `true`, restricts the query to all tasks that are unassigned."
														},
														{
															"key": "finished",
															"value": "<boolean>",
															"description": "Only include finished tasks. Value may only be `true`, as `false` is the default behavior."
														},
														{
															"key": "unfinished",
															"value": "<boolean>",
															"description": "Only include unfinished tasks. Value may only be `true`, as `false` is the default\nbehavior."
														},
														{
															"key": "processFinished",
															"value": "<boolean>",
															"description": "Only include tasks of finished processes. Value may only be `true`, as `false` is the\ndefault behavior."
														},
														{
															"key": "processUnfinished",
															"value": "<boolean>",
															"description": "Only include tasks of unfinished processes. Value may only be `true`, as `false` is the\ndefault behavior."
														},
														{
															"key": "taskDueDate",
															"value": "<dateTime>",
															"description": "Restrict to tasks that are due on the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "taskDueDateBefore",
															"value": "<dateTime>",
															"description": "Restrict to tasks that are due before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "taskDueDateAfter",
															"value": "<dateTime>",
															"description": "Restrict to tasks that are due after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "withoutTaskDueDate",
															"value": "<boolean>",
															"description": "Only include tasks which have no due date. Value may only be `true`, as `false` is the\ndefault behavior."
														},
														{
															"key": "taskFollowUpDate",
															"value": "<dateTime>",
															"description": "Restrict to tasks that have a followUp date on the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "taskFollowUpDateBefore",
															"value": "<dateTime>",
															"description": "Restrict to tasks that have a followUp date before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "taskFollowUpDateAfter",
															"value": "<dateTime>",
															"description": "Restrict to tasks that have a followUp date after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "startedBefore",
															"value": "<dateTime>",
															"description": "Restrict to tasks that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "startedAfter",
															"value": "<dateTime>",
															"description": "Restrict to tasks that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "finishedBefore",
															"value": "<dateTime>",
															"description": "Restrict to tasks that were finished before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "finishedAfter",
															"value": "<dateTime>",
															"description": "Restrict to tasks that were finished after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Filter by a comma-separated list of tenant ids. A task instance must have one of the given\ntenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include historic task instances that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
														},
														{
															"key": "taskVariables",
															"value": "<string>",
															"description": "Only include tasks that have variables with certain values. Variable filtering expressions are\ncomma-separated and are structured as follows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n**Note:** Values are always treated as `String` objects on server side.\n\n\nValid operator values are:\n* `eq` - equal to;\n* `neq` - not equal to;\n* `gt` - greater than;\n* `gteq` - greater than or equal to;\n* `lt` - lower than;\n* `lteq` - lower than or equal to;\n* `like`.\n\n`key` and `value` may not contain underscore or comma characters."
														},
														{
															"key": "processVariables",
															"value": "<string>",
															"description": "Only include tasks that belong to process instances that have variables with certain\nvalues. Variable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n**Note:** Values are always treated as `String` objects on server side.\n\n\nValid operator values are:\n* `eq` - equal to;\n* `neq` - not equal to;\n* `gt` - greater than;\n* `gteq` - greater than or equal to;\n* `lt` - lower than;\n* `lteq` - lower than or equal to;\n* `like`;\n* `notLike`.\n\n`key` and `value` may not contain underscore or comma characters."
														},
														{
															"key": "variableNamesIgnoreCase",
															"value": "<boolean>",
															"description": "Match the variable name provided in `taskVariables` and `processVariables` case-\ninsensitively. If set to `true` **variableName** and **variablename** are\ntreated as equal."
														},
														{
															"key": "variableValuesIgnoreCase",
															"value": "<boolean>",
															"description": "Match the variable value provided in `taskVariables` and `processVariables` case-\ninsensitively. If set to `true` **variableValue** and **variablevalue** are\ntreated as equal."
														},
														{
															"key": "taskInvolvedUser",
															"value": "<string>",
															"description": "Restrict to tasks with a historic identity link to the given user."
														},
														{
															"key": "taskInvolvedGroup",
															"value": "<string>",
															"description": "Restrict to tasks with a historic identity link to the given group."
														},
														{
															"key": "taskHadCandidateUser",
															"value": "<string>",
															"description": "Restrict to tasks with a historic identity link to the given candidate user."
														},
														{
															"key": "taskHadCandidateGroup",
															"value": "<string>",
															"description": "Restrict to tasks with a historic identity link to the given candidate group."
														},
														{
															"key": "withCandidateGroups",
															"value": "<boolean>",
															"description": "Only include tasks which have a candidate group. Value may only be `true`,\nas `false` is the default behavior."
														},
														{
															"key": "withoutCandidateGroups",
															"value": "<boolean>",
															"description": "Only include tasks which have no candidate group. Value may only be `true`,\nas `false` is the default behavior."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								},
								{
									"name": "Get Task Count (POST)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"taskId\": \"<string>\",\n  \"taskParentTaskId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceBusinessKey\": \"<string>\",\n  \"processInstanceBusinessKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKeyLike\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionName\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"caseDefinitionId\": \"<string>\",\n  \"caseDefinitionKey\": \"<string>\",\n  \"caseDefinitionName\": \"<string>\",\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskName\": \"<string>\",\n  \"taskNameLike\": \"<string>\",\n  \"taskDescription\": \"<string>\",\n  \"taskDescriptionLike\": \"<string>\",\n  \"taskDefinitionKey\": \"<string>\",\n  \"taskDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskDeleteReason\": \"<string>\",\n  \"taskDeleteReasonLike\": \"<string>\",\n  \"taskAssignee\": \"<string>\",\n  \"taskAssigneeLike\": \"<string>\",\n  \"taskOwner\": \"<string>\",\n  \"taskOwnerLike\": \"<string>\",\n  \"taskPriority\": \"<integer>\",\n  \"assigned\": \"<boolean>\",\n  \"unassigned\": \"<boolean>\",\n  \"finished\": \"<boolean>\",\n  \"unfinished\": \"<boolean>\",\n  \"processFinished\": \"<boolean>\",\n  \"processUnfinished\": \"<boolean>\",\n  \"taskDueDate\": \"<dateTime>\",\n  \"taskDueDateBefore\": \"<dateTime>\",\n  \"taskDueDateAfter\": \"<dateTime>\",\n  \"withoutTaskDueDate\": \"<boolean>\",\n  \"taskFollowUpDate\": \"<dateTime>\",\n  \"taskFollowUpDateBefore\": \"<dateTime>\",\n  \"taskFollowUpDateAfter\": \"<dateTime>\",\n  \"startedBefore\": \"<dateTime>\",\n  \"startedAfter\": \"<dateTime>\",\n  \"finishedBefore\": \"<dateTime>\",\n  \"finishedAfter\": \"<dateTime>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"taskVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"processVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gt\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"like\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"taskInvolvedUser\": \"<string>\",\n  \"taskInvolvedGroup\": \"<string>\",\n  \"taskHadCandidateUser\": \"<string>\",\n  \"taskHadCandidateGroup\": \"<string>\",\n  \"withCandidateGroups\": \"<boolean>\",\n  \"withoutCandidateGroups\": \"<boolean>\",\n  \"orQueries\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/HistoricTaskInstanceQueryDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/HistoricTaskInstanceQueryDto detected>\"\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"priority\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"startTime\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/task/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"task",
												"count"
											]
										},
										"description": "Queries for the number of historic tasks that fulfill the given parameters. Takes the\nsame parameters as the [Get Tasks (Historic)](https://docs.camunda.org/manual/7.21/reference/rest/history/task/get-task-query/)\nmethod. Corresponds to the size of the result set of the\n[Get Tasks (Historic) (POST)](https://docs.camunda.org/manual/7.21/reference/rest/history/task/post-task-query/)\nmethod and takes the same parameters."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"taskId\": \"<string>\",\n  \"taskParentTaskId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceBusinessKey\": \"<string>\",\n  \"processInstanceBusinessKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKeyLike\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionName\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"caseDefinitionId\": \"<string>\",\n  \"caseDefinitionKey\": \"<string>\",\n  \"caseDefinitionName\": \"<string>\",\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskName\": \"<string>\",\n  \"taskNameLike\": \"<string>\",\n  \"taskDescription\": \"<string>\",\n  \"taskDescriptionLike\": \"<string>\",\n  \"taskDefinitionKey\": \"<string>\",\n  \"taskDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskDeleteReason\": \"<string>\",\n  \"taskDeleteReasonLike\": \"<string>\",\n  \"taskAssignee\": \"<string>\",\n  \"taskAssigneeLike\": \"<string>\",\n  \"taskOwner\": \"<string>\",\n  \"taskOwnerLike\": \"<string>\",\n  \"taskPriority\": \"<integer>\",\n  \"assigned\": \"<boolean>\",\n  \"unassigned\": \"<boolean>\",\n  \"finished\": \"<boolean>\",\n  \"unfinished\": \"<boolean>\",\n  \"processFinished\": \"<boolean>\",\n  \"processUnfinished\": \"<boolean>\",\n  \"taskDueDate\": \"<dateTime>\",\n  \"taskDueDateBefore\": \"<dateTime>\",\n  \"taskDueDateAfter\": \"<dateTime>\",\n  \"withoutTaskDueDate\": \"<boolean>\",\n  \"taskFollowUpDate\": \"<dateTime>\",\n  \"taskFollowUpDateBefore\": \"<dateTime>\",\n  \"taskFollowUpDateAfter\": \"<dateTime>\",\n  \"startedBefore\": \"<dateTime>\",\n  \"startedAfter\": \"<dateTime>\",\n  \"finishedBefore\": \"<dateTime>\",\n  \"finishedAfter\": \"<dateTime>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"taskVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"processVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gt\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"like\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"taskInvolvedUser\": \"<string>\",\n  \"taskInvolvedGroup\": \"<string>\",\n  \"taskHadCandidateUser\": \"<string>\",\n  \"taskHadCandidateGroup\": \"<string>\",\n  \"withCandidateGroups\": \"<boolean>\",\n  \"withoutCandidateGroups\": \"<boolean>\",\n  \"orQueries\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/HistoricTaskInstanceQueryDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/HistoricTaskInstanceQueryDto detected>\"\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"priority\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"startTime\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/history/task/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"task",
														"count"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<long>\"\n}"
										},
										{
											"name": "Returned if some of the query parameters are invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"taskId\": \"<string>\",\n  \"taskParentTaskId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceBusinessKey\": \"<string>\",\n  \"processInstanceBusinessKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKeyLike\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionName\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"caseDefinitionId\": \"<string>\",\n  \"caseDefinitionKey\": \"<string>\",\n  \"caseDefinitionName\": \"<string>\",\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskName\": \"<string>\",\n  \"taskNameLike\": \"<string>\",\n  \"taskDescription\": \"<string>\",\n  \"taskDescriptionLike\": \"<string>\",\n  \"taskDefinitionKey\": \"<string>\",\n  \"taskDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskDeleteReason\": \"<string>\",\n  \"taskDeleteReasonLike\": \"<string>\",\n  \"taskAssignee\": \"<string>\",\n  \"taskAssigneeLike\": \"<string>\",\n  \"taskOwner\": \"<string>\",\n  \"taskOwnerLike\": \"<string>\",\n  \"taskPriority\": \"<integer>\",\n  \"assigned\": \"<boolean>\",\n  \"unassigned\": \"<boolean>\",\n  \"finished\": \"<boolean>\",\n  \"unfinished\": \"<boolean>\",\n  \"processFinished\": \"<boolean>\",\n  \"processUnfinished\": \"<boolean>\",\n  \"taskDueDate\": \"<dateTime>\",\n  \"taskDueDateBefore\": \"<dateTime>\",\n  \"taskDueDateAfter\": \"<dateTime>\",\n  \"withoutTaskDueDate\": \"<boolean>\",\n  \"taskFollowUpDate\": \"<dateTime>\",\n  \"taskFollowUpDateBefore\": \"<dateTime>\",\n  \"taskFollowUpDateAfter\": \"<dateTime>\",\n  \"startedBefore\": \"<dateTime>\",\n  \"startedAfter\": \"<dateTime>\",\n  \"finishedBefore\": \"<dateTime>\",\n  \"finishedAfter\": \"<dateTime>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"taskVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"processVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gt\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"like\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"taskInvolvedUser\": \"<string>\",\n  \"taskInvolvedGroup\": \"<string>\",\n  \"taskHadCandidateUser\": \"<string>\",\n  \"taskHadCandidateGroup\": \"<string>\",\n  \"withCandidateGroups\": \"<boolean>\",\n  \"withoutCandidateGroups\": \"<boolean>\",\n  \"orQueries\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/HistoricTaskInstanceQueryDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/HistoricTaskInstanceQueryDto detected>\"\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"priority\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"startTime\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/history/task/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"task",
														"count"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "report",
							"item": [
								{
									"name": "Get Task Report (Historic)",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/task/report?reportType=duration&periodUnit=MONTH&completedBefore=<dateTime>&completedAfter=<dateTime>&groupBy=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"task",
												"report"
											],
											"query": [
												{
													"key": "reportType",
													"value": "duration",
													"description": "**Mandatory.** Specifies the kind of the report to execute. To retrieve a report\nabout the duration of process instances the value must be set to `duration`. For a\nreport of the completed tasks in a specific timespan the value must be set to `count`."
												},
												{
													"key": "periodUnit",
													"value": "MONTH",
													"description": "When the report type is set to `duration`, this parameter is **mandatory**.\nSpecifies the granularity of the report. Valid values are `month` and `quarter`."
												},
												{
													"key": "completedBefore",
													"value": "<dateTime>",
													"description": "Restrict to tasks that were completed before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "completedAfter",
													"value": "<dateTime>",
													"description": "Restrict to tasks that were completed after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "groupBy",
													"value": "<string>",
													"description": "When the report type is set to `count`, this parameter is **mandatory**. Groups the\ntasks report by a given criterion. Valid values are `taskName` and `processDefinition`."
												}
											]
										},
										"description": "Retrieves a report of completed tasks. When the report type is set to `count`, the\nreport contains a list of completed task counts where an entry contains the task name, the\ndefinition key of the task, the process definition id, the process definition key, the process\ndefinition name and the count of how many tasks were completed for the specified key in a given\nperiod. When the report type is set to `duration`, the report contains a minimum, maximum and\naverage duration value of all completed task instances in a given period."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/task/report?reportType=duration&periodUnit=MONTH&completedBefore=<dateTime>&completedAfter=<dateTime>&groupBy=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"task",
														"report"
													],
													"query": [
														{
															"key": "reportType",
															"value": "duration",
															"description": "**Mandatory.** Specifies the kind of the report to execute. To retrieve a report\nabout the duration of process instances the value must be set to `duration`. For a\nreport of the completed tasks in a specific timespan the value must be set to `count`."
														},
														{
															"key": "periodUnit",
															"value": "MONTH",
															"description": "When the report type is set to `duration`, this parameter is **mandatory**.\nSpecifies the granularity of the report. Valid values are `month` and `quarter`."
														},
														{
															"key": "completedBefore",
															"value": "<dateTime>",
															"description": "Restrict to tasks that were completed before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "completedAfter",
															"value": "<dateTime>",
															"description": "Restrict to tasks that were completed after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "groupBy",
															"value": "<string>",
															"description": "When the report type is set to `count`, this parameter is **mandatory**. Groups the\ntasks report by a given criterion. Valid values are `taskName` and `processDefinition`."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"taskName\": \"<string>\",\n    \"count\": \"<long>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionName\": \"<string>\",\n    \"period\": \"<integer>\",\n    \"periodUnit\": \"QUARTER\",\n    \"minimum\": \"<long>\",\n    \"maximum\": \"<long>\",\n    \"average\": \"<long>\",\n    \"tenantId\": \"<string>\"\n  },\n  {\n    \"taskName\": \"<string>\",\n    \"count\": \"<long>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionName\": \"<string>\",\n    \"period\": \"<integer>\",\n    \"periodUnit\": \"MONTH\",\n    \"minimum\": \"<long>\",\n    \"maximum\": \"<long>\",\n    \"average\": \"<long>\",\n    \"tenantId\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Returned if some of the query parameters are invalid, for example if a `completedAfter`\nparameter is supplied, but the date format is wrong. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/task/report?reportType=duration&periodUnit=MONTH&completedBefore=<dateTime>&completedAfter=<dateTime>&groupBy=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"task",
														"report"
													],
													"query": [
														{
															"key": "reportType",
															"value": "duration",
															"description": "**Mandatory.** Specifies the kind of the report to execute. To retrieve a report\nabout the duration of process instances the value must be set to `duration`. For a\nreport of the completed tasks in a specific timespan the value must be set to `count`."
														},
														{
															"key": "periodUnit",
															"value": "MONTH",
															"description": "When the report type is set to `duration`, this parameter is **mandatory**.\nSpecifies the granularity of the report. Valid values are `month` and `quarter`."
														},
														{
															"key": "completedBefore",
															"value": "<dateTime>",
															"description": "Restrict to tasks that were completed before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "completedAfter",
															"value": "<dateTime>",
															"description": "Restrict to tasks that were completed after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
														},
														{
															"key": "groupBy",
															"value": "<string>",
															"description": "When the report type is set to `count`, this parameter is **mandatory**. Groups the\ntasks report by a given criterion. Valid values are `taskName` and `processDefinition`."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Tasks (Historic)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/history/task?taskId=<string>&taskParentTaskId=<string>&processInstanceId=<string>&processInstanceBusinessKey=<string>&processInstanceBusinessKeyIn=<string>&processInstanceBusinessKeyLike=<string>&executionId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionName=<string>&caseInstanceId=<string>&caseExecutionId=<string>&caseDefinitionId=<string>&caseDefinitionKey=<string>&caseDefinitionName=<string>&activityInstanceIdIn=<string>&taskName=<string>&taskNameLike=<string>&taskDescription=<string>&taskDescriptionLike=<string>&taskDefinitionKey=<string>&taskDefinitionKeyIn=<string>&taskDeleteReason=<string>&taskDeleteReasonLike=<string>&taskAssignee=<string>&taskAssigneeLike=<string>&taskOwner=<string>&taskOwnerLike=<string>&taskPriority=<integer>&assigned=<boolean>&unassigned=<boolean>&finished=<boolean>&unfinished=<boolean>&processFinished=<boolean>&processUnfinished=<boolean>&taskDueDate=<dateTime>&taskDueDateBefore=<dateTime>&taskDueDateAfter=<dateTime>&withoutTaskDueDate=<boolean>&taskFollowUpDate=<dateTime>&taskFollowUpDateBefore=<dateTime>&taskFollowUpDateAfter=<dateTime>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&tenantIdIn=<string>&withoutTenantId=<boolean>&taskVariables=<string>&processVariables=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>&taskInvolvedUser=<string>&taskInvolvedGroup=<string>&taskHadCandidateUser=<string>&taskHadCandidateGroup=<string>&withCandidateGroups=<boolean>&withoutCandidateGroups=<boolean>&sortBy=owner&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"history",
										"task"
									],
									"query": [
										{
											"key": "taskId",
											"value": "<string>",
											"description": "Filter by task id."
										},
										{
											"key": "taskParentTaskId",
											"value": "<string>",
											"description": "Filter by parent task id."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Filter by process instance id."
										},
										{
											"key": "processInstanceBusinessKey",
											"value": "<string>",
											"description": "Filter by process instance business key."
										},
										{
											"key": "processInstanceBusinessKeyIn",
											"value": "<string>",
											"description": "Filter by process instances with one of the give business keys.\nThe keys need to be in a comma-separated list."
										},
										{
											"key": "processInstanceBusinessKeyLike",
											"value": "<string>",
											"description": "Filter by  process instance business key that has the parameter value as a substring."
										},
										{
											"key": "executionId",
											"value": "<string>",
											"description": "Filter by the id of the execution that executed the task."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Filter by process definition id."
										},
										{
											"key": "processDefinitionKey",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a process definition with the given key."
										},
										{
											"key": "processDefinitionName",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a process definition with the given name."
										},
										{
											"key": "caseInstanceId",
											"value": "<string>",
											"description": "Filter by case instance id."
										},
										{
											"key": "caseExecutionId",
											"value": "<string>",
											"description": "Filter by the id of the case execution that executed the task."
										},
										{
											"key": "caseDefinitionId",
											"value": "<string>",
											"description": "Filter by case definition id."
										},
										{
											"key": "caseDefinitionKey",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a case definition with the given key."
										},
										{
											"key": "caseDefinitionName",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a case definition with the given name."
										},
										{
											"key": "activityInstanceIdIn",
											"value": "<string>",
											"description": "Only include tasks which belong to one of the passed comma-separated activity instance ids."
										},
										{
											"key": "taskName",
											"value": "<string>",
											"description": "Restrict to tasks that have the given name."
										},
										{
											"key": "taskNameLike",
											"value": "<string>",
											"description": "Restrict to tasks that have a name with the given parameter value as substring."
										},
										{
											"key": "taskDescription",
											"value": "<string>",
											"description": "Restrict to tasks that have the given description."
										},
										{
											"key": "taskDescriptionLike",
											"value": "<string>",
											"description": "Restrict to tasks that have a description that has the parameter value as a substring."
										},
										{
											"key": "taskDefinitionKey",
											"value": "<string>",
											"description": "Restrict to tasks that have the given key."
										},
										{
											"key": "taskDefinitionKeyIn",
											"value": "<string>",
											"description": "Restrict to tasks that have one of the passed comma-separated task definition keys."
										},
										{
											"key": "taskDeleteReason",
											"value": "<string>",
											"description": "Restrict to tasks that have the given delete reason."
										},
										{
											"key": "taskDeleteReasonLike",
											"value": "<string>",
											"description": "Restrict to tasks that have a delete reason that has the parameter value as a substring."
										},
										{
											"key": "taskAssignee",
											"value": "<string>",
											"description": "Restrict to tasks that the given user is assigned to."
										},
										{
											"key": "taskAssigneeLike",
											"value": "<string>",
											"description": "Restrict to tasks that are assigned to users with the parameter value as a substring."
										},
										{
											"key": "taskOwner",
											"value": "<string>",
											"description": "Restrict to tasks that the given user owns."
										},
										{
											"key": "taskOwnerLike",
											"value": "<string>",
											"description": "Restrict to tasks that are owned by users with the parameter value as a substring."
										},
										{
											"key": "taskPriority",
											"value": "<integer>",
											"description": "Restrict to tasks that have the given priority."
										},
										{
											"key": "assigned",
											"value": "<boolean>",
											"description": "If set to `true`, restricts the query to all tasks that are assigned."
										},
										{
											"key": "unassigned",
											"value": "<boolean>",
											"description": "If set to `true`, restricts the query to all tasks that are unassigned."
										},
										{
											"key": "finished",
											"value": "<boolean>",
											"description": "Only include finished tasks. Value may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "unfinished",
											"value": "<boolean>",
											"description": "Only include unfinished tasks. Value may only be `true`, as `false` is the default\nbehavior."
										},
										{
											"key": "processFinished",
											"value": "<boolean>",
											"description": "Only include tasks of finished processes. Value may only be `true`, as `false` is the\ndefault behavior."
										},
										{
											"key": "processUnfinished",
											"value": "<boolean>",
											"description": "Only include tasks of unfinished processes. Value may only be `true`, as `false` is the\ndefault behavior."
										},
										{
											"key": "taskDueDate",
											"value": "<dateTime>",
											"description": "Restrict to tasks that are due on the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "taskDueDateBefore",
											"value": "<dateTime>",
											"description": "Restrict to tasks that are due before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "taskDueDateAfter",
											"value": "<dateTime>",
											"description": "Restrict to tasks that are due after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "withoutTaskDueDate",
											"value": "<boolean>",
											"description": "Only include tasks which have no due date. Value may only be `true`, as `false` is the\ndefault behavior."
										},
										{
											"key": "taskFollowUpDate",
											"value": "<dateTime>",
											"description": "Restrict to tasks that have a followUp date on the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "taskFollowUpDateBefore",
											"value": "<dateTime>",
											"description": "Restrict to tasks that have a followUp date before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "taskFollowUpDateAfter",
											"value": "<dateTime>",
											"description": "Restrict to tasks that have a followUp date after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "startedBefore",
											"value": "<dateTime>",
											"description": "Restrict to tasks that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "startedAfter",
											"value": "<dateTime>",
											"description": "Restrict to tasks that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "finishedBefore",
											"value": "<dateTime>",
											"description": "Restrict to tasks that were finished before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "finishedAfter",
											"value": "<dateTime>",
											"description": "Restrict to tasks that were finished after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids. A task instance must have one of the given\ntenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include historic task instances that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
										},
										{
											"key": "taskVariables",
											"value": "<string>",
											"description": "Only include tasks that have variables with certain values. Variable filtering expressions are\ncomma-separated and are structured as follows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n**Note:** Values are always treated as `String` objects on server side.\n\n\nValid operator values are:\n* `eq` - equal to;\n* `neq` - not equal to;\n* `gt` - greater than;\n* `gteq` - greater than or equal to;\n* `lt` - lower than;\n* `lteq` - lower than or equal to;\n* `like`.\n\n`key` and `value` may not contain underscore or comma characters."
										},
										{
											"key": "processVariables",
											"value": "<string>",
											"description": "Only include tasks that belong to process instances that have variables with certain\nvalues. Variable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n**Note:** Values are always treated as `String` objects on server side.\n\n\nValid operator values are:\n* `eq` - equal to;\n* `neq` - not equal to;\n* `gt` - greater than;\n* `gteq` - greater than or equal to;\n* `lt` - lower than;\n* `lteq` - lower than or equal to;\n* `like`;\n* `notLike`.\n\n`key` and `value` may not contain underscore or comma characters."
										},
										{
											"key": "variableNamesIgnoreCase",
											"value": "<boolean>",
											"description": "Match the variable name provided in `taskVariables` and `processVariables` case-\ninsensitively. If set to `true` **variableName** and **variablename** are\ntreated as equal."
										},
										{
											"key": "variableValuesIgnoreCase",
											"value": "<boolean>",
											"description": "Match the variable value provided in `taskVariables` and `processVariables` case-\ninsensitively. If set to `true` **variableValue** and **variablevalue** are\ntreated as equal."
										},
										{
											"key": "taskInvolvedUser",
											"value": "<string>",
											"description": "Restrict to tasks with a historic identity link to the given user."
										},
										{
											"key": "taskInvolvedGroup",
											"value": "<string>",
											"description": "Restrict to tasks with a historic identity link to the given group."
										},
										{
											"key": "taskHadCandidateUser",
											"value": "<string>",
											"description": "Restrict to tasks with a historic identity link to the given candidate user."
										},
										{
											"key": "taskHadCandidateGroup",
											"value": "<string>",
											"description": "Restrict to tasks with a historic identity link to the given candidate group."
										},
										{
											"key": "withCandidateGroups",
											"value": "<boolean>",
											"description": "Only include tasks which have a candidate group. Value may only be `true`,\nas `false` is the default behavior."
										},
										{
											"key": "withoutCandidateGroups",
											"value": "<boolean>",
											"description": "Only include tasks which have no candidate group. Value may only be `true`,\nas `false` is the default behavior."
										},
										{
											"key": "sortBy",
											"value": "owner",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								},
								"description": "Queries for historic tasks that fulfill the given parameters. The size of the result\nset can be retrieved by using the\n[Get Task Count](https://docs.camunda.org/manual/7.21/reference/rest/history/task/get-task-query-count/)\nmethod."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/task?taskId=<string>&taskParentTaskId=<string>&processInstanceId=<string>&processInstanceBusinessKey=<string>&processInstanceBusinessKeyIn=<string>&processInstanceBusinessKeyLike=<string>&executionId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionName=<string>&caseInstanceId=<string>&caseExecutionId=<string>&caseDefinitionId=<string>&caseDefinitionKey=<string>&caseDefinitionName=<string>&activityInstanceIdIn=<string>&taskName=<string>&taskNameLike=<string>&taskDescription=<string>&taskDescriptionLike=<string>&taskDefinitionKey=<string>&taskDefinitionKeyIn=<string>&taskDeleteReason=<string>&taskDeleteReasonLike=<string>&taskAssignee=<string>&taskAssigneeLike=<string>&taskOwner=<string>&taskOwnerLike=<string>&taskPriority=<integer>&assigned=<boolean>&unassigned=<boolean>&finished=<boolean>&unfinished=<boolean>&processFinished=<boolean>&processUnfinished=<boolean>&taskDueDate=<dateTime>&taskDueDateBefore=<dateTime>&taskDueDateAfter=<dateTime>&withoutTaskDueDate=<boolean>&taskFollowUpDate=<dateTime>&taskFollowUpDateBefore=<dateTime>&taskFollowUpDateAfter=<dateTime>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&tenantIdIn=<string>&withoutTenantId=<boolean>&taskVariables=<string>&processVariables=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>&taskInvolvedUser=<string>&taskInvolvedGroup=<string>&taskHadCandidateUser=<string>&taskHadCandidateGroup=<string>&withCandidateGroups=<boolean>&withoutCandidateGroups=<boolean>&sortBy=owner&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"task"
											],
											"query": [
												{
													"key": "taskId",
													"value": "<string>",
													"description": "Filter by task id."
												},
												{
													"key": "taskParentTaskId",
													"value": "<string>",
													"description": "Filter by parent task id."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by process instance id."
												},
												{
													"key": "processInstanceBusinessKey",
													"value": "<string>",
													"description": "Filter by process instance business key."
												},
												{
													"key": "processInstanceBusinessKeyIn",
													"value": "<string>",
													"description": "Filter by process instances with one of the give business keys.\nThe keys need to be in a comma-separated list."
												},
												{
													"key": "processInstanceBusinessKeyLike",
													"value": "<string>",
													"description": "Filter by  process instance business key that has the parameter value as a substring."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Filter by the id of the execution that executed the task."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by process definition id."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a process definition with the given key."
												},
												{
													"key": "processDefinitionName",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a process definition with the given name."
												},
												{
													"key": "caseInstanceId",
													"value": "<string>",
													"description": "Filter by case instance id."
												},
												{
													"key": "caseExecutionId",
													"value": "<string>",
													"description": "Filter by the id of the case execution that executed the task."
												},
												{
													"key": "caseDefinitionId",
													"value": "<string>",
													"description": "Filter by case definition id."
												},
												{
													"key": "caseDefinitionKey",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a case definition with the given key."
												},
												{
													"key": "caseDefinitionName",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a case definition with the given name."
												},
												{
													"key": "activityInstanceIdIn",
													"value": "<string>",
													"description": "Only include tasks which belong to one of the passed comma-separated activity instance ids."
												},
												{
													"key": "taskName",
													"value": "<string>",
													"description": "Restrict to tasks that have the given name."
												},
												{
													"key": "taskNameLike",
													"value": "<string>",
													"description": "Restrict to tasks that have a name with the given parameter value as substring."
												},
												{
													"key": "taskDescription",
													"value": "<string>",
													"description": "Restrict to tasks that have the given description."
												},
												{
													"key": "taskDescriptionLike",
													"value": "<string>",
													"description": "Restrict to tasks that have a description that has the parameter value as a substring."
												},
												{
													"key": "taskDefinitionKey",
													"value": "<string>",
													"description": "Restrict to tasks that have the given key."
												},
												{
													"key": "taskDefinitionKeyIn",
													"value": "<string>",
													"description": "Restrict to tasks that have one of the passed comma-separated task definition keys."
												},
												{
													"key": "taskDeleteReason",
													"value": "<string>",
													"description": "Restrict to tasks that have the given delete reason."
												},
												{
													"key": "taskDeleteReasonLike",
													"value": "<string>",
													"description": "Restrict to tasks that have a delete reason that has the parameter value as a substring."
												},
												{
													"key": "taskAssignee",
													"value": "<string>",
													"description": "Restrict to tasks that the given user is assigned to."
												},
												{
													"key": "taskAssigneeLike",
													"value": "<string>",
													"description": "Restrict to tasks that are assigned to users with the parameter value as a substring."
												},
												{
													"key": "taskOwner",
													"value": "<string>",
													"description": "Restrict to tasks that the given user owns."
												},
												{
													"key": "taskOwnerLike",
													"value": "<string>",
													"description": "Restrict to tasks that are owned by users with the parameter value as a substring."
												},
												{
													"key": "taskPriority",
													"value": "<integer>",
													"description": "Restrict to tasks that have the given priority."
												},
												{
													"key": "assigned",
													"value": "<boolean>",
													"description": "If set to `true`, restricts the query to all tasks that are assigned."
												},
												{
													"key": "unassigned",
													"value": "<boolean>",
													"description": "If set to `true`, restricts the query to all tasks that are unassigned."
												},
												{
													"key": "finished",
													"value": "<boolean>",
													"description": "Only include finished tasks. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "unfinished",
													"value": "<boolean>",
													"description": "Only include unfinished tasks. Value may only be `true`, as `false` is the default\nbehavior."
												},
												{
													"key": "processFinished",
													"value": "<boolean>",
													"description": "Only include tasks of finished processes. Value may only be `true`, as `false` is the\ndefault behavior."
												},
												{
													"key": "processUnfinished",
													"value": "<boolean>",
													"description": "Only include tasks of unfinished processes. Value may only be `true`, as `false` is the\ndefault behavior."
												},
												{
													"key": "taskDueDate",
													"value": "<dateTime>",
													"description": "Restrict to tasks that are due on the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "taskDueDateBefore",
													"value": "<dateTime>",
													"description": "Restrict to tasks that are due before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "taskDueDateAfter",
													"value": "<dateTime>",
													"description": "Restrict to tasks that are due after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "withoutTaskDueDate",
													"value": "<boolean>",
													"description": "Only include tasks which have no due date. Value may only be `true`, as `false` is the\ndefault behavior."
												},
												{
													"key": "taskFollowUpDate",
													"value": "<dateTime>",
													"description": "Restrict to tasks that have a followUp date on the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "taskFollowUpDateBefore",
													"value": "<dateTime>",
													"description": "Restrict to tasks that have a followUp date before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "taskFollowUpDateAfter",
													"value": "<dateTime>",
													"description": "Restrict to tasks that have a followUp date after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "startedBefore",
													"value": "<dateTime>",
													"description": "Restrict to tasks that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "startedAfter",
													"value": "<dateTime>",
													"description": "Restrict to tasks that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "finishedBefore",
													"value": "<dateTime>",
													"description": "Restrict to tasks that were finished before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "finishedAfter",
													"value": "<dateTime>",
													"description": "Restrict to tasks that were finished after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids. A task instance must have one of the given\ntenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic task instances that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
												},
												{
													"key": "taskVariables",
													"value": "<string>",
													"description": "Only include tasks that have variables with certain values. Variable filtering expressions are\ncomma-separated and are structured as follows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n**Note:** Values are always treated as `String` objects on server side.\n\n\nValid operator values are:\n* `eq` - equal to;\n* `neq` - not equal to;\n* `gt` - greater than;\n* `gteq` - greater than or equal to;\n* `lt` - lower than;\n* `lteq` - lower than or equal to;\n* `like`.\n\n`key` and `value` may not contain underscore or comma characters."
												},
												{
													"key": "processVariables",
													"value": "<string>",
													"description": "Only include tasks that belong to process instances that have variables with certain\nvalues. Variable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n**Note:** Values are always treated as `String` objects on server side.\n\n\nValid operator values are:\n* `eq` - equal to;\n* `neq` - not equal to;\n* `gt` - greater than;\n* `gteq` - greater than or equal to;\n* `lt` - lower than;\n* `lteq` - lower than or equal to;\n* `like`;\n* `notLike`.\n\n`key` and `value` may not contain underscore or comma characters."
												},
												{
													"key": "variableNamesIgnoreCase",
													"value": "<boolean>",
													"description": "Match the variable name provided in `taskVariables` and `processVariables` case-\ninsensitively. If set to `true` **variableName** and **variablename** are\ntreated as equal."
												},
												{
													"key": "variableValuesIgnoreCase",
													"value": "<boolean>",
													"description": "Match the variable value provided in `taskVariables` and `processVariables` case-\ninsensitively. If set to `true` **variableValue** and **variablevalue** are\ntreated as equal."
												},
												{
													"key": "taskInvolvedUser",
													"value": "<string>",
													"description": "Restrict to tasks with a historic identity link to the given user."
												},
												{
													"key": "taskInvolvedGroup",
													"value": "<string>",
													"description": "Restrict to tasks with a historic identity link to the given group."
												},
												{
													"key": "taskHadCandidateUser",
													"value": "<string>",
													"description": "Restrict to tasks with a historic identity link to the given candidate user."
												},
												{
													"key": "taskHadCandidateGroup",
													"value": "<string>",
													"description": "Restrict to tasks with a historic identity link to the given candidate group."
												},
												{
													"key": "withCandidateGroups",
													"value": "<boolean>",
													"description": "Only include tasks which have a candidate group. Value may only be `true`,\nas `false` is the default behavior."
												},
												{
													"key": "withoutCandidateGroups",
													"value": "<boolean>",
													"description": "Only include tasks which have no candidate group. Value may only be `true`,\nas `false` is the default behavior."
												},
												{
													"key": "sortBy",
													"value": "owner",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"caseDefinitionKey\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"caseExecutionId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"deleteReason\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"assignee\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"endTime\": \"<dateTime>\",\n    \"duration\": \"<long>\",\n    \"taskDefinitionKey\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"due\": \"<dateTime>\",\n    \"parentTaskId\": \"<string>\",\n    \"followUp\": \"<dateTime>\",\n    \"tenantId\": \"<string>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"caseDefinitionKey\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"caseExecutionId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"deleteReason\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"assignee\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"endTime\": \"<dateTime>\",\n    \"duration\": \"<long>\",\n    \"taskDefinitionKey\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"due\": \"<dateTime>\",\n    \"parentTaskId\": \"<string>\",\n    \"followUp\": \"<dateTime>\",\n    \"tenantId\": \"<string>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/task?taskId=<string>&taskParentTaskId=<string>&processInstanceId=<string>&processInstanceBusinessKey=<string>&processInstanceBusinessKeyIn=<string>&processInstanceBusinessKeyLike=<string>&executionId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionName=<string>&caseInstanceId=<string>&caseExecutionId=<string>&caseDefinitionId=<string>&caseDefinitionKey=<string>&caseDefinitionName=<string>&activityInstanceIdIn=<string>&taskName=<string>&taskNameLike=<string>&taskDescription=<string>&taskDescriptionLike=<string>&taskDefinitionKey=<string>&taskDefinitionKeyIn=<string>&taskDeleteReason=<string>&taskDeleteReasonLike=<string>&taskAssignee=<string>&taskAssigneeLike=<string>&taskOwner=<string>&taskOwnerLike=<string>&taskPriority=<integer>&assigned=<boolean>&unassigned=<boolean>&finished=<boolean>&unfinished=<boolean>&processFinished=<boolean>&processUnfinished=<boolean>&taskDueDate=<dateTime>&taskDueDateBefore=<dateTime>&taskDueDateAfter=<dateTime>&withoutTaskDueDate=<boolean>&taskFollowUpDate=<dateTime>&taskFollowUpDateBefore=<dateTime>&taskFollowUpDateAfter=<dateTime>&startedBefore=<dateTime>&startedAfter=<dateTime>&finishedBefore=<dateTime>&finishedAfter=<dateTime>&tenantIdIn=<string>&withoutTenantId=<boolean>&taskVariables=<string>&processVariables=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>&taskInvolvedUser=<string>&taskInvolvedGroup=<string>&taskHadCandidateUser=<string>&taskHadCandidateGroup=<string>&withCandidateGroups=<boolean>&withoutCandidateGroups=<boolean>&sortBy=owner&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"task"
											],
											"query": [
												{
													"key": "taskId",
													"value": "<string>",
													"description": "Filter by task id."
												},
												{
													"key": "taskParentTaskId",
													"value": "<string>",
													"description": "Filter by parent task id."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by process instance id."
												},
												{
													"key": "processInstanceBusinessKey",
													"value": "<string>",
													"description": "Filter by process instance business key."
												},
												{
													"key": "processInstanceBusinessKeyIn",
													"value": "<string>",
													"description": "Filter by process instances with one of the give business keys.\nThe keys need to be in a comma-separated list."
												},
												{
													"key": "processInstanceBusinessKeyLike",
													"value": "<string>",
													"description": "Filter by  process instance business key that has the parameter value as a substring."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Filter by the id of the execution that executed the task."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by process definition id."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a process definition with the given key."
												},
												{
													"key": "processDefinitionName",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a process definition with the given name."
												},
												{
													"key": "caseInstanceId",
													"value": "<string>",
													"description": "Filter by case instance id."
												},
												{
													"key": "caseExecutionId",
													"value": "<string>",
													"description": "Filter by the id of the case execution that executed the task."
												},
												{
													"key": "caseDefinitionId",
													"value": "<string>",
													"description": "Filter by case definition id."
												},
												{
													"key": "caseDefinitionKey",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a case definition with the given key."
												},
												{
													"key": "caseDefinitionName",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a case definition with the given name."
												},
												{
													"key": "activityInstanceIdIn",
													"value": "<string>",
													"description": "Only include tasks which belong to one of the passed comma-separated activity instance ids."
												},
												{
													"key": "taskName",
													"value": "<string>",
													"description": "Restrict to tasks that have the given name."
												},
												{
													"key": "taskNameLike",
													"value": "<string>",
													"description": "Restrict to tasks that have a name with the given parameter value as substring."
												},
												{
													"key": "taskDescription",
													"value": "<string>",
													"description": "Restrict to tasks that have the given description."
												},
												{
													"key": "taskDescriptionLike",
													"value": "<string>",
													"description": "Restrict to tasks that have a description that has the parameter value as a substring."
												},
												{
													"key": "taskDefinitionKey",
													"value": "<string>",
													"description": "Restrict to tasks that have the given key."
												},
												{
													"key": "taskDefinitionKeyIn",
													"value": "<string>",
													"description": "Restrict to tasks that have one of the passed comma-separated task definition keys."
												},
												{
													"key": "taskDeleteReason",
													"value": "<string>",
													"description": "Restrict to tasks that have the given delete reason."
												},
												{
													"key": "taskDeleteReasonLike",
													"value": "<string>",
													"description": "Restrict to tasks that have a delete reason that has the parameter value as a substring."
												},
												{
													"key": "taskAssignee",
													"value": "<string>",
													"description": "Restrict to tasks that the given user is assigned to."
												},
												{
													"key": "taskAssigneeLike",
													"value": "<string>",
													"description": "Restrict to tasks that are assigned to users with the parameter value as a substring."
												},
												{
													"key": "taskOwner",
													"value": "<string>",
													"description": "Restrict to tasks that the given user owns."
												},
												{
													"key": "taskOwnerLike",
													"value": "<string>",
													"description": "Restrict to tasks that are owned by users with the parameter value as a substring."
												},
												{
													"key": "taskPriority",
													"value": "<integer>",
													"description": "Restrict to tasks that have the given priority."
												},
												{
													"key": "assigned",
													"value": "<boolean>",
													"description": "If set to `true`, restricts the query to all tasks that are assigned."
												},
												{
													"key": "unassigned",
													"value": "<boolean>",
													"description": "If set to `true`, restricts the query to all tasks that are unassigned."
												},
												{
													"key": "finished",
													"value": "<boolean>",
													"description": "Only include finished tasks. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "unfinished",
													"value": "<boolean>",
													"description": "Only include unfinished tasks. Value may only be `true`, as `false` is the default\nbehavior."
												},
												{
													"key": "processFinished",
													"value": "<boolean>",
													"description": "Only include tasks of finished processes. Value may only be `true`, as `false` is the\ndefault behavior."
												},
												{
													"key": "processUnfinished",
													"value": "<boolean>",
													"description": "Only include tasks of unfinished processes. Value may only be `true`, as `false` is the\ndefault behavior."
												},
												{
													"key": "taskDueDate",
													"value": "<dateTime>",
													"description": "Restrict to tasks that are due on the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "taskDueDateBefore",
													"value": "<dateTime>",
													"description": "Restrict to tasks that are due before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "taskDueDateAfter",
													"value": "<dateTime>",
													"description": "Restrict to tasks that are due after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "withoutTaskDueDate",
													"value": "<boolean>",
													"description": "Only include tasks which have no due date. Value may only be `true`, as `false` is the\ndefault behavior."
												},
												{
													"key": "taskFollowUpDate",
													"value": "<dateTime>",
													"description": "Restrict to tasks that have a followUp date on the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "taskFollowUpDateBefore",
													"value": "<dateTime>",
													"description": "Restrict to tasks that have a followUp date before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "taskFollowUpDateAfter",
													"value": "<dateTime>",
													"description": "Restrict to tasks that have a followUp date after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "startedBefore",
													"value": "<dateTime>",
													"description": "Restrict to tasks that were started before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "startedAfter",
													"value": "<dateTime>",
													"description": "Restrict to tasks that were started after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "finishedBefore",
													"value": "<dateTime>",
													"description": "Restrict to tasks that were finished before the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "finishedAfter",
													"value": "<dateTime>",
													"description": "Restrict to tasks that were finished after the given date. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/),\nthe date must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids. A task instance must have one of the given\ntenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic task instances that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
												},
												{
													"key": "taskVariables",
													"value": "<string>",
													"description": "Only include tasks that have variables with certain values. Variable filtering expressions are\ncomma-separated and are structured as follows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n**Note:** Values are always treated as `String` objects on server side.\n\n\nValid operator values are:\n* `eq` - equal to;\n* `neq` - not equal to;\n* `gt` - greater than;\n* `gteq` - greater than or equal to;\n* `lt` - lower than;\n* `lteq` - lower than or equal to;\n* `like`.\n\n`key` and `value` may not contain underscore or comma characters."
												},
												{
													"key": "processVariables",
													"value": "<string>",
													"description": "Only include tasks that belong to process instances that have variables with certain\nvalues. Variable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n**Note:** Values are always treated as `String` objects on server side.\n\n\nValid operator values are:\n* `eq` - equal to;\n* `neq` - not equal to;\n* `gt` - greater than;\n* `gteq` - greater than or equal to;\n* `lt` - lower than;\n* `lteq` - lower than or equal to;\n* `like`;\n* `notLike`.\n\n`key` and `value` may not contain underscore or comma characters."
												},
												{
													"key": "variableNamesIgnoreCase",
													"value": "<boolean>",
													"description": "Match the variable name provided in `taskVariables` and `processVariables` case-\ninsensitively. If set to `true` **variableName** and **variablename** are\ntreated as equal."
												},
												{
													"key": "variableValuesIgnoreCase",
													"value": "<boolean>",
													"description": "Match the variable value provided in `taskVariables` and `processVariables` case-\ninsensitively. If set to `true` **variableValue** and **variablevalue** are\ntreated as equal."
												},
												{
													"key": "taskInvolvedUser",
													"value": "<string>",
													"description": "Restrict to tasks with a historic identity link to the given user."
												},
												{
													"key": "taskInvolvedGroup",
													"value": "<string>",
													"description": "Restrict to tasks with a historic identity link to the given group."
												},
												{
													"key": "taskHadCandidateUser",
													"value": "<string>",
													"description": "Restrict to tasks with a historic identity link to the given candidate user."
												},
												{
													"key": "taskHadCandidateGroup",
													"value": "<string>",
													"description": "Restrict to tasks with a historic identity link to the given candidate group."
												},
												{
													"key": "withCandidateGroups",
													"value": "<boolean>",
													"description": "Only include tasks which have a candidate group. Value may only be `true`,\nas `false` is the default behavior."
												},
												{
													"key": "withoutCandidateGroups",
													"value": "<boolean>",
													"description": "Only include tasks which have no candidate group. Value may only be `true`,\nas `false` is the default behavior."
												},
												{
													"key": "sortBy",
													"value": "owner",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get Tasks (Historic) (POST)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"taskId\": \"<string>\",\n  \"taskParentTaskId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceBusinessKey\": \"<string>\",\n  \"processInstanceBusinessKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKeyLike\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionName\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"caseDefinitionId\": \"<string>\",\n  \"caseDefinitionKey\": \"<string>\",\n  \"caseDefinitionName\": \"<string>\",\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskName\": \"<string>\",\n  \"taskNameLike\": \"<string>\",\n  \"taskDescription\": \"<string>\",\n  \"taskDescriptionLike\": \"<string>\",\n  \"taskDefinitionKey\": \"<string>\",\n  \"taskDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskDeleteReason\": \"<string>\",\n  \"taskDeleteReasonLike\": \"<string>\",\n  \"taskAssignee\": \"<string>\",\n  \"taskAssigneeLike\": \"<string>\",\n  \"taskOwner\": \"<string>\",\n  \"taskOwnerLike\": \"<string>\",\n  \"taskPriority\": \"<integer>\",\n  \"assigned\": \"<boolean>\",\n  \"unassigned\": \"<boolean>\",\n  \"finished\": \"<boolean>\",\n  \"unfinished\": \"<boolean>\",\n  \"processFinished\": \"<boolean>\",\n  \"processUnfinished\": \"<boolean>\",\n  \"taskDueDate\": \"<dateTime>\",\n  \"taskDueDateBefore\": \"<dateTime>\",\n  \"taskDueDateAfter\": \"<dateTime>\",\n  \"withoutTaskDueDate\": \"<boolean>\",\n  \"taskFollowUpDate\": \"<dateTime>\",\n  \"taskFollowUpDateBefore\": \"<dateTime>\",\n  \"taskFollowUpDateAfter\": \"<dateTime>\",\n  \"startedBefore\": \"<dateTime>\",\n  \"startedAfter\": \"<dateTime>\",\n  \"finishedBefore\": \"<dateTime>\",\n  \"finishedAfter\": \"<dateTime>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"taskVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"processVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gt\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"like\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"taskInvolvedUser\": \"<string>\",\n  \"taskInvolvedGroup\": \"<string>\",\n  \"taskHadCandidateUser\": \"<string>\",\n  \"taskHadCandidateGroup\": \"<string>\",\n  \"withCandidateGroups\": \"<boolean>\",\n  \"withoutCandidateGroups\": \"<boolean>\",\n  \"orQueries\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/HistoricTaskInstanceQueryDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/HistoricTaskInstanceQueryDto detected>\"\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"priority\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"startTime\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/history/task?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"history",
										"task"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								},
								"description": "Queries for historic tasks that fulfill the given parameters. This method is slightly more powerful\nthan the [Get Tasks (Historic)](https://docs.camunda.org/manual/7.21/reference/rest/history/task/get-task-query/) method because\nit allows filtering by multiple process or task variables of types `String`, `Number` or `Boolean`.\nThe size of the result set can be retrieved by using the\n[Get Task Count (POST)](https://docs.camunda.org/manual/7.21/reference/rest/history/task/post-task-query-count/)\nmethod."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"taskId\": \"<string>\",\n  \"taskParentTaskId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceBusinessKey\": \"<string>\",\n  \"processInstanceBusinessKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKeyLike\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionName\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"caseDefinitionId\": \"<string>\",\n  \"caseDefinitionKey\": \"<string>\",\n  \"caseDefinitionName\": \"<string>\",\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskName\": \"<string>\",\n  \"taskNameLike\": \"<string>\",\n  \"taskDescription\": \"<string>\",\n  \"taskDescriptionLike\": \"<string>\",\n  \"taskDefinitionKey\": \"<string>\",\n  \"taskDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskDeleteReason\": \"<string>\",\n  \"taskDeleteReasonLike\": \"<string>\",\n  \"taskAssignee\": \"<string>\",\n  \"taskAssigneeLike\": \"<string>\",\n  \"taskOwner\": \"<string>\",\n  \"taskOwnerLike\": \"<string>\",\n  \"taskPriority\": \"<integer>\",\n  \"assigned\": \"<boolean>\",\n  \"unassigned\": \"<boolean>\",\n  \"finished\": \"<boolean>\",\n  \"unfinished\": \"<boolean>\",\n  \"processFinished\": \"<boolean>\",\n  \"processUnfinished\": \"<boolean>\",\n  \"taskDueDate\": \"<dateTime>\",\n  \"taskDueDateBefore\": \"<dateTime>\",\n  \"taskDueDateAfter\": \"<dateTime>\",\n  \"withoutTaskDueDate\": \"<boolean>\",\n  \"taskFollowUpDate\": \"<dateTime>\",\n  \"taskFollowUpDateBefore\": \"<dateTime>\",\n  \"taskFollowUpDateAfter\": \"<dateTime>\",\n  \"startedBefore\": \"<dateTime>\",\n  \"startedAfter\": \"<dateTime>\",\n  \"finishedBefore\": \"<dateTime>\",\n  \"finishedAfter\": \"<dateTime>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"taskVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"processVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gt\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"like\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"taskInvolvedUser\": \"<string>\",\n  \"taskInvolvedGroup\": \"<string>\",\n  \"taskHadCandidateUser\": \"<string>\",\n  \"taskHadCandidateGroup\": \"<string>\",\n  \"withCandidateGroups\": \"<boolean>\",\n  \"withoutCandidateGroups\": \"<boolean>\",\n  \"orQueries\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/HistoricTaskInstanceQueryDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/HistoricTaskInstanceQueryDto detected>\"\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"priority\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"startTime\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/task?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"task"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"caseDefinitionKey\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"caseExecutionId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"deleteReason\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"assignee\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"endTime\": \"<dateTime>\",\n    \"duration\": \"<long>\",\n    \"taskDefinitionKey\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"due\": \"<dateTime>\",\n    \"parentTaskId\": \"<string>\",\n    \"followUp\": \"<dateTime>\",\n    \"tenantId\": \"<string>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"caseDefinitionKey\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"caseExecutionId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"deleteReason\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"assignee\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"endTime\": \"<dateTime>\",\n    \"duration\": \"<long>\",\n    \"taskDefinitionKey\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"due\": \"<dateTime>\",\n    \"parentTaskId\": \"<string>\",\n    \"followUp\": \"<dateTime>\",\n    \"tenantId\": \"<string>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"taskId\": \"<string>\",\n  \"taskParentTaskId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceBusinessKey\": \"<string>\",\n  \"processInstanceBusinessKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKeyLike\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionName\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"caseDefinitionId\": \"<string>\",\n  \"caseDefinitionKey\": \"<string>\",\n  \"caseDefinitionName\": \"<string>\",\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskName\": \"<string>\",\n  \"taskNameLike\": \"<string>\",\n  \"taskDescription\": \"<string>\",\n  \"taskDescriptionLike\": \"<string>\",\n  \"taskDefinitionKey\": \"<string>\",\n  \"taskDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskDeleteReason\": \"<string>\",\n  \"taskDeleteReasonLike\": \"<string>\",\n  \"taskAssignee\": \"<string>\",\n  \"taskAssigneeLike\": \"<string>\",\n  \"taskOwner\": \"<string>\",\n  \"taskOwnerLike\": \"<string>\",\n  \"taskPriority\": \"<integer>\",\n  \"assigned\": \"<boolean>\",\n  \"unassigned\": \"<boolean>\",\n  \"finished\": \"<boolean>\",\n  \"unfinished\": \"<boolean>\",\n  \"processFinished\": \"<boolean>\",\n  \"processUnfinished\": \"<boolean>\",\n  \"taskDueDate\": \"<dateTime>\",\n  \"taskDueDateBefore\": \"<dateTime>\",\n  \"taskDueDateAfter\": \"<dateTime>\",\n  \"withoutTaskDueDate\": \"<boolean>\",\n  \"taskFollowUpDate\": \"<dateTime>\",\n  \"taskFollowUpDateBefore\": \"<dateTime>\",\n  \"taskFollowUpDateAfter\": \"<dateTime>\",\n  \"startedBefore\": \"<dateTime>\",\n  \"startedAfter\": \"<dateTime>\",\n  \"finishedBefore\": \"<dateTime>\",\n  \"finishedAfter\": \"<dateTime>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"taskVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"processVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gt\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"like\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"taskInvolvedUser\": \"<string>\",\n  \"taskInvolvedGroup\": \"<string>\",\n  \"taskHadCandidateUser\": \"<string>\",\n  \"taskHadCandidateGroup\": \"<string>\",\n  \"withCandidateGroups\": \"<boolean>\",\n  \"withoutCandidateGroups\": \"<boolean>\",\n  \"orQueries\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/HistoricTaskInstanceQueryDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/HistoricTaskInstanceQueryDto detected>\"\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"priority\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"startTime\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/task?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"task"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "user-operation",
					"item": [
						{
							"name": "count",
							"item": [
								{
									"name": "Get User Operation Log Count",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/user-operation/count?deploymentId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processInstanceId=<string>&executionId=<string>&caseDefinitionId=<string>&caseInstanceId=<string>&caseExecutionId=<string>&taskId=<string>&externalTaskId=<string>&batchId=<string>&jobId=<string>&jobDefinitionId=<string>&userId=<string>&operationId=<string>&operationType=<string>&entityType=<string>&entityTypeIn=<string>&category=<string>&categoryIn=<string>&property=<string>&afterTimestamp=<dateTime>&beforeTimestamp=<dateTime>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"user-operation",
												"count"
											],
											"query": [
												{
													"key": "deploymentId",
													"value": "<string>",
													"description": "Filter by deployment id."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by process definition id."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Filter by process definition key."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by process instance id."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Filter by execution id."
												},
												{
													"key": "caseDefinitionId",
													"value": "<string>",
													"description": "Filter by case definition id."
												},
												{
													"key": "caseInstanceId",
													"value": "<string>",
													"description": "Filter by case instance id."
												},
												{
													"key": "caseExecutionId",
													"value": "<string>",
													"description": "Filter by case execution id."
												},
												{
													"key": "taskId",
													"value": "<string>",
													"description": "Only include operations on this task."
												},
												{
													"key": "externalTaskId",
													"value": "<string>",
													"description": "Only include operations on this external task."
												},
												{
													"key": "batchId",
													"value": "<string>",
													"description": "Only include operations on this batch."
												},
												{
													"key": "jobId",
													"value": "<string>",
													"description": "Filter by job id."
												},
												{
													"key": "jobDefinitionId",
													"value": "<string>",
													"description": "Filter by job definition id."
												},
												{
													"key": "userId",
													"value": "<string>",
													"description": "Only include operations of this user."
												},
												{
													"key": "operationId",
													"value": "<string>",
													"description": "Filter by the id of the operation. This allows fetching of multiple entries which are part\nof a composite operation."
												},
												{
													"key": "operationType",
													"value": "<string>",
													"description": "Filter by the type of the operation like `Claim` or `Delegate`. See the\n[Javadoc](https://docs.camunda.org/manual/7.21/reference/javadoc/?org/camunda/bpm/engine/history/UserOperationLogEntry.html)\nfor a list of available operation types."
												},
												{
													"key": "entityType",
													"value": "<string>",
													"description": "Filter by the type of the entity that was affected by this operation, possible values are\n`Task`, `Attachment` or `IdentityLink`."
												},
												{
													"key": "entityTypeIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of types of the entities that was affected by this operation,\npossible values are `Task`, `Attachment` or `IdentityLink`."
												},
												{
													"key": "category",
													"value": "<string>",
													"description": "Filter by the category that this operation is associated with, possible values are\n`TaskWorker`, `Admin` or `Operator`."
												},
												{
													"key": "categoryIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of categories that this operation is associated with, possible values are\n`TaskWorker`, `Admin` or `Operator`."
												},
												{
													"key": "property",
													"value": "<string>",
													"description": "Only include operations that changed this property, e.g., `owner` or `assignee`."
												},
												{
													"key": "afterTimestamp",
													"value": "<dateTime>",
													"description": "Restrict to entries that were created after the given timestamp. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the\ntimestamp must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., 2013-01-23T14:42:45.000+0200."
												},
												{
													"key": "beforeTimestamp",
													"value": "<dateTime>",
													"description": "Restrict to entries that were created before the given timestamp. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the\ntimestamp must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., 2013-01-23T14:42:45.000+0200."
												}
											]
										},
										"description": "Queries for the number of user operation log entries that fulfill the given parameters.\nTakes the same parameters as the\n[Get User Operation Log (Historic)](https://docs.camunda.org/manual/7.21/reference/rest/history/user-operation-log/get-user-operation-log-query/)\nmethod."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/user-operation/count?deploymentId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processInstanceId=<string>&executionId=<string>&caseDefinitionId=<string>&caseInstanceId=<string>&caseExecutionId=<string>&taskId=<string>&externalTaskId=<string>&batchId=<string>&jobId=<string>&jobDefinitionId=<string>&userId=<string>&operationId=<string>&operationType=<string>&entityType=<string>&entityTypeIn=<string>&category=<string>&categoryIn=<string>&property=<string>&afterTimestamp=<dateTime>&beforeTimestamp=<dateTime>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"user-operation",
														"count"
													],
													"query": [
														{
															"key": "deploymentId",
															"value": "<string>",
															"description": "Filter by deployment id."
														},
														{
															"key": "processDefinitionId",
															"value": "<string>",
															"description": "Filter by process definition id."
														},
														{
															"key": "processDefinitionKey",
															"value": "<string>",
															"description": "Filter by process definition key."
														},
														{
															"key": "processInstanceId",
															"value": "<string>",
															"description": "Filter by process instance id."
														},
														{
															"key": "executionId",
															"value": "<string>",
															"description": "Filter by execution id."
														},
														{
															"key": "caseDefinitionId",
															"value": "<string>",
															"description": "Filter by case definition id."
														},
														{
															"key": "caseInstanceId",
															"value": "<string>",
															"description": "Filter by case instance id."
														},
														{
															"key": "caseExecutionId",
															"value": "<string>",
															"description": "Filter by case execution id."
														},
														{
															"key": "taskId",
															"value": "<string>",
															"description": "Only include operations on this task."
														},
														{
															"key": "externalTaskId",
															"value": "<string>",
															"description": "Only include operations on this external task."
														},
														{
															"key": "batchId",
															"value": "<string>",
															"description": "Only include operations on this batch."
														},
														{
															"key": "jobId",
															"value": "<string>",
															"description": "Filter by job id."
														},
														{
															"key": "jobDefinitionId",
															"value": "<string>",
															"description": "Filter by job definition id."
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "Only include operations of this user."
														},
														{
															"key": "operationId",
															"value": "<string>",
															"description": "Filter by the id of the operation. This allows fetching of multiple entries which are part\nof a composite operation."
														},
														{
															"key": "operationType",
															"value": "<string>",
															"description": "Filter by the type of the operation like `Claim` or `Delegate`. See the\n[Javadoc](https://docs.camunda.org/manual/7.21/reference/javadoc/?org/camunda/bpm/engine/history/UserOperationLogEntry.html)\nfor a list of available operation types."
														},
														{
															"key": "entityType",
															"value": "<string>",
															"description": "Filter by the type of the entity that was affected by this operation, possible values are\n`Task`, `Attachment` or `IdentityLink`."
														},
														{
															"key": "entityTypeIn",
															"value": "<string>",
															"description": "Filter by a comma-separated list of types of the entities that was affected by this operation,\npossible values are `Task`, `Attachment` or `IdentityLink`."
														},
														{
															"key": "category",
															"value": "<string>",
															"description": "Filter by the category that this operation is associated with, possible values are\n`TaskWorker`, `Admin` or `Operator`."
														},
														{
															"key": "categoryIn",
															"value": "<string>",
															"description": "Filter by a comma-separated list of categories that this operation is associated with, possible values are\n`TaskWorker`, `Admin` or `Operator`."
														},
														{
															"key": "property",
															"value": "<string>",
															"description": "Only include operations that changed this property, e.g., `owner` or `assignee`."
														},
														{
															"key": "afterTimestamp",
															"value": "<dateTime>",
															"description": "Restrict to entries that were created after the given timestamp. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the\ntimestamp must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., 2013-01-23T14:42:45.000+0200."
														},
														{
															"key": "beforeTimestamp",
															"value": "<dateTime>",
															"description": "Restrict to entries that were created before the given timestamp. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the\ntimestamp must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., 2013-01-23T14:42:45.000+0200."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<long>\"\n}"
										},
										{
											"name": "Returned if some of the query parameters are invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/user-operation/count?deploymentId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processInstanceId=<string>&executionId=<string>&caseDefinitionId=<string>&caseInstanceId=<string>&caseExecutionId=<string>&taskId=<string>&externalTaskId=<string>&batchId=<string>&jobId=<string>&jobDefinitionId=<string>&userId=<string>&operationId=<string>&operationType=<string>&entityType=<string>&entityTypeIn=<string>&category=<string>&categoryIn=<string>&property=<string>&afterTimestamp=<dateTime>&beforeTimestamp=<dateTime>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"user-operation",
														"count"
													],
													"query": [
														{
															"key": "deploymentId",
															"value": "<string>",
															"description": "Filter by deployment id."
														},
														{
															"key": "processDefinitionId",
															"value": "<string>",
															"description": "Filter by process definition id."
														},
														{
															"key": "processDefinitionKey",
															"value": "<string>",
															"description": "Filter by process definition key."
														},
														{
															"key": "processInstanceId",
															"value": "<string>",
															"description": "Filter by process instance id."
														},
														{
															"key": "executionId",
															"value": "<string>",
															"description": "Filter by execution id."
														},
														{
															"key": "caseDefinitionId",
															"value": "<string>",
															"description": "Filter by case definition id."
														},
														{
															"key": "caseInstanceId",
															"value": "<string>",
															"description": "Filter by case instance id."
														},
														{
															"key": "caseExecutionId",
															"value": "<string>",
															"description": "Filter by case execution id."
														},
														{
															"key": "taskId",
															"value": "<string>",
															"description": "Only include operations on this task."
														},
														{
															"key": "externalTaskId",
															"value": "<string>",
															"description": "Only include operations on this external task."
														},
														{
															"key": "batchId",
															"value": "<string>",
															"description": "Only include operations on this batch."
														},
														{
															"key": "jobId",
															"value": "<string>",
															"description": "Filter by job id."
														},
														{
															"key": "jobDefinitionId",
															"value": "<string>",
															"description": "Filter by job definition id."
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "Only include operations of this user."
														},
														{
															"key": "operationId",
															"value": "<string>",
															"description": "Filter by the id of the operation. This allows fetching of multiple entries which are part\nof a composite operation."
														},
														{
															"key": "operationType",
															"value": "<string>",
															"description": "Filter by the type of the operation like `Claim` or `Delegate`. See the\n[Javadoc](https://docs.camunda.org/manual/7.21/reference/javadoc/?org/camunda/bpm/engine/history/UserOperationLogEntry.html)\nfor a list of available operation types."
														},
														{
															"key": "entityType",
															"value": "<string>",
															"description": "Filter by the type of the entity that was affected by this operation, possible values are\n`Task`, `Attachment` or `IdentityLink`."
														},
														{
															"key": "entityTypeIn",
															"value": "<string>",
															"description": "Filter by a comma-separated list of types of the entities that was affected by this operation,\npossible values are `Task`, `Attachment` or `IdentityLink`."
														},
														{
															"key": "category",
															"value": "<string>",
															"description": "Filter by the category that this operation is associated with, possible values are\n`TaskWorker`, `Admin` or `Operator`."
														},
														{
															"key": "categoryIn",
															"value": "<string>",
															"description": "Filter by a comma-separated list of categories that this operation is associated with, possible values are\n`TaskWorker`, `Admin` or `Operator`."
														},
														{
															"key": "property",
															"value": "<string>",
															"description": "Only include operations that changed this property, e.g., `owner` or `assignee`."
														},
														{
															"key": "afterTimestamp",
															"value": "<dateTime>",
															"description": "Restrict to entries that were created after the given timestamp. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the\ntimestamp must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., 2013-01-23T14:42:45.000+0200."
														},
														{
															"key": "beforeTimestamp",
															"value": "<dateTime>",
															"description": "Restrict to entries that were created before the given timestamp. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the\ntimestamp must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., 2013-01-23T14:42:45.000+0200."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{operationId}",
							"item": [
								{
									"name": "clear-annotation",
									"item": [
										{
											"name": "Clear Annotation of an User Operation Log (Historic)",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/user-operation/:operationId/clear-annotation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"user-operation",
														":operationId",
														"clear-annotation"
													],
													"variable": [
														{
															"key": "operationId",
															"value": "<string>",
															"description": "(Required) The operation id of the operation log to be updated."
														}
													]
												},
												"description": "Clear the annotation which was previously set for auditing reasons."
											},
											"response": [
												{
													"name": "Request successful. This method returns no content.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/history/user-operation/:operationId/clear-annotation",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"user-operation",
																":operationId",
																"clear-annotation"
															],
															"variable": [
																{
																	"key": "operationId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if some of the request parameters are invalid, for example if the\n`operationId` path parameter value does not exists. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response form",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/history/user-operation/:operationId/clear-annotation",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"user-operation",
																":operationId",
																"clear-annotation"
															],
															"variable": [
																{
																	"key": "operationId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "set-annotation",
									"item": [
										{
											"name": "Set Annotation to an User Operation Log (Historic)",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"annotation\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/history/user-operation/:operationId/set-annotation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"user-operation",
														":operationId",
														"set-annotation"
													],
													"variable": [
														{
															"key": "operationId",
															"value": "<string>",
															"description": "(Required) The operation id of the operation log to be updated."
														}
													]
												},
												"description": "Set an annotation for auditing reasons."
											},
											"response": [
												{
													"name": "Request successful. This method returns no content.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"annotation\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/history/user-operation/:operationId/set-annotation",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"user-operation",
																":operationId",
																"set-annotation"
															],
															"variable": [
																{
																	"key": "operationId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if some of the request parameters are invalid, for example if the\n`operationId` path parameter value does not exists. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response form",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"annotation\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/history/user-operation/:operationId/set-annotation",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"user-operation",
																":operationId",
																"set-annotation"
															],
															"variable": [
																{
																	"key": "operationId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "Get User Operation Log (Historic)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/history/user-operation?deploymentId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processInstanceId=<string>&executionId=<string>&caseDefinitionId=<string>&caseInstanceId=<string>&caseExecutionId=<string>&taskId=<string>&externalTaskId=<string>&batchId=<string>&jobId=<string>&jobDefinitionId=<string>&userId=<string>&operationId=<string>&operationType=<string>&entityType=<string>&entityTypeIn=<string>&category=<string>&categoryIn=<string>&property=<string>&afterTimestamp=<dateTime>&beforeTimestamp=<dateTime>&sortBy=timestamp&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"history",
										"user-operation"
									],
									"query": [
										{
											"key": "deploymentId",
											"value": "<string>",
											"description": "Filter by deployment id."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Filter by process definition id."
										},
										{
											"key": "processDefinitionKey",
											"value": "<string>",
											"description": "Filter by process definition key."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Filter by process instance id."
										},
										{
											"key": "executionId",
											"value": "<string>",
											"description": "Filter by execution id."
										},
										{
											"key": "caseDefinitionId",
											"value": "<string>",
											"description": "Filter by case definition id."
										},
										{
											"key": "caseInstanceId",
											"value": "<string>",
											"description": "Filter by case instance id."
										},
										{
											"key": "caseExecutionId",
											"value": "<string>",
											"description": "Filter by case execution id."
										},
										{
											"key": "taskId",
											"value": "<string>",
											"description": "Only include operations on this task."
										},
										{
											"key": "externalTaskId",
											"value": "<string>",
											"description": "Only include operations on this external task."
										},
										{
											"key": "batchId",
											"value": "<string>",
											"description": "Only include operations on this batch."
										},
										{
											"key": "jobId",
											"value": "<string>",
											"description": "Filter by job id."
										},
										{
											"key": "jobDefinitionId",
											"value": "<string>",
											"description": "Filter by job definition id."
										},
										{
											"key": "userId",
											"value": "<string>",
											"description": "Only include operations of this user."
										},
										{
											"key": "operationId",
											"value": "<string>",
											"description": "Filter by the id of the operation. This allows fetching of multiple entries which are part\nof a composite operation."
										},
										{
											"key": "operationType",
											"value": "<string>",
											"description": "Filter by the type of the operation like `Claim` or `Delegate`. See the\n[Javadoc](https://docs.camunda.org/manual/7.21/reference/javadoc/?org/camunda/bpm/engine/history/UserOperationLogEntry.html)\nfor a list of available operation types."
										},
										{
											"key": "entityType",
											"value": "<string>",
											"description": "Filter by the type of the entity that was affected by this operation, possible values are\n`Task`, `Attachment` or `IdentityLink`."
										},
										{
											"key": "entityTypeIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of types of the entities that was affected by this operation,\npossible values are `Task`, `Attachment` or `IdentityLink`."
										},
										{
											"key": "category",
											"value": "<string>",
											"description": "Filter by the category that this operation is associated with, possible values are\n`TaskWorker`, `Admin` or `Operator`."
										},
										{
											"key": "categoryIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of categories that this operation is associated with, possible values are\n`TaskWorker`, `Admin` or `Operator`."
										},
										{
											"key": "property",
											"value": "<string>",
											"description": "Only include operations that changed this property, e.g., `owner` or `assignee`."
										},
										{
											"key": "afterTimestamp",
											"value": "<dateTime>",
											"description": "Restrict to entries that were created after the given timestamp. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the\ntimestamp must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., 2013-01-23T14:42:45.000+0200."
										},
										{
											"key": "beforeTimestamp",
											"value": "<dateTime>",
											"description": "Restrict to entries that were created before the given timestamp. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the\ntimestamp must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., 2013-01-23T14:42:45.000+0200."
										},
										{
											"key": "sortBy",
											"value": "timestamp",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								},
								"description": "Queries for user operation log entries that fulfill the given parameters.\nThe size of the result set can be retrieved by using the\n[Get User Operation Log Count](https://docs.camunda.org/manual/7.21/reference/rest/history/user-operation-log/get-user-operation-log-query-count/)\nmethod.\n\nNote that the properties of operation log entries are interpreted as\nrestrictions on the entities they apply to. That means, if a single\nprocess instance is updated, the field `processInstanceId` is\npopulated. If a single operation updates all process instances of the\nsame process definition, the field `processInstanceId` is `null` (a\n`null` restriction is viewed as a wildcard, i.e., matches a process\ninstance with any id) and the field `processDefinitionId` is\npopulated. This way, which entities were changed by a user operation\ncan easily be reconstructed."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/user-operation?deploymentId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processInstanceId=<string>&executionId=<string>&caseDefinitionId=<string>&caseInstanceId=<string>&caseExecutionId=<string>&taskId=<string>&externalTaskId=<string>&batchId=<string>&jobId=<string>&jobDefinitionId=<string>&userId=<string>&operationId=<string>&operationType=<string>&entityType=<string>&entityTypeIn=<string>&category=<string>&categoryIn=<string>&property=<string>&afterTimestamp=<dateTime>&beforeTimestamp=<dateTime>&sortBy=timestamp&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"user-operation"
											],
											"query": [
												{
													"key": "deploymentId",
													"value": "<string>",
													"description": "Filter by deployment id."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by process definition id."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Filter by process definition key."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by process instance id."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Filter by execution id."
												},
												{
													"key": "caseDefinitionId",
													"value": "<string>",
													"description": "Filter by case definition id."
												},
												{
													"key": "caseInstanceId",
													"value": "<string>",
													"description": "Filter by case instance id."
												},
												{
													"key": "caseExecutionId",
													"value": "<string>",
													"description": "Filter by case execution id."
												},
												{
													"key": "taskId",
													"value": "<string>",
													"description": "Only include operations on this task."
												},
												{
													"key": "externalTaskId",
													"value": "<string>",
													"description": "Only include operations on this external task."
												},
												{
													"key": "batchId",
													"value": "<string>",
													"description": "Only include operations on this batch."
												},
												{
													"key": "jobId",
													"value": "<string>",
													"description": "Filter by job id."
												},
												{
													"key": "jobDefinitionId",
													"value": "<string>",
													"description": "Filter by job definition id."
												},
												{
													"key": "userId",
													"value": "<string>",
													"description": "Only include operations of this user."
												},
												{
													"key": "operationId",
													"value": "<string>",
													"description": "Filter by the id of the operation. This allows fetching of multiple entries which are part\nof a composite operation."
												},
												{
													"key": "operationType",
													"value": "<string>",
													"description": "Filter by the type of the operation like `Claim` or `Delegate`. See the\n[Javadoc](https://docs.camunda.org/manual/7.21/reference/javadoc/?org/camunda/bpm/engine/history/UserOperationLogEntry.html)\nfor a list of available operation types."
												},
												{
													"key": "entityType",
													"value": "<string>",
													"description": "Filter by the type of the entity that was affected by this operation, possible values are\n`Task`, `Attachment` or `IdentityLink`."
												},
												{
													"key": "entityTypeIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of types of the entities that was affected by this operation,\npossible values are `Task`, `Attachment` or `IdentityLink`."
												},
												{
													"key": "category",
													"value": "<string>",
													"description": "Filter by the category that this operation is associated with, possible values are\n`TaskWorker`, `Admin` or `Operator`."
												},
												{
													"key": "categoryIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of categories that this operation is associated with, possible values are\n`TaskWorker`, `Admin` or `Operator`."
												},
												{
													"key": "property",
													"value": "<string>",
													"description": "Only include operations that changed this property, e.g., `owner` or `assignee`."
												},
												{
													"key": "afterTimestamp",
													"value": "<dateTime>",
													"description": "Restrict to entries that were created after the given timestamp. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the\ntimestamp must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., 2013-01-23T14:42:45.000+0200."
												},
												{
													"key": "beforeTimestamp",
													"value": "<dateTime>",
													"description": "Restrict to entries that were created before the given timestamp. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the\ntimestamp must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., 2013-01-23T14:42:45.000+0200."
												},
												{
													"key": "sortBy",
													"value": "timestamp",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"timestamp\": \"<dateTime>\",\n    \"operationId\": \"<string>\",\n    \"operationType\": \"<string>\",\n    \"entityType\": \"<string>\",\n    \"category\": \"<string>\",\n    \"annotation\": \"<string>\",\n    \"property\": \"<string>\",\n    \"orgValue\": \"<string>\",\n    \"newValue\": \"<string>\",\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"caseExecutionId\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"externalTaskId\": \"<string>\",\n    \"batchId\": \"<string>\",\n    \"jobId\": \"<string>\",\n    \"jobDefinitionId\": \"<string>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"timestamp\": \"<dateTime>\",\n    \"operationId\": \"<string>\",\n    \"operationType\": \"<string>\",\n    \"entityType\": \"<string>\",\n    \"category\": \"<string>\",\n    \"annotation\": \"<string>\",\n    \"property\": \"<string>\",\n    \"orgValue\": \"<string>\",\n    \"newValue\": \"<string>\",\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"caseExecutionId\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"externalTaskId\": \"<string>\",\n    \"batchId\": \"<string>\",\n    \"jobId\": \"<string>\",\n    \"jobDefinitionId\": \"<string>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\"\n  }\n]"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/user-operation?deploymentId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processInstanceId=<string>&executionId=<string>&caseDefinitionId=<string>&caseInstanceId=<string>&caseExecutionId=<string>&taskId=<string>&externalTaskId=<string>&batchId=<string>&jobId=<string>&jobDefinitionId=<string>&userId=<string>&operationId=<string>&operationType=<string>&entityType=<string>&entityTypeIn=<string>&category=<string>&categoryIn=<string>&property=<string>&afterTimestamp=<dateTime>&beforeTimestamp=<dateTime>&sortBy=timestamp&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"user-operation"
											],
											"query": [
												{
													"key": "deploymentId",
													"value": "<string>",
													"description": "Filter by deployment id."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by process definition id."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Filter by process definition key."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by process instance id."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Filter by execution id."
												},
												{
													"key": "caseDefinitionId",
													"value": "<string>",
													"description": "Filter by case definition id."
												},
												{
													"key": "caseInstanceId",
													"value": "<string>",
													"description": "Filter by case instance id."
												},
												{
													"key": "caseExecutionId",
													"value": "<string>",
													"description": "Filter by case execution id."
												},
												{
													"key": "taskId",
													"value": "<string>",
													"description": "Only include operations on this task."
												},
												{
													"key": "externalTaskId",
													"value": "<string>",
													"description": "Only include operations on this external task."
												},
												{
													"key": "batchId",
													"value": "<string>",
													"description": "Only include operations on this batch."
												},
												{
													"key": "jobId",
													"value": "<string>",
													"description": "Filter by job id."
												},
												{
													"key": "jobDefinitionId",
													"value": "<string>",
													"description": "Filter by job definition id."
												},
												{
													"key": "userId",
													"value": "<string>",
													"description": "Only include operations of this user."
												},
												{
													"key": "operationId",
													"value": "<string>",
													"description": "Filter by the id of the operation. This allows fetching of multiple entries which are part\nof a composite operation."
												},
												{
													"key": "operationType",
													"value": "<string>",
													"description": "Filter by the type of the operation like `Claim` or `Delegate`. See the\n[Javadoc](https://docs.camunda.org/manual/7.21/reference/javadoc/?org/camunda/bpm/engine/history/UserOperationLogEntry.html)\nfor a list of available operation types."
												},
												{
													"key": "entityType",
													"value": "<string>",
													"description": "Filter by the type of the entity that was affected by this operation, possible values are\n`Task`, `Attachment` or `IdentityLink`."
												},
												{
													"key": "entityTypeIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of types of the entities that was affected by this operation,\npossible values are `Task`, `Attachment` or `IdentityLink`."
												},
												{
													"key": "category",
													"value": "<string>",
													"description": "Filter by the category that this operation is associated with, possible values are\n`TaskWorker`, `Admin` or `Operator`."
												},
												{
													"key": "categoryIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of categories that this operation is associated with, possible values are\n`TaskWorker`, `Admin` or `Operator`."
												},
												{
													"key": "property",
													"value": "<string>",
													"description": "Only include operations that changed this property, e.g., `owner` or `assignee`."
												},
												{
													"key": "afterTimestamp",
													"value": "<dateTime>",
													"description": "Restrict to entries that were created after the given timestamp. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the\ntimestamp must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., 2013-01-23T14:42:45.000+0200."
												},
												{
													"key": "beforeTimestamp",
													"value": "<dateTime>",
													"description": "Restrict to entries that were created before the given timestamp. By [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the\ntimestamp must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`,\ne.g., 2013-01-23T14:42:45.000+0200."
												},
												{
													"key": "sortBy",
													"value": "timestamp",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "variable-instance",
					"item": [
						{
							"name": "count",
							"item": [
								{
									"name": "Get Variable Instance Count",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/variable-instance/count?variableName=<string>&variableNameLike=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>&variableTypeIn=<string>&includeDeleted=<boolean>&processInstanceId=<string>&processInstanceIdIn=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&executionIdIn=<string>&caseInstanceId=<string>&caseExecutionIdIn=<string>&caseActivityIdIn=<string>&taskIdIn=<string>&activityInstanceIdIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&variableNameIn=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"variable-instance",
												"count"
											],
											"query": [
												{
													"key": "variableName",
													"value": "<string>",
													"description": "Filter by variable name."
												},
												{
													"key": "variableNameLike",
													"value": "<string>",
													"description": "Restrict to variables with a name like the parameter."
												},
												{
													"key": "variableNamesIgnoreCase",
													"value": "<boolean>",
													"description": "Match the variable name provided in `variableName` and `variableNameLike` case-\ninsensitively. If set to `true` **variableName** and **variablename** are\ntreated as equal."
												},
												{
													"key": "variableValuesIgnoreCase",
													"value": "<boolean>",
													"description": "Match the variable value provided in `variableValue` case-insensitively. If set to `true`\n**variableValue** and **variablevalue** are treated as equal."
												},
												{
													"key": "variableTypeIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and comma-\nseparated variable types. A list of all supported variable types can be found\n[here](https://docs.camunda.org/manual/7.21/user-guide/process-engine/variables/#supported-variable-values).\n**Note:** All non-primitive variables are associated with the type\n'serializable'."
												},
												{
													"key": "includeDeleted",
													"value": "<boolean>",
													"description": "Include variables that has already been deleted during the execution."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by the process instance the variable belongs to."
												},
												{
													"key": "processInstanceIdIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and comma-separated process instance ids."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by the process definition the variable belongs to."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Filter by a key of the process definition the variable belongs to."
												},
												{
													"key": "executionIdIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and and comma-separated execution ids."
												},
												{
													"key": "caseInstanceId",
													"value": "<string>",
													"description": "Filter by the case instance the variable belongs to."
												},
												{
													"key": "caseExecutionIdIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and and comma-separated case execution ids."
												},
												{
													"key": "caseActivityIdIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and and comma-separated case activity ids."
												},
												{
													"key": "taskIdIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and and comma-separated task ids."
												},
												{
													"key": "activityInstanceIdIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and and comma-separated activity instance ids."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and comma-\nseparated tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic variable instances that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
												},
												{
													"key": "variableNameIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and comma-separated variable names."
												}
											]
										},
										"description": "Queries for the number of historic variable instances that fulfill the given\nparameters.\nTakes the same parameters as the\n[Get Variable Instances](https://docs.camunda.org/manual/7.21/reference/rest/history/variable-instance/get-variable-instance-query/)\nmethod."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/variable-instance/count?variableName=<string>&variableNameLike=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>&variableTypeIn=<string>&includeDeleted=<boolean>&processInstanceId=<string>&processInstanceIdIn=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&executionIdIn=<string>&caseInstanceId=<string>&caseExecutionIdIn=<string>&caseActivityIdIn=<string>&taskIdIn=<string>&activityInstanceIdIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&variableNameIn=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"variable-instance",
														"count"
													],
													"query": [
														{
															"key": "variableName",
															"value": "<string>",
															"description": "Filter by variable name."
														},
														{
															"key": "variableNameLike",
															"value": "<string>",
															"description": "Restrict to variables with a name like the parameter."
														},
														{
															"key": "variableNamesIgnoreCase",
															"value": "<boolean>",
															"description": "Match the variable name provided in `variableName` and `variableNameLike` case-\ninsensitively. If set to `true` **variableName** and **variablename** are\ntreated as equal."
														},
														{
															"key": "variableValuesIgnoreCase",
															"value": "<boolean>",
															"description": "Match the variable value provided in `variableValue` case-insensitively. If set to `true`\n**variableValue** and **variablevalue** are treated as equal."
														},
														{
															"key": "variableTypeIn",
															"value": "<string>",
															"description": "Only include historic variable instances which belong to one of the passed and comma-\nseparated variable types. A list of all supported variable types can be found\n[here](https://docs.camunda.org/manual/7.21/user-guide/process-engine/variables/#supported-variable-values).\n**Note:** All non-primitive variables are associated with the type\n'serializable'."
														},
														{
															"key": "includeDeleted",
															"value": "<boolean>",
															"description": "Include variables that has already been deleted during the execution."
														},
														{
															"key": "processInstanceId",
															"value": "<string>",
															"description": "Filter by the process instance the variable belongs to."
														},
														{
															"key": "processInstanceIdIn",
															"value": "<string>",
															"description": "Only include historic variable instances which belong to one of the passed and comma-separated process instance ids."
														},
														{
															"key": "processDefinitionId",
															"value": "<string>",
															"description": "Filter by the process definition the variable belongs to."
														},
														{
															"key": "processDefinitionKey",
															"value": "<string>",
															"description": "Filter by a key of the process definition the variable belongs to."
														},
														{
															"key": "executionIdIn",
															"value": "<string>",
															"description": "Only include historic variable instances which belong to one of the passed and and comma-separated execution ids."
														},
														{
															"key": "caseInstanceId",
															"value": "<string>",
															"description": "Filter by the case instance the variable belongs to."
														},
														{
															"key": "caseExecutionIdIn",
															"value": "<string>",
															"description": "Only include historic variable instances which belong to one of the passed and and comma-separated case execution ids."
														},
														{
															"key": "caseActivityIdIn",
															"value": "<string>",
															"description": "Only include historic variable instances which belong to one of the passed and and comma-separated case activity ids."
														},
														{
															"key": "taskIdIn",
															"value": "<string>",
															"description": "Only include historic variable instances which belong to one of the passed and and comma-separated task ids."
														},
														{
															"key": "activityInstanceIdIn",
															"value": "<string>",
															"description": "Only include historic variable instances which belong to one of the passed and and comma-separated activity instance ids."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Only include historic variable instances which belong to one of the passed and comma-\nseparated tenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include historic variable instances that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
														},
														{
															"key": "variableNameIn",
															"value": "<string>",
															"description": "Only include historic variable instances which belong to one of the passed and comma-separated variable names."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<long>\"\n}"
										},
										{
											"name": "Returned if some of the query parameters are invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/variable-instance/count?variableName=<string>&variableNameLike=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>&variableTypeIn=<string>&includeDeleted=<boolean>&processInstanceId=<string>&processInstanceIdIn=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&executionIdIn=<string>&caseInstanceId=<string>&caseExecutionIdIn=<string>&caseActivityIdIn=<string>&taskIdIn=<string>&activityInstanceIdIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&variableNameIn=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"variable-instance",
														"count"
													],
													"query": [
														{
															"key": "variableName",
															"value": "<string>",
															"description": "Filter by variable name."
														},
														{
															"key": "variableNameLike",
															"value": "<string>",
															"description": "Restrict to variables with a name like the parameter."
														},
														{
															"key": "variableNamesIgnoreCase",
															"value": "<boolean>",
															"description": "Match the variable name provided in `variableName` and `variableNameLike` case-\ninsensitively. If set to `true` **variableName** and **variablename** are\ntreated as equal."
														},
														{
															"key": "variableValuesIgnoreCase",
															"value": "<boolean>",
															"description": "Match the variable value provided in `variableValue` case-insensitively. If set to `true`\n**variableValue** and **variablevalue** are treated as equal."
														},
														{
															"key": "variableTypeIn",
															"value": "<string>",
															"description": "Only include historic variable instances which belong to one of the passed and comma-\nseparated variable types. A list of all supported variable types can be found\n[here](https://docs.camunda.org/manual/7.21/user-guide/process-engine/variables/#supported-variable-values).\n**Note:** All non-primitive variables are associated with the type\n'serializable'."
														},
														{
															"key": "includeDeleted",
															"value": "<boolean>",
															"description": "Include variables that has already been deleted during the execution."
														},
														{
															"key": "processInstanceId",
															"value": "<string>",
															"description": "Filter by the process instance the variable belongs to."
														},
														{
															"key": "processInstanceIdIn",
															"value": "<string>",
															"description": "Only include historic variable instances which belong to one of the passed and comma-separated process instance ids."
														},
														{
															"key": "processDefinitionId",
															"value": "<string>",
															"description": "Filter by the process definition the variable belongs to."
														},
														{
															"key": "processDefinitionKey",
															"value": "<string>",
															"description": "Filter by a key of the process definition the variable belongs to."
														},
														{
															"key": "executionIdIn",
															"value": "<string>",
															"description": "Only include historic variable instances which belong to one of the passed and and comma-separated execution ids."
														},
														{
															"key": "caseInstanceId",
															"value": "<string>",
															"description": "Filter by the case instance the variable belongs to."
														},
														{
															"key": "caseExecutionIdIn",
															"value": "<string>",
															"description": "Only include historic variable instances which belong to one of the passed and and comma-separated case execution ids."
														},
														{
															"key": "caseActivityIdIn",
															"value": "<string>",
															"description": "Only include historic variable instances which belong to one of the passed and and comma-separated case activity ids."
														},
														{
															"key": "taskIdIn",
															"value": "<string>",
															"description": "Only include historic variable instances which belong to one of the passed and and comma-separated task ids."
														},
														{
															"key": "activityInstanceIdIn",
															"value": "<string>",
															"description": "Only include historic variable instances which belong to one of the passed and and comma-separated activity instance ids."
														},
														{
															"key": "tenantIdIn",
															"value": "<string>",
															"description": "Only include historic variable instances which belong to one of the passed and comma-\nseparated tenant ids."
														},
														{
															"key": "withoutTenantId",
															"value": "<boolean>",
															"description": "Only include historic variable instances that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
														},
														{
															"key": "variableNameIn",
															"value": "<string>",
															"description": "Only include historic variable instances which belong to one of the passed and comma-separated variable names."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								},
								{
									"name": "Get Variable Instance Count (POST)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"variableName\": \"<string>\",\n  \"variableNameLike\": \"<string>\",\n  \"variableValue\": {},\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"variableTypeIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"includeDeleted\": \"<boolean>\",\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"executionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caseInstanceId\": \"<string>\",\n  \"caseExecutionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caseActivityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"variableNameIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"tenantId\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"instanceId\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/variable-instance/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"variable-instance",
												"count"
											]
										},
										"description": "Queries for historic variable instances that fulfill the given parameters.\nThis method takes the same message body as the\n[Get Variable Instances (POST)](https://docs.camunda.org/manual/7.21/reference/rest/history/variable-instance/post-variable-instance-query/)\nmethod and therefore it is more powerful regarding variable values\nthan the\n[Get Variable Instance Count](https://docs.camunda.org/manual/7.21/reference/rest/history/variable-instance/get-variable-instance-query-count/)\nmethod."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variableName\": \"<string>\",\n  \"variableNameLike\": \"<string>\",\n  \"variableValue\": {},\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"variableTypeIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"includeDeleted\": \"<boolean>\",\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"executionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caseInstanceId\": \"<string>\",\n  \"caseExecutionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caseActivityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"variableNameIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"tenantId\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"instanceId\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/history/variable-instance/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"variable-instance",
														"count"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": \"<long>\"\n}"
										},
										{
											"name": "Returned if some of the query parameters are invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variableName\": \"<string>\",\n  \"variableNameLike\": \"<string>\",\n  \"variableValue\": {},\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"variableTypeIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"includeDeleted\": \"<boolean>\",\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"executionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caseInstanceId\": \"<string>\",\n  \"caseExecutionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caseActivityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"variableNameIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"tenantId\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"instanceId\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/history/variable-instance/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"variable-instance",
														"count"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "data",
									"item": [
										{
											"name": "Get Variable Instance (Binary)",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/octet-stream"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/variable-instance/:id/data",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"variable-instance",
														":id",
														"data"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the variable instance."
														}
													]
												},
												"description": "Retrieves the content of a historic variable by id. Applicable for variables that\nare serialized as binary data."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/octet-stream"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/history/variable-instance/:id/data",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"variable-instance",
																":id",
																"data"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/octet-stream"
														}
													],
													"cookie": [],
													"body": "<string>"
												},
												{
													"name": "Variable with given id exists but is not a binary variable. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/history/variable-instance/:id/data",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"variable-instance",
																":id",
																"data"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "Variable with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/history/variable-instance/:id/data",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"history",
																"variable-instance",
																":id",
																"data"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Delete Variable Instance",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/variable-instance/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"variable-instance",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the variable instance."
												}
											]
										},
										"description": "Deletes a historic variable instance by id."
									},
									"response": [
										{
											"name": "Request successful. This method returns no content.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/variable-instance/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"variable-instance",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Variable with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/variable-instance/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"variable-instance",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								},
								{
									"name": "Get Variable Instance",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/variable-instance/:id?deserializeValues=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"variable-instance",
												":id"
											],
											"query": [
												{
													"key": "deserializeValues",
													"value": "<boolean>",
													"description": "Determines whether serializable variable values (typically variables that\nstore custom Java objects) should be deserialized on server side (default\n`true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side\nand transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean property\nintrospection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized\nformat. For example, a variable that is serialized as XML will be returned as\na JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of backward\ncompatibility, we recommend setting this parameter to `false` when developing\nweb applications that are independent of the Java process applications\ndeployed to the engine."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the variable instance."
												}
											]
										},
										"description": "Retrieves a historic variable by id."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/variable-instance/:id?deserializeValues=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"variable-instance",
														":id"
													],
													"query": [
														{
															"key": "deserializeValues",
															"value": "<boolean>",
															"description": "Determines whether serializable variable values (typically variables that\nstore custom Java objects) should be deserialized on server side (default\n`true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side\nand transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean property\nintrospection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized\nformat. For example, a variable that is serialized as XML will be returned as\na JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of backward\ncompatibility, we recommend setting this parameter to `false` when developing\nweb applications that are independent of the Java process applications\ndeployed to the engine."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"activityInstanceId\": \"<string>\",\n  \"caseDefinitionKey\": \"<string>\",\n  \"caseDefinitionId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"taskId\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"state\": \"<string>\",\n  \"createTime\": \"<dateTime>\",\n  \"removalTime\": \"<dateTime>\",\n  \"rootProcessInstanceId\": \"<string>\",\n  \"value\": {\n    \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n  },\n  \"type\": \"<string>\",\n  \"valueInfo\": {\n    \"eu078\": 53511778.36921108\n  }\n}"
										},
										{
											"name": "Variable with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/history/variable-instance/:id?deserializeValues=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"history",
														"variable-instance",
														":id"
													],
													"query": [
														{
															"key": "deserializeValues",
															"value": "<boolean>",
															"description": "Determines whether serializable variable values (typically variables that\nstore custom Java objects) should be deserialized on server side (default\n`true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side\nand transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean property\nintrospection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized\nformat. For example, a variable that is serialized as XML will be returned as\na JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of backward\ncompatibility, we recommend setting this parameter to `false` when developing\nweb applications that are independent of the Java process applications\ndeployed to the engine."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Variable Instances",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/history/variable-instance?variableName=<string>&variableNameLike=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>&variableTypeIn=<string>&includeDeleted=<boolean>&processInstanceId=<string>&processInstanceIdIn=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&executionIdIn=<string>&caseInstanceId=<string>&caseExecutionIdIn=<string>&caseActivityIdIn=<string>&taskIdIn=<string>&activityInstanceIdIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&variableNameIn=<string>&sortBy=variableName&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&deserializeValues=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"history",
										"variable-instance"
									],
									"query": [
										{
											"key": "variableName",
											"value": "<string>",
											"description": "Filter by variable name."
										},
										{
											"key": "variableNameLike",
											"value": "<string>",
											"description": "Restrict to variables with a name like the parameter."
										},
										{
											"key": "variableNamesIgnoreCase",
											"value": "<boolean>",
											"description": "Match the variable name provided in `variableName` and `variableNameLike` case-\ninsensitively. If set to `true` **variableName** and **variablename** are\ntreated as equal."
										},
										{
											"key": "variableValuesIgnoreCase",
											"value": "<boolean>",
											"description": "Match the variable value provided in `variableValue` case-insensitively. If set to `true`\n**variableValue** and **variablevalue** are treated as equal."
										},
										{
											"key": "variableTypeIn",
											"value": "<string>",
											"description": "Only include historic variable instances which belong to one of the passed and comma-\nseparated variable types. A list of all supported variable types can be found\n[here](https://docs.camunda.org/manual/7.21/user-guide/process-engine/variables/#supported-variable-values).\n**Note:** All non-primitive variables are associated with the type\n'serializable'."
										},
										{
											"key": "includeDeleted",
											"value": "<boolean>",
											"description": "Include variables that has already been deleted during the execution."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Filter by the process instance the variable belongs to."
										},
										{
											"key": "processInstanceIdIn",
											"value": "<string>",
											"description": "Only include historic variable instances which belong to one of the passed and comma-separated process instance ids."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Filter by the process definition the variable belongs to."
										},
										{
											"key": "processDefinitionKey",
											"value": "<string>",
											"description": "Filter by a key of the process definition the variable belongs to."
										},
										{
											"key": "executionIdIn",
											"value": "<string>",
											"description": "Only include historic variable instances which belong to one of the passed and and comma-separated execution ids."
										},
										{
											"key": "caseInstanceId",
											"value": "<string>",
											"description": "Filter by the case instance the variable belongs to."
										},
										{
											"key": "caseExecutionIdIn",
											"value": "<string>",
											"description": "Only include historic variable instances which belong to one of the passed and and comma-separated case execution ids."
										},
										{
											"key": "caseActivityIdIn",
											"value": "<string>",
											"description": "Only include historic variable instances which belong to one of the passed and and comma-separated case activity ids."
										},
										{
											"key": "taskIdIn",
											"value": "<string>",
											"description": "Only include historic variable instances which belong to one of the passed and and comma-separated task ids."
										},
										{
											"key": "activityInstanceIdIn",
											"value": "<string>",
											"description": "Only include historic variable instances which belong to one of the passed and and comma-separated activity instance ids."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Only include historic variable instances which belong to one of the passed and comma-\nseparated tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include historic variable instances that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
										},
										{
											"key": "variableNameIn",
											"value": "<string>",
											"description": "Only include historic variable instances which belong to one of the passed and comma-separated variable names."
										},
										{
											"key": "sortBy",
											"value": "variableName",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										},
										{
											"key": "deserializeValues",
											"value": "<boolean>",
											"description": "Determines whether serializable variable values (typically variables that\nstore custom Java objects) should be deserialized on server side (default\n`true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side\nand transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean property\nintrospection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized\nformat. For example, a variable that is serialized as XML will be returned as\na JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of backward\ncompatibility, we recommend setting this parameter to `false` when developing\nweb applications that are independent of the Java process applications\ndeployed to the engine."
										}
									]
								},
								"description": "Queries for historic variable instances that fulfill the given parameters.\nThe size of the result set can be retrieved by using the\n[Get Variable Instance Count](https://docs.camunda.org/manual/7.21/reference/rest/history/variable-instance/get-variable-instance-query-count/)\nmethod."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/variable-instance?variableName=<string>&variableNameLike=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>&variableTypeIn=<string>&includeDeleted=<boolean>&processInstanceId=<string>&processInstanceIdIn=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&executionIdIn=<string>&caseInstanceId=<string>&caseExecutionIdIn=<string>&caseActivityIdIn=<string>&taskIdIn=<string>&activityInstanceIdIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&variableNameIn=<string>&sortBy=variableName&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&deserializeValues=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"variable-instance"
											],
											"query": [
												{
													"key": "variableName",
													"value": "<string>",
													"description": "Filter by variable name."
												},
												{
													"key": "variableNameLike",
													"value": "<string>",
													"description": "Restrict to variables with a name like the parameter."
												},
												{
													"key": "variableNamesIgnoreCase",
													"value": "<boolean>",
													"description": "Match the variable name provided in `variableName` and `variableNameLike` case-\ninsensitively. If set to `true` **variableName** and **variablename** are\ntreated as equal."
												},
												{
													"key": "variableValuesIgnoreCase",
													"value": "<boolean>",
													"description": "Match the variable value provided in `variableValue` case-insensitively. If set to `true`\n**variableValue** and **variablevalue** are treated as equal."
												},
												{
													"key": "variableTypeIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and comma-\nseparated variable types. A list of all supported variable types can be found\n[here](https://docs.camunda.org/manual/7.21/user-guide/process-engine/variables/#supported-variable-values).\n**Note:** All non-primitive variables are associated with the type\n'serializable'."
												},
												{
													"key": "includeDeleted",
													"value": "<boolean>",
													"description": "Include variables that has already been deleted during the execution."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by the process instance the variable belongs to."
												},
												{
													"key": "processInstanceIdIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and comma-separated process instance ids."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by the process definition the variable belongs to."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Filter by a key of the process definition the variable belongs to."
												},
												{
													"key": "executionIdIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and and comma-separated execution ids."
												},
												{
													"key": "caseInstanceId",
													"value": "<string>",
													"description": "Filter by the case instance the variable belongs to."
												},
												{
													"key": "caseExecutionIdIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and and comma-separated case execution ids."
												},
												{
													"key": "caseActivityIdIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and and comma-separated case activity ids."
												},
												{
													"key": "taskIdIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and and comma-separated task ids."
												},
												{
													"key": "activityInstanceIdIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and and comma-separated activity instance ids."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and comma-\nseparated tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic variable instances that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
												},
												{
													"key": "variableNameIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and comma-separated variable names."
												},
												{
													"key": "sortBy",
													"value": "variableName",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												},
												{
													"key": "deserializeValues",
													"value": "<boolean>",
													"description": "Determines whether serializable variable values (typically variables that\nstore custom Java objects) should be deserialized on server side (default\n`true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side\nand transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean property\nintrospection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized\nformat. For example, a variable that is serialized as XML will be returned as\na JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of backward\ncompatibility, we recommend setting this parameter to `false` when developing\nweb applications that are independent of the Java process applications\ndeployed to the engine."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"caseDefinitionKey\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"caseExecutionId\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"errorMessage\": \"<string>\",\n    \"state\": \"<string>\",\n    \"createTime\": \"<dateTime>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"aliquip4e5\": 92823635,\n      \"velit3b8\": 57718409\n    }\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"caseDefinitionKey\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"caseExecutionId\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"errorMessage\": \"<string>\",\n    \"state\": \"<string>\",\n    \"createTime\": \"<dateTime>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"nisi_25\": \"ullamco et\",\n      \"et1\": \"exercitation dolor\"\n    }\n  }\n]"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/history/variable-instance?variableName=<string>&variableNameLike=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>&variableTypeIn=<string>&includeDeleted=<boolean>&processInstanceId=<string>&processInstanceIdIn=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&executionIdIn=<string>&caseInstanceId=<string>&caseExecutionIdIn=<string>&caseActivityIdIn=<string>&taskIdIn=<string>&activityInstanceIdIn=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&variableNameIn=<string>&sortBy=variableName&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&deserializeValues=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"variable-instance"
											],
											"query": [
												{
													"key": "variableName",
													"value": "<string>",
													"description": "Filter by variable name."
												},
												{
													"key": "variableNameLike",
													"value": "<string>",
													"description": "Restrict to variables with a name like the parameter."
												},
												{
													"key": "variableNamesIgnoreCase",
													"value": "<boolean>",
													"description": "Match the variable name provided in `variableName` and `variableNameLike` case-\ninsensitively. If set to `true` **variableName** and **variablename** are\ntreated as equal."
												},
												{
													"key": "variableValuesIgnoreCase",
													"value": "<boolean>",
													"description": "Match the variable value provided in `variableValue` case-insensitively. If set to `true`\n**variableValue** and **variablevalue** are treated as equal."
												},
												{
													"key": "variableTypeIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and comma-\nseparated variable types. A list of all supported variable types can be found\n[here](https://docs.camunda.org/manual/7.21/user-guide/process-engine/variables/#supported-variable-values).\n**Note:** All non-primitive variables are associated with the type\n'serializable'."
												},
												{
													"key": "includeDeleted",
													"value": "<boolean>",
													"description": "Include variables that has already been deleted during the execution."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Filter by the process instance the variable belongs to."
												},
												{
													"key": "processInstanceIdIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and comma-separated process instance ids."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by the process definition the variable belongs to."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Filter by a key of the process definition the variable belongs to."
												},
												{
													"key": "executionIdIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and and comma-separated execution ids."
												},
												{
													"key": "caseInstanceId",
													"value": "<string>",
													"description": "Filter by the case instance the variable belongs to."
												},
												{
													"key": "caseExecutionIdIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and and comma-separated case execution ids."
												},
												{
													"key": "caseActivityIdIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and and comma-separated case activity ids."
												},
												{
													"key": "taskIdIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and and comma-separated task ids."
												},
												{
													"key": "activityInstanceIdIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and and comma-separated activity instance ids."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and comma-\nseparated tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include historic variable instances that belong to no tenant. Value may only be\n`true`, as `false` is the default behavior."
												},
												{
													"key": "variableNameIn",
													"value": "<string>",
													"description": "Only include historic variable instances which belong to one of the passed and comma-separated variable names."
												},
												{
													"key": "sortBy",
													"value": "variableName",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												},
												{
													"key": "deserializeValues",
													"value": "<boolean>",
													"description": "Determines whether serializable variable values (typically variables that\nstore custom Java objects) should be deserialized on server side (default\n`true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side\nand transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean property\nintrospection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized\nformat. For example, a variable that is serialized as XML will be returned as\na JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of backward\ncompatibility, we recommend setting this parameter to `false` when developing\nweb applications that are independent of the Java process applications\ndeployed to the engine."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get Variable Instances (POST)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"variableName\": \"<string>\",\n  \"variableNameLike\": \"<string>\",\n  \"variableValue\": {},\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"variableTypeIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"includeDeleted\": \"<boolean>\",\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"executionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caseInstanceId\": \"<string>\",\n  \"caseExecutionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caseActivityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"variableNameIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"tenantId\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"instanceId\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/history/variable-instance?firstResult=<integer>&maxResults=<integer>&deserializeValues=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"history",
										"variable-instance"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										},
										{
											"key": "deserializeValues",
											"value": "<boolean>",
											"description": "Determines whether serializable variable values (typically variables that\nstore custom Java objects) should be deserialized on server side (default\n`true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side\nand transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean property\nintrospection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized\nformat. For example, a variable that is serialized as XML will be returned as\na JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of backward\ncompatibility, we recommend setting this parameter to `false` when developing\nweb applications that are independent of the Java process applications\ndeployed to the engine."
										}
									]
								},
								"description": "Queries for historic variable instances that fulfill the given parameters.\nThis method is slightly more powerful than the\n[Get Variable Instances](https://docs.camunda.org/manual/7.21/reference/rest/history/variable-instance/get-variable-instance-query/)\nmethod because it allows filtering by variable values of the different\ntypes `String`, `Number` or `Boolean`."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"variableName\": \"<string>\",\n  \"variableNameLike\": \"<string>\",\n  \"variableValue\": {},\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"variableTypeIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"includeDeleted\": \"<boolean>\",\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"executionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caseInstanceId\": \"<string>\",\n  \"caseExecutionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caseActivityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"variableNameIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"tenantId\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"instanceId\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/variable-instance?firstResult=<integer>&maxResults=<integer>&deserializeValues=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"variable-instance"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												},
												{
													"key": "deserializeValues",
													"value": "<boolean>",
													"description": "Determines whether serializable variable values (typically variables that\nstore custom Java objects) should be deserialized on server side (default\n`true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side\nand transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean property\nintrospection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized\nformat. For example, a variable that is serialized as XML will be returned as\na JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of backward\ncompatibility, we recommend setting this parameter to `false` when developing\nweb applications that are independent of the Java process applications\ndeployed to the engine."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"caseDefinitionKey\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"caseExecutionId\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"errorMessage\": \"<string>\",\n    \"state\": \"<string>\",\n    \"createTime\": \"<dateTime>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"aliquip4e5\": 92823635,\n      \"velit3b8\": 57718409\n    }\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"caseDefinitionKey\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"caseExecutionId\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"errorMessage\": \"<string>\",\n    \"state\": \"<string>\",\n    \"createTime\": \"<dateTime>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"nisi_25\": \"ullamco et\",\n      \"et1\": \"exercitation dolor\"\n    }\n  }\n]"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"variableName\": \"<string>\",\n  \"variableNameLike\": \"<string>\",\n  \"variableValue\": {},\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"variableTypeIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"includeDeleted\": \"<boolean>\",\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"executionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caseInstanceId\": \"<string>\",\n  \"caseExecutionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caseActivityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"variableNameIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"tenantId\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"instanceId\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/history/variable-instance?firstResult=<integer>&maxResults=<integer>&deserializeValues=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"history",
												"variable-instance"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												},
												{
													"key": "deserializeValues",
													"value": "<boolean>",
													"description": "Determines whether serializable variable values (typically variables that\nstore custom Java objects) should be deserialized on server side (default\n`true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side\nand transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean property\nintrospection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized\nformat. For example, a variable that is serialized as XML will be returned as\na JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of backward\ncompatibility, we recommend setting this parameter to `false` when developing\nweb applications that are independent of the Java process applications\ndeployed to the engine."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "identity",
			"item": [
				{
					"name": "groups",
					"item": [
						{
							"name": "Get a User's Groups",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/identity/groups?userId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"groups"
									],
									"query": [
										{
											"key": "userId",
											"value": "<string>",
											"description": "(Required) The id of the user to get the groups for."
										}
									]
								},
								"description": "Gets the groups of a user by id and includes all users that share a group with the\ngiven user."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity/groups?userId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"groups"
											],
											"query": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) The id of the user to get the groups for."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"groups\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"groupUsers\": [\n    {\n      \"id\": \"<string>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"displayName\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"displayName\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "If the `userId` query parameter is missing. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity/groups?userId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"groups"
											],
											"query": [
												{
													"key": "userId",
													"value": "<string>",
													"description": "(Required) The id of the user to get the groups for."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "password-policy",
					"item": [
						{
							"name": "Get Password Policy",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/identity/password-policy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"password-policy"
									]
								},
								"description": "A password policy consists of a list of rules that new passwords must follow to be\npolicy compliant. This end point returns a JSON representation of the\nlist of policy rules. More information on password policies in Camunda can be found in the password policy\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/password-policy/) and in\nthe [security instructions](https://docs.camunda.org/manual/7.21/user-guide/security/)."
							},
							"response": [
								{
									"name": "Request successful. This example uses the built-in password policy that enforces a minimum password length,\nand some complexity rules.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity/password-policy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"password-policy"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"rules\": [\n    {\n      \"placeholder\": \"<string>\",\n      \"parameter\": {\n        \"est_c\": \"<string>\"\n      }\n    },\n    {\n      \"placeholder\": \"<string>\",\n      \"parameter\": {\n        \"fugiat_a\": \"<string>\"\n      }\n    }\n  ]\n}"
								},
								{
									"name": "No password policy was found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/identity/password-policy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"password-policy"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Validate Password",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"<string>\",\n  \"profile\": {\n    \"id\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/identity/password-policy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"password-policy"
									]
								},
								"description": "A password policy consists of a list of rules that new passwords must follow to be\npolicy compliant. A password can be checked for compliancy via this\nend point. More information on password policies in Camunda can be found in the password policy\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/password-policy/) and in\nthe [security instructions](https://docs.camunda.org/manual/7.21/user-guide/security/)."
							},
							"response": [
								{
									"name": "Request successful. This example uses the built-in password policy that enforces a minimum password length, and\nsome complexity rules. The checked password is myPassword which is not complex enough to match all of\nthe policy rules.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"profile\": {\n    \"id\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/identity/password-policy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"password-policy"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"valid\": \"<boolean>\",\n  \"rules\": [\n    {\n      \"placeholder\": \"<string>\",\n      \"parameter\": {\n        \"velit79\": \"<string>\"\n      }\n    },\n    {\n      \"placeholder\": \"<string>\",\n      \"parameter\": {\n        \"sunt6\": \"<string>\"\n      }\n    }\n  ]\n}"
								},
								{
									"name": "No password policy was found to check the password against.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"profile\": {\n    \"id\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/identity/password-policy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"password-policy"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "verify",
					"item": [
						{
							"name": "Verify User",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/identity/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"verify"
									]
								},
								"description": "Verifies that user credentials are valid."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/identity/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"verify"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"authenticatedUser\": \"<string>\",\n  \"authenticated\": \"<boolean>\",\n  \"tenants\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"groups\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
								},
								{
									"name": "If body does not contain username or password.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/identity/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"verify"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "incident",
			"item": [
				{
					"name": "count",
					"item": [
						{
							"name": "Get List Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/incident/count?incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&processDefinitionId=<string>&processDefinitionKeyIn=<string>&processInstanceId=<string>&executionId=<string>&incidentTimestampBefore=<dateTime>&incidentTimestampAfter=<dateTime>&activityId=<string>&failedActivityId=<string>&causeIncidentId=<string>&rootCauseIncidentId=<string>&configuration=<string>&tenantIdIn=<string>&jobDefinitionIdIn=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"incident",
										"count"
									],
									"query": [
										{
											"key": "incidentId",
											"value": "<string>",
											"description": "Restricts to incidents that have the given id."
										},
										{
											"key": "incidentType",
											"value": "<string>",
											"description": "Restricts to incidents that belong to the given incident type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types) for a list of incident\ntypes."
										},
										{
											"key": "incidentMessage",
											"value": "<string>",
											"description": "Restricts to incidents that have the given incident message."
										},
										{
											"key": "incidentMessageLike",
											"value": "<string>",
											"description": "Restricts to incidents that incidents message is a substring of the given value. The string can include\nthe wildcard character '%' to express like-strategy: starts with (`string%`), ends with (`%string`) or\ncontains (`%string%`)."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Restricts to incidents that belong to a process definition with the given id."
										},
										{
											"key": "processDefinitionKeyIn",
											"value": "<string>",
											"description": "Restricts to incidents that belong to a process definition with the given keys. Must be a\ncomma-separated list."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Restricts to incidents that belong to a process instance with the given id."
										},
										{
											"key": "executionId",
											"value": "<string>",
											"description": "Restricts to incidents that belong to an execution with the given id."
										},
										{
											"key": "incidentTimestampBefore",
											"value": "<dateTime>",
											"description": "Restricts to incidents that have an incidentTimestamp date before the given date. \nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date\nmust have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "incidentTimestampAfter",
											"value": "<dateTime>",
											"description": "Restricts to incidents that have an incidentTimestamp date after the given date. \nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date\nmust have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "activityId",
											"value": "<string>",
											"description": "Restricts to incidents that belong to an activity with the given id."
										},
										{
											"key": "failedActivityId",
											"value": "<string>",
											"description": "Restricts to incidents that were created due to the failure of an activity with the given id."
										},
										{
											"key": "causeIncidentId",
											"value": "<string>",
											"description": "Restricts to incidents that have the given incident id as cause incident."
										},
										{
											"key": "rootCauseIncidentId",
											"value": "<string>",
											"description": "Restricts to incidents that have the given incident id as root cause incident."
										},
										{
											"key": "configuration",
											"value": "<string>",
											"description": "Restricts to incidents that have the given parameter set as configuration."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Restricts to incidents that have one of the given comma-separated tenant ids."
										},
										{
											"key": "jobDefinitionIdIn",
											"value": "<string>",
											"description": "Restricts to incidents that have one of the given comma-separated job definition ids."
										}
									]
								},
								"description": "Queries for the number of incidents that fulfill given parameters. Takes the same parameters as the\n[Get Incidents](https://docs.camunda.org/manual/7.21/reference/rest/incident/get-query/) method."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/incident/count?incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&processDefinitionId=<string>&processDefinitionKeyIn=<string>&processInstanceId=<string>&executionId=<string>&incidentTimestampBefore=<dateTime>&incidentTimestampAfter=<dateTime>&activityId=<string>&failedActivityId=<string>&causeIncidentId=<string>&rootCauseIncidentId=<string>&configuration=<string>&tenantIdIn=<string>&jobDefinitionIdIn=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"incident",
												"count"
											],
											"query": [
												{
													"key": "incidentId",
													"value": "<string>",
													"description": "Restricts to incidents that have the given id."
												},
												{
													"key": "incidentType",
													"value": "<string>",
													"description": "Restricts to incidents that belong to the given incident type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types) for a list of incident\ntypes."
												},
												{
													"key": "incidentMessage",
													"value": "<string>",
													"description": "Restricts to incidents that have the given incident message."
												},
												{
													"key": "incidentMessageLike",
													"value": "<string>",
													"description": "Restricts to incidents that incidents message is a substring of the given value. The string can include\nthe wildcard character '%' to express like-strategy: starts with (`string%`), ends with (`%string`) or\ncontains (`%string%`)."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Restricts to incidents that belong to a process definition with the given id."
												},
												{
													"key": "processDefinitionKeyIn",
													"value": "<string>",
													"description": "Restricts to incidents that belong to a process definition with the given keys. Must be a\ncomma-separated list."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Restricts to incidents that belong to a process instance with the given id."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Restricts to incidents that belong to an execution with the given id."
												},
												{
													"key": "incidentTimestampBefore",
													"value": "<dateTime>",
													"description": "Restricts to incidents that have an incidentTimestamp date before the given date. \nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date\nmust have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "incidentTimestampAfter",
													"value": "<dateTime>",
													"description": "Restricts to incidents that have an incidentTimestamp date after the given date. \nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date\nmust have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "activityId",
													"value": "<string>",
													"description": "Restricts to incidents that belong to an activity with the given id."
												},
												{
													"key": "failedActivityId",
													"value": "<string>",
													"description": "Restricts to incidents that were created due to the failure of an activity with the given id."
												},
												{
													"key": "causeIncidentId",
													"value": "<string>",
													"description": "Restricts to incidents that have the given incident id as cause incident."
												},
												{
													"key": "rootCauseIncidentId",
													"value": "<string>",
													"description": "Restricts to incidents that have the given incident id as root cause incident."
												},
												{
													"key": "configuration",
													"value": "<string>",
													"description": "Restricts to incidents that have the given parameter set as configuration."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Restricts to incidents that have one of the given comma-separated tenant ids."
												},
												{
													"key": "jobDefinitionIdIn",
													"value": "<string>",
													"description": "Restricts to incidents that have one of the given comma-separated job definition ids."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid. See the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error\nresponse format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/incident/count?incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&processDefinitionId=<string>&processDefinitionKeyIn=<string>&processInstanceId=<string>&executionId=<string>&incidentTimestampBefore=<dateTime>&incidentTimestampAfter=<dateTime>&activityId=<string>&failedActivityId=<string>&causeIncidentId=<string>&rootCauseIncidentId=<string>&configuration=<string>&tenantIdIn=<string>&jobDefinitionIdIn=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"incident",
												"count"
											],
											"query": [
												{
													"key": "incidentId",
													"value": "<string>",
													"description": "Restricts to incidents that have the given id."
												},
												{
													"key": "incidentType",
													"value": "<string>",
													"description": "Restricts to incidents that belong to the given incident type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types) for a list of incident\ntypes."
												},
												{
													"key": "incidentMessage",
													"value": "<string>",
													"description": "Restricts to incidents that have the given incident message."
												},
												{
													"key": "incidentMessageLike",
													"value": "<string>",
													"description": "Restricts to incidents that incidents message is a substring of the given value. The string can include\nthe wildcard character '%' to express like-strategy: starts with (`string%`), ends with (`%string`) or\ncontains (`%string%`)."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Restricts to incidents that belong to a process definition with the given id."
												},
												{
													"key": "processDefinitionKeyIn",
													"value": "<string>",
													"description": "Restricts to incidents that belong to a process definition with the given keys. Must be a\ncomma-separated list."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Restricts to incidents that belong to a process instance with the given id."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Restricts to incidents that belong to an execution with the given id."
												},
												{
													"key": "incidentTimestampBefore",
													"value": "<dateTime>",
													"description": "Restricts to incidents that have an incidentTimestamp date before the given date. \nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date\nmust have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "incidentTimestampAfter",
													"value": "<dateTime>",
													"description": "Restricts to incidents that have an incidentTimestamp date after the given date. \nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date\nmust have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
												},
												{
													"key": "activityId",
													"value": "<string>",
													"description": "Restricts to incidents that belong to an activity with the given id."
												},
												{
													"key": "failedActivityId",
													"value": "<string>",
													"description": "Restricts to incidents that were created due to the failure of an activity with the given id."
												},
												{
													"key": "causeIncidentId",
													"value": "<string>",
													"description": "Restricts to incidents that have the given incident id as cause incident."
												},
												{
													"key": "rootCauseIncidentId",
													"value": "<string>",
													"description": "Restricts to incidents that have the given incident id as root cause incident."
												},
												{
													"key": "configuration",
													"value": "<string>",
													"description": "Restricts to incidents that have the given parameter set as configuration."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Restricts to incidents that have one of the given comma-separated tenant ids."
												},
												{
													"key": "jobDefinitionIdIn",
													"value": "<string>",
													"description": "Restricts to incidents that have one of the given comma-separated job definition ids."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "annotation",
							"item": [
								{
									"name": "Clear Incident Annotation",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/incident/:id/annotation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"incident",
												":id",
												"annotation"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the incident to clear the annotation at."
												}
											]
										},
										"description": "Clears the annotation of an incident with given id."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/incident/:id/annotation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"incident",
														":id",
														"annotation"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if no incident can be found for the given id.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/incident/:id/annotation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"incident",
														":id",
														"annotation"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								},
								{
									"name": "Set Incident Annotation",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"annotation\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/incident/:id/annotation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"incident",
												":id",
												"annotation"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the incident to clear the annotation at."
												}
											]
										},
										"description": "Sets the annotation of an incident with given id."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"annotation\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/incident/:id/annotation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"incident",
														":id",
														"annotation"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if no incident can be found for the given id.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"annotation\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/incident/:id/annotation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"incident",
														":id",
														"annotation"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Resolve Incident",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/incident/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"incident",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the incident to be resolved."
										}
									]
								},
								"description": "Resolves an incident with given id."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/incident/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"incident",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if an incident is not related to any execution or an incident is of type `failedJob` or\n`failedExternalTask`. To resolve such an incident, please refer to the\n[Incident Types](https://docs.camunda.org/manual/7.21/user-guide/process-engine/inciden",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/incident/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"incident",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "Returned if an incident with given id does not exist.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/incident/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"incident",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get Incident",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/incident/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"incident",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the incident to be retrieved."
										}
									]
								},
								"description": "Retrieves an incident by ID."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/incident/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"incident",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"incidentTimestamp\": \"<dateTime>\",\n  \"incidentType\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"failedActivityId\": \"<string>\",\n  \"causeIncidentId\": \"<string>\",\n  \"rootCauseIncidentId\": \"<string>\",\n  \"configuration\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"incidentMessage\": \"<string>\",\n  \"jobDefinitionId\": \"<string>\",\n  \"annotation\": \"<string>\"\n}"
								},
								{
									"name": "Returned if an incident with given id does not exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/incident/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"incident",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/incident?incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&processDefinitionId=<string>&processDefinitionKeyIn=<string>&processInstanceId=<string>&executionId=<string>&incidentTimestampBefore=<dateTime>&incidentTimestampAfter=<dateTime>&activityId=<string>&failedActivityId=<string>&causeIncidentId=<string>&rootCauseIncidentId=<string>&configuration=<string>&tenantIdIn=<string>&jobDefinitionIdIn=<string>&sortBy=executionId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"incident"
							],
							"query": [
								{
									"key": "incidentId",
									"value": "<string>",
									"description": "Restricts to incidents that have the given id."
								},
								{
									"key": "incidentType",
									"value": "<string>",
									"description": "Restricts to incidents that belong to the given incident type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types) for a list of incident\ntypes."
								},
								{
									"key": "incidentMessage",
									"value": "<string>",
									"description": "Restricts to incidents that have the given incident message."
								},
								{
									"key": "incidentMessageLike",
									"value": "<string>",
									"description": "Restricts to incidents that incidents message is a substring of the given value. The string can include\nthe wildcard character '%' to express like-strategy: starts with (`string%`), ends with (`%string`) or\ncontains (`%string%`)."
								},
								{
									"key": "processDefinitionId",
									"value": "<string>",
									"description": "Restricts to incidents that belong to a process definition with the given id."
								},
								{
									"key": "processDefinitionKeyIn",
									"value": "<string>",
									"description": "Restricts to incidents that belong to a process definition with the given keys. Must be a\ncomma-separated list."
								},
								{
									"key": "processInstanceId",
									"value": "<string>",
									"description": "Restricts to incidents that belong to a process instance with the given id."
								},
								{
									"key": "executionId",
									"value": "<string>",
									"description": "Restricts to incidents that belong to an execution with the given id."
								},
								{
									"key": "incidentTimestampBefore",
									"value": "<dateTime>",
									"description": "Restricts to incidents that have an incidentTimestamp date before the given date. \nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date\nmust have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
								},
								{
									"key": "incidentTimestampAfter",
									"value": "<dateTime>",
									"description": "Restricts to incidents that have an incidentTimestamp date after the given date. \nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date\nmust have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
								},
								{
									"key": "activityId",
									"value": "<string>",
									"description": "Restricts to incidents that belong to an activity with the given id."
								},
								{
									"key": "failedActivityId",
									"value": "<string>",
									"description": "Restricts to incidents that were created due to the failure of an activity with the given id."
								},
								{
									"key": "causeIncidentId",
									"value": "<string>",
									"description": "Restricts to incidents that have the given incident id as cause incident."
								},
								{
									"key": "rootCauseIncidentId",
									"value": "<string>",
									"description": "Restricts to incidents that have the given incident id as root cause incident."
								},
								{
									"key": "configuration",
									"value": "<string>",
									"description": "Restricts to incidents that have the given parameter set as configuration."
								},
								{
									"key": "tenantIdIn",
									"value": "<string>",
									"description": "Restricts to incidents that have one of the given comma-separated tenant ids."
								},
								{
									"key": "jobDefinitionIdIn",
									"value": "<string>",
									"description": "Restricts to incidents that have one of the given comma-separated job definition ids."
								},
								{
									"key": "sortBy",
									"value": "executionId",
									"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
								},
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return."
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
								}
							]
						},
						"description": "Queries for incidents that fulfill given parameters. The size of the result set can be retrieved by using\nthe [Get Incident Count](https://docs.camunda.org/manual/7.21/reference/rest/incident/get-query-count/) method."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/incident?incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&processDefinitionId=<string>&processDefinitionKeyIn=<string>&processInstanceId=<string>&executionId=<string>&incidentTimestampBefore=<dateTime>&incidentTimestampAfter=<dateTime>&activityId=<string>&failedActivityId=<string>&causeIncidentId=<string>&rootCauseIncidentId=<string>&configuration=<string>&tenantIdIn=<string>&jobDefinitionIdIn=<string>&sortBy=executionId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"incident"
									],
									"query": [
										{
											"key": "incidentId",
											"value": "<string>",
											"description": "Restricts to incidents that have the given id."
										},
										{
											"key": "incidentType",
											"value": "<string>",
											"description": "Restricts to incidents that belong to the given incident type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types) for a list of incident\ntypes."
										},
										{
											"key": "incidentMessage",
											"value": "<string>",
											"description": "Restricts to incidents that have the given incident message."
										},
										{
											"key": "incidentMessageLike",
											"value": "<string>",
											"description": "Restricts to incidents that incidents message is a substring of the given value. The string can include\nthe wildcard character '%' to express like-strategy: starts with (`string%`), ends with (`%string`) or\ncontains (`%string%`)."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Restricts to incidents that belong to a process definition with the given id."
										},
										{
											"key": "processDefinitionKeyIn",
											"value": "<string>",
											"description": "Restricts to incidents that belong to a process definition with the given keys. Must be a\ncomma-separated list."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Restricts to incidents that belong to a process instance with the given id."
										},
										{
											"key": "executionId",
											"value": "<string>",
											"description": "Restricts to incidents that belong to an execution with the given id."
										},
										{
											"key": "incidentTimestampBefore",
											"value": "<dateTime>",
											"description": "Restricts to incidents that have an incidentTimestamp date before the given date. \nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date\nmust have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "incidentTimestampAfter",
											"value": "<dateTime>",
											"description": "Restricts to incidents that have an incidentTimestamp date after the given date. \nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date\nmust have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "activityId",
											"value": "<string>",
											"description": "Restricts to incidents that belong to an activity with the given id."
										},
										{
											"key": "failedActivityId",
											"value": "<string>",
											"description": "Restricts to incidents that were created due to the failure of an activity with the given id."
										},
										{
											"key": "causeIncidentId",
											"value": "<string>",
											"description": "Restricts to incidents that have the given incident id as cause incident."
										},
										{
											"key": "rootCauseIncidentId",
											"value": "<string>",
											"description": "Restricts to incidents that have the given incident id as root cause incident."
										},
										{
											"key": "configuration",
											"value": "<string>",
											"description": "Restricts to incidents that have the given parameter set as configuration."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Restricts to incidents that have one of the given comma-separated tenant ids."
										},
										{
											"key": "jobDefinitionIdIn",
											"value": "<string>",
											"description": "Restricts to incidents that have one of the given comma-separated job definition ids."
										},
										{
											"key": "sortBy",
											"value": "executionId",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"incidentTimestamp\": \"<dateTime>\",\n    \"incidentType\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"failedActivityId\": \"<string>\",\n    \"causeIncidentId\": \"<string>\",\n    \"rootCauseIncidentId\": \"<string>\",\n    \"configuration\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"jobDefinitionId\": \"<string>\",\n    \"annotation\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"incidentTimestamp\": \"<dateTime>\",\n    \"incidentType\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"failedActivityId\": \"<string>\",\n    \"causeIncidentId\": \"<string>\",\n    \"rootCauseIncidentId\": \"<string>\",\n    \"configuration\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"jobDefinitionId\": \"<string>\",\n    \"annotation\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder` parameter is supplied,\nbut no `sortBy`. See the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error\nresponse format.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/incident?incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&processDefinitionId=<string>&processDefinitionKeyIn=<string>&processInstanceId=<string>&executionId=<string>&incidentTimestampBefore=<dateTime>&incidentTimestampAfter=<dateTime>&activityId=<string>&failedActivityId=<string>&causeIncidentId=<string>&rootCauseIncidentId=<string>&configuration=<string>&tenantIdIn=<string>&jobDefinitionIdIn=<string>&sortBy=executionId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"incident"
									],
									"query": [
										{
											"key": "incidentId",
											"value": "<string>",
											"description": "Restricts to incidents that have the given id."
										},
										{
											"key": "incidentType",
											"value": "<string>",
											"description": "Restricts to incidents that belong to the given incident type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types) for a list of incident\ntypes."
										},
										{
											"key": "incidentMessage",
											"value": "<string>",
											"description": "Restricts to incidents that have the given incident message."
										},
										{
											"key": "incidentMessageLike",
											"value": "<string>",
											"description": "Restricts to incidents that incidents message is a substring of the given value. The string can include\nthe wildcard character '%' to express like-strategy: starts with (`string%`), ends with (`%string`) or\ncontains (`%string%`)."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Restricts to incidents that belong to a process definition with the given id."
										},
										{
											"key": "processDefinitionKeyIn",
											"value": "<string>",
											"description": "Restricts to incidents that belong to a process definition with the given keys. Must be a\ncomma-separated list."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Restricts to incidents that belong to a process instance with the given id."
										},
										{
											"key": "executionId",
											"value": "<string>",
											"description": "Restricts to incidents that belong to an execution with the given id."
										},
										{
											"key": "incidentTimestampBefore",
											"value": "<dateTime>",
											"description": "Restricts to incidents that have an incidentTimestamp date before the given date. \nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date\nmust have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "incidentTimestampAfter",
											"value": "<dateTime>",
											"description": "Restricts to incidents that have an incidentTimestamp date after the given date. \nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date\nmust have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`."
										},
										{
											"key": "activityId",
											"value": "<string>",
											"description": "Restricts to incidents that belong to an activity with the given id."
										},
										{
											"key": "failedActivityId",
											"value": "<string>",
											"description": "Restricts to incidents that were created due to the failure of an activity with the given id."
										},
										{
											"key": "causeIncidentId",
											"value": "<string>",
											"description": "Restricts to incidents that have the given incident id as cause incident."
										},
										{
											"key": "rootCauseIncidentId",
											"value": "<string>",
											"description": "Restricts to incidents that have the given incident id as root cause incident."
										},
										{
											"key": "configuration",
											"value": "<string>",
											"description": "Restricts to incidents that have the given parameter set as configuration."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Restricts to incidents that have one of the given comma-separated tenant ids."
										},
										{
											"key": "jobDefinitionIdIn",
											"value": "<string>",
											"description": "Restricts to incidents that have one of the given comma-separated job definition ids."
										},
										{
											"key": "sortBy",
											"value": "executionId",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "job",
			"item": [
				{
					"name": "count",
					"item": [
						{
							"name": "Get Job Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/job/count?jobId=<string>&jobIds=<string>&jobDefinitionId=<string>&processInstanceId=<string>&processInstanceIds=<string>&executionId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&activityId=<string>&withRetriesLeft=<boolean>&executable=<boolean>&timers=<boolean>&messages=<boolean>&dueDates=<string>&createTimes=<string>&withException=<boolean>&exceptionMessage=<string>&failedActivityId=<string>&noRetriesLeft=<boolean>&active=<boolean>&suspended=<boolean>&priorityLowerThanOrEquals=<long>&priorityHigherThanOrEquals=<long>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeJobsWithoutTenantId=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job",
										"count"
									],
									"query": [
										{
											"key": "jobId",
											"value": "<string>",
											"description": "Filter by job id."
										},
										{
											"key": "jobIds",
											"value": "<string>",
											"description": "Filter by a comma-separated list of job ids."
										},
										{
											"key": "jobDefinitionId",
											"value": "<string>",
											"description": "Only select jobs which exist for the given job definition."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Only select jobs which exist for the given process instance."
										},
										{
											"key": "processInstanceIds",
											"value": "<string>",
											"description": "Only select jobs which exist for the given comma-separated list of process instance ids."
										},
										{
											"key": "executionId",
											"value": "<string>",
											"description": "Only select jobs which exist for the given execution."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Filter by the id of the process definition the jobs run on."
										},
										{
											"key": "processDefinitionKey",
											"value": "<string>",
											"description": "Filter by the key of the process definition the jobs run on."
										},
										{
											"key": "activityId",
											"value": "<string>",
											"description": "Only select jobs which exist for an activity with the given id."
										},
										{
											"key": "withRetriesLeft",
											"value": "<boolean>",
											"description": "Only select jobs which have retries left. Value may only be `true`, as `false` is the\ndefault behavior."
										},
										{
											"key": "executable",
											"value": "<boolean>",
											"description": "Only select jobs which are executable, i.e., retries > 0 and due date is `null` or due\ndate is in the past. Value may only be `true`, as `false` is the default\nbehavior."
										},
										{
											"key": "timers",
											"value": "<boolean>",
											"description": "Only select jobs that are timers. Cannot be used together with `messages`. Value may only\nbe `true`, as `false` is the default behavior."
										},
										{
											"key": "messages",
											"value": "<boolean>",
											"description": "Only select jobs that are messages. Cannot be used together with `timers`. Value may only\nbe `true`, as `false` is the default behavior."
										},
										{
											"key": "dueDates",
											"value": "<string>",
											"description": "Only select jobs where the due date is lower or higher than the given date.\nDue date expressions are comma-separated and are structured as follows:\n\nA valid condition value has the form `operator_value`.\n`operator` is the comparison operator to be used and `value` the date value\nas string.\n\nValid operator values are: `gt` - greater than; `lt` - lower than.\n`value` may not contain underscore or comma characters."
										},
										{
											"key": "createTimes",
											"value": "<string>",
											"description": "Only select jobs created before or after the given date.\n\nCreate time expressions are comma-separated and are structured as\nfollows:\n\nA valid condition value has the form `operator_value`.\n`operator` is the comparison operator to be used and `value` the date value\nas string.\n\nValid operator values are: `gt` - greater than; `lt` - lower than.\n`value` may not contain underscore or comma characters."
										},
										{
											"key": "withException",
											"value": "<boolean>",
											"description": "Only select jobs that failed due to an exception. Value may only be `true`, as `false` is\nthe default behavior."
										},
										{
											"key": "exceptionMessage",
											"value": "<string>",
											"description": "Only select jobs that failed due to an exception with the given message."
										},
										{
											"key": "failedActivityId",
											"value": "<string>",
											"description": "Only select jobs that failed due to an exception at an activity with the given id."
										},
										{
											"key": "noRetriesLeft",
											"value": "<boolean>",
											"description": "Only select jobs which have no retries left. Value may only be `true`, as `false` is the\ndefault behavior."
										},
										{
											"key": "active",
											"value": "<boolean>",
											"description": "Only include active jobs. Value may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "suspended",
											"value": "<boolean>",
											"description": "Only include suspended jobs. Value may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "priorityLowerThanOrEquals",
											"value": "<long>",
											"description": "Only include jobs with a priority lower than or equal to the given value. Value must be a\nvalid `long` value."
										},
										{
											"key": "priorityHigherThanOrEquals",
											"value": "<long>",
											"description": "Only include jobs with a priority higher than or equal to the given value. Value must be a\nvalid `long` value."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Only include jobs which belong to one of the passed comma-separated tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include jobs which belong to no tenant. Value may only be `true`, as `false` is the\ndefault behavior."
										},
										{
											"key": "includeJobsWithoutTenantId",
											"value": "<boolean>",
											"description": "Include jobs which belong to no tenant. Can be used in combination with `tenantIdIn`.\nValue may only be `true`, as `false` is the default behavior."
										}
									]
								},
								"description": "Queries for the number of jobs that fulfill given parameters.\nTakes the same parameters as the [Get\nJobs](https://docs.camunda.org/manual/7.21/reference/rest/job/get-query/) method."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/job/count?jobId=<string>&jobIds=<string>&jobDefinitionId=<string>&processInstanceId=<string>&processInstanceIds=<string>&executionId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&activityId=<string>&withRetriesLeft=<boolean>&executable=<boolean>&timers=<boolean>&messages=<boolean>&dueDates=<string>&createTimes=<string>&withException=<boolean>&exceptionMessage=<string>&failedActivityId=<string>&noRetriesLeft=<boolean>&active=<boolean>&suspended=<boolean>&priorityLowerThanOrEquals=<long>&priorityHigherThanOrEquals=<long>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeJobsWithoutTenantId=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												"count"
											],
											"query": [
												{
													"key": "jobId",
													"value": "<string>",
													"description": "Filter by job id."
												},
												{
													"key": "jobIds",
													"value": "<string>",
													"description": "Filter by a comma-separated list of job ids."
												},
												{
													"key": "jobDefinitionId",
													"value": "<string>",
													"description": "Only select jobs which exist for the given job definition."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Only select jobs which exist for the given process instance."
												},
												{
													"key": "processInstanceIds",
													"value": "<string>",
													"description": "Only select jobs which exist for the given comma-separated list of process instance ids."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Only select jobs which exist for the given execution."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by the id of the process definition the jobs run on."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Filter by the key of the process definition the jobs run on."
												},
												{
													"key": "activityId",
													"value": "<string>",
													"description": "Only select jobs which exist for an activity with the given id."
												},
												{
													"key": "withRetriesLeft",
													"value": "<boolean>",
													"description": "Only select jobs which have retries left. Value may only be `true`, as `false` is the\ndefault behavior."
												},
												{
													"key": "executable",
													"value": "<boolean>",
													"description": "Only select jobs which are executable, i.e., retries > 0 and due date is `null` or due\ndate is in the past. Value may only be `true`, as `false` is the default\nbehavior."
												},
												{
													"key": "timers",
													"value": "<boolean>",
													"description": "Only select jobs that are timers. Cannot be used together with `messages`. Value may only\nbe `true`, as `false` is the default behavior."
												},
												{
													"key": "messages",
													"value": "<boolean>",
													"description": "Only select jobs that are messages. Cannot be used together with `timers`. Value may only\nbe `true`, as `false` is the default behavior."
												},
												{
													"key": "dueDates",
													"value": "<string>",
													"description": "Only select jobs where the due date is lower or higher than the given date.\nDue date expressions are comma-separated and are structured as follows:\n\nA valid condition value has the form `operator_value`.\n`operator` is the comparison operator to be used and `value` the date value\nas string.\n\nValid operator values are: `gt` - greater than; `lt` - lower than.\n`value` may not contain underscore or comma characters."
												},
												{
													"key": "createTimes",
													"value": "<string>",
													"description": "Only select jobs created before or after the given date.\n\nCreate time expressions are comma-separated and are structured as\nfollows:\n\nA valid condition value has the form `operator_value`.\n`operator` is the comparison operator to be used and `value` the date value\nas string.\n\nValid operator values are: `gt` - greater than; `lt` - lower than.\n`value` may not contain underscore or comma characters."
												},
												{
													"key": "withException",
													"value": "<boolean>",
													"description": "Only select jobs that failed due to an exception. Value may only be `true`, as `false` is\nthe default behavior."
												},
												{
													"key": "exceptionMessage",
													"value": "<string>",
													"description": "Only select jobs that failed due to an exception with the given message."
												},
												{
													"key": "failedActivityId",
													"value": "<string>",
													"description": "Only select jobs that failed due to an exception at an activity with the given id."
												},
												{
													"key": "noRetriesLeft",
													"value": "<boolean>",
													"description": "Only select jobs which have no retries left. Value may only be `true`, as `false` is the\ndefault behavior."
												},
												{
													"key": "active",
													"value": "<boolean>",
													"description": "Only include active jobs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "suspended",
													"value": "<boolean>",
													"description": "Only include suspended jobs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "priorityLowerThanOrEquals",
													"value": "<long>",
													"description": "Only include jobs with a priority lower than or equal to the given value. Value must be a\nvalid `long` value."
												},
												{
													"key": "priorityHigherThanOrEquals",
													"value": "<long>",
													"description": "Only include jobs with a priority higher than or equal to the given value. Value must be a\nvalid `long` value."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Only include jobs which belong to one of the passed comma-separated tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include jobs which belong to no tenant. Value may only be `true`, as `false` is the\ndefault behavior."
												},
												{
													"key": "includeJobsWithoutTenantId",
													"value": "<boolean>",
													"description": "Include jobs which belong to no tenant. Can be used in combination with `tenantIdIn`.\nValue may only be `true`, as `false` is the default behavior."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example, if an invalid operator\nfor due date comparison is used. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/job/count?jobId=<string>&jobIds=<string>&jobDefinitionId=<string>&processInstanceId=<string>&processInstanceIds=<string>&executionId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&activityId=<string>&withRetriesLeft=<boolean>&executable=<boolean>&timers=<boolean>&messages=<boolean>&dueDates=<string>&createTimes=<string>&withException=<boolean>&exceptionMessage=<string>&failedActivityId=<string>&noRetriesLeft=<boolean>&active=<boolean>&suspended=<boolean>&priorityLowerThanOrEquals=<long>&priorityHigherThanOrEquals=<long>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeJobsWithoutTenantId=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												"count"
											],
											"query": [
												{
													"key": "jobId",
													"value": "<string>",
													"description": "Filter by job id."
												},
												{
													"key": "jobIds",
													"value": "<string>",
													"description": "Filter by a comma-separated list of job ids."
												},
												{
													"key": "jobDefinitionId",
													"value": "<string>",
													"description": "Only select jobs which exist for the given job definition."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Only select jobs which exist for the given process instance."
												},
												{
													"key": "processInstanceIds",
													"value": "<string>",
													"description": "Only select jobs which exist for the given comma-separated list of process instance ids."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Only select jobs which exist for the given execution."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by the id of the process definition the jobs run on."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Filter by the key of the process definition the jobs run on."
												},
												{
													"key": "activityId",
													"value": "<string>",
													"description": "Only select jobs which exist for an activity with the given id."
												},
												{
													"key": "withRetriesLeft",
													"value": "<boolean>",
													"description": "Only select jobs which have retries left. Value may only be `true`, as `false` is the\ndefault behavior."
												},
												{
													"key": "executable",
													"value": "<boolean>",
													"description": "Only select jobs which are executable, i.e., retries > 0 and due date is `null` or due\ndate is in the past. Value may only be `true`, as `false` is the default\nbehavior."
												},
												{
													"key": "timers",
													"value": "<boolean>",
													"description": "Only select jobs that are timers. Cannot be used together with `messages`. Value may only\nbe `true`, as `false` is the default behavior."
												},
												{
													"key": "messages",
													"value": "<boolean>",
													"description": "Only select jobs that are messages. Cannot be used together with `timers`. Value may only\nbe `true`, as `false` is the default behavior."
												},
												{
													"key": "dueDates",
													"value": "<string>",
													"description": "Only select jobs where the due date is lower or higher than the given date.\nDue date expressions are comma-separated and are structured as follows:\n\nA valid condition value has the form `operator_value`.\n`operator` is the comparison operator to be used and `value` the date value\nas string.\n\nValid operator values are: `gt` - greater than; `lt` - lower than.\n`value` may not contain underscore or comma characters."
												},
												{
													"key": "createTimes",
													"value": "<string>",
													"description": "Only select jobs created before or after the given date.\n\nCreate time expressions are comma-separated and are structured as\nfollows:\n\nA valid condition value has the form `operator_value`.\n`operator` is the comparison operator to be used and `value` the date value\nas string.\n\nValid operator values are: `gt` - greater than; `lt` - lower than.\n`value` may not contain underscore or comma characters."
												},
												{
													"key": "withException",
													"value": "<boolean>",
													"description": "Only select jobs that failed due to an exception. Value may only be `true`, as `false` is\nthe default behavior."
												},
												{
													"key": "exceptionMessage",
													"value": "<string>",
													"description": "Only select jobs that failed due to an exception with the given message."
												},
												{
													"key": "failedActivityId",
													"value": "<string>",
													"description": "Only select jobs that failed due to an exception at an activity with the given id."
												},
												{
													"key": "noRetriesLeft",
													"value": "<boolean>",
													"description": "Only select jobs which have no retries left. Value may only be `true`, as `false` is the\ndefault behavior."
												},
												{
													"key": "active",
													"value": "<boolean>",
													"description": "Only include active jobs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "suspended",
													"value": "<boolean>",
													"description": "Only include suspended jobs. Value may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "priorityLowerThanOrEquals",
													"value": "<long>",
													"description": "Only include jobs with a priority lower than or equal to the given value. Value must be a\nvalid `long` value."
												},
												{
													"key": "priorityHigherThanOrEquals",
													"value": "<long>",
													"description": "Only include jobs with a priority higher than or equal to the given value. Value must be a\nvalid `long` value."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Only include jobs which belong to one of the passed comma-separated tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include jobs which belong to no tenant. Value may only be `true`, as `false` is the\ndefault behavior."
												},
												{
													"key": "includeJobsWithoutTenantId",
													"value": "<boolean>",
													"description": "Include jobs which belong to no tenant. Can be used in combination with `tenantIdIn`.\nValue may only be `true`, as `false` is the default behavior."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get Job Count (POST)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobId\": \"<string>\",\n  \"jobIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"jobDefinitionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"withRetriesLeft\": \"<boolean>\",\n  \"executable\": \"<boolean>\",\n  \"timers\": \"<boolean>\",\n  \"messages\": \"<boolean>\",\n  \"dueDates\": [\n    {\n      \"operator\": \"lt\",\n      \"value\": \"<dateTime>\"\n    },\n    {\n      \"operator\": \"gt\",\n      \"value\": \"<dateTime>\"\n    }\n  ],\n  \"createTimes\": [\n    {\n      \"operator\": \"lt\",\n      \"value\": \"<dateTime>\"\n    },\n    {\n      \"operator\": \"lt\",\n      \"value\": \"<dateTime>\"\n    }\n  ],\n  \"withException\": \"<boolean>\",\n  \"exceptionMessage\": \"<string>\",\n  \"failedActivityId\": \"<string>\",\n  \"noRetriesLeft\": \"<boolean>\",\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"priorityLowerThanOrEquals\": \"<long>\",\n  \"priorityHigherThanOrEquals\": \"<long>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"includeJobsWithoutTenantId\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"jobRetries\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"executionId\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/job/count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job",
										"count"
									]
								},
								"description": "Queries for jobs that fulfill given parameters. This method takes the same message\nbody as the [Get Jobs POST](https://docs.camunda.org/manual/7.21/reference/rest/job/post-\nquery/) method and therefore it is slightly more powerful than the\n[Get Job Count](https://docs.camunda.org/manual/7.21/reference/rest/job/get-query-count/)\nmethod."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobId\": \"<string>\",\n  \"jobIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"jobDefinitionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"withRetriesLeft\": \"<boolean>\",\n  \"executable\": \"<boolean>\",\n  \"timers\": \"<boolean>\",\n  \"messages\": \"<boolean>\",\n  \"dueDates\": [\n    {\n      \"operator\": \"lt\",\n      \"value\": \"<dateTime>\"\n    },\n    {\n      \"operator\": \"gt\",\n      \"value\": \"<dateTime>\"\n    }\n  ],\n  \"createTimes\": [\n    {\n      \"operator\": \"lt\",\n      \"value\": \"<dateTime>\"\n    },\n    {\n      \"operator\": \"lt\",\n      \"value\": \"<dateTime>\"\n    }\n  ],\n  \"withException\": \"<boolean>\",\n  \"exceptionMessage\": \"<string>\",\n  \"failedActivityId\": \"<string>\",\n  \"noRetriesLeft\": \"<boolean>\",\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"priorityLowerThanOrEquals\": \"<long>\",\n  \"priorityHigherThanOrEquals\": \"<long>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"includeJobsWithoutTenantId\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"jobRetries\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"executionId\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/job/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												"count"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example, if an invalid operator\nfor due date comparison is used. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobId\": \"<string>\",\n  \"jobIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"jobDefinitionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"withRetriesLeft\": \"<boolean>\",\n  \"executable\": \"<boolean>\",\n  \"timers\": \"<boolean>\",\n  \"messages\": \"<boolean>\",\n  \"dueDates\": [\n    {\n      \"operator\": \"lt\",\n      \"value\": \"<dateTime>\"\n    },\n    {\n      \"operator\": \"gt\",\n      \"value\": \"<dateTime>\"\n    }\n  ],\n  \"createTimes\": [\n    {\n      \"operator\": \"lt\",\n      \"value\": \"<dateTime>\"\n    },\n    {\n      \"operator\": \"lt\",\n      \"value\": \"<dateTime>\"\n    }\n  ],\n  \"withException\": \"<boolean>\",\n  \"exceptionMessage\": \"<string>\",\n  \"failedActivityId\": \"<string>\",\n  \"noRetriesLeft\": \"<boolean>\",\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"priorityLowerThanOrEquals\": \"<long>\",\n  \"priorityHigherThanOrEquals\": \"<long>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"includeJobsWithoutTenantId\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"jobRetries\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"executionId\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/job/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												"count"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "retries",
					"item": [
						{
							"name": "Set Job Retries Async (POST)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"jobQuery\": {\n    \"jobId\": \"<string>\",\n    \"jobIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"jobDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"executionId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"withRetriesLeft\": \"<boolean>\",\n    \"executable\": \"<boolean>\",\n    \"timers\": \"<boolean>\",\n    \"messages\": \"<boolean>\",\n    \"dueDates\": [\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      },\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      }\n    ],\n    \"createTimes\": [\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      },\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      }\n    ],\n    \"withException\": \"<boolean>\",\n    \"exceptionMessage\": \"<string>\",\n    \"failedActivityId\": \"<string>\",\n    \"noRetriesLeft\": \"<boolean>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"priorityLowerThanOrEquals\": \"<long>\",\n    \"priorityHigherThanOrEquals\": \"<long>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"includeJobsWithoutTenantId\": \"<boolean>\",\n    \"sorting\": [\n      {\n        \"sortBy\": \"jobPriority\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"processInstanceId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"dueDate\": \"<dateTime>\",\n  \"retries\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/job/retries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job",
										"retries"
									]
								},
								"description": "Create a batch to set retries of jobs asynchronously."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"jobQuery\": {\n    \"jobId\": \"<string>\",\n    \"jobIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"jobDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"executionId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"withRetriesLeft\": \"<boolean>\",\n    \"executable\": \"<boolean>\",\n    \"timers\": \"<boolean>\",\n    \"messages\": \"<boolean>\",\n    \"dueDates\": [\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      },\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      }\n    ],\n    \"createTimes\": [\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      },\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      }\n    ],\n    \"withException\": \"<boolean>\",\n    \"exceptionMessage\": \"<string>\",\n    \"failedActivityId\": \"<string>\",\n    \"noRetriesLeft\": \"<boolean>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"priorityLowerThanOrEquals\": \"<long>\",\n    \"priorityHigherThanOrEquals\": \"<long>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"includeJobsWithoutTenantId\": \"<boolean>\",\n    \"sorting\": [\n      {\n        \"sortBy\": \"jobPriority\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"processInstanceId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"dueDate\": \"<dateTime>\",\n  \"retries\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/job/retries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												"retries"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"totalJobs\": \"<integer>\",\n  \"jobsCreated\": \"<integer>\",\n  \"batchJobsPerSeed\": \"<integer>\",\n  \"invocationsPerBatchJob\": \"<integer>\",\n  \"seedJobDefinitionId\": \"<string>\",\n  \"monitorJobDefinitionId\": \"<string>\",\n  \"batchJobDefinitionId\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"createUserId\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"executionStartTime\": \"<dateTime>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example if neither\nprocessInstanceIds nor processInstanceQuery is present. Or if the\nretry count is not specified. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overvie",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"jobQuery\": {\n    \"jobId\": \"<string>\",\n    \"jobIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"jobDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"executionId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"withRetriesLeft\": \"<boolean>\",\n    \"executable\": \"<boolean>\",\n    \"timers\": \"<boolean>\",\n    \"messages\": \"<boolean>\",\n    \"dueDates\": [\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      },\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      }\n    ],\n    \"createTimes\": [\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      },\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      }\n    ],\n    \"withException\": \"<boolean>\",\n    \"exceptionMessage\": \"<string>\",\n    \"failedActivityId\": \"<string>\",\n    \"noRetriesLeft\": \"<boolean>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"priorityLowerThanOrEquals\": \"<long>\",\n    \"priorityHigherThanOrEquals\": \"<long>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"includeJobsWithoutTenantId\": \"<boolean>\",\n    \"sorting\": [\n      {\n        \"sortBy\": \"jobPriority\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"processInstanceId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"dueDate\": \"<dateTime>\",\n  \"retries\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/job/retries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												"retries"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "suspended",
					"item": [
						{
							"name": "Activate/Suspend Jobs",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobDefinitionId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionTenantId\": \"<string>\",\n  \"processDefinitionWithoutTenantId\": \"<boolean>\",\n  \"suspended\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/job/suspended",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job",
										"suspended"
									]
								},
								"description": "Activates or suspends jobs matching the given criterion.\nThis can only be on of:\n* `jobDefinitionId`\n* `processDefinitionId`\n* `processInstanceId`\n* `processDefinitionKey`"
							},
							"response": [
								{
									"name": "Request successful. This method returns no content.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobDefinitionId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionTenantId\": \"<string>\",\n  \"processDefinitionWithoutTenantId\": \"<boolean>\",\n  \"suspended\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/job/suspended",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												"suspended"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request parameters are invalid, for example, if `jobDefinitionId` and\n`processDefinitionId` are both specified.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response for",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobDefinitionId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionTenantId\": \"<string>\",\n  \"processDefinitionWithoutTenantId\": \"<boolean>\",\n  \"suspended\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/job/suspended",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												"suspended"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "duedate",
							"item": [
								{
									"name": "recalculate",
									"item": [
										{
											"name": "Recalculate Job Due Date",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/job/:id/duedate/recalculate?creationDateBased=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"job",
														":id",
														"duedate",
														"recalculate"
													],
													"query": [
														{
															"key": "creationDateBased",
															"value": "<boolean>",
															"description": "Recalculate the due date based on the creation date of the job or the current date.\nValue may only be `false`, as `true` is the default behavior. "
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the job to be updated."
														}
													]
												},
												"description": "Recalculates the due date of a job by id."
											},
											"response": [
												{
													"name": "Request successful. This method returns no content.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/job/:id/duedate/recalculate?creationDateBased=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"job",
																":id",
																"duedate",
																"recalculate"
															],
															"query": [
																{
																	"key": "creationDateBased",
																	"value": "<boolean>",
																	"description": "Recalculate the due date based on the creation date of the job or the current date.\nValue may only be `false`, as `true` is the default behavior. "
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Job with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/job/:id/duedate/recalculate?creationDateBased=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"job",
																":id",
																"duedate",
																"recalculate"
															],
															"query": [
																{
																	"key": "creationDateBased",
																	"value": "<boolean>",
																	"description": "Recalculate the due date based on the creation date of the job or the current date.\nValue may only be `false`, as `true` is the default behavior. "
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "The due date could not be recalculated successfully. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/job/:id/duedate/recalculate?creationDateBased=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"job",
																":id",
																"duedate",
																"recalculate"
															],
															"query": [
																{
																	"key": "creationDateBased",
																	"value": "<boolean>",
																	"description": "Recalculate the due date based on the creation date of the job or the current date.\nValue may only be `false`, as `true` is the default behavior. "
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Set Job Due Date",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"duedate\": \"<dateTime>\",\n  \"cascade\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/job/:id/duedate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												":id",
												"duedate"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the job to be updated."
												}
											]
										},
										"description": "Updates the due date of a job by id."
									},
									"response": [
										{
											"name": "Request successful. This method returns no content.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"duedate\": \"<dateTime>\",\n  \"cascade\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/job/:id/duedate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"job",
														":id",
														"duedate"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Job with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"duedate\": \"<dateTime>\",\n  \"cascade\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/job/:id/duedate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"job",
														":id",
														"duedate"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "The due date could not be set successfully. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"duedate\": \"<dateTime>\",\n  \"cascade\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/job/:id/duedate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"job",
														":id",
														"duedate"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "execute",
							"item": [
								{
									"name": "Execute Job",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/job/:id/execute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												":id",
												"execute"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the job to be executed."
												}
											]
										},
										"description": "Executes a job by id. **Note:** The execution of the job happens synchronously in\nthe same thread."
									},
									"response": [
										{
											"name": "Request successful. This method returns no content.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/job/:id/execute",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"job",
														":id",
														"execute"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Job with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/job/:id/execute",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"job",
														":id",
														"execute"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "The job could not be executed successfully. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/job/:id/execute",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"job",
														":id",
														"execute"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "priority",
							"item": [
								{
									"name": "Set Job Priority",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"priority\": \"<long>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/job/:id/priority",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												":id",
												"priority"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the job to be updated."
												}
											]
										},
										"description": "Sets the execution priority of a job by id."
									},
									"response": [
										{
											"name": "Request successful. This method returns no content.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"priority\": \"<long>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/job/:id/priority",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"job",
														":id",
														"priority"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Job with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"priority\": \"<long>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/job/:id/priority",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"job",
														":id",
														"priority"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "The priority could not be set successfully. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"priority\": \"<long>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/job/:id/priority",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"job",
														":id",
														"priority"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "retries",
							"item": [
								{
									"name": "Set Job Retries",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"dueDate\": \"<dateTime>\",\n  \"retries\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/job/:id/retries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												":id",
												"retries"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the job to be updated."
												}
											]
										},
										"description": "Sets the retries of the job to the given number of retries by id."
									},
									"response": [
										{
											"name": "Request successful. This method returns no content.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dueDate\": \"<dateTime>\",\n  \"retries\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/job/:id/retries",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"job",
														":id",
														"retries"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Job with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dueDate\": \"<dateTime>\",\n  \"retries\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/job/:id/retries",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"job",
														":id",
														"retries"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "The retries could not be set successfully. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dueDate\": \"<dateTime>\",\n  \"retries\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/job/:id/retries",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"job",
														":id",
														"retries"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "stacktrace",
							"item": [
								{
									"name": "Get Exception Stacktrace",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/job/:id/stacktrace",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												":id",
												"stacktrace"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the job to get the exception stacktrace for."
												}
											]
										},
										"description": "Retrieves the exception stacktrace corresponding to the passed job id."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/job/:id/stacktrace",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"job",
														":id",
														"stacktrace"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Job with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/job/:id/stacktrace",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"job",
														":id",
														"stacktrace"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "suspended",
							"item": [
								{
									"name": "Activate/Suspend Job By Id",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"suspended\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/job/:id/suspended",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												":id",
												"suspended"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the job to activate or suspend."
												}
											]
										},
										"description": "Activates or suspends a given job by id."
									},
									"response": [
										{
											"name": "Request successful. This method returns no content.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"suspended\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/job/:id/suspended",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"job",
														":id",
														"suspended"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Delete Job",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/job/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the job to be deleted."
										}
									]
								},
								"description": "Deletes a job by id."
							},
							"response": [
								{
									"name": "Request successful. This method returns no content.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/job/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Job with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/job/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "The job could not be deleted. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/job/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get Job",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/job/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the job to be retrieved."
										}
									]
								},
								"description": "Retrieves a job by id, according to the `Job` interface in the engine."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/job/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"jobDefinitionId\": \"<string>\",\n  \"dueDate\": \"<dateTime>\",\n  \"processInstanceId\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"retries\": \"<integer>\",\n  \"exceptionMessage\": \"<string>\",\n  \"failedActivityId\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"priority\": \"<long>\",\n  \"tenantId\": \"<string>\",\n  \"createTime\": \"<dateTime>\"\n}"
								},
								{
									"name": "Job with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/job/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get Jobs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/job?jobId=<string>&jobIds=<string>&jobDefinitionId=<string>&processInstanceId=<string>&processInstanceIds=<string>&executionId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&activityId=<string>&withRetriesLeft=<boolean>&executable=<boolean>&timers=<boolean>&messages=<boolean>&dueDates=<string>&createTimes=<string>&withException=<boolean>&exceptionMessage=<string>&failedActivityId=<string>&noRetriesLeft=<boolean>&active=<boolean>&suspended=<boolean>&priorityLowerThanOrEquals=<long>&priorityHigherThanOrEquals=<long>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeJobsWithoutTenantId=<boolean>&sortBy=processInstanceId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"job"
							],
							"query": [
								{
									"key": "jobId",
									"value": "<string>",
									"description": "Filter by job id."
								},
								{
									"key": "jobIds",
									"value": "<string>",
									"description": "Filter by a comma-separated list of job ids."
								},
								{
									"key": "jobDefinitionId",
									"value": "<string>",
									"description": "Only select jobs which exist for the given job definition."
								},
								{
									"key": "processInstanceId",
									"value": "<string>",
									"description": "Only select jobs which exist for the given process instance."
								},
								{
									"key": "processInstanceIds",
									"value": "<string>",
									"description": "Only select jobs which exist for the given comma-separated list of process instance ids."
								},
								{
									"key": "executionId",
									"value": "<string>",
									"description": "Only select jobs which exist for the given execution."
								},
								{
									"key": "processDefinitionId",
									"value": "<string>",
									"description": "Filter by the id of the process definition the jobs run on."
								},
								{
									"key": "processDefinitionKey",
									"value": "<string>",
									"description": "Filter by the key of the process definition the jobs run on."
								},
								{
									"key": "activityId",
									"value": "<string>",
									"description": "Only select jobs which exist for an activity with the given id."
								},
								{
									"key": "withRetriesLeft",
									"value": "<boolean>",
									"description": "Only select jobs which have retries left. Value may only be `true`, as `false` is the\ndefault behavior."
								},
								{
									"key": "executable",
									"value": "<boolean>",
									"description": "Only select jobs which are executable, i.e., retries > 0 and due date is `null` or due\ndate is in the past. Value may only be `true`, as `false` is the default\nbehavior."
								},
								{
									"key": "timers",
									"value": "<boolean>",
									"description": "Only select jobs that are timers. Cannot be used together with `messages`. Value may only\nbe `true`, as `false` is the default behavior."
								},
								{
									"key": "messages",
									"value": "<boolean>",
									"description": "Only select jobs that are messages. Cannot be used together with `timers`. Value may only\nbe `true`, as `false` is the default behavior."
								},
								{
									"key": "dueDates",
									"value": "<string>",
									"description": "Only select jobs where the due date is lower or higher than the given date.\nDue date expressions are comma-separated and are structured as follows:\n\nA valid condition value has the form `operator_value`.\n`operator` is the comparison operator to be used and `value` the date value\nas string.\n\nValid operator values are: `gt` - greater than; `lt` - lower than.\n`value` may not contain underscore or comma characters."
								},
								{
									"key": "createTimes",
									"value": "<string>",
									"description": "Only select jobs created before or after the given date.\n\nCreate time expressions are comma-separated and are structured as\nfollows:\n\nA valid condition value has the form `operator_value`.\n`operator` is the comparison operator to be used and `value` the date value\nas string.\n\nValid operator values are: `gt` - greater than; `lt` - lower than.\n`value` may not contain underscore or comma characters."
								},
								{
									"key": "withException",
									"value": "<boolean>",
									"description": "Only select jobs that failed due to an exception. Value may only be `true`, as `false` is\nthe default behavior."
								},
								{
									"key": "exceptionMessage",
									"value": "<string>",
									"description": "Only select jobs that failed due to an exception with the given message."
								},
								{
									"key": "failedActivityId",
									"value": "<string>",
									"description": "Only select jobs that failed due to an exception at an activity with the given id."
								},
								{
									"key": "noRetriesLeft",
									"value": "<boolean>",
									"description": "Only select jobs which have no retries left. Value may only be `true`, as `false` is the\ndefault behavior."
								},
								{
									"key": "active",
									"value": "<boolean>",
									"description": "Only include active jobs. Value may only be `true`, as `false` is the default behavior."
								},
								{
									"key": "suspended",
									"value": "<boolean>",
									"description": "Only include suspended jobs. Value may only be `true`, as `false` is the default behavior."
								},
								{
									"key": "priorityLowerThanOrEquals",
									"value": "<long>",
									"description": "Only include jobs with a priority lower than or equal to the given value. Value must be a\nvalid `long` value."
								},
								{
									"key": "priorityHigherThanOrEquals",
									"value": "<long>",
									"description": "Only include jobs with a priority higher than or equal to the given value. Value must be a\nvalid `long` value."
								},
								{
									"key": "tenantIdIn",
									"value": "<string>",
									"description": "Only include jobs which belong to one of the passed comma-separated tenant ids."
								},
								{
									"key": "withoutTenantId",
									"value": "<boolean>",
									"description": "Only include jobs which belong to no tenant. Value may only be `true`, as `false` is the\ndefault behavior."
								},
								{
									"key": "includeJobsWithoutTenantId",
									"value": "<boolean>",
									"description": "Include jobs which belong to no tenant. Can be used in combination with `tenantIdIn`.\nValue may only be `true`, as `false` is the default behavior."
								},
								{
									"key": "sortBy",
									"value": "processInstanceId",
									"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
								},
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return."
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
								}
							]
						},
						"description": "Queries for jobs that fulfill given parameters.\nThe size of the result set can be retrieved by using the [Get Job\nCount](https://docs.camunda.org/manual/7.21/reference/rest/job/get-query-count/) method."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/job?jobId=<string>&jobIds=<string>&jobDefinitionId=<string>&processInstanceId=<string>&processInstanceIds=<string>&executionId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&activityId=<string>&withRetriesLeft=<boolean>&executable=<boolean>&timers=<boolean>&messages=<boolean>&dueDates=<string>&createTimes=<string>&withException=<boolean>&exceptionMessage=<string>&failedActivityId=<string>&noRetriesLeft=<boolean>&active=<boolean>&suspended=<boolean>&priorityLowerThanOrEquals=<long>&priorityHigherThanOrEquals=<long>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeJobsWithoutTenantId=<boolean>&sortBy=processInstanceId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job"
									],
									"query": [
										{
											"key": "jobId",
											"value": "<string>",
											"description": "Filter by job id."
										},
										{
											"key": "jobIds",
											"value": "<string>",
											"description": "Filter by a comma-separated list of job ids."
										},
										{
											"key": "jobDefinitionId",
											"value": "<string>",
											"description": "Only select jobs which exist for the given job definition."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Only select jobs which exist for the given process instance."
										},
										{
											"key": "processInstanceIds",
											"value": "<string>",
											"description": "Only select jobs which exist for the given comma-separated list of process instance ids."
										},
										{
											"key": "executionId",
											"value": "<string>",
											"description": "Only select jobs which exist for the given execution."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Filter by the id of the process definition the jobs run on."
										},
										{
											"key": "processDefinitionKey",
											"value": "<string>",
											"description": "Filter by the key of the process definition the jobs run on."
										},
										{
											"key": "activityId",
											"value": "<string>",
											"description": "Only select jobs which exist for an activity with the given id."
										},
										{
											"key": "withRetriesLeft",
											"value": "<boolean>",
											"description": "Only select jobs which have retries left. Value may only be `true`, as `false` is the\ndefault behavior."
										},
										{
											"key": "executable",
											"value": "<boolean>",
											"description": "Only select jobs which are executable, i.e., retries > 0 and due date is `null` or due\ndate is in the past. Value may only be `true`, as `false` is the default\nbehavior."
										},
										{
											"key": "timers",
											"value": "<boolean>",
											"description": "Only select jobs that are timers. Cannot be used together with `messages`. Value may only\nbe `true`, as `false` is the default behavior."
										},
										{
											"key": "messages",
											"value": "<boolean>",
											"description": "Only select jobs that are messages. Cannot be used together with `timers`. Value may only\nbe `true`, as `false` is the default behavior."
										},
										{
											"key": "dueDates",
											"value": "<string>",
											"description": "Only select jobs where the due date is lower or higher than the given date.\nDue date expressions are comma-separated and are structured as follows:\n\nA valid condition value has the form `operator_value`.\n`operator` is the comparison operator to be used and `value` the date value\nas string.\n\nValid operator values are: `gt` - greater than; `lt` - lower than.\n`value` may not contain underscore or comma characters."
										},
										{
											"key": "createTimes",
											"value": "<string>",
											"description": "Only select jobs created before or after the given date.\n\nCreate time expressions are comma-separated and are structured as\nfollows:\n\nA valid condition value has the form `operator_value`.\n`operator` is the comparison operator to be used and `value` the date value\nas string.\n\nValid operator values are: `gt` - greater than; `lt` - lower than.\n`value` may not contain underscore or comma characters."
										},
										{
											"key": "withException",
											"value": "<boolean>",
											"description": "Only select jobs that failed due to an exception. Value may only be `true`, as `false` is\nthe default behavior."
										},
										{
											"key": "exceptionMessage",
											"value": "<string>",
											"description": "Only select jobs that failed due to an exception with the given message."
										},
										{
											"key": "failedActivityId",
											"value": "<string>",
											"description": "Only select jobs that failed due to an exception at an activity with the given id."
										},
										{
											"key": "noRetriesLeft",
											"value": "<boolean>",
											"description": "Only select jobs which have no retries left. Value may only be `true`, as `false` is the\ndefault behavior."
										},
										{
											"key": "active",
											"value": "<boolean>",
											"description": "Only include active jobs. Value may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "suspended",
											"value": "<boolean>",
											"description": "Only include suspended jobs. Value may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "priorityLowerThanOrEquals",
											"value": "<long>",
											"description": "Only include jobs with a priority lower than or equal to the given value. Value must be a\nvalid `long` value."
										},
										{
											"key": "priorityHigherThanOrEquals",
											"value": "<long>",
											"description": "Only include jobs with a priority higher than or equal to the given value. Value must be a\nvalid `long` value."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Only include jobs which belong to one of the passed comma-separated tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include jobs which belong to no tenant. Value may only be `true`, as `false` is the\ndefault behavior."
										},
										{
											"key": "includeJobsWithoutTenantId",
											"value": "<boolean>",
											"description": "Include jobs which belong to no tenant. Can be used in combination with `tenantIdIn`.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "sortBy",
											"value": "processInstanceId",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"jobDefinitionId\": \"<string>\",\n    \"dueDate\": \"<dateTime>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"retries\": \"<integer>\",\n    \"exceptionMessage\": \"<string>\",\n    \"failedActivityId\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"priority\": \"<long>\",\n    \"tenantId\": \"<string>\",\n    \"createTime\": \"<dateTime>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"jobDefinitionId\": \"<string>\",\n    \"dueDate\": \"<dateTime>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"retries\": \"<integer>\",\n    \"exceptionMessage\": \"<string>\",\n    \"failedActivityId\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"priority\": \"<long>\",\n    \"tenantId\": \"<string>\",\n    \"createTime\": \"<dateTime>\"\n  }\n]"
						},
						{
							"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`, or if an invalid operator\nfor due date comparison is used. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/res",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/job?jobId=<string>&jobIds=<string>&jobDefinitionId=<string>&processInstanceId=<string>&processInstanceIds=<string>&executionId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&activityId=<string>&withRetriesLeft=<boolean>&executable=<boolean>&timers=<boolean>&messages=<boolean>&dueDates=<string>&createTimes=<string>&withException=<boolean>&exceptionMessage=<string>&failedActivityId=<string>&noRetriesLeft=<boolean>&active=<boolean>&suspended=<boolean>&priorityLowerThanOrEquals=<long>&priorityHigherThanOrEquals=<long>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeJobsWithoutTenantId=<boolean>&sortBy=processInstanceId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job"
									],
									"query": [
										{
											"key": "jobId",
											"value": "<string>",
											"description": "Filter by job id."
										},
										{
											"key": "jobIds",
											"value": "<string>",
											"description": "Filter by a comma-separated list of job ids."
										},
										{
											"key": "jobDefinitionId",
											"value": "<string>",
											"description": "Only select jobs which exist for the given job definition."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Only select jobs which exist for the given process instance."
										},
										{
											"key": "processInstanceIds",
											"value": "<string>",
											"description": "Only select jobs which exist for the given comma-separated list of process instance ids."
										},
										{
											"key": "executionId",
											"value": "<string>",
											"description": "Only select jobs which exist for the given execution."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Filter by the id of the process definition the jobs run on."
										},
										{
											"key": "processDefinitionKey",
											"value": "<string>",
											"description": "Filter by the key of the process definition the jobs run on."
										},
										{
											"key": "activityId",
											"value": "<string>",
											"description": "Only select jobs which exist for an activity with the given id."
										},
										{
											"key": "withRetriesLeft",
											"value": "<boolean>",
											"description": "Only select jobs which have retries left. Value may only be `true`, as `false` is the\ndefault behavior."
										},
										{
											"key": "executable",
											"value": "<boolean>",
											"description": "Only select jobs which are executable, i.e., retries > 0 and due date is `null` or due\ndate is in the past. Value may only be `true`, as `false` is the default\nbehavior."
										},
										{
											"key": "timers",
											"value": "<boolean>",
											"description": "Only select jobs that are timers. Cannot be used together with `messages`. Value may only\nbe `true`, as `false` is the default behavior."
										},
										{
											"key": "messages",
											"value": "<boolean>",
											"description": "Only select jobs that are messages. Cannot be used together with `timers`. Value may only\nbe `true`, as `false` is the default behavior."
										},
										{
											"key": "dueDates",
											"value": "<string>",
											"description": "Only select jobs where the due date is lower or higher than the given date.\nDue date expressions are comma-separated and are structured as follows:\n\nA valid condition value has the form `operator_value`.\n`operator` is the comparison operator to be used and `value` the date value\nas string.\n\nValid operator values are: `gt` - greater than; `lt` - lower than.\n`value` may not contain underscore or comma characters."
										},
										{
											"key": "createTimes",
											"value": "<string>",
											"description": "Only select jobs created before or after the given date.\n\nCreate time expressions are comma-separated and are structured as\nfollows:\n\nA valid condition value has the form `operator_value`.\n`operator` is the comparison operator to be used and `value` the date value\nas string.\n\nValid operator values are: `gt` - greater than; `lt` - lower than.\n`value` may not contain underscore or comma characters."
										},
										{
											"key": "withException",
											"value": "<boolean>",
											"description": "Only select jobs that failed due to an exception. Value may only be `true`, as `false` is\nthe default behavior."
										},
										{
											"key": "exceptionMessage",
											"value": "<string>",
											"description": "Only select jobs that failed due to an exception with the given message."
										},
										{
											"key": "failedActivityId",
											"value": "<string>",
											"description": "Only select jobs that failed due to an exception at an activity with the given id."
										},
										{
											"key": "noRetriesLeft",
											"value": "<boolean>",
											"description": "Only select jobs which have no retries left. Value may only be `true`, as `false` is the\ndefault behavior."
										},
										{
											"key": "active",
											"value": "<boolean>",
											"description": "Only include active jobs. Value may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "suspended",
											"value": "<boolean>",
											"description": "Only include suspended jobs. Value may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "priorityLowerThanOrEquals",
											"value": "<long>",
											"description": "Only include jobs with a priority lower than or equal to the given value. Value must be a\nvalid `long` value."
										},
										{
											"key": "priorityHigherThanOrEquals",
											"value": "<long>",
											"description": "Only include jobs with a priority higher than or equal to the given value. Value must be a\nvalid `long` value."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Only include jobs which belong to one of the passed comma-separated tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include jobs which belong to no tenant. Value may only be `true`, as `false` is the\ndefault behavior."
										},
										{
											"key": "includeJobsWithoutTenantId",
											"value": "<boolean>",
											"description": "Include jobs which belong to no tenant. Can be used in combination with `tenantIdIn`.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "sortBy",
											"value": "processInstanceId",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "Get Jobs (POST)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"jobId\": \"<string>\",\n  \"jobIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"jobDefinitionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"withRetriesLeft\": \"<boolean>\",\n  \"executable\": \"<boolean>\",\n  \"timers\": \"<boolean>\",\n  \"messages\": \"<boolean>\",\n  \"dueDates\": [\n    {\n      \"operator\": \"lt\",\n      \"value\": \"<dateTime>\"\n    },\n    {\n      \"operator\": \"gt\",\n      \"value\": \"<dateTime>\"\n    }\n  ],\n  \"createTimes\": [\n    {\n      \"operator\": \"lt\",\n      \"value\": \"<dateTime>\"\n    },\n    {\n      \"operator\": \"lt\",\n      \"value\": \"<dateTime>\"\n    }\n  ],\n  \"withException\": \"<boolean>\",\n  \"exceptionMessage\": \"<string>\",\n  \"failedActivityId\": \"<string>\",\n  \"noRetriesLeft\": \"<boolean>\",\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"priorityLowerThanOrEquals\": \"<long>\",\n  \"priorityHigherThanOrEquals\": \"<long>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"includeJobsWithoutTenantId\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"jobRetries\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"executionId\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/job?firstResult=<integer>&maxResults=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"job"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return."
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
								}
							]
						},
						"description": "Queries for jobs that fulfill given parameters. This method is slightly more\npowerful than the [Get Jobs](https://docs.camunda.org/manual/7.21/reference/rest/job/get-query/)\nmethod because it allows filtering by multiple jobs of types `String`,\n`Number` or `Boolean`."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobId\": \"<string>\",\n  \"jobIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"jobDefinitionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"withRetriesLeft\": \"<boolean>\",\n  \"executable\": \"<boolean>\",\n  \"timers\": \"<boolean>\",\n  \"messages\": \"<boolean>\",\n  \"dueDates\": [\n    {\n      \"operator\": \"lt\",\n      \"value\": \"<dateTime>\"\n    },\n    {\n      \"operator\": \"gt\",\n      \"value\": \"<dateTime>\"\n    }\n  ],\n  \"createTimes\": [\n    {\n      \"operator\": \"lt\",\n      \"value\": \"<dateTime>\"\n    },\n    {\n      \"operator\": \"lt\",\n      \"value\": \"<dateTime>\"\n    }\n  ],\n  \"withException\": \"<boolean>\",\n  \"exceptionMessage\": \"<string>\",\n  \"failedActivityId\": \"<string>\",\n  \"noRetriesLeft\": \"<boolean>\",\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"priorityLowerThanOrEquals\": \"<long>\",\n  \"priorityHigherThanOrEquals\": \"<long>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"includeJobsWithoutTenantId\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"jobRetries\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"executionId\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/job?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"jobDefinitionId\": \"<string>\",\n    \"dueDate\": \"<dateTime>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"retries\": \"<integer>\",\n    \"exceptionMessage\": \"<string>\",\n    \"failedActivityId\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"priority\": \"<long>\",\n    \"tenantId\": \"<string>\",\n    \"createTime\": \"<dateTime>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"jobDefinitionId\": \"<string>\",\n    \"dueDate\": \"<dateTime>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"retries\": \"<integer>\",\n    \"exceptionMessage\": \"<string>\",\n    \"failedActivityId\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"priority\": \"<long>\",\n    \"tenantId\": \"<string>\",\n    \"createTime\": \"<dateTime>\"\n  }\n]"
						},
						{
							"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`, or if an invalid operator\nfor due date comparison is used. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/res",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobId\": \"<string>\",\n  \"jobIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"jobDefinitionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"withRetriesLeft\": \"<boolean>\",\n  \"executable\": \"<boolean>\",\n  \"timers\": \"<boolean>\",\n  \"messages\": \"<boolean>\",\n  \"dueDates\": [\n    {\n      \"operator\": \"lt\",\n      \"value\": \"<dateTime>\"\n    },\n    {\n      \"operator\": \"gt\",\n      \"value\": \"<dateTime>\"\n    }\n  ],\n  \"createTimes\": [\n    {\n      \"operator\": \"lt\",\n      \"value\": \"<dateTime>\"\n    },\n    {\n      \"operator\": \"lt\",\n      \"value\": \"<dateTime>\"\n    }\n  ],\n  \"withException\": \"<boolean>\",\n  \"exceptionMessage\": \"<string>\",\n  \"failedActivityId\": \"<string>\",\n  \"noRetriesLeft\": \"<boolean>\",\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"priorityLowerThanOrEquals\": \"<long>\",\n  \"priorityHigherThanOrEquals\": \"<long>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"includeJobsWithoutTenantId\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"jobRetries\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"executionId\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/job?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "job-definition",
			"item": [
				{
					"name": "count",
					"item": [
						{
							"name": "Get Job Definition Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/job-definition/count?jobDefinitionId=<string>&activityIdIn=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&jobType=<string>&jobConfiguration=<string>&active=<boolean>&suspended=<boolean>&withOverridingJobPriority=<boolean>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeJobDefinitionsWithoutTenantId=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job-definition",
										"count"
									],
									"query": [
										{
											"key": "jobDefinitionId",
											"value": "<string>",
											"description": "Filter by job definition id."
										},
										{
											"key": "activityIdIn",
											"value": "<string>",
											"description": "Only include job definitions which belong to one of the passed and comma-separated activity ids."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Only include job definitions which exist for the given process definition id."
										},
										{
											"key": "processDefinitionKey",
											"value": "<string>",
											"description": "Only include job definitions which exist for the given process definition key."
										},
										{
											"key": "jobType",
											"value": "<string>",
											"description": "Only include job definitions which exist for the given job type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/the-job-executor/#job-creation)\nfor more information about job types."
										},
										{
											"key": "jobConfiguration",
											"value": "<string>",
											"description": "Only include job definitions which exist for the given job configuration. For example: for\ntimer jobs it is the timer configuration."
										},
										{
											"key": "active",
											"value": "<boolean>",
											"description": "Only include active job definitions. Value may only be `true`, as `false` is the default\nbehavior."
										},
										{
											"key": "suspended",
											"value": "<boolean>",
											"description": "Only include suspended job definitions. Value may only be `true`, as `false` is the\ndefault behavior."
										},
										{
											"key": "withOverridingJobPriority",
											"value": "<boolean>",
											"description": "Only include job definitions that have an overriding job priority defined. The only\neffective value is `true`. If set to `false`, this filter is not applied."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Only include job definitions which belong to one of the passed and comma-separated tenant\nids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include job definitions which belong to no tenant. Value may only be `true`, as\n`false` is the default behavior."
										},
										{
											"key": "includeJobDefinitionsWithoutTenantId",
											"value": "<boolean>",
											"description": "Include job definitions which belong to no tenant. Can be used in combination with\n`tenantIdIn`. Value may only be `true`, as `false` is the default behavior."
										}
									]
								},
								"description": "Queries for the number of job definitions that fulfill given parameters.\nTakes the same parameters as the\n[Get Job Definitions](https://docs.camunda.org/manual/7.21/reference/rest/job-definition/get-query/)\nmethod."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/job-definition/count?jobDefinitionId=<string>&activityIdIn=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&jobType=<string>&jobConfiguration=<string>&active=<boolean>&suspended=<boolean>&withOverridingJobPriority=<boolean>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeJobDefinitionsWithoutTenantId=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job-definition",
												"count"
											],
											"query": [
												{
													"key": "jobDefinitionId",
													"value": "<string>",
													"description": "Filter by job definition id."
												},
												{
													"key": "activityIdIn",
													"value": "<string>",
													"description": "Only include job definitions which belong to one of the passed and comma-separated activity ids."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Only include job definitions which exist for the given process definition id."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Only include job definitions which exist for the given process definition key."
												},
												{
													"key": "jobType",
													"value": "<string>",
													"description": "Only include job definitions which exist for the given job type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/the-job-executor/#job-creation)\nfor more information about job types."
												},
												{
													"key": "jobConfiguration",
													"value": "<string>",
													"description": "Only include job definitions which exist for the given job configuration. For example: for\ntimer jobs it is the timer configuration."
												},
												{
													"key": "active",
													"value": "<boolean>",
													"description": "Only include active job definitions. Value may only be `true`, as `false` is the default\nbehavior."
												},
												{
													"key": "suspended",
													"value": "<boolean>",
													"description": "Only include suspended job definitions. Value may only be `true`, as `false` is the\ndefault behavior."
												},
												{
													"key": "withOverridingJobPriority",
													"value": "<boolean>",
													"description": "Only include job definitions that have an overriding job priority defined. The only\neffective value is `true`. If set to `false`, this filter is not applied."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Only include job definitions which belong to one of the passed and comma-separated tenant\nids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include job definitions which belong to no tenant. Value may only be `true`, as\n`false` is the default behavior."
												},
												{
													"key": "includeJobDefinitionsWithoutTenantId",
													"value": "<boolean>",
													"description": "Include job definitions which belong to no tenant. Can be used in combination with\n`tenantIdIn`. Value may only be `true`, as `false` is the default behavior."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/job-definition/count?jobDefinitionId=<string>&activityIdIn=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&jobType=<string>&jobConfiguration=<string>&active=<boolean>&suspended=<boolean>&withOverridingJobPriority=<boolean>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeJobDefinitionsWithoutTenantId=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job-definition",
												"count"
											],
											"query": [
												{
													"key": "jobDefinitionId",
													"value": "<string>",
													"description": "Filter by job definition id."
												},
												{
													"key": "activityIdIn",
													"value": "<string>",
													"description": "Only include job definitions which belong to one of the passed and comma-separated activity ids."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Only include job definitions which exist for the given process definition id."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Only include job definitions which exist for the given process definition key."
												},
												{
													"key": "jobType",
													"value": "<string>",
													"description": "Only include job definitions which exist for the given job type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/the-job-executor/#job-creation)\nfor more information about job types."
												},
												{
													"key": "jobConfiguration",
													"value": "<string>",
													"description": "Only include job definitions which exist for the given job configuration. For example: for\ntimer jobs it is the timer configuration."
												},
												{
													"key": "active",
													"value": "<boolean>",
													"description": "Only include active job definitions. Value may only be `true`, as `false` is the default\nbehavior."
												},
												{
													"key": "suspended",
													"value": "<boolean>",
													"description": "Only include suspended job definitions. Value may only be `true`, as `false` is the\ndefault behavior."
												},
												{
													"key": "withOverridingJobPriority",
													"value": "<boolean>",
													"description": "Only include job definitions that have an overriding job priority defined. The only\neffective value is `true`. If set to `false`, this filter is not applied."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Only include job definitions which belong to one of the passed and comma-separated tenant\nids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include job definitions which belong to no tenant. Value may only be `true`, as\n`false` is the default behavior."
												},
												{
													"key": "includeJobDefinitionsWithoutTenantId",
													"value": "<boolean>",
													"description": "Include job definitions which belong to no tenant. Can be used in combination with\n`tenantIdIn`. Value may only be `true`, as `false` is the default behavior."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get Job Definition Count (POST)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobDefinitionId\": \"<string>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"jobType\": \"<string>\",\n  \"jobConfiguration\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"withOverridingJobPriority\": \"<boolean>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"includeJobDefinitionsWithoutTenantId\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"processDefinitionKey\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"jobConfiguration\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/job-definition/count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job-definition",
										"count"
									]
								},
								"description": "Queries for the number of job definitions that fulfill given parameters. This\nmethod takes the same message body as the\n[Get Job Definitions (POST)](https://docs.camunda.org/manual/7.21/reference/rest/job-definition/post-query/)\nmethod and therefore it is slightly more powerful than the\n[Get Job Definition Count](https://docs.camunda.org/manual/7.21/reference/rest/job-definition/get-query-count/)\nmethod."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobDefinitionId\": \"<string>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"jobType\": \"<string>\",\n  \"jobConfiguration\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"withOverridingJobPriority\": \"<boolean>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"includeJobDefinitionsWithoutTenantId\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"processDefinitionKey\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"jobConfiguration\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/job-definition/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job-definition",
												"count"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobDefinitionId\": \"<string>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"jobType\": \"<string>\",\n  \"jobConfiguration\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"withOverridingJobPriority\": \"<boolean>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"includeJobDefinitionsWithoutTenantId\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"processDefinitionKey\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"jobConfiguration\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/job-definition/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job-definition",
												"count"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "suspended",
					"item": [
						{
							"name": "Activate/Suspend Job Definitions",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionTenantId\": \"<string>\",\n  \"processDefinitionWithoutTenantId\": \"<boolean>\",\n  \"includeJobs\": \"<boolean>\",\n  \"executionDate\": \"<string>\",\n  \"suspended\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/job-definition/suspended",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job-definition",
										"suspended"
									]
								},
								"description": "Activates or suspends job definitions with the given process definition id or process definition key."
							},
							"response": [
								{
									"name": "Request successful. This method returns no content.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionTenantId\": \"<string>\",\n  \"processDefinitionWithoutTenantId\": \"<boolean>\",\n  \"includeJobs\": \"<boolean>\",\n  \"executionDate\": \"<string>\",\n  \"suspended\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/job-definition/suspended",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job-definition",
												"suspended"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if some of the request parameters are invalid, for example if the provided\n`executionDate` parameter doesn't have the expected format. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the er",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionTenantId\": \"<string>\",\n  \"processDefinitionWithoutTenantId\": \"<boolean>\",\n  \"includeJobs\": \"<boolean>\",\n  \"executionDate\": \"<string>\",\n  \"suspended\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/job-definition/suspended",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job-definition",
												"suspended"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "jobPriority",
							"item": [
								{
									"name": "Set Job Definition Priority by Id",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"priority\": \"<long>\",\n  \"includeJobs\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/job-definition/:id/jobPriority",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job-definition",
												":id",
												"jobPriority"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the job definition to be updated."
												}
											]
										},
										"description": "Sets an overriding execution priority for jobs with the given definition id.\nOptionally, the priorities of all the definitions' existing jobs are\nupdated accordingly. The priority can be reset by setting it to\n`null`, meaning that a new job's priority will not be determined based\non its definition's priority any longer. See the\n[user guide on job prioritization](https://docs.camunda.org/manual/7.21/user-guide/process-engine/the-job-executor/#set-job-definition-priorities-via-managementservice-api)\nfor details."
									},
									"response": [
										{
											"name": "Request successful. This method returns no content.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"priority\": \"<long>\",\n  \"includeJobs\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/job-definition/:id/jobPriority",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"job-definition",
														":id",
														"jobPriority"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Job definition with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"priority\": \"<long>\",\n  \"includeJobs\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/job-definition/:id/jobPriority",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"job-definition",
														":id",
														"jobPriority"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "The retries could not be set successfully. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"priority\": \"<long>\",\n  \"includeJobs\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/job-definition/:id/jobPriority",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"job-definition",
														":id",
														"jobPriority"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "retries",
							"item": [
								{
									"name": "Set Job Retries By Job Definition Id",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"retries\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/job-definition/:id/retries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job-definition",
												":id",
												"retries"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the job definition to be updated."
												}
											]
										},
										"description": "Sets the number of retries of all **failed** jobs associated with the given job\ndefinition id."
									},
									"response": [
										{
											"name": "Request successful. This method returns no content.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"retries\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/job-definition/:id/retries",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"job-definition",
														":id",
														"retries"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The retries could not be set successfully. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"retries\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/job-definition/:id/retries",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"job-definition",
														":id",
														"retries"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "suspended",
							"item": [
								{
									"name": "Activate/Suspend Job Definition By Id",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"includeJobs\": \"<boolean>\",\n  \"executionDate\": \"<string>\",\n  \"suspended\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/job-definition/:id/suspended",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job-definition",
												":id",
												"suspended"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the job definition to activate or suspend."
												}
											]
										},
										"description": "Activates or suspends a given job definition by id."
									},
									"response": [
										{
											"name": "Request successful. This method returns no content.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"includeJobs\": \"<boolean>\",\n  \"executionDate\": \"<string>\",\n  \"suspended\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/job-definition/:id/suspended",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"job-definition",
														":id",
														"suspended"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if some of the request parameters are invalid, for example if the provided\n`executionDate` parameter doesn't have the expected format. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the er",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"includeJobs\": \"<boolean>\",\n  \"executionDate\": \"<string>\",\n  \"suspended\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/job-definition/:id/suspended",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"job-definition",
														":id",
														"suspended"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Job Definition",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/job-definition/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job-definition",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the job definition to be retrieved."
										}
									]
								},
								"description": "Retrieves a job definition by id, according to the `JobDefinition` interface in the engine."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/job-definition/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job-definition",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"jobType\": \"<string>\",\n  \"jobConfiguration\": \"<string>\",\n  \"overridingJobPriority\": \"<long>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"deploymentId\": \"<string>\"\n}"
								},
								{
									"name": "Job definition with given id does not exist.  See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/job-definition/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"job-definition",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get Job Definitions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/job-definition?jobDefinitionId=<string>&activityIdIn=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&jobType=<string>&jobConfiguration=<string>&active=<boolean>&suspended=<boolean>&withOverridingJobPriority=<boolean>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeJobDefinitionsWithoutTenantId=<boolean>&sortBy=tenantId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"job-definition"
							],
							"query": [
								{
									"key": "jobDefinitionId",
									"value": "<string>",
									"description": "Filter by job definition id."
								},
								{
									"key": "activityIdIn",
									"value": "<string>",
									"description": "Only include job definitions which belong to one of the passed and comma-separated activity ids."
								},
								{
									"key": "processDefinitionId",
									"value": "<string>",
									"description": "Only include job definitions which exist for the given process definition id."
								},
								{
									"key": "processDefinitionKey",
									"value": "<string>",
									"description": "Only include job definitions which exist for the given process definition key."
								},
								{
									"key": "jobType",
									"value": "<string>",
									"description": "Only include job definitions which exist for the given job type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/the-job-executor/#job-creation)\nfor more information about job types."
								},
								{
									"key": "jobConfiguration",
									"value": "<string>",
									"description": "Only include job definitions which exist for the given job configuration. For example: for\ntimer jobs it is the timer configuration."
								},
								{
									"key": "active",
									"value": "<boolean>",
									"description": "Only include active job definitions. Value may only be `true`, as `false` is the default\nbehavior."
								},
								{
									"key": "suspended",
									"value": "<boolean>",
									"description": "Only include suspended job definitions. Value may only be `true`, as `false` is the\ndefault behavior."
								},
								{
									"key": "withOverridingJobPriority",
									"value": "<boolean>",
									"description": "Only include job definitions that have an overriding job priority defined. The only\neffective value is `true`. If set to `false`, this filter is not applied."
								},
								{
									"key": "tenantIdIn",
									"value": "<string>",
									"description": "Only include job definitions which belong to one of the passed and comma-separated tenant\nids."
								},
								{
									"key": "withoutTenantId",
									"value": "<boolean>",
									"description": "Only include job definitions which belong to no tenant. Value may only be `true`, as\n`false` is the default behavior."
								},
								{
									"key": "includeJobDefinitionsWithoutTenantId",
									"value": "<boolean>",
									"description": "Include job definitions which belong to no tenant. Can be used in combination with\n`tenantIdIn`. Value may only be `true`, as `false` is the default behavior."
								},
								{
									"key": "sortBy",
									"value": "tenantId",
									"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
								},
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return."
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
								}
							]
						},
						"description": "Queries for job definitions that fulfill given parameters.\nThe size of the result set can be retrieved by using the\n[Get Job Definition Count](https://docs.camunda.org/manual/7.21/reference/rest/job-definition/get-query-count/)\nmethod."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/job-definition?jobDefinitionId=<string>&activityIdIn=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&jobType=<string>&jobConfiguration=<string>&active=<boolean>&suspended=<boolean>&withOverridingJobPriority=<boolean>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeJobDefinitionsWithoutTenantId=<boolean>&sortBy=tenantId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job-definition"
									],
									"query": [
										{
											"key": "jobDefinitionId",
											"value": "<string>",
											"description": "Filter by job definition id."
										},
										{
											"key": "activityIdIn",
											"value": "<string>",
											"description": "Only include job definitions which belong to one of the passed and comma-separated activity ids."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Only include job definitions which exist for the given process definition id."
										},
										{
											"key": "processDefinitionKey",
											"value": "<string>",
											"description": "Only include job definitions which exist for the given process definition key."
										},
										{
											"key": "jobType",
											"value": "<string>",
											"description": "Only include job definitions which exist for the given job type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/the-job-executor/#job-creation)\nfor more information about job types."
										},
										{
											"key": "jobConfiguration",
											"value": "<string>",
											"description": "Only include job definitions which exist for the given job configuration. For example: for\ntimer jobs it is the timer configuration."
										},
										{
											"key": "active",
											"value": "<boolean>",
											"description": "Only include active job definitions. Value may only be `true`, as `false` is the default\nbehavior."
										},
										{
											"key": "suspended",
											"value": "<boolean>",
											"description": "Only include suspended job definitions. Value may only be `true`, as `false` is the\ndefault behavior."
										},
										{
											"key": "withOverridingJobPriority",
											"value": "<boolean>",
											"description": "Only include job definitions that have an overriding job priority defined. The only\neffective value is `true`. If set to `false`, this filter is not applied."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Only include job definitions which belong to one of the passed and comma-separated tenant\nids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include job definitions which belong to no tenant. Value may only be `true`, as\n`false` is the default behavior."
										},
										{
											"key": "includeJobDefinitionsWithoutTenantId",
											"value": "<boolean>",
											"description": "Include job definitions which belong to no tenant. Can be used in combination with\n`tenantIdIn`. Value may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "sortBy",
											"value": "tenantId",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"jobType\": \"<string>\",\n    \"jobConfiguration\": \"<string>\",\n    \"overridingJobPriority\": \"<long>\",\n    \"suspended\": \"<boolean>\",\n    \"tenantId\": \"<string>\",\n    \"deploymentId\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"jobType\": \"<string>\",\n    \"jobConfiguration\": \"<string>\",\n    \"overridingJobPriority\": \"<long>\",\n    \"suspended\": \"<boolean>\",\n    \"tenantId\": \"<string>\",\n    \"deploymentId\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/job-definition?jobDefinitionId=<string>&activityIdIn=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&jobType=<string>&jobConfiguration=<string>&active=<boolean>&suspended=<boolean>&withOverridingJobPriority=<boolean>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeJobDefinitionsWithoutTenantId=<boolean>&sortBy=tenantId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job-definition"
									],
									"query": [
										{
											"key": "jobDefinitionId",
											"value": "<string>",
											"description": "Filter by job definition id."
										},
										{
											"key": "activityIdIn",
											"value": "<string>",
											"description": "Only include job definitions which belong to one of the passed and comma-separated activity ids."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Only include job definitions which exist for the given process definition id."
										},
										{
											"key": "processDefinitionKey",
											"value": "<string>",
											"description": "Only include job definitions which exist for the given process definition key."
										},
										{
											"key": "jobType",
											"value": "<string>",
											"description": "Only include job definitions which exist for the given job type. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/the-job-executor/#job-creation)\nfor more information about job types."
										},
										{
											"key": "jobConfiguration",
											"value": "<string>",
											"description": "Only include job definitions which exist for the given job configuration. For example: for\ntimer jobs it is the timer configuration."
										},
										{
											"key": "active",
											"value": "<boolean>",
											"description": "Only include active job definitions. Value may only be `true`, as `false` is the default\nbehavior."
										},
										{
											"key": "suspended",
											"value": "<boolean>",
											"description": "Only include suspended job definitions. Value may only be `true`, as `false` is the\ndefault behavior."
										},
										{
											"key": "withOverridingJobPriority",
											"value": "<boolean>",
											"description": "Only include job definitions that have an overriding job priority defined. The only\neffective value is `true`. If set to `false`, this filter is not applied."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Only include job definitions which belong to one of the passed and comma-separated tenant\nids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include job definitions which belong to no tenant. Value may only be `true`, as\n`false` is the default behavior."
										},
										{
											"key": "includeJobDefinitionsWithoutTenantId",
											"value": "<boolean>",
											"description": "Include job definitions which belong to no tenant. Can be used in combination with\n`tenantIdIn`. Value may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "sortBy",
											"value": "tenantId",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "Get Job Definitions (POST)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"jobDefinitionId\": \"<string>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"jobType\": \"<string>\",\n  \"jobConfiguration\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"withOverridingJobPriority\": \"<boolean>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"includeJobDefinitionsWithoutTenantId\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"processDefinitionKey\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"jobConfiguration\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/job-definition?firstResult=<integer>&maxResults=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"job-definition"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return."
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
								}
							]
						},
						"description": "Queries for job definitions that fulfill given parameters. This method is slightly\nmore powerful than the\n[Get Job Definitions](https://docs.camunda.org/manual/7.21/reference/rest/job-definition/get-query/)\nmethod because it allows filtering by multiple job definitions of\ntypes `String`, `Number` or `Boolean`."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobDefinitionId\": \"<string>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"jobType\": \"<string>\",\n  \"jobConfiguration\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"withOverridingJobPriority\": \"<boolean>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"includeJobDefinitionsWithoutTenantId\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"processDefinitionKey\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"jobConfiguration\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/job-definition?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job-definition"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"jobType\": \"<string>\",\n    \"jobConfiguration\": \"<string>\",\n    \"overridingJobPriority\": \"<long>\",\n    \"suspended\": \"<boolean>\",\n    \"tenantId\": \"<string>\",\n    \"deploymentId\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"jobType\": \"<string>\",\n    \"jobConfiguration\": \"<string>\",\n    \"overridingJobPriority\": \"<long>\",\n    \"suspended\": \"<boolean>\",\n    \"tenantId\": \"<string>\",\n    \"deploymentId\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobDefinitionId\": \"<string>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"jobType\": \"<string>\",\n  \"jobConfiguration\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"withOverridingJobPriority\": \"<boolean>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"includeJobDefinitionsWithoutTenantId\": \"<boolean>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"processDefinitionKey\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"jobConfiguration\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/job-definition?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"job-definition"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "message",
			"item": [
				{
					"name": "Correlate",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"messageName\": \"<string>\",\n  \"businessKey\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"withoutTenantId\": false,\n  \"processInstanceId\": \"<string>\",\n  \"correlationKeys\": {\n    \"voluptate_e7\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"in_8\": \"ex quis anim\",\n        \"aute_cf\": -3018724\n      }\n    },\n    \"velitf3\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"ut_6c\": \"laborum fugiat\"\n      }\n    }\n  },\n  \"localCorrelationKeys\": {\n    \"ipsumb\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"inf\": -43364285,\n        \"quis_6c0\": false\n      }\n    },\n    \"pariatur_7\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"enim_b\": false,\n        \"voluptate_2e\": 62362444.67993221\n      }\n    },\n    \"veniam_ab_\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"in_4eb\": false,\n        \"ut87\": -23380138\n      }\n    }\n  },\n  \"processVariables\": {\n    \"ea1\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Duis_ad\": false\n      }\n    }\n  },\n  \"processVariablesLocal\": {\n    \"ad2_0\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"minim5f0\": \"non est proident\"\n      }\n    },\n    \"voluptate6\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"incididuntd\": false,\n        \"ex_e1a\": true\n      }\n    },\n    \"dolora_b\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"cupidatatf93\": 70299626.02271995,\n        \"labore_e2\": false\n      }\n    }\n  },\n  \"processVariablesToTriggeredScope\": {\n    \"ut299\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"ut_9fe\": \"in occaecat reprehenderit labore\"\n      }\n    },\n    \"essee\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"reprehenderit_9e\": false,\n        \"autec\": -42656626.60293579,\n        \"laborum_d\": \"nostrud nisi\"\n      }\n    }\n  },\n  \"all\": false,\n  \"resultEnabled\": false,\n  \"variablesInResultEnabled\": false\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/message",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"message"
							]
						},
						"description": "Correlates a message to the process engine to either trigger a message start event or an intermediate message \ncatching event. Internally this maps to the engine's message correlation builder methods\n`MessageCorrelationBuilder#correlateWithResult()` and `MessageCorrelationBuilder#correlateAllWithResult()`.\nFor more information about the correlation behavior, see the [Message Events](https://docs.camunda.org/manual/7.21/bpmn20/events/message-events/)\nsection of the [BPMN 2.0 Implementation Reference](https://docs.camunda.org/manual/7.21/reference/bpmn20/)."
					},
					"response": [
						{
							"name": "Request successful. The property `resultEnabled` in the request body was `true`.\nThe `variables` property is only returned, if the property variablesInResultEnable`\nwas set to `true` in the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"messageName\": \"<string>\",\n  \"businessKey\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"withoutTenantId\": false,\n  \"processInstanceId\": \"<string>\",\n  \"correlationKeys\": {\n    \"voluptate_e7\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"in_8\": \"ex quis anim\",\n        \"aute_cf\": -3018724\n      }\n    },\n    \"velitf3\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"ut_6c\": \"laborum fugiat\"\n      }\n    }\n  },\n  \"localCorrelationKeys\": {\n    \"ipsumb\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"inf\": -43364285,\n        \"quis_6c0\": false\n      }\n    },\n    \"pariatur_7\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"enim_b\": false,\n        \"voluptate_2e\": 62362444.67993221\n      }\n    },\n    \"veniam_ab_\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"in_4eb\": false,\n        \"ut87\": -23380138\n      }\n    }\n  },\n  \"processVariables\": {\n    \"ea1\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Duis_ad\": false\n      }\n    }\n  },\n  \"processVariablesLocal\": {\n    \"ad2_0\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"minim5f0\": \"non est proident\"\n      }\n    },\n    \"voluptate6\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"incididuntd\": false,\n        \"ex_e1a\": true\n      }\n    },\n    \"dolora_b\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"cupidatatf93\": 70299626.02271995,\n        \"labore_e2\": false\n      }\n    }\n  },\n  \"processVariablesToTriggeredScope\": {\n    \"ut299\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"ut_9fe\": \"in occaecat reprehenderit labore\"\n      }\n    },\n    \"essee\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"reprehenderit_9e\": false,\n        \"autec\": -42656626.60293579,\n        \"laborum_d\": \"nostrud nisi\"\n      }\n    }\n  },\n  \"all\": false,\n  \"resultEnabled\": false,\n  \"variablesInResultEnabled\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/message",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"message"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"resultType\": \"Execution\",\n    \"processInstance\": {\n      \"id\": \"<string>\",\n      \"definitionId\": \"<string>\",\n      \"businessKey\": \"<string>\",\n      \"caseInstanceId\": \"<string>\",\n      \"ended\": \"<boolean>\",\n      \"suspended\": \"<boolean>\",\n      \"tenantId\": \"<string>\",\n      \"links\": [\n        {\n          \"rel\": \"<string>\",\n          \"href\": \"<string>\",\n          \"method\": \"<string>\"\n        },\n        {\n          \"rel\": \"<string>\",\n          \"href\": \"<string>\",\n          \"method\": \"<string>\"\n        }\n      ]\n    },\n    \"execution\": {\n      \"id\": \"<string>\",\n      \"processInstanceId\": \"<string>\",\n      \"ended\": \"<boolean>\",\n      \"tenantId\": \"<string>\"\n    },\n    \"variables\": {\n      \"in_ff\": {\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"dolor_89\": false,\n          \"ipsum_0\": -35082780.16984447\n        }\n      }\n    }\n  },\n  {\n    \"resultType\": \"Execution\",\n    \"processInstance\": {\n      \"id\": \"<string>\",\n      \"definitionId\": \"<string>\",\n      \"businessKey\": \"<string>\",\n      \"caseInstanceId\": \"<string>\",\n      \"ended\": \"<boolean>\",\n      \"suspended\": \"<boolean>\",\n      \"tenantId\": \"<string>\",\n      \"links\": [\n        {\n          \"rel\": \"<string>\",\n          \"href\": \"<string>\",\n          \"method\": \"<string>\"\n        },\n        {\n          \"rel\": \"<string>\",\n          \"href\": \"<string>\",\n          \"method\": \"<string>\"\n        }\n      ]\n    },\n    \"execution\": {\n      \"id\": \"<string>\",\n      \"processInstanceId\": \"<string>\",\n      \"ended\": \"<boolean>\",\n      \"tenantId\": \"<string>\"\n    },\n    \"variables\": {\n      \"velit_f8\": {\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"nulla_79\": false,\n          \"ut_bc\": \"enim pariatur et ut\"\n        }\n      }\n    }\n  }\n]"
						},
						{
							"name": "Request successful. The property `resultEnabled` in the request body was `false` (Default).",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"messageName\": \"<string>\",\n  \"businessKey\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"withoutTenantId\": false,\n  \"processInstanceId\": \"<string>\",\n  \"correlationKeys\": {\n    \"voluptate_e7\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"in_8\": \"ex quis anim\",\n        \"aute_cf\": -3018724\n      }\n    },\n    \"velitf3\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"ut_6c\": \"laborum fugiat\"\n      }\n    }\n  },\n  \"localCorrelationKeys\": {\n    \"ipsumb\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"inf\": -43364285,\n        \"quis_6c0\": false\n      }\n    },\n    \"pariatur_7\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"enim_b\": false,\n        \"voluptate_2e\": 62362444.67993221\n      }\n    },\n    \"veniam_ab_\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"in_4eb\": false,\n        \"ut87\": -23380138\n      }\n    }\n  },\n  \"processVariables\": {\n    \"ea1\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Duis_ad\": false\n      }\n    }\n  },\n  \"processVariablesLocal\": {\n    \"ad2_0\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"minim5f0\": \"non est proident\"\n      }\n    },\n    \"voluptate6\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"incididuntd\": false,\n        \"ex_e1a\": true\n      }\n    },\n    \"dolora_b\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"cupidatatf93\": 70299626.02271995,\n        \"labore_e2\": false\n      }\n    }\n  },\n  \"processVariablesToTriggeredScope\": {\n    \"ut299\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"ut_9fe\": \"in occaecat reprehenderit labore\"\n      }\n    },\n    \"essee\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"reprehenderit_9e\": false,\n        \"autec\": -42656626.60293579,\n        \"laborum_d\": \"nostrud nisi\"\n      }\n    }\n  },\n  \"all\": false,\n  \"resultEnabled\": false,\n  \"variablesInResultEnabled\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/message",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"message"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if:\n* no `messageName` was supplied\n* both `tenantId` and `withoutTenantId` are supplied\n* the message has not been correlated to exactly one entity (execution or process definition)\n* the variable value or type is invalid, for example if the val",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"messageName\": \"<string>\",\n  \"businessKey\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"withoutTenantId\": false,\n  \"processInstanceId\": \"<string>\",\n  \"correlationKeys\": {\n    \"voluptate_e7\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"in_8\": \"ex quis anim\",\n        \"aute_cf\": -3018724\n      }\n    },\n    \"velitf3\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"ut_6c\": \"laborum fugiat\"\n      }\n    }\n  },\n  \"localCorrelationKeys\": {\n    \"ipsumb\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"inf\": -43364285,\n        \"quis_6c0\": false\n      }\n    },\n    \"pariatur_7\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"enim_b\": false,\n        \"voluptate_2e\": 62362444.67993221\n      }\n    },\n    \"veniam_ab_\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"in_4eb\": false,\n        \"ut87\": -23380138\n      }\n    }\n  },\n  \"processVariables\": {\n    \"ea1\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Duis_ad\": false\n      }\n    }\n  },\n  \"processVariablesLocal\": {\n    \"ad2_0\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"minim5f0\": \"non est proident\"\n      }\n    },\n    \"voluptate6\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"incididuntd\": false,\n        \"ex_e1a\": true\n      }\n    },\n    \"dolora_b\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"cupidatatf93\": 70299626.02271995,\n        \"labore_e2\": false\n      }\n    }\n  },\n  \"processVariablesToTriggeredScope\": {\n    \"ut299\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"ut_9fe\": \"in occaecat reprehenderit labore\"\n      }\n    },\n    \"essee\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"reprehenderit_9e\": false,\n        \"autec\": -42656626.60293579,\n        \"laborum_d\": \"nostrud nisi\"\n      }\n    }\n  },\n  \"all\": false,\n  \"resultEnabled\": false,\n  \"variablesInResultEnabled\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/message",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"message"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "metrics",
			"item": [
				{
					"name": "task-worker",
					"item": [
						{
							"name": "Delete Task Worker Metrics",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics/task-worker?date=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics",
										"task-worker"
									],
									"query": [
										{
											"key": "date",
											"value": "<dateTime>",
											"description": "The date prior to which all task worker metrics should be deleted."
										}
									]
								},
								"description": "Deletes all task worker metrics prior to the given date or all if no date is provided."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/task-worker?date=<dateTime>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												"task-worker"
											],
											"query": [
												{
													"key": "date",
													"value": "<dateTime>",
													"description": "The date prior to which all task worker metrics should be deleted."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "If the user who performs the operation is not a <b>camunda-admin</b> user.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/task-worker?date=<dateTime>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												"task-worker"
											],
											"query": [
												{
													"key": "date",
													"value": "<dateTime>",
													"description": "The date prior to which all task worker metrics should be deleted."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "{metrics-name}",
					"item": [
						{
							"name": "sum",
							"item": [
								{
									"name": "Get Sum",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metrics/:metrics-name/sum?startDate=<dateTime>&endDate=<dateTime>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metrics",
												":metrics-name",
												"sum"
											],
											"query": [
												{
													"key": "startDate",
													"value": "<dateTime>",
													"description": "The start date (inclusive)."
												},
												{
													"key": "endDate",
													"value": "<dateTime>",
													"description": "The end date (exclusive)."
												}
											],
											"variable": [
												{
													"key": "metrics-name",
													"value": "unique-task-workers",
													"description": "(Required) The name of the metric."
												}
											]
										},
										"description": "Retrieves the `sum` (count) for a given metric."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/metrics/:metrics-name/sum?startDate=<dateTime>&endDate=<dateTime>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"metrics",
														":metrics-name",
														"sum"
													],
													"query": [
														{
															"key": "startDate",
															"value": "<dateTime>",
															"description": "The start date (inclusive)."
														},
														{
															"key": "endDate",
															"value": "<dateTime>",
															"description": "The end date (exclusive)."
														}
													],
													"variable": [
														{
															"key": "metrics-name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"result\": \"<long>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Get Metrics in Interval",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/metrics?name=job-acquired-failure&reporter=<string>&startDate=<dateTime>&endDate=<dateTime>&firstResult=<integer>&maxResults=<integer>&interval=900&aggregateByReporter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metrics"
							],
							"query": [
								{
									"key": "name",
									"value": "job-acquired-failure",
									"description": "The name of the metric."
								},
								{
									"key": "reporter",
									"value": "<string>",
									"description": "The name of the reporter (host), on which the metrics was logged. This will have\nvalue provided by the [hostname configuration property](https://docs.camunda.org/manual/7.21/reference/deployment-descriptors/tags/process-engine/#hostname)."
								},
								{
									"key": "startDate",
									"value": "<dateTime>",
									"description": "The start date (inclusive)."
								},
								{
									"key": "endDate",
									"value": "<dateTime>",
									"description": "The end date (exclusive)."
								},
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return."
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
								},
								{
									"key": "interval",
									"value": "900",
									"description": "The interval for which the metrics should be aggregated. Time unit is seconds.\nDefault: The interval is set to 15 minutes (900 seconds)."
								},
								{
									"key": "aggregateByReporter",
									"value": "<string>",
									"description": "Aggregate metrics by reporter."
								}
							]
						},
						"description": "Retrieves a list of metrics, aggregated for a given interval."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics?name=job-acquired-failure&reporter=<string>&startDate=<dateTime>&endDate=<dateTime>&firstResult=<integer>&maxResults=<integer>&interval=900&aggregateByReporter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "name",
											"value": "job-acquired-failure",
											"description": "The name of the metric."
										},
										{
											"key": "reporter",
											"value": "<string>",
											"description": "The name of the reporter (host), on which the metrics was logged. This will have\nvalue provided by the [hostname configuration property](https://docs.camunda.org/manual/7.21/reference/deployment-descriptors/tags/process-engine/#hostname)."
										},
										{
											"key": "startDate",
											"value": "<dateTime>",
											"description": "The start date (inclusive)."
										},
										{
											"key": "endDate",
											"value": "<dateTime>",
											"description": "The end date (exclusive)."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										},
										{
											"key": "interval",
											"value": "900",
											"description": "The interval for which the metrics should be aggregated. Time unit is seconds.\nDefault: The interval is set to 15 minutes (900 seconds)."
										},
										{
											"key": "aggregateByReporter",
											"value": "<string>",
											"description": "Aggregate metrics by reporter."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"timestamp\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"reporter\": \"<string>\",\n    \"value\": \"<long>\"\n  },\n  {\n    \"timestamp\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"reporter\": \"<string>\",\n    \"value\": \"<long>\"\n  }\n]"
						},
						{
							"name": "Returned if some of the query parameters are invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metrics?name=job-acquired-failure&reporter=<string>&startDate=<dateTime>&endDate=<dateTime>&firstResult=<integer>&maxResults=<integer>&interval=900&aggregateByReporter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metrics"
									],
									"query": [
										{
											"key": "name",
											"value": "job-acquired-failure",
											"description": "The name of the metric."
										},
										{
											"key": "reporter",
											"value": "<string>",
											"description": "The name of the reporter (host), on which the metrics was logged. This will have\nvalue provided by the [hostname configuration property](https://docs.camunda.org/manual/7.21/reference/deployment-descriptors/tags/process-engine/#hostname)."
										},
										{
											"key": "startDate",
											"value": "<dateTime>",
											"description": "The start date (inclusive)."
										},
										{
											"key": "endDate",
											"value": "<dateTime>",
											"description": "The end date (exclusive)."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										},
										{
											"key": "interval",
											"value": "900",
											"description": "The interval for which the metrics should be aggregated. Time unit is seconds.\nDefault: The interval is set to 15 minutes (900 seconds)."
										},
										{
											"key": "aggregateByReporter",
											"value": "<string>",
											"description": "Aggregate metrics by reporter."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "migration",
			"item": [
				{
					"name": "execute",
					"item": [
						{
							"name": "Execute Migration Plan",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"migrationPlan\": {\n    \"sourceProcessDefinitionId\": \"<string>\",\n    \"targetProcessDefinitionId\": \"<string>\",\n    \"instructions\": [\n      {\n        \"sourceActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"targetActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"updateEventTrigger\": \"<boolean>\"\n      },\n      {\n        \"sourceActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"targetActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"updateEventTrigger\": \"<boolean>\"\n      }\n    ],\n    \"variables\": {\n      \"laborum092\": {\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"magna35\": -97500733,\n          \"aliquad\": -85874064.58180511,\n          \"sed_0\": \"Ut commodo pariatur sunt\"\n        }\n      }\n    }\n  },\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"eq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/migration/execute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"migration",
										"execute"
									]
								},
								"description": "Executes a migration plan synchronously for multiple process instances. To execute\na migration plan asynchronously, use the\n[Execute Migration Plan Async(Batch)](https://docs.camunda.org/manual/7.21/reference/rest/migration/execute-migration-async/)\nmethod.\n\nFor more information about the difference between synchronous and asynchronous\nexecution of a migration plan, please refer to the related section of\n[the user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/process-instance-migration/#executing-a-migration-plan)."
							},
							"response": [
								{
									"name": "Request successful. This method returns no content.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"migrationPlan\": {\n    \"sourceProcessDefinitionId\": \"<string>\",\n    \"targetProcessDefinitionId\": \"<string>\",\n    \"instructions\": [\n      {\n        \"sourceActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"targetActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"updateEventTrigger\": \"<boolean>\"\n      },\n      {\n        \"sourceActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"targetActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"updateEventTrigger\": \"<boolean>\"\n      }\n    ],\n    \"variables\": {\n      \"laborum092\": {\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"magna35\": -97500733,\n          \"aliquad\": -85874064.58180511,\n          \"sed_0\": \"Ut commodo pariatur sunt\"\n        }\n      }\n    }\n  },\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"eq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/migration/execute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"migration",
												"execute"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The request is not valid if one or more of the following statements apply:\n\n* The provided migration plan is not valid, so an exception of type\n`MigrationPlanValidationException` is returned.\n* The provided migration plan is not valid for a specific proce",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"migrationPlan\": {\n    \"sourceProcessDefinitionId\": \"<string>\",\n    \"targetProcessDefinitionId\": \"<string>\",\n    \"instructions\": [\n      {\n        \"sourceActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"targetActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"updateEventTrigger\": \"<boolean>\"\n      },\n      {\n        \"sourceActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"targetActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"updateEventTrigger\": \"<boolean>\"\n      }\n    ],\n    \"variables\": {\n      \"laborum092\": {\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"magna35\": -97500733,\n          \"aliquad\": -85874064.58180511,\n          \"sed_0\": \"Ut commodo pariatur sunt\"\n        }\n      }\n    }\n  },\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"eq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/migration/execute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"migration",
												"execute"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "executeAsync",
					"item": [
						{
							"name": "Execute Migration Plan Async (Batch)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"migrationPlan\": {\n    \"sourceProcessDefinitionId\": \"<string>\",\n    \"targetProcessDefinitionId\": \"<string>\",\n    \"instructions\": [\n      {\n        \"sourceActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"targetActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"updateEventTrigger\": \"<boolean>\"\n      },\n      {\n        \"sourceActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"targetActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"updateEventTrigger\": \"<boolean>\"\n      }\n    ],\n    \"variables\": {\n      \"laborum092\": {\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"magna35\": -97500733,\n          \"aliquad\": -85874064.58180511,\n          \"sed_0\": \"Ut commodo pariatur sunt\"\n        }\n      }\n    }\n  },\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"eq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/migration/executeAsync",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"migration",
										"executeAsync"
									]
								},
								"description": "Executes a migration plan asynchronously (batch) for multiple process instances.\nTo execute a migration plan synchronously, use the\n[Execute MigrationPlan](https://docs.camunda.org/manual/7.21/reference/rest/migration/execute-migration/)\nmethod.\n\nFor more information about the difference between synchronous and asynchronous\nexecution of a migration plan, please refer to the related section of\n[the user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/process-instance-migration/#executing-a-migration-plan)."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"migrationPlan\": {\n    \"sourceProcessDefinitionId\": \"<string>\",\n    \"targetProcessDefinitionId\": \"<string>\",\n    \"instructions\": [\n      {\n        \"sourceActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"targetActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"updateEventTrigger\": \"<boolean>\"\n      },\n      {\n        \"sourceActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"targetActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"updateEventTrigger\": \"<boolean>\"\n      }\n    ],\n    \"variables\": {\n      \"laborum092\": {\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"magna35\": -97500733,\n          \"aliquad\": -85874064.58180511,\n          \"sed_0\": \"Ut commodo pariatur sunt\"\n        }\n      }\n    }\n  },\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"eq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/migration/executeAsync",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"migration",
												"executeAsync"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"totalJobs\": \"<integer>\",\n  \"jobsCreated\": \"<integer>\",\n  \"batchJobsPerSeed\": \"<integer>\",\n  \"invocationsPerBatchJob\": \"<integer>\",\n  \"seedJobDefinitionId\": \"<string>\",\n  \"monitorJobDefinitionId\": \"<string>\",\n  \"batchJobDefinitionId\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"createUserId\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"executionStartTime\": \"<dateTime>\"\n}"
								},
								{
									"name": "The request is not valid if one or more of the following statements apply:\n\n* The provided migration plan is not valid, so an exception of type\n`MigrationPlanValidationException` is returned.\n* In case additional parameters of the request are unexpected, ",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"migrationPlan\": {\n    \"sourceProcessDefinitionId\": \"<string>\",\n    \"targetProcessDefinitionId\": \"<string>\",\n    \"instructions\": [\n      {\n        \"sourceActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"targetActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"updateEventTrigger\": \"<boolean>\"\n      },\n      {\n        \"sourceActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"targetActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"updateEventTrigger\": \"<boolean>\"\n      }\n    ],\n    \"variables\": {\n      \"laborum092\": {\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"magna35\": -97500733,\n          \"aliquad\": -85874064.58180511,\n          \"sed_0\": \"Ut commodo pariatur sunt\"\n        }\n      }\n    }\n  },\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"eq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/migration/executeAsync",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"migration",
												"executeAsync"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "generate",
					"item": [
						{
							"name": "Generate Migration Plan",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sourceProcessDefinitionId\": \"<string>\",\n  \"targetProcessDefinitionId\": \"<string>\",\n  \"updateEventTriggers\": \"<boolean>\",\n  \"variables\": {\n    \"fugiat_d29\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Lorem_9_\": \"incididunt Excepteur ea\"\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/migration/generate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"migration",
										"generate"
									]
								},
								"description": "Generates a migration plan for two process definitions. The generated migration\nplan contains migration instructions which map equal activities\nbetween the\ntwo process definitions."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sourceProcessDefinitionId\": \"<string>\",\n  \"targetProcessDefinitionId\": \"<string>\",\n  \"updateEventTriggers\": \"<boolean>\",\n  \"variables\": {\n    \"fugiat_d29\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Lorem_9_\": \"incididunt Excepteur ea\"\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/migration/generate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"migration",
												"generate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"sourceProcessDefinitionId\": \"<string>\",\n  \"targetProcessDefinitionId\": \"<string>\",\n  \"instructions\": [\n    {\n      \"sourceActivityIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"targetActivityIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"updateEventTrigger\": \"<boolean>\"\n    },\n    {\n      \"sourceActivityIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"targetActivityIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"updateEventTrigger\": \"<boolean>\"\n    }\n  ],\n  \"variables\": {\n    \"ea6bc\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"ut765\": 39299705.40640414\n      }\n    }\n  }\n}"
								},
								{
									"name": "\nThe requested migration was invalid. See\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.\n",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sourceProcessDefinitionId\": \"<string>\",\n  \"targetProcessDefinitionId\": \"<string>\",\n  \"updateEventTriggers\": \"<boolean>\",\n  \"variables\": {\n    \"fugiat_d29\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Lorem_9_\": \"incididunt Excepteur ea\"\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/migration/generate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"migration",
												"generate"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "validate",
					"item": [
						{
							"name": "Validate Migration Plan",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sourceProcessDefinitionId\": \"<string>\",\n  \"targetProcessDefinitionId\": \"<string>\",\n  \"instructions\": [\n    {\n      \"sourceActivityIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"targetActivityIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"updateEventTrigger\": \"<boolean>\"\n    },\n    {\n      \"sourceActivityIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"targetActivityIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"updateEventTrigger\": \"<boolean>\"\n    }\n  ],\n  \"variables\": {\n    \"ea6bc\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"ut765\": 39299705.40640414\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/migration/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"migration",
										"validate"
									]
								},
								"description": "Validates a migration plan statically without executing it. This\ncorresponds to the\n[creation time validation](https://docs.camunda.org/manual/7.21/user-guide/process-engine/process-instance-migration/#creation-time-validation)\ndescribed in the user guide."
							},
							"response": [
								{
									"name": "Request successful. The validation report was returned.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sourceProcessDefinitionId\": \"<string>\",\n  \"targetProcessDefinitionId\": \"<string>\",\n  \"instructions\": [\n    {\n      \"sourceActivityIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"targetActivityIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"updateEventTrigger\": \"<boolean>\"\n    },\n    {\n      \"sourceActivityIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"targetActivityIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"updateEventTrigger\": \"<boolean>\"\n    }\n  ],\n  \"variables\": {\n    \"ea6bc\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"ut765\": 39299705.40640414\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/migration/validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"migration",
												"validate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"instructionReports\": [\n    {\n      \"instruction\": {\n        \"sourceActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"targetActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"updateEventTrigger\": \"<boolean>\"\n      },\n      \"failures\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"instruction\": {\n        \"sourceActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"targetActivityIds\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"updateEventTrigger\": \"<boolean>\"\n      },\n      \"failures\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"variableReports\": {\n    \"nisi1a\": {\n      \"failures\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Lorem_\": \"esse cillum\"\n      }\n    },\n    \"ad___\": {\n      \"failures\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"ex_f9\": -22724470,\n        \"ut3a\": true,\n        \"reprehenderit_ba\": false\n      }\n    }\n  }\n}"
								},
								{
									"name": "In case additional parameters of the request are unexpected, an\nexception of type `InvalidRequestException` is returned. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sourceProcessDefinitionId\": \"<string>\",\n  \"targetProcessDefinitionId\": \"<string>\",\n  \"instructions\": [\n    {\n      \"sourceActivityIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"targetActivityIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"updateEventTrigger\": \"<boolean>\"\n    },\n    {\n      \"sourceActivityIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"targetActivityIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"updateEventTrigger\": \"<boolean>\"\n    }\n  ],\n  \"variables\": {\n    \"ea6bc\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"ut765\": 39299705.40640414\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/migration/validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"migration",
												"validate"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "modification",
			"item": [
				{
					"name": "execute",
					"item": [
						{
							"name": "Execute Modification",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"processDefinitionId\": \"<string>\",\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"neq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"neq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"instructions\": [\n    {\n      \"type\": \"startTransition\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startAfterActivity\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"annotation\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/modification/execute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"modification",
										"execute"
									]
								},
								"description": "Executes a modification synchronously for multiple process instances.\nTo modify a single process instance, use the\n[Modify Process Instance Execution State](https://docs.camunda.org/manual/7.21/reference/rest/process-instance/post-modification/) method.\nTo execute a modification asynchronously, use the\n[Execute Modification Async (Batch)](https://docs.camunda.org/manual/7.21/reference/rest/modification/post-modification-async/) method.\n\nFor more information about the difference between synchronous and\nasynchronous execution of a modification, please refer to the related\nsection of the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/process-instance-migration.md#executing-a-migration-plan)."
							},
							"response": [
								{
									"name": "Request successful. This method returns no content.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processDefinitionId\": \"<string>\",\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"neq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"neq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"instructions\": [\n    {\n      \"type\": \"startTransition\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startAfterActivity\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"annotation\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/modification/execute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"modification",
												"execute"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "\nIn case following parameters are missing: instructions,\nprocessDefinitionId, activityId or transitionId, processInstanceIds\nor processInstanceQuery, an exception of type\n`InvalidRequestException` is returned. See the\n[Introduction](https://docs.camunda.o",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processDefinitionId\": \"<string>\",\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"neq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"neq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"instructions\": [\n    {\n      \"type\": \"startTransition\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startAfterActivity\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"annotation\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/modification/execute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"modification",
												"execute"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "executeAsync",
					"item": [
						{
							"name": "Execute Modification Async (Batch)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"processDefinitionId\": \"<string>\",\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"neq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"neq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"instructions\": [\n    {\n      \"type\": \"startTransition\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startAfterActivity\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"annotation\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/modification/executeAsync",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"modification",
										"executeAsync"
									]
								},
								"description": "Executes a modification asynchronously for multiple process instances. To execute a\nmodification synchronously, use the\n[Execute Modification](https://docs.camunda.org/manual/7.21/reference/rest/modification/post-modification-sync/) method.\n\nFor more information about the difference between synchronous and\nasynchronous execution of a modification, please refer to the related\nsection of the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/process-instance-migration.md#executing-a-migration-plan)."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processDefinitionId\": \"<string>\",\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"neq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"neq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"instructions\": [\n    {\n      \"type\": \"startTransition\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startAfterActivity\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"annotation\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/modification/executeAsync",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"modification",
												"executeAsync"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"totalJobs\": \"<integer>\",\n  \"jobsCreated\": \"<integer>\",\n  \"batchJobsPerSeed\": \"<integer>\",\n  \"invocationsPerBatchJob\": \"<integer>\",\n  \"seedJobDefinitionId\": \"<string>\",\n  \"monitorJobDefinitionId\": \"<string>\",\n  \"batchJobDefinitionId\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"createUserId\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"executionStartTime\": \"<dateTime>\"\n}"
								},
								{
									"name": "\nIn case following parameters are missing: instructions,\nprocessDefinitionId, activityId or transitionId, processInstanceIds\nor processInstanceQuery, an exception of type\n`InvalidRequestException` is returned. See the\n[Introduction](https://docs.camunda.o",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processDefinitionId\": \"<string>\",\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"neq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"neq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"instructions\": [\n    {\n      \"type\": \"startTransition\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startAfterActivity\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"annotation\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/modification/executeAsync",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"modification",
												"executeAsync"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "process-definition",
			"item": [
				{
					"name": "count",
					"item": [
						{
							"name": "Get List Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/process-definition/count?processDefinitionId=<string>&processDefinitionIdIn=<string>&name=<string>&nameLike=<string>&deploymentId=<string>&deployedAfter=<dateTime>&deployedAt=<dateTime>&key=<string>&keysIn=<string>&keyLike=<string>&category=<string>&categoryLike=<string>&version=<integer>&latestVersion=<boolean>&resourceName=<string>&resourceNameLike=<string>&startableBy=<string>&active=<boolean>&suspended=<boolean>&incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeProcessDefinitionsWithoutTenantId=<boolean>&versionTag=<string>&versionTagLike=<string>&withoutVersionTag=<boolean>&startableInTasklist=<boolean>&notStartableInTasklist=<boolean>&startablePermissionCheck=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process-definition",
										"count"
									],
									"query": [
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Filter by process definition id."
										},
										{
											"key": "processDefinitionIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of process definition ids."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Filter by process definition name."
										},
										{
											"key": "nameLike",
											"value": "<string>",
											"description": "Filter by process definition names that the parameter is a substring of."
										},
										{
											"key": "deploymentId",
											"value": "<string>",
											"description": "Filter by the deployment the id belongs to."
										},
										{
											"key": "deployedAfter",
											"value": "<dateTime>",
											"description": "Filter by the deploy time of the deployment the process definition belongs to.\nOnly selects process definitions that have been deployed after (exclusive) a specific time.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.546+0200`."
										},
										{
											"key": "deployedAt",
											"value": "<dateTime>",
											"description": "Filter by the deploy time of the deployment the process definition belongs to.\nOnly selects process definitions that have been deployed at a specific time (exact match).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.546+0200`."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "Filter by process definition key, i.e., the id in the BPMN 2.0 XML. Exact match."
										},
										{
											"key": "keysIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of process definition keys."
										},
										{
											"key": "keyLike",
											"value": "<string>",
											"description": "Filter by process definition keys that the parameter is a substring of."
										},
										{
											"key": "category",
											"value": "<string>",
											"description": "Filter by process definition category. Exact match."
										},
										{
											"key": "categoryLike",
											"value": "<string>",
											"description": "Filter by process definition categories that the parameter is a substring of."
										},
										{
											"key": "version",
											"value": "<integer>",
											"description": "Filter by process definition version."
										},
										{
											"key": "latestVersion",
											"value": "<boolean>",
											"description": "Only include those process definitions that are latest versions.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "resourceName",
											"value": "<string>",
											"description": "Filter by the name of the process definition resource. Exact match."
										},
										{
											"key": "resourceNameLike",
											"value": "<string>",
											"description": "Filter by names of those process definition resources that the parameter is a substring of."
										},
										{
											"key": "startableBy",
											"value": "<string>",
											"description": "Filter by a user name who is allowed to start the process."
										},
										{
											"key": "active",
											"value": "<boolean>",
											"description": "Only include active process definitions.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "suspended",
											"value": "<boolean>",
											"description": "Only include suspended process definitions.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "incidentId",
											"value": "<string>",
											"description": "Filter by the incident id."
										},
										{
											"key": "incidentType",
											"value": "<string>",
											"description": "Filter by the incident type.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
										},
										{
											"key": "incidentMessage",
											"value": "<string>",
											"description": "Filter by the incident message. Exact match."
										},
										{
											"key": "incidentMessageLike",
											"value": "<string>",
											"description": "Filter by the incident message that the parameter is a substring of."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids.\nA process definition must have one of the given tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include process definitions which belong to no tenant.\nValue may only be true, as false is the default behavior."
										},
										{
											"key": "includeProcessDefinitionsWithoutTenantId",
											"value": "<boolean>",
											"description": "Include process definitions which belong to no tenant. Can be used in combination with `tenantIdIn`.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "versionTag",
											"value": "<string>",
											"description": "Filter by the version tag."
										},
										{
											"key": "versionTagLike",
											"value": "<string>",
											"description": "Filter by the version tag that the parameter is a substring of."
										},
										{
											"key": "withoutVersionTag",
											"value": "<boolean>",
											"description": "Only include process definitions without a `versionTag`."
										},
										{
											"key": "startableInTasklist",
											"value": "<boolean>",
											"description": "Filter by process definitions which are startable in Tasklist.."
										},
										{
											"key": "notStartableInTasklist",
											"value": "<boolean>",
											"description": "Filter by process definitions which are not startable in Tasklist."
										},
										{
											"key": "startablePermissionCheck",
											"value": "<boolean>",
											"description": "Filter by process definitions which the user is allowed to start in Tasklist.\nIf the user doesn't have these permissions the result will be empty list.\nThe permissions are:\n* `CREATE` permission for all Process instances\n* `CREATE_INSTANCE` and `READ` permission on Process definition level"
										}
									]
								},
								"description": "Requests the number of process definitions that fulfill the query criteria.\nTakes the same filtering parameters as the [Get Definitions](https://docs.camunda.org/manual/7.21/reference/rest/process-definition/get-query/) method."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-definition/count?processDefinitionId=<string>&processDefinitionIdIn=<string>&name=<string>&nameLike=<string>&deploymentId=<string>&deployedAfter=<dateTime>&deployedAt=<dateTime>&key=<string>&keysIn=<string>&keyLike=<string>&category=<string>&categoryLike=<string>&version=<integer>&latestVersion=<boolean>&resourceName=<string>&resourceNameLike=<string>&startableBy=<string>&active=<boolean>&suspended=<boolean>&incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeProcessDefinitionsWithoutTenantId=<boolean>&versionTag=<string>&versionTagLike=<string>&withoutVersionTag=<boolean>&startableInTasklist=<boolean>&notStartableInTasklist=<boolean>&startablePermissionCheck=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												"count"
											],
											"query": [
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by process definition id."
												},
												{
													"key": "processDefinitionIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of process definition ids."
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "Filter by process definition name."
												},
												{
													"key": "nameLike",
													"value": "<string>",
													"description": "Filter by process definition names that the parameter is a substring of."
												},
												{
													"key": "deploymentId",
													"value": "<string>",
													"description": "Filter by the deployment the id belongs to."
												},
												{
													"key": "deployedAfter",
													"value": "<dateTime>",
													"description": "Filter by the deploy time of the deployment the process definition belongs to.\nOnly selects process definitions that have been deployed after (exclusive) a specific time.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.546+0200`."
												},
												{
													"key": "deployedAt",
													"value": "<dateTime>",
													"description": "Filter by the deploy time of the deployment the process definition belongs to.\nOnly selects process definitions that have been deployed at a specific time (exact match).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.546+0200`."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "Filter by process definition key, i.e., the id in the BPMN 2.0 XML. Exact match."
												},
												{
													"key": "keysIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of process definition keys."
												},
												{
													"key": "keyLike",
													"value": "<string>",
													"description": "Filter by process definition keys that the parameter is a substring of."
												},
												{
													"key": "category",
													"value": "<string>",
													"description": "Filter by process definition category. Exact match."
												},
												{
													"key": "categoryLike",
													"value": "<string>",
													"description": "Filter by process definition categories that the parameter is a substring of."
												},
												{
													"key": "version",
													"value": "<integer>",
													"description": "Filter by process definition version."
												},
												{
													"key": "latestVersion",
													"value": "<boolean>",
													"description": "Only include those process definitions that are latest versions.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "resourceName",
													"value": "<string>",
													"description": "Filter by the name of the process definition resource. Exact match."
												},
												{
													"key": "resourceNameLike",
													"value": "<string>",
													"description": "Filter by names of those process definition resources that the parameter is a substring of."
												},
												{
													"key": "startableBy",
													"value": "<string>",
													"description": "Filter by a user name who is allowed to start the process."
												},
												{
													"key": "active",
													"value": "<boolean>",
													"description": "Only include active process definitions.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "suspended",
													"value": "<boolean>",
													"description": "Only include suspended process definitions.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "incidentId",
													"value": "<string>",
													"description": "Filter by the incident id."
												},
												{
													"key": "incidentType",
													"value": "<string>",
													"description": "Filter by the incident type.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
												},
												{
													"key": "incidentMessage",
													"value": "<string>",
													"description": "Filter by the incident message. Exact match."
												},
												{
													"key": "incidentMessageLike",
													"value": "<string>",
													"description": "Filter by the incident message that the parameter is a substring of."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids.\nA process definition must have one of the given tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include process definitions which belong to no tenant.\nValue may only be true, as false is the default behavior."
												},
												{
													"key": "includeProcessDefinitionsWithoutTenantId",
													"value": "<boolean>",
													"description": "Include process definitions which belong to no tenant. Can be used in combination with `tenantIdIn`.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "versionTag",
													"value": "<string>",
													"description": "Filter by the version tag."
												},
												{
													"key": "versionTagLike",
													"value": "<string>",
													"description": "Filter by the version tag that the parameter is a substring of."
												},
												{
													"key": "withoutVersionTag",
													"value": "<boolean>",
													"description": "Only include process definitions without a `versionTag`."
												},
												{
													"key": "startableInTasklist",
													"value": "<boolean>",
													"description": "Filter by process definitions which are startable in Tasklist.."
												},
												{
													"key": "notStartableInTasklist",
													"value": "<boolean>",
													"description": "Filter by process definitions which are not startable in Tasklist."
												},
												{
													"key": "startablePermissionCheck",
													"value": "<boolean>",
													"description": "Filter by process definitions which the user is allowed to start in Tasklist.\nIf the user doesn't have these permissions the result will be empty list.\nThe permissions are:\n* `CREATE` permission for all Process instances\n* `CREATE_INSTANCE` and `READ` permission on Process definition level"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid.\nSee the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-definition/count?processDefinitionId=<string>&processDefinitionIdIn=<string>&name=<string>&nameLike=<string>&deploymentId=<string>&deployedAfter=<dateTime>&deployedAt=<dateTime>&key=<string>&keysIn=<string>&keyLike=<string>&category=<string>&categoryLike=<string>&version=<integer>&latestVersion=<boolean>&resourceName=<string>&resourceNameLike=<string>&startableBy=<string>&active=<boolean>&suspended=<boolean>&incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeProcessDefinitionsWithoutTenantId=<boolean>&versionTag=<string>&versionTagLike=<string>&withoutVersionTag=<boolean>&startableInTasklist=<boolean>&notStartableInTasklist=<boolean>&startablePermissionCheck=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												"count"
											],
											"query": [
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by process definition id."
												},
												{
													"key": "processDefinitionIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of process definition ids."
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "Filter by process definition name."
												},
												{
													"key": "nameLike",
													"value": "<string>",
													"description": "Filter by process definition names that the parameter is a substring of."
												},
												{
													"key": "deploymentId",
													"value": "<string>",
													"description": "Filter by the deployment the id belongs to."
												},
												{
													"key": "deployedAfter",
													"value": "<dateTime>",
													"description": "Filter by the deploy time of the deployment the process definition belongs to.\nOnly selects process definitions that have been deployed after (exclusive) a specific time.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.546+0200`."
												},
												{
													"key": "deployedAt",
													"value": "<dateTime>",
													"description": "Filter by the deploy time of the deployment the process definition belongs to.\nOnly selects process definitions that have been deployed at a specific time (exact match).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.546+0200`."
												},
												{
													"key": "key",
													"value": "<string>",
													"description": "Filter by process definition key, i.e., the id in the BPMN 2.0 XML. Exact match."
												},
												{
													"key": "keysIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of process definition keys."
												},
												{
													"key": "keyLike",
													"value": "<string>",
													"description": "Filter by process definition keys that the parameter is a substring of."
												},
												{
													"key": "category",
													"value": "<string>",
													"description": "Filter by process definition category. Exact match."
												},
												{
													"key": "categoryLike",
													"value": "<string>",
													"description": "Filter by process definition categories that the parameter is a substring of."
												},
												{
													"key": "version",
													"value": "<integer>",
													"description": "Filter by process definition version."
												},
												{
													"key": "latestVersion",
													"value": "<boolean>",
													"description": "Only include those process definitions that are latest versions.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "resourceName",
													"value": "<string>",
													"description": "Filter by the name of the process definition resource. Exact match."
												},
												{
													"key": "resourceNameLike",
													"value": "<string>",
													"description": "Filter by names of those process definition resources that the parameter is a substring of."
												},
												{
													"key": "startableBy",
													"value": "<string>",
													"description": "Filter by a user name who is allowed to start the process."
												},
												{
													"key": "active",
													"value": "<boolean>",
													"description": "Only include active process definitions.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "suspended",
													"value": "<boolean>",
													"description": "Only include suspended process definitions.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "incidentId",
													"value": "<string>",
													"description": "Filter by the incident id."
												},
												{
													"key": "incidentType",
													"value": "<string>",
													"description": "Filter by the incident type.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
												},
												{
													"key": "incidentMessage",
													"value": "<string>",
													"description": "Filter by the incident message. Exact match."
												},
												{
													"key": "incidentMessageLike",
													"value": "<string>",
													"description": "Filter by the incident message that the parameter is a substring of."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids.\nA process definition must have one of the given tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "<boolean>",
													"description": "Only include process definitions which belong to no tenant.\nValue may only be true, as false is the default behavior."
												},
												{
													"key": "includeProcessDefinitionsWithoutTenantId",
													"value": "<boolean>",
													"description": "Include process definitions which belong to no tenant. Can be used in combination with `tenantIdIn`.\nValue may only be `true`, as `false` is the default behavior."
												},
												{
													"key": "versionTag",
													"value": "<string>",
													"description": "Filter by the version tag."
												},
												{
													"key": "versionTagLike",
													"value": "<string>",
													"description": "Filter by the version tag that the parameter is a substring of."
												},
												{
													"key": "withoutVersionTag",
													"value": "<boolean>",
													"description": "Only include process definitions without a `versionTag`."
												},
												{
													"key": "startableInTasklist",
													"value": "<boolean>",
													"description": "Filter by process definitions which are startable in Tasklist.."
												},
												{
													"key": "notStartableInTasklist",
													"value": "<boolean>",
													"description": "Filter by process definitions which are not startable in Tasklist."
												},
												{
													"key": "startablePermissionCheck",
													"value": "<boolean>",
													"description": "Filter by process definitions which the user is allowed to start in Tasklist.\nIf the user doesn't have these permissions the result will be empty list.\nThe permissions are:\n* `CREATE` permission for all Process instances\n* `CREATE_INSTANCE` and `READ` permission on Process definition level"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "key",
					"item": [
						{
							"name": "{key}",
							"item": [
								{
									"name": "deployed-start-form",
									"item": [
										{
											"name": "Get Deployed Start Form",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/xhtml+xml"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/key/:key/deployed-start-form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														"key",
														":key",
														"deployed-start-form"
													],
													"variable": [
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The key of the process definition (the latest version thereof) to be retrieved."
														}
													]
												},
												"description": "Retrieves the deployed form that can be referenced from a start event.\nFor further information please refer to [User Guide](https://docs.camunda.org/manual/7.21/user-guide/task-forms/#embedded-task-forms)."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/xhtml+xml"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/deployed-start-form",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"deployed-start-form"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "xml",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/xhtml+xml"
														}
													],
													"cookie": [],
													"body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>(string)</element>"
												},
												{
													"name": "The form key has wrong format.  See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/deployed-start-form",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"deployed-start-form"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "The deployed start form cannot be retrieved due to missing permissions on process definition resource.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/deployed-start-form",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"deployed-start-form"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"userId\": \"<string>\",\n  \"missingAuthorizations\": [\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    },\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "No deployed start form for a given process definition exists. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/deployed-start-form",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"deployed-start-form"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "diagram",
									"item": [
										{
											"name": "Get Diagram",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/octet-stream"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/key/:key/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														"key",
														":key",
														"diagram"
													],
													"variable": [
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The key of the process definition."
														}
													]
												},
												"description": "Retrieves the diagram for the latest version of the process definition which belongs to no tenant.\n\nIf the process definition's deployment contains an image resource with the same file name\nas the process definition, the deployed image will be returned by the Get Diagram endpoint.\nExample: `someProcess.bpmn` and `someProcess.png`.\nSupported file extentions for the image are: `svg`, `png`, `jpg`, and `gif`."
											},
											"response": [
												{
													"name": "Request successful. The image diagram of this process.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/octet-stream"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/diagram",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"diagram"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/octet-stream"
														}
													],
													"cookie": [],
													"body": "<string>"
												},
												{
													"name": "The process definition doesn't have an associated diagram.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/diagram",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"diagram"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Process definition with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/diagram",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"diagram"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "form-variables",
									"item": [
										{
											"name": "Get Start Form Variables",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/key/:key/form-variables?variableNames=<string>&deserializeValues=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														"key",
														":key",
														"form-variables"
													],
													"query": [
														{
															"key": "variableNames",
															"value": "<string>",
															"description": "A comma-separated list of variable names. Allows restricting the list of requested\nvariables to the variable names in the list. It is best practice to restrict the\nlist of variables to the variables actually required by the form in order to\nminimize fetching of data. If the query parameter is ommitted all variables are\nfetched. If the query parameter contains non-existent variable names, the variable\nnames are ignored."
														},
														{
															"key": "deserializeValues",
															"value": "true",
															"description": "Determines whether serializable variable values (typically variables that store\ncustom Java objects) should be deserialized on server side (default true).\n\nIf set to true, a serializable variable will be deserialized on server side and\ntransformed to JSON using [Jackson's](http://jackson.codehaus.org/) POJO/bean\nproperty introspection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to false, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string\ncontaining XML.\n\n**Note**: While true is the default value for reasons of backward compatibility, we\nrecommend setting this parameter to false when developing web applications that are\nindependent of the Java process applications deployed to the engine."
														}
													],
													"variable": [
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The key of the process definition (the latest version thereof) to be retrieved."
														}
													]
												},
												"description": "Retrieves the start form variables for the latest process definition which belongs to no tenant\n(only if they are defined via the \n[Generated Task Form](https://docs.camunda.org/manual/7.21/user-guide/task-forms/#generated-task-forms) approach).\nThe start form variables take form data specified on the start event into account.\nIf form fields are defined, the variable types and default values\nof the form fields are taken into account."
											},
											"response": [
												{
													"name": "Request successful. A JSON object containing a property for each variable returned.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/form-variables?variableNames=<string>&deserializeValues=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"form-variables"
															],
															"query": [
																{
																	"key": "variableNames",
																	"value": "<string>",
																	"description": "A comma-separated list of variable names. Allows restricting the list of requested\nvariables to the variable names in the list. It is best practice to restrict the\nlist of variables to the variables actually required by the form in order to\nminimize fetching of data. If the query parameter is ommitted all variables are\nfetched. If the query parameter contains non-existent variable names, the variable\nnames are ignored."
																},
																{
																	"key": "deserializeValues",
																	"value": "true",
																	"description": "Determines whether serializable variable values (typically variables that store\ncustom Java objects) should be deserialized on server side (default true).\n\nIf set to true, a serializable variable will be deserialized on server side and\ntransformed to JSON using [Jackson's](http://jackson.codehaus.org/) POJO/bean\nproperty introspection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to false, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string\ncontaining XML.\n\n**Note**: While true is the default value for reasons of backward compatibility, we\nrecommend setting this parameter to false when developing web applications that are\nindependent of the Java process applications deployed to the engine."
																}
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"nulla__3\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"consectetur_dfd\": \"veniam do minim occaecat\"\n    }\n  },\n  \"ut_10\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"ut_fa\": false,\n      \"mollit9\": -39701223,\n      \"velit_c1\": \"ve\"\n    }\n  },\n  \"aliquip_5\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"consectetur_34d\": -65418375,\n      \"laboriseec\": false,\n      \"doloreb\": true\n    }\n  },\n  \"mollitd\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"in_76d\": true,\n      \"pariatur_f77\": true\n    }\n  }\n}"
												},
												{
													"name": "The key is null or does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/form-variables?variableNames=<string>&deserializeValues=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"form-variables"
															],
															"query": [
																{
																	"key": "variableNames",
																	"value": "<string>",
																	"description": "A comma-separated list of variable names. Allows restricting the list of requested\nvariables to the variable names in the list. It is best practice to restrict the\nlist of variables to the variables actually required by the form in order to\nminimize fetching of data. If the query parameter is ommitted all variables are\nfetched. If the query parameter contains non-existent variable names, the variable\nnames are ignored."
																},
																{
																	"key": "deserializeValues",
																	"value": "true",
																	"description": "Determines whether serializable variable values (typically variables that store\ncustom Java objects) should be deserialized on server side (default true).\n\nIf set to true, a serializable variable will be deserialized on server side and\ntransformed to JSON using [Jackson's](http://jackson.codehaus.org/) POJO/bean\nproperty introspection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to false, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string\ncontaining XML.\n\n**Note**: While true is the default value for reasons of backward compatibility, we\nrecommend setting this parameter to false when developing web applications that are\nindependent of the Java process applications deployed to the engine."
																}
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "history-time-to-live",
									"item": [
										{
											"name": "Update History Time to Live",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"historyTimeToLive\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-definition/key/:key/history-time-to-live",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														"key",
														":key",
														"history-time-to-live"
													],
													"variable": [
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The key of the process definition to change history time to live."
														}
													]
												},
												"description": "Updates history time to live for the latest version of the process definition which belongs to no tenant.\nThe field is used within [History cleanup](https://docs.camunda.org/manual/7.21/user-guide/process-engine/history/#history-cleanup).\nThe value of the update is mandatory by default and does not allow `null` values. To enable them, please\nset the feature flag `enforceHistoryTimeToLive` to `false`. Read more in [Configuration Properties]\n(https://docs.camunda.org/manual/7.21/reference/deployment-descriptors/tags/process-engine#configuration-properties)"
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"historyTimeToLive\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/history-time-to-live",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"history-time-to-live"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if some of the request parameters are invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"historyTimeToLive\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/history-time-to-live",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"history-time-to-live"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "Process definition with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"historyTimeToLive\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/history-time-to-live",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"history-time-to-live"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "rendered-form",
									"item": [
										{
											"name": "Get Rendered Start Form",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/xhtml+xml"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/key/:key/rendered-form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														"key",
														":key",
														"rendered-form"
													],
													"variable": [
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The key of the process definition (the latest version thereof) to be retrieved."
														}
													]
												},
												"description": "Retrieves  the rendered form for the latest version of the process definition which belongs to no tenant.\nThis method can be used to get the HTML rendering of a\n[Generated Task Form](https://docs.camunda.org/manual/7.21/user-guide/task-forms/#generated-task-forms)."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/xhtml+xml"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/rendered-form",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"rendered-form"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "xml",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/xhtml+xml"
														}
													],
													"cookie": [],
													"body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>(string)</element>"
												},
												{
													"name": "Process definition has no form field metadata defined. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/rendered-form",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"rendered-form"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "Process definition with given key does not exist.  See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/rendered-form",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"rendered-form"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "start",
									"item": [
										{
											"name": "Start Instance",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"businessKey\": \"<string>\",\n  \"variables\": {\n    \"sed_61\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"aliquip4\": -76007881,\n        \"Excepteur_8\": 1243171.7254527658\n      }\n    }\n  },\n  \"caseInstanceId\": \"<string>\",\n  \"startInstructions\": [\n    {\n      \"type\": \"startAfterActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"nulla1\": false\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_b4\": true,\n          \"ex_272\": false,\n          \"voluptate1\": \"minim in magna\"\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"withVariablesInReturn\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-definition/key/:key/start",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														"key",
														":key",
														"start"
													],
													"variable": [
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The key of the process definition (the latest version thereof) to be retrieved."
														}
													]
												},
												"description": "Instantiates a given process definition, starts the latest version of the process definition\nwhich belongs to no tenant.\nProcess variables and business key may be supplied in the request body."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"businessKey\": \"<string>\",\n  \"variables\": {\n    \"sed_61\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"aliquip4\": -76007881,\n        \"Excepteur_8\": 1243171.7254527658\n      }\n    }\n  },\n  \"caseInstanceId\": \"<string>\",\n  \"startInstructions\": [\n    {\n      \"type\": \"startAfterActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"nulla1\": false\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_b4\": true,\n          \"ex_272\": false,\n          \"voluptate1\": \"minim in magna\"\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"withVariablesInReturn\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/start",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"start"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"variables\": {\n    \"sint_0\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"ex__7\": 38919287\n      }\n    }\n  },\n  \"id\": \"<string>\",\n  \"definitionId\": \"<string>\",\n  \"businessKey\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"ended\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The instance could not be created due to an invalid variable value,\nfor example if the value could not be parsed to an `Integer` value or\nthe passed variable type is not supported.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"businessKey\": \"<string>\",\n  \"variables\": {\n    \"sed_61\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"aliquip4\": -76007881,\n        \"Excepteur_8\": 1243171.7254527658\n      }\n    }\n  },\n  \"caseInstanceId\": \"<string>\",\n  \"startInstructions\": [\n    {\n      \"type\": \"startAfterActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"nulla1\": false\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_b4\": true,\n          \"ex_272\": false,\n          \"voluptate1\": \"minim in magna\"\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"withVariablesInReturn\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/start",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"start"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "The instance could not be created successfully.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"businessKey\": \"<string>\",\n  \"variables\": {\n    \"sed_61\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"aliquip4\": -76007881,\n        \"Excepteur_8\": 1243171.7254527658\n      }\n    }\n  },\n  \"caseInstanceId\": \"<string>\",\n  \"startInstructions\": [\n    {\n      \"type\": \"startAfterActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"nulla1\": false\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_b4\": true,\n          \"ex_272\": false,\n          \"voluptate1\": \"minim in magna\"\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"withVariablesInReturn\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/start",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"start"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "startForm",
									"item": [
										{
											"name": "Get Start Form Key",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/key/:key/startForm",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														"key",
														":key",
														"startForm"
													],
													"variable": [
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The key of the process definition (the latest version thereof) for which the form key is to be retrieved."
														}
													]
												},
												"description": "Retrieves the key of the start form for the latest version of the process definition\nwhich belongs to no tenant.\nThe form key corresponds to the `FormData#formKey` property in the engine."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/startForm",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"startForm"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"key\": \"<string>\",\n  \"camundaFormRef\": {\n    \"key\": \"<string>\",\n    \"binding\": \"<string>\",\n    \"version\": \"<integer>\"\n  },\n  \"contextPath\": \"<string>\"\n}"
												},
												{
													"name": "Process definition has no start form defined. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/startForm",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"startForm"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "Process definition with given key does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/startForm",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"startForm"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "statistics",
									"item": [
										{
											"name": "Get Activity Instance Statistics",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/key/:key/statistics?failedJobs=<boolean>&incidents=<boolean>&incidentsForType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														"key",
														":key",
														"statistics"
													],
													"query": [
														{
															"key": "failedJobs",
															"value": "<boolean>",
															"description": "Whether to include the number of failed jobs in the result or not. Valid values are `true` or `false`."
														},
														{
															"key": "incidents",
															"value": "<boolean>",
															"description": "Valid values for this property are `true` or `false`.\nIf this property has been set to `true` the result will include the corresponding number of incidents\nfor each occurred incident type.\nIf it is set to `false`, the incidents will not be included in the result.\nCannot be used in combination with `incidentsForType`."
														},
														{
															"key": "incidentsForType",
															"value": "<string>",
															"description": "If this property has been set with any incident type (i.e., a string value) the result\nwill only include the number of incidents for the assigned incident type.\nCannot be used in combination with `incidents`.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
														}
													],
													"variable": [
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The key of the process definition (the latest version thereof) to be retrieved."
														}
													]
												},
												"description": "Retrieves runtime statistics of the latest version of the given process definition\nwhich belongs to no tenant, grouped by activities.\nThese statistics include the number of running activity instances, optionally the number of failed jobs\nand also optionally the number of incidents either grouped by incident types or\nfor a specific incident type.\n**Note**: This does not include historic data."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/statistics?failedJobs=<boolean>&incidents=<boolean>&incidentsForType=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"statistics"
															],
															"query": [
																{
																	"key": "failedJobs",
																	"value": "<boolean>",
																	"description": "Whether to include the number of failed jobs in the result or not. Valid values are `true` or `false`."
																},
																{
																	"key": "incidents",
																	"value": "<boolean>",
																	"description": "Valid values for this property are `true` or `false`.\nIf this property has been set to `true` the result will include the corresponding number of incidents\nfor each occurred incident type.\nIf it is set to `false`, the incidents will not be included in the result.\nCannot be used in combination with `incidentsForType`."
																},
																{
																	"key": "incidentsForType",
																	"value": "<string>",
																	"description": "If this property has been set with any incident type (i.e., a string value) the result\nwill only include the number of incidents for the assigned incident type.\nCannot be used in combination with `incidents`.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
																}
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"<string>\",\n    \"instances\": \"<integer>\",\n    \"failedJobs\": \"<integer>\",\n    \"incidents\": [\n      {\n        \"incidentType\": \"<string>\",\n        \"incidentCount\": \"<integer>\"\n      },\n      {\n        \"incidentType\": \"<string>\",\n        \"incidentCount\": \"<integer>\"\n      }\n    ],\n    \"@class\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"instances\": \"<integer>\",\n    \"failedJobs\": \"<integer>\",\n    \"incidents\": [\n      {\n        \"incidentType\": \"<string>\",\n        \"incidentCount\": \"<integer>\"\n      },\n      {\n        \"incidentType\": \"<string>\",\n        \"incidentCount\": \"<integer>\"\n      }\n    ],\n    \"@class\": \"<string>\"\n  }\n]"
												},
												{
													"name": "Returned if some of the query parameters are invalid.\nSee the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/statistics?failedJobs=<boolean>&incidents=<boolean>&incidentsForType=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"statistics"
															],
															"query": [
																{
																	"key": "failedJobs",
																	"value": "<boolean>",
																	"description": "Whether to include the number of failed jobs in the result or not. Valid values are `true` or `false`."
																},
																{
																	"key": "incidents",
																	"value": "<boolean>",
																	"description": "Valid values for this property are `true` or `false`.\nIf this property has been set to `true` the result will include the corresponding number of incidents\nfor each occurred incident type.\nIf it is set to `false`, the incidents will not be included in the result.\nCannot be used in combination with `incidentsForType`."
																},
																{
																	"key": "incidentsForType",
																	"value": "<string>",
																	"description": "If this property has been set with any incident type (i.e., a string value) the result\nwill only include the number of incidents for the assigned incident type.\nCannot be used in combination with `incidents`.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
																}
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "Process definition with given key does not exist.\nSee the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/statistics?failedJobs=<boolean>&incidents=<boolean>&incidentsForType=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"statistics"
															],
															"query": [
																{
																	"key": "failedJobs",
																	"value": "<boolean>",
																	"description": "Whether to include the number of failed jobs in the result or not. Valid values are `true` or `false`."
																},
																{
																	"key": "incidents",
																	"value": "<boolean>",
																	"description": "Valid values for this property are `true` or `false`.\nIf this property has been set to `true` the result will include the corresponding number of incidents\nfor each occurred incident type.\nIf it is set to `false`, the incidents will not be included in the result.\nCannot be used in combination with `incidentsForType`."
																},
																{
																	"key": "incidentsForType",
																	"value": "<string>",
																	"description": "If this property has been set with any incident type (i.e., a string value) the result\nwill only include the number of incidents for the assigned incident type.\nCannot be used in combination with `incidents`.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
																}
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "submit-form",
									"item": [
										{
											"name": "Submit Start Form",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"laborum_75\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"magna_d8d\": -79015462,\n        \"in69a\": \"Ut pariatur sed exercitation\"\n      }\n    }\n  },\n  \"businessKey\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-definition/key/:key/submit-form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														"key",
														":key",
														"submit-form"
													],
													"variable": [
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The key of the process definition to submit the form for."
														}
													]
												},
												"description": "Starts the latest version of the process definition which belongs to no tenant\nusing a set of process variables and the business key.\nIf the start event has Form Field Metadata defined, the process engine will perform backend validation\nfor any form fields which have validators defined.\nSee [Documentation on Generated Task Forms](https://docs.camunda.org/manual/7.21/user-guide/task-forms/#generated-task-forms)."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"variables\": {\n    \"laborum_75\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"magna_d8d\": -79015462,\n        \"in69a\": \"Ut pariatur sed exercitation\"\n      }\n    }\n  },\n  \"businessKey\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/submit-form",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"submit-form"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"definitionId\": \"<string>\",\n  \"businessKey\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"ended\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The instance could not be created due to an invalid variable value,\nfor example if the value could not be parsed to an `Integer` value or\nthe passed variable type is not supported.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"variables\": {\n    \"laborum_75\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"magna_d8d\": -79015462,\n        \"in69a\": \"Ut pariatur sed exercitation\"\n      }\n    }\n  },\n  \"businessKey\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/submit-form",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"submit-form"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "Process definition with given key does not exist.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"variables\": {\n    \"laborum_75\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"magna_d8d\": -79015462,\n        \"in69a\": \"Ut pariatur sed exercitation\"\n      }\n    }\n  },\n  \"businessKey\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/submit-form",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"submit-form"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "The instance could not be created successfully.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"variables\": {\n    \"laborum_75\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"magna_d8d\": -79015462,\n        \"in69a\": \"Ut pariatur sed exercitation\"\n      }\n    }\n  },\n  \"businessKey\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/submit-form",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"submit-form"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "suspended",
									"item": [
										{
											"name": "Activate/Suspend by Id",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"suspended\": \"<boolean>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"includeProcessInstances\": \"<boolean>\",\n  \"executionDate\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-definition/key/:key/suspended",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														"key",
														":key",
														"suspended"
													],
													"variable": [
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The key of the process definition (the latest version thereof) to be activated/suspended."
														}
													]
												},
												"description": "Activates or suspends a given process definition by latest version of process definition key\nwhich belongs to no tenant."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"suspended\": \"<boolean>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"includeProcessInstances\": \"<boolean>\",\n  \"executionDate\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/suspended",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"suspended"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if some of the query parameters are invalid,\nfor example if the provided `executionDate` parameter doesn't have the expected format or\nif the `processDefinitionKey` parameter is `null`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"suspended\": \"<boolean>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"includeProcessInstances\": \"<boolean>\",\n  \"executionDate\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/suspended",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"suspended"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "Process definition with given key does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"suspended\": \"<boolean>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"includeProcessInstances\": \"<boolean>\",\n  \"executionDate\": \"<dateTime>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/suspended",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"suspended"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "tenant-id",
									"item": [
										{
											"name": "{tenant-id}",
											"item": [
												{
													"name": "deployed-start-form",
													"item": [
														{
															"name": "Get Deployed Start Form",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/xhtml+xml"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/deployed-start-form",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"process-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id",
																		"deployed-start-form"
																	],
																	"variable": [
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) The key of the process definition (the latest version thereof) to be retrieved."
																		},
																		{
																			"key": "tenant-id",
																			"value": "<string>",
																			"description": "(Required) The id of the tenant the process definitions belong to."
																		}
																	]
																},
																"description": "Retrieves the deployed form that can be referenced from a start event.\nFor further information please refer to [User Guide](https://docs.camunda.org/manual/7.21/user-guide/task-forms/#embedded-task-forms)."
															},
															"response": [
																{
																	"name": "Request successful.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/xhtml+xml"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/deployed-start-form",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"deployed-start-form"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "xml",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/xhtml+xml"
																		}
																	],
																	"cookie": [],
																	"body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>(string)</element>"
																},
																{
																	"name": "The form key has wrong format.  See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/deployed-start-form",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"deployed-start-form"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																},
																{
																	"name": "The deployed start form cannot be retrieved due to missing permissions on process definition resource.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/deployed-start-form",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"deployed-start-form"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"userId\": \"<string>\",\n  \"missingAuthorizations\": [\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    },\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																},
																{
																	"name": "No deployed start form for a given process definition exists. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/deployed-start-form",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"deployed-start-form"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "diagram",
													"item": [
														{
															"name": "Get Diagram",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/octet-stream"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/diagram",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"process-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id",
																		"diagram"
																	],
																	"variable": [
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) The key of the process definition."
																		},
																		{
																			"key": "tenant-id",
																			"value": "<string>",
																			"description": "(Required) The id of the tenant the process definition belongs to."
																		}
																	]
																},
																"description": "Retrieves the diagram for the latest version of the process definition for tenant.\n\nIf the process definition's deployment contains an image resource with the same file name\nas the process definition, the deployed image will be returned by the Get Diagram endpoint.\nExample: `someProcess.bpmn` and `someProcess.png`.\nSupported file extentions for the image are: `svg`, `png`, `jpg`, and `gif`."
															},
															"response": [
																{
																	"name": "Request successful. The image diagram of this process.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/octet-stream"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/diagram",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"diagram"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/octet-stream"
																		}
																	],
																	"cookie": [],
																	"body": "<string>"
																},
																{
																	"name": "The process definition doesn't have an associated diagram.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/diagram",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"diagram"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Process definition with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/diagram",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"diagram"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "form-variables",
													"item": [
														{
															"name": "Get Start Form Variables",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/form-variables?variableNames=<string>&deserializeValues=true",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"process-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id",
																		"form-variables"
																	],
																	"query": [
																		{
																			"key": "variableNames",
																			"value": "<string>",
																			"description": "A comma-separated list of variable names. Allows restricting the list of requested\nvariables to the variable names in the list. It is best practice to restrict the\nlist of variables to the variables actually required by the form in order to\nminimize fetching of data. If the query parameter is ommitted all variables are\nfetched. If the query parameter contains non-existent variable names, the variable\nnames are ignored."
																		},
																		{
																			"key": "deserializeValues",
																			"value": "true",
																			"description": "Determines whether serializable variable values (typically variables that store\ncustom Java objects) should be deserialized on server side (default true).\n\nIf set to true, a serializable variable will be deserialized on server side and\ntransformed to JSON using [Jackson's](http://jackson.codehaus.org/) POJO/bean\nproperty introspection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to false, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string\ncontaining XML.\n\n**Note**: While true is the default value for reasons of backward compatibility, we\nrecommend setting this parameter to false when developing web applications that are\nindependent of the Java process applications deployed to the engine."
																		}
																	],
																	"variable": [
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) The key of the process definition (the latest version thereof) to be retrieved."
																		},
																		{
																			"key": "tenant-id",
																			"value": "<string>",
																			"description": "(Required) The id of the tenant the process definition belongs to."
																		}
																	]
																},
																"description": "Retrieves the start form variables for the latest process definition for a tenant\n(only if they are defined via the \n[Generated Task Form](https://docs.camunda.org/manual/7.21/user-guide/task-forms/#generated-task-forms) approach).\nThe start form variables take form data specified on the start event into account.\nIf form fields are defined, the variable types and default values\nof the form fields are taken into account."
															},
															"response": [
																{
																	"name": "Request successful. A JSON object containing a property for each variable returned.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/form-variables?variableNames=<string>&deserializeValues=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"form-variables"
																			],
																			"query": [
																				{
																					"key": "variableNames",
																					"value": "<string>",
																					"description": "A comma-separated list of variable names. Allows restricting the list of requested\nvariables to the variable names in the list. It is best practice to restrict the\nlist of variables to the variables actually required by the form in order to\nminimize fetching of data. If the query parameter is ommitted all variables are\nfetched. If the query parameter contains non-existent variable names, the variable\nnames are ignored."
																				},
																				{
																					"key": "deserializeValues",
																					"value": "true",
																					"description": "Determines whether serializable variable values (typically variables that store\ncustom Java objects) should be deserialized on server side (default true).\n\nIf set to true, a serializable variable will be deserialized on server side and\ntransformed to JSON using [Jackson's](http://jackson.codehaus.org/) POJO/bean\nproperty introspection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to false, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string\ncontaining XML.\n\n**Note**: While true is the default value for reasons of backward compatibility, we\nrecommend setting this parameter to false when developing web applications that are\nindependent of the Java process applications deployed to the engine."
																				}
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"nulla__3\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"consectetur_dfd\": \"veniam do minim occaecat\"\n    }\n  },\n  \"ut_10\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"ut_fa\": false,\n      \"mollit9\": -39701223,\n      \"velit_c1\": \"ve\"\n    }\n  },\n  \"aliquip_5\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"consectetur_34d\": -65418375,\n      \"laboriseec\": false,\n      \"doloreb\": true\n    }\n  },\n  \"mollitd\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"in_76d\": true,\n      \"pariatur_f77\": true\n    }\n  }\n}"
																},
																{
																	"name": "The key is null or does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/form-variables?variableNames=<string>&deserializeValues=true",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"form-variables"
																			],
																			"query": [
																				{
																					"key": "variableNames",
																					"value": "<string>",
																					"description": "A comma-separated list of variable names. Allows restricting the list of requested\nvariables to the variable names in the list. It is best practice to restrict the\nlist of variables to the variables actually required by the form in order to\nminimize fetching of data. If the query parameter is ommitted all variables are\nfetched. If the query parameter contains non-existent variable names, the variable\nnames are ignored."
																				},
																				{
																					"key": "deserializeValues",
																					"value": "true",
																					"description": "Determines whether serializable variable values (typically variables that store\ncustom Java objects) should be deserialized on server side (default true).\n\nIf set to true, a serializable variable will be deserialized on server side and\ntransformed to JSON using [Jackson's](http://jackson.codehaus.org/) POJO/bean\nproperty introspection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to false, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string\ncontaining XML.\n\n**Note**: While true is the default value for reasons of backward compatibility, we\nrecommend setting this parameter to false when developing web applications that are\nindependent of the Java process applications deployed to the engine."
																				}
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "history-time-to-live",
													"item": [
														{
															"name": "Update History Time to Live",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"historyTimeToLive\": \"<integer>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/history-time-to-live",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"process-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id",
																		"history-time-to-live"
																	],
																	"variable": [
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) The key of the process definition to change history time to live."
																		},
																		{
																			"key": "tenant-id",
																			"value": "<string>",
																			"description": "(Required) The id of the tenant the process definition belongs to."
																		}
																	]
																},
																"description": "Updates history time to live for the latest version of the process definition for a tenant.\nThe field is used within [History cleanup](https://docs.camunda.org/manual/7.21/user-guide/process-engine/history/#history-cleanup)."
															},
															"response": [
																{
																	"name": "Request successful.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"historyTimeToLive\": \"<integer>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/history-time-to-live",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"history-time-to-live"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Returned if some of the request parameters are invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"historyTimeToLive\": \"<integer>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/history-time-to-live",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"history-time-to-live"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																},
																{
																	"name": "Process definition with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"historyTimeToLive\": \"<integer>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/history-time-to-live",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"history-time-to-live"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "rendered-form",
													"item": [
														{
															"name": "Get Rendered Start Form",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/xhtml+xml"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/rendered-form",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"process-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id",
																		"rendered-form"
																	],
																	"variable": [
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) The key of the process definition (the latest version thereof) to be retrieved."
																		},
																		{
																			"key": "tenant-id",
																			"value": "<string>",
																			"description": "(Required) The id of the tenant the process definition belongs to."
																		}
																	]
																},
																"description": "Retrieves  the rendered form for the latest version of the process definition for a tenant.\nThis method can be used to get the HTML rendering of a\n[Generated Task Form](https://docs.camunda.org/manual/7.21/user-guide/task-forms/#generated-task-forms)."
															},
															"response": [
																{
																	"name": "Request successful.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/xhtml+xml"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/rendered-form",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"rendered-form"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "xml",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/xhtml+xml"
																		}
																	],
																	"cookie": [],
																	"body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>(string)</element>"
																},
																{
																	"name": "Process definition has no form field metadata defined. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/rendered-form",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"rendered-form"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																},
																{
																	"name": "Process definition with given key does not exist.  See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/rendered-form",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"rendered-form"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "start",
													"item": [
														{
															"name": "Start Instance",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"businessKey\": \"<string>\",\n  \"variables\": {\n    \"sed_61\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"aliquip4\": -76007881,\n        \"Excepteur_8\": 1243171.7254527658\n      }\n    }\n  },\n  \"caseInstanceId\": \"<string>\",\n  \"startInstructions\": [\n    {\n      \"type\": \"startAfterActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"nulla1\": false\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_b4\": true,\n          \"ex_272\": false,\n          \"voluptate1\": \"minim in magna\"\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"withVariablesInReturn\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/start",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"process-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id",
																		"start"
																	],
																	"variable": [
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) The key of the process definition (the latest version thereof) to be retrieved."
																		},
																		{
																			"key": "tenant-id",
																			"value": "<string>",
																			"description": "(Required) The id of the tenant the process definition belongs to."
																		}
																	]
																},
																"description": "Instantiates a given process definition, starts the latest version of the process definition for tenant.\nProcess variables and business key may be supplied in the request body."
															},
															"response": [
																{
																	"name": "Request successful.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"businessKey\": \"<string>\",\n  \"variables\": {\n    \"sed_61\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"aliquip4\": -76007881,\n        \"Excepteur_8\": 1243171.7254527658\n      }\n    }\n  },\n  \"caseInstanceId\": \"<string>\",\n  \"startInstructions\": [\n    {\n      \"type\": \"startAfterActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"nulla1\": false\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_b4\": true,\n          \"ex_272\": false,\n          \"voluptate1\": \"minim in magna\"\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"withVariablesInReturn\": \"<boolean>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/start",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"start"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"variables\": {\n    \"sint_0\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"ex__7\": 38919287\n      }\n    }\n  },\n  \"id\": \"<string>\",\n  \"definitionId\": \"<string>\",\n  \"businessKey\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"ended\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
																},
																{
																	"name": "The instance could not be created due to an invalid variable value,\nfor example if the value could not be parsed to an `Integer` value or\nthe passed variable type is not supported.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"businessKey\": \"<string>\",\n  \"variables\": {\n    \"sed_61\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"aliquip4\": -76007881,\n        \"Excepteur_8\": 1243171.7254527658\n      }\n    }\n  },\n  \"caseInstanceId\": \"<string>\",\n  \"startInstructions\": [\n    {\n      \"type\": \"startAfterActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"nulla1\": false\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_b4\": true,\n          \"ex_272\": false,\n          \"voluptate1\": \"minim in magna\"\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"withVariablesInReturn\": \"<boolean>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/start",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"start"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																},
																{
																	"name": "The instance could not be created successfully.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"businessKey\": \"<string>\",\n  \"variables\": {\n    \"sed_61\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"aliquip4\": -76007881,\n        \"Excepteur_8\": 1243171.7254527658\n      }\n    }\n  },\n  \"caseInstanceId\": \"<string>\",\n  \"startInstructions\": [\n    {\n      \"type\": \"startAfterActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"nulla1\": false\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_b4\": true,\n          \"ex_272\": false,\n          \"voluptate1\": \"minim in magna\"\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"withVariablesInReturn\": \"<boolean>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/start",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"start"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "startForm",
													"item": [
														{
															"name": "Get Start Form Key",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/startForm",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"process-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id",
																		"startForm"
																	],
																	"variable": [
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) The key of the process definition (the latest version thereof) for which the form key is to be retrieved."
																		},
																		{
																			"key": "tenant-id",
																			"value": "<string>",
																			"description": "(Required) The id of the tenant the process definition belongs to."
																		}
																	]
																},
																"description": "Retrieves the key of the start form for the latest version of the process definition for a tenant.\nThe form key corresponds to the `FormData#formKey` property in the engine."
															},
															"response": [
																{
																	"name": "Request successful.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/startForm",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"startForm"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"key\": \"<string>\",\n  \"camundaFormRef\": {\n    \"key\": \"<string>\",\n    \"binding\": \"<string>\",\n    \"version\": \"<integer>\"\n  },\n  \"contextPath\": \"<string>\"\n}"
																},
																{
																	"name": "Process definition has no start form defined. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/startForm",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"startForm"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																},
																{
																	"name": "Process definition with given key does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/startForm",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"startForm"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "statistics",
													"item": [
														{
															"name": "Get Activity Instance Statistics",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/statistics?failedJobs=<boolean>&incidents=<boolean>&incidentsForType=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"process-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id",
																		"statistics"
																	],
																	"query": [
																		{
																			"key": "failedJobs",
																			"value": "<boolean>",
																			"description": "Whether to include the number of failed jobs in the result or not. Valid values are `true` or `false`."
																		},
																		{
																			"key": "incidents",
																			"value": "<boolean>",
																			"description": "Valid values for this property are `true` or `false`.\nIf this property has been set to `true` the result will include the corresponding number of incidents\nfor each occurred incident type.\nIf it is set to `false`, the incidents will not be included in the result.\nCannot be used in combination with `incidentsForType`."
																		},
																		{
																			"key": "incidentsForType",
																			"value": "<string>",
																			"description": "If this property has been set with any incident type (i.e., a string value) the result\nwill only include the number of incidents for the assigned incident type.\nCannot be used in combination with `incidents`.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
																		}
																	],
																	"variable": [
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) The key of the process definition (the latest version thereof) to be retrieved."
																		},
																		{
																			"key": "tenant-id",
																			"value": "<string>",
																			"description": "(Required) The id of the tenant the process definition belongs to."
																		}
																	]
																},
																"description": "Retrieves runtime statistics of the latest version of the given process definition for a tenant,\ngrouped by activities.\nThese statistics include the number of running activity instances, optionally the number of failed jobs\nand also optionally the number of incidents either grouped by incident types or\nfor a specific incident type.\n**Note**: This does not include historic data."
															},
															"response": [
																{
																	"name": "Request successful.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/statistics?failedJobs=<boolean>&incidents=<boolean>&incidentsForType=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"statistics"
																			],
																			"query": [
																				{
																					"key": "failedJobs",
																					"value": "<boolean>",
																					"description": "Whether to include the number of failed jobs in the result or not. Valid values are `true` or `false`."
																				},
																				{
																					"key": "incidents",
																					"value": "<boolean>",
																					"description": "Valid values for this property are `true` or `false`.\nIf this property has been set to `true` the result will include the corresponding number of incidents\nfor each occurred incident type.\nIf it is set to `false`, the incidents will not be included in the result.\nCannot be used in combination with `incidentsForType`."
																				},
																				{
																					"key": "incidentsForType",
																					"value": "<string>",
																					"description": "If this property has been set with any incident type (i.e., a string value) the result\nwill only include the number of incidents for the assigned incident type.\nCannot be used in combination with `incidents`.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
																				}
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"id\": \"<string>\",\n    \"instances\": \"<integer>\",\n    \"failedJobs\": \"<integer>\",\n    \"incidents\": [\n      {\n        \"incidentType\": \"<string>\",\n        \"incidentCount\": \"<integer>\"\n      },\n      {\n        \"incidentType\": \"<string>\",\n        \"incidentCount\": \"<integer>\"\n      }\n    ],\n    \"@class\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"instances\": \"<integer>\",\n    \"failedJobs\": \"<integer>\",\n    \"incidents\": [\n      {\n        \"incidentType\": \"<string>\",\n        \"incidentCount\": \"<integer>\"\n      },\n      {\n        \"incidentType\": \"<string>\",\n        \"incidentCount\": \"<integer>\"\n      }\n    ],\n    \"@class\": \"<string>\"\n  }\n]"
																},
																{
																	"name": "Returned if some of the query parameters are invalid.\nSee the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/statistics?failedJobs=<boolean>&incidents=<boolean>&incidentsForType=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"statistics"
																			],
																			"query": [
																				{
																					"key": "failedJobs",
																					"value": "<boolean>",
																					"description": "Whether to include the number of failed jobs in the result or not. Valid values are `true` or `false`."
																				},
																				{
																					"key": "incidents",
																					"value": "<boolean>",
																					"description": "Valid values for this property are `true` or `false`.\nIf this property has been set to `true` the result will include the corresponding number of incidents\nfor each occurred incident type.\nIf it is set to `false`, the incidents will not be included in the result.\nCannot be used in combination with `incidentsForType`."
																				},
																				{
																					"key": "incidentsForType",
																					"value": "<string>",
																					"description": "If this property has been set with any incident type (i.e., a string value) the result\nwill only include the number of incidents for the assigned incident type.\nCannot be used in combination with `incidents`.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
																				}
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																},
																{
																	"name": "Process definition with given key does not exist.\nSee the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/statistics?failedJobs=<boolean>&incidents=<boolean>&incidentsForType=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"statistics"
																			],
																			"query": [
																				{
																					"key": "failedJobs",
																					"value": "<boolean>",
																					"description": "Whether to include the number of failed jobs in the result or not. Valid values are `true` or `false`."
																				},
																				{
																					"key": "incidents",
																					"value": "<boolean>",
																					"description": "Valid values for this property are `true` or `false`.\nIf this property has been set to `true` the result will include the corresponding number of incidents\nfor each occurred incident type.\nIf it is set to `false`, the incidents will not be included in the result.\nCannot be used in combination with `incidentsForType`."
																				},
																				{
																					"key": "incidentsForType",
																					"value": "<string>",
																					"description": "If this property has been set with any incident type (i.e., a string value) the result\nwill only include the number of incidents for the assigned incident type.\nCannot be used in combination with `incidents`.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
																				}
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "submit-form",
													"item": [
														{
															"name": "Submit Start Form",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"variables\": {\n    \"laborum_75\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"magna_d8d\": -79015462,\n        \"in69a\": \"Ut pariatur sed exercitation\"\n      }\n    }\n  },\n  \"businessKey\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/submit-form",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"process-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id",
																		"submit-form"
																	],
																	"variable": [
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) The key of the process definition to submit the form for."
																		},
																		{
																			"key": "tenant-id",
																			"value": "<string>",
																			"description": "(Required) The id of the tenant the process definition belongs to."
																		}
																	]
																},
																"description": "Starts the latest version of the process definition for a tenant\nusing a set of process variables and the business key.\nIf the start event has Form Field Metadata defined, the process engine will perform backend validation\nfor any form fields which have validators defined.\nSee [Documentation on Generated Task Forms](https://docs.camunda.org/manual/7.21/user-guide/task-forms/#generated-task-forms)."
															},
															"response": [
																{
																	"name": "Request successful.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"variables\": {\n    \"laborum_75\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"magna_d8d\": -79015462,\n        \"in69a\": \"Ut pariatur sed exercitation\"\n      }\n    }\n  },\n  \"businessKey\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/submit-form",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"submit-form"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"id\": \"<string>\",\n  \"definitionId\": \"<string>\",\n  \"businessKey\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"ended\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
																},
																{
																	"name": "The instance could not be created due to an invalid variable value,\nfor example if the value could not be parsed to an `Integer` value or\nthe passed variable type is not supported.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"variables\": {\n    \"laborum_75\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"magna_d8d\": -79015462,\n        \"in69a\": \"Ut pariatur sed exercitation\"\n      }\n    }\n  },\n  \"businessKey\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/submit-form",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"submit-form"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																},
																{
																	"name": "Process definition with given key does not exist.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"variables\": {\n    \"laborum_75\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"magna_d8d\": -79015462,\n        \"in69a\": \"Ut pariatur sed exercitation\"\n      }\n    }\n  },\n  \"businessKey\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/submit-form",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"submit-form"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																},
																{
																	"name": "The instance could not be created successfully.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"variables\": {\n    \"laborum_75\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"magna_d8d\": -79015462,\n        \"in69a\": \"Ut pariatur sed exercitation\"\n      }\n    }\n  },\n  \"businessKey\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/submit-form",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"submit-form"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "suspended",
													"item": [
														{
															"name": "Activate/Suspend by Id",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"suspended\": \"<boolean>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"includeProcessInstances\": \"<boolean>\",\n  \"executionDate\": \"<dateTime>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/suspended",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"process-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id",
																		"suspended"
																	],
																	"variable": [
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) The key of the process definition (the latest version thereof) to be activated/suspended."
																		},
																		{
																			"key": "tenant-id",
																			"value": "<string>",
																			"description": "(Required) The id of the tenant the process definition belongs to."
																		}
																	]
																},
																"description": "Activates or suspends a given process definition by the latest version of\nthe process definition for tenant."
															},
															"response": [
																{
																	"name": "Request successful.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"suspended\": \"<boolean>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"includeProcessInstances\": \"<boolean>\",\n  \"executionDate\": \"<dateTime>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/suspended",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"suspended"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Returned if some of the query parameters are invalid,\nfor example if the provided `executionDate` parameter doesn't have the expected format or\nif the `processDefinitionKey` parameter is `null`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"suspended\": \"<boolean>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"includeProcessInstances\": \"<boolean>\",\n  \"executionDate\": \"<dateTime>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/suspended",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"suspended"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																},
																{
																	"name": "Process definition with given key does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"suspended\": \"<boolean>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"includeProcessInstances\": \"<boolean>\",\n  \"executionDate\": \"<dateTime>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/suspended",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"suspended"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "xml",
													"item": [
														{
															"name": "Get XML",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/xml",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"process-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id",
																		"xml"
																	],
																	"variable": [
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) The key of the process definition (the latest version thereof) whose XML should be retrieved."
																		},
																		{
																			"key": "tenant-id",
																			"value": "<string>",
																			"description": "(Required) The id of the tenant the process definition belongs to."
																		}
																	]
																},
																"description": "Retrieves latest version the BPMN 2.0 XML of a process definition.\nReturns the XML for the latest version of the process definition for tenant."
															},
															"response": [
																{
																	"name": "Request successful.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/xml",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"xml"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"id\": \"<string>\",\n  \"bpmn20Xml\": \"<string>\"\n}"
																},
																{
																	"name": "The Process Definition xml cannot be retrieved due to missing permissions on the Process Definition resource.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/xml",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"xml"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"userId\": \"<string>\",\n  \"missingAuthorizations\": [\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    },\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																},
																{
																	"name": "Process definition with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Basic <credentials>",
																				"description": "Added as a part of security scheme: basic"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id/xml",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"process-definition",
																				"key",
																				":key",
																				"tenant-id",
																				":tenant-id",
																				"xml"
																			],
																			"variable": [
																				{
																					"key": "key"
																				},
																				{
																					"key": "tenant-id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Delete By Key",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id?cascade=<boolean>&skipCustomListeners=false&skipIoMappings=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"tenant-id",
																":tenant-id"
															],
															"query": [
																{
																	"key": "cascade",
																	"value": "<boolean>",
																	"description": "`true`, if all process instances, historic process instances and jobs\nfor this process definition should be deleted."
																},
																{
																	"key": "skipCustomListeners",
																	"value": "false",
																	"description": "`true`, if only the built-in ExecutionListeners should be notified with the end event."
																},
																{
																	"key": "skipIoMappings",
																	"value": "false",
																	"description": "A boolean value to control whether input/output mappings should be executed during deletion.\n`true`, if input/output mappings should not be invoked."
																}
															],
															"variable": [
																{
																	"key": "key",
																	"value": "<string>",
																	"description": "(Required) The key of the process definitions to be deleted."
																},
																{
																	"key": "tenant-id",
																	"value": "<string>",
																	"description": "(Required) The id of the tenant the process definitions belong to."
																}
															]
														},
														"description": "Deletes process definitions by a given key and which belong to a tenant id."
													},
													"response": [
														{
															"name": "Request successful.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id?cascade=<boolean>&skipCustomListeners=false&skipIoMappings=false",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"process-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id"
																	],
																	"query": [
																		{
																			"key": "cascade",
																			"value": "<boolean>",
																			"description": "`true`, if all process instances, historic process instances and jobs\nfor this process definition should be deleted."
																		},
																		{
																			"key": "skipCustomListeners",
																			"value": "false",
																			"description": "`true`, if only the built-in ExecutionListeners should be notified with the end event."
																		},
																		{
																			"key": "skipIoMappings",
																			"value": "false",
																			"description": "A boolean value to control whether input/output mappings should be executed during deletion.\n`true`, if input/output mappings should not be invoked."
																		}
																	],
																	"variable": [
																		{
																			"key": "key"
																		},
																		{
																			"key": "tenant-id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden\nThe process definitions with the given `key` cannot be deleted due to missing permissions.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id?cascade=<boolean>&skipCustomListeners=false&skipIoMappings=false",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"process-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id"
																	],
																	"query": [
																		{
																			"key": "cascade",
																			"value": "<boolean>",
																			"description": "`true`, if all process instances, historic process instances and jobs\nfor this process definition should be deleted."
																		},
																		{
																			"key": "skipCustomListeners",
																			"value": "false",
																			"description": "`true`, if only the built-in ExecutionListeners should be notified with the end event."
																		},
																		{
																			"key": "skipIoMappings",
																			"value": "false",
																			"description": "A boolean value to control whether input/output mappings should be executed during deletion.\n`true`, if input/output mappings should not be invoked."
																		}
																	],
																	"variable": [
																		{
																			"key": "key"
																		},
																		{
																			"key": "tenant-id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"userId\": \"<string>\",\n  \"missingAuthorizations\": [\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    },\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
														},
														{
															"name": "Not found\nProcess definition with given key does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id?cascade=<boolean>&skipCustomListeners=false&skipIoMappings=false",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"process-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id"
																	],
																	"query": [
																		{
																			"key": "cascade",
																			"value": "<boolean>",
																			"description": "`true`, if all process instances, historic process instances and jobs\nfor this process definition should be deleted."
																		},
																		{
																			"key": "skipCustomListeners",
																			"value": "false",
																			"description": "`true`, if only the built-in ExecutionListeners should be notified with the end event."
																		},
																		{
																			"key": "skipIoMappings",
																			"value": "false",
																			"description": "A boolean value to control whether input/output mappings should be executed during deletion.\n`true`, if input/output mappings should not be invoked."
																		}
																	],
																	"variable": [
																		{
																			"key": "key"
																		},
																		{
																			"key": "tenant-id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
														}
													]
												},
												{
													"name": "Get",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"tenant-id",
																":tenant-id"
															],
															"variable": [
																{
																	"key": "key",
																	"value": "<string>",
																	"description": "(Required) The key of the process definition (the latest version thereof) to be retrieved."
																},
																{
																	"key": "tenant-id",
																	"value": "<string>",
																	"description": "(Required) The id of the tenant the process definition belongs to."
																}
															]
														},
														"description": "Retrieves the latest version of the process definition for tenant according to\nthe `ProcessDefinition` interface in the engine."
													},
													"response": [
														{
															"name": "Request successful.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"process-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id"
																	],
																	"variable": [
																		{
																			"key": "key"
																		},
																		{
																			"key": "tenant-id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"key\": \"<string>\",\n  \"category\": \"<string>\",\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"version\": \"<integer>\",\n  \"resource\": \"<string>\",\n  \"deploymentId\": \"<string>\",\n  \"diagram\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"versionTag\": \"<string>\",\n  \"historyTimeToLive\": \"<integer>\",\n  \"startableInTasklist\": \"<boolean>\"\n}"
														},
														{
															"name": "Process definition with given `key` does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/process-definition/key/:key/tenant-id/:tenant-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"process-definition",
																		"key",
																		":key",
																		"tenant-id",
																		":tenant-id"
																	],
																	"variable": [
																		{
																			"key": "key"
																		},
																		{
																			"key": "tenant-id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "xml",
									"item": [
										{
											"name": "Get XML",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/key/:key/xml",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														"key",
														":key",
														"xml"
													],
													"variable": [
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) The key of the process definition (the latest version thereof) whose XML should be retrieved."
														}
													]
												},
												"description": "Retrieves latest version the BPMN 2.0 XML of a process definition."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/xml",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"xml"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"bpmn20Xml\": \"<string>\"\n}"
												},
												{
													"name": "The Process Definition xml cannot be retrieved due to missing permissions on the Process Definition resource.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/xml",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"xml"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"userId\": \"<string>\",\n  \"missingAuthorizations\": [\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    },\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "Process definition with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-definition/key/:key/xml",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-definition",
																"key",
																":key",
																"xml"
															],
															"variable": [
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Delete By Key",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-definition/key/:key?cascade=<boolean>&skipCustomListeners=false&skipIoMappings=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												"key",
												":key"
											],
											"query": [
												{
													"key": "cascade",
													"value": "<boolean>",
													"description": "`true`, if all process instances, historic process instances and jobs\nfor this process definition should be deleted."
												},
												{
													"key": "skipCustomListeners",
													"value": "false",
													"description": "`true`, if only the built-in ExecutionListeners should be notified with the end event."
												},
												{
													"key": "skipIoMappings",
													"value": "false",
													"description": "A boolean value to control whether input/output mappings should be executed during deletion.\n`true`, if input/output mappings should not be invoked."
												}
											],
											"variable": [
												{
													"key": "key",
													"value": "<string>",
													"description": "(Required) The key of the process definitions to be deleted."
												}
											]
										},
										"description": "Deletes process definitions by a given key which belong to no tenant id."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/key/:key?cascade=<boolean>&skipCustomListeners=false&skipIoMappings=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														"key",
														":key"
													],
													"query": [
														{
															"key": "cascade",
															"value": "<boolean>",
															"description": "`true`, if all process instances, historic process instances and jobs\nfor this process definition should be deleted."
														},
														{
															"key": "skipCustomListeners",
															"value": "false",
															"description": "`true`, if only the built-in ExecutionListeners should be notified with the end event."
														},
														{
															"key": "skipIoMappings",
															"value": "false",
															"description": "A boolean value to control whether input/output mappings should be executed during deletion.\n`true`, if input/output mappings should not be invoked."
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden\nThe process definitions with the given `key` cannot be deleted due to missing permissions.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/key/:key?cascade=<boolean>&skipCustomListeners=false&skipIoMappings=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														"key",
														":key"
													],
													"query": [
														{
															"key": "cascade",
															"value": "<boolean>",
															"description": "`true`, if all process instances, historic process instances and jobs\nfor this process definition should be deleted."
														},
														{
															"key": "skipCustomListeners",
															"value": "false",
															"description": "`true`, if only the built-in ExecutionListeners should be notified with the end event."
														},
														{
															"key": "skipIoMappings",
															"value": "false",
															"description": "A boolean value to control whether input/output mappings should be executed during deletion.\n`true`, if input/output mappings should not be invoked."
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"userId\": \"<string>\",\n  \"missingAuthorizations\": [\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    },\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Not found\nProcess definition with given `key` does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/key/:key?cascade=<boolean>&skipCustomListeners=false&skipIoMappings=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														"key",
														":key"
													],
													"query": [
														{
															"key": "cascade",
															"value": "<boolean>",
															"description": "`true`, if all process instances, historic process instances and jobs\nfor this process definition should be deleted."
														},
														{
															"key": "skipCustomListeners",
															"value": "false",
															"description": "`true`, if only the built-in ExecutionListeners should be notified with the end event."
														},
														{
															"key": "skipIoMappings",
															"value": "false",
															"description": "A boolean value to control whether input/output mappings should be executed during deletion.\n`true`, if input/output mappings should not be invoked."
														}
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								},
								{
									"name": "Get",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-definition/key/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												"key",
												":key"
											],
											"variable": [
												{
													"key": "key",
													"value": "<string>",
													"description": "(Required) The key of the process definition (the latest version thereof) to be retrieved."
												}
											]
										},
										"description": "Retrieves the latest version of the process definition which belongs to no tenant according to the `ProcessDefinition` interface in the engine."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/key/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														"key",
														":key"
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"key\": \"<string>\",\n  \"category\": \"<string>\",\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"version\": \"<integer>\",\n  \"resource\": \"<string>\",\n  \"deploymentId\": \"<string>\",\n  \"diagram\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"versionTag\": \"<string>\",\n  \"historyTimeToLive\": \"<integer>\",\n  \"startableInTasklist\": \"<boolean>\"\n}"
										},
										{
											"name": "Process definition with given `key` does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/key/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														"key",
														":key"
													],
													"variable": [
														{
															"key": "key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "statistics",
					"item": [
						{
							"name": "Get Process Instance Statistics",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/process-definition/statistics?failedJobs=<boolean>&incidents=<boolean>&incidentsForType=<string>&rootIncidents=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process-definition",
										"statistics"
									],
									"query": [
										{
											"key": "failedJobs",
											"value": "<boolean>",
											"description": "Whether to include the number of failed jobs in the result or not. Valid values are `true` or `false`."
										},
										{
											"key": "incidents",
											"value": "<boolean>",
											"description": "Valid values for this property are `true` or `false`.\nIf this property has been set to `true` the result will include the corresponding number of incidents\nfor each occurred incident type.\nIf it is set to `false`, the incidents will not be included in the result.\nCannot be used in combination with `incidentsForType`."
										},
										{
											"key": "incidentsForType",
											"value": "<string>",
											"description": "If this property has been set with any incident type (i.e., a string value) the result\nwill only include the number of incidents for the assigned incident type.\nCannot be used in combination with `incidents`.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
										},
										{
											"key": "rootIncidents",
											"value": "<boolean>",
											"description": "Valid values for this property are `true` or `false`.\nIf this property has been set to `true` the result will include the corresponding number of\nroot incidents for each occurred incident type.\nIf it is set to `false`, the incidents will not be included in the result.\nCannot be used in combination with `incidentsForType` or `incidents`."
										}
									]
								},
								"description": "Retrieves runtime statistics of the process engine, grouped by process definitions.\nThese statistics include the number of running process instances, optionally the number of failed jobs\nand also optionally the number of incidents either grouped by incident types or\nfor a specific incident type.\n**Note**: This does not include historic data."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-definition/statistics?failedJobs=<boolean>&incidents=<boolean>&incidentsForType=<string>&rootIncidents=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												"statistics"
											],
											"query": [
												{
													"key": "failedJobs",
													"value": "<boolean>",
													"description": "Whether to include the number of failed jobs in the result or not. Valid values are `true` or `false`."
												},
												{
													"key": "incidents",
													"value": "<boolean>",
													"description": "Valid values for this property are `true` or `false`.\nIf this property has been set to `true` the result will include the corresponding number of incidents\nfor each occurred incident type.\nIf it is set to `false`, the incidents will not be included in the result.\nCannot be used in combination with `incidentsForType`."
												},
												{
													"key": "incidentsForType",
													"value": "<string>",
													"description": "If this property has been set with any incident type (i.e., a string value) the result\nwill only include the number of incidents for the assigned incident type.\nCannot be used in combination with `incidents`.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
												},
												{
													"key": "rootIncidents",
													"value": "<boolean>",
													"description": "Valid values for this property are `true` or `false`.\nIf this property has been set to `true` the result will include the corresponding number of\nroot incidents for each occurred incident type.\nIf it is set to `false`, the incidents will not be included in the result.\nCannot be used in combination with `incidentsForType` or `incidents`."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"instances\": \"<integer>\",\n    \"failedJobs\": \"<integer>\",\n    \"incidents\": [\n      {\n        \"incidentType\": \"<string>\",\n        \"incidentCount\": \"<integer>\"\n      },\n      {\n        \"incidentType\": \"<string>\",\n        \"incidentCount\": \"<integer>\"\n      }\n    ],\n    \"@class\": \"<string>\",\n    \"definition\": {\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"category\": \"<string>\",\n      \"description\": \"<string>\",\n      \"name\": \"<string>\",\n      \"version\": \"<integer>\",\n      \"resource\": \"<string>\",\n      \"deploymentId\": \"<string>\",\n      \"diagram\": \"<string>\",\n      \"suspended\": \"<boolean>\",\n      \"tenantId\": \"<string>\",\n      \"versionTag\": \"<string>\",\n      \"historyTimeToLive\": \"<integer>\",\n      \"startableInTasklist\": \"<boolean>\"\n    }\n  },\n  {\n    \"id\": \"<string>\",\n    \"instances\": \"<integer>\",\n    \"failedJobs\": \"<integer>\",\n    \"incidents\": [\n      {\n        \"incidentType\": \"<string>\",\n        \"incidentCount\": \"<integer>\"\n      },\n      {\n        \"incidentType\": \"<string>\",\n        \"incidentCount\": \"<integer>\"\n      }\n    ],\n    \"@class\": \"<string>\",\n    \"definition\": {\n      \"id\": \"<string>\",\n      \"key\": \"<string>\",\n      \"category\": \"<string>\",\n      \"description\": \"<string>\",\n      \"name\": \"<string>\",\n      \"version\": \"<integer>\",\n      \"resource\": \"<string>\",\n      \"deploymentId\": \"<string>\",\n      \"diagram\": \"<string>\",\n      \"suspended\": \"<boolean>\",\n      \"tenantId\": \"<string>\",\n      \"versionTag\": \"<string>\",\n      \"historyTimeToLive\": \"<integer>\",\n      \"startableInTasklist\": \"<boolean>\"\n    }\n  }\n]"
								},
								{
									"name": "Returned if some of the query parameters are invalid.\nSee the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-definition/statistics?failedJobs=<boolean>&incidents=<boolean>&incidentsForType=<string>&rootIncidents=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												"statistics"
											],
											"query": [
												{
													"key": "failedJobs",
													"value": "<boolean>",
													"description": "Whether to include the number of failed jobs in the result or not. Valid values are `true` or `false`."
												},
												{
													"key": "incidents",
													"value": "<boolean>",
													"description": "Valid values for this property are `true` or `false`.\nIf this property has been set to `true` the result will include the corresponding number of incidents\nfor each occurred incident type.\nIf it is set to `false`, the incidents will not be included in the result.\nCannot be used in combination with `incidentsForType`."
												},
												{
													"key": "incidentsForType",
													"value": "<string>",
													"description": "If this property has been set with any incident type (i.e., a string value) the result\nwill only include the number of incidents for the assigned incident type.\nCannot be used in combination with `incidents`.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
												},
												{
													"key": "rootIncidents",
													"value": "<boolean>",
													"description": "Valid values for this property are `true` or `false`.\nIf this property has been set to `true` the result will include the corresponding number of\nroot incidents for each occurred incident type.\nIf it is set to `false`, the incidents will not be included in the result.\nCannot be used in combination with `incidentsForType` or `incidents`."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "suspended",
					"item": [
						{
							"name": "Activate/Suspend By Key",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"suspended\": \"<boolean>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"includeProcessInstances\": \"<boolean>\",\n  \"executionDate\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/process-definition/suspended",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process-definition",
										"suspended"
									]
								},
								"description": "Activates or suspends process definitions with the given process definition key."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"suspended\": \"<boolean>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"includeProcessInstances\": \"<boolean>\",\n  \"executionDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-definition/suspended",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												"suspended"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if some of the query parameters are invalid,\nfor example if the provided `executionDate` parameter doesn't have the expected format or\nif the `processDefinitionKey` parameter is `null`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"suspended\": \"<boolean>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"includeProcessInstances\": \"<boolean>\",\n  \"executionDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-definition/suspended",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												"suspended"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "Process definition with given key does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"suspended\": \"<boolean>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"includeProcessInstances\": \"<boolean>\",\n  \"executionDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-definition/suspended",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												"suspended"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "deployed-start-form",
							"item": [
								{
									"name": "Get Deployed Start Form",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/xhtml+xml"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-definition/:id/deployed-start-form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												":id",
												"deployed-start-form"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the process definition to get the deployed start form for."
												}
											]
										},
										"description": "Retrieves the deployed form that can be referenced from a start event.\nFor further information please refer to [User Guide](https://docs.camunda.org/manual/7.21/user-guide/task-forms/#embedded-task-forms)."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/xhtml+xml"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/deployed-start-form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"deployed-start-form"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "The form key has wrong format.  See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/deployed-start-form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"deployed-start-form"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "The deployed start form cannot be retrieved due to missing permissions on process definition resource.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/deployed-start-form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"deployed-start-form"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"userId\": \"<string>\",\n  \"missingAuthorizations\": [\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    },\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "No deployed start form for a given process definition exists. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/deployed-start-form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"deployed-start-form"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "diagram",
							"item": [
								{
									"name": "Get Diagram",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/octet-stream"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-definition/:id/diagram",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												":id",
												"diagram"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the process definition."
												}
											]
										},
										"description": "Retrieves the diagram of a process definition.\n\nIf the process definition's deployment contains an image resource with the same file name\nas the process definition, the deployed image will be returned by the Get Diagram endpoint.\nExample: `someProcess.bpmn` and `someProcess.png`.\nSupported file extentions for the image are: `svg`, `png`, `jpg`, and `gif`."
									},
									"response": [
										{
											"name": "Request successful. The image diagram of this process.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/octet-stream"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"diagram"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/octet-stream"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "The process definition doesn't have an associated diagram.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"diagram"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Process definition with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"diagram"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "form-variables",
							"item": [
								{
									"name": "Get Start Form Variables",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-definition/:id/form-variables?variableNames=<string>&deserializeValues=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												":id",
												"form-variables"
											],
											"query": [
												{
													"key": "variableNames",
													"value": "<string>",
													"description": "A comma-separated list of variable names. Allows restricting the list of requested\nvariables to the variable names in the list. It is best practice to restrict the\nlist of variables to the variables actually required by the form in order to\nminimize fetching of data. If the query parameter is ommitted all variables are\nfetched. If the query parameter contains non-existent variable names, the variable\nnames are ignored."
												},
												{
													"key": "deserializeValues",
													"value": "true",
													"description": "Determines whether serializable variable values (typically variables that store\ncustom Java objects) should be deserialized on server side (default true).\n\nIf set to true, a serializable variable will be deserialized on server side and\ntransformed to JSON using [Jackson's](http://jackson.codehaus.org/) POJO/bean\nproperty introspection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to false, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string\ncontaining XML.\n\n**Note**: While true is the default value for reasons of backward compatibility, we\nrecommend setting this parameter to false when developing web applications that are\nindependent of the Java process applications deployed to the engine."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the process definition to retrieve the variables for."
												}
											]
										},
										"description": "Retrieves the start form variables for a process definition\n(only if they are defined via the \n[Generated Task Form](https://docs.camunda.org/manual/7.21/user-guide/task-forms/#generated-task-forms) approach).\nThe start form variables take form data specified on the start event into account.\nIf form fields are defined, the variable types and default values\nof the form fields are taken into account."
									},
									"response": [
										{
											"name": "Request successful. A JSON object containing a property for each variable returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/form-variables?variableNames=<string>&deserializeValues=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"form-variables"
													],
													"query": [
														{
															"key": "variableNames",
															"value": "<string>",
															"description": "A comma-separated list of variable names. Allows restricting the list of requested\nvariables to the variable names in the list. It is best practice to restrict the\nlist of variables to the variables actually required by the form in order to\nminimize fetching of data. If the query parameter is ommitted all variables are\nfetched. If the query parameter contains non-existent variable names, the variable\nnames are ignored."
														},
														{
															"key": "deserializeValues",
															"value": "true",
															"description": "Determines whether serializable variable values (typically variables that store\ncustom Java objects) should be deserialized on server side (default true).\n\nIf set to true, a serializable variable will be deserialized on server side and\ntransformed to JSON using [Jackson's](http://jackson.codehaus.org/) POJO/bean\nproperty introspection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to false, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string\ncontaining XML.\n\n**Note**: While true is the default value for reasons of backward compatibility, we\nrecommend setting this parameter to false when developing web applications that are\nindependent of the Java process applications deployed to the engine."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"nulla__3\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"consectetur_dfd\": \"veniam do minim occaecat\"\n    }\n  },\n  \"ut_10\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"ut_fa\": false,\n      \"mollit9\": -39701223,\n      \"velit_c1\": \"ve\"\n    }\n  },\n  \"aliquip_5\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"consectetur_34d\": -65418375,\n      \"laboriseec\": false,\n      \"doloreb\": true\n    }\n  },\n  \"mollitd\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"in_76d\": true,\n      \"pariatur_f77\": true\n    }\n  }\n}"
										},
										{
											"name": "The id is null or does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/form-variables?variableNames=<string>&deserializeValues=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"form-variables"
													],
													"query": [
														{
															"key": "variableNames",
															"value": "<string>",
															"description": "A comma-separated list of variable names. Allows restricting the list of requested\nvariables to the variable names in the list. It is best practice to restrict the\nlist of variables to the variables actually required by the form in order to\nminimize fetching of data. If the query parameter is ommitted all variables are\nfetched. If the query parameter contains non-existent variable names, the variable\nnames are ignored."
														},
														{
															"key": "deserializeValues",
															"value": "true",
															"description": "Determines whether serializable variable values (typically variables that store\ncustom Java objects) should be deserialized on server side (default true).\n\nIf set to true, a serializable variable will be deserialized on server side and\ntransformed to JSON using [Jackson's](http://jackson.codehaus.org/) POJO/bean\nproperty introspection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to false, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string\ncontaining XML.\n\n**Note**: While true is the default value for reasons of backward compatibility, we\nrecommend setting this parameter to false when developing web applications that are\nindependent of the Java process applications deployed to the engine."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "history-time-to-live",
							"item": [
								{
									"name": "Update History Time to Live",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"historyTimeToLive\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-definition/:id/history-time-to-live",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												":id",
												"history-time-to-live"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the process definition to change history time to live."
												}
											]
										},
										"description": "Updates history time to live for process definition.\nThe field is used within [History cleanup](https://docs.camunda.org/manual/7.21/user-guide/process-engine/history/#history-cleanup).\nThe value of the update is mandatory by default and does not allow `null` values. To enable them, please\nset the feature flag `enforceHistoryTimeToLive` to `false`. Read more in [Configuration Properties]\n(https://docs.camunda.org/manual/7.21/reference/deployment-descriptors/tags/process-engine#configuration-properties)"
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"historyTimeToLive\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/history-time-to-live",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"history-time-to-live"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if some of the request parameters are invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"historyTimeToLive\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/history-time-to-live",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"history-time-to-live"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Process definition with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"historyTimeToLive\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/history-time-to-live",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"history-time-to-live"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "rendered-form",
							"item": [
								{
									"name": "Get Rendered Start Form",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/xhtml+xml"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-definition/:id/rendered-form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												":id",
												"rendered-form"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the process definition to get the rendered start form for."
												}
											]
										},
										"description": "Retrieves the rendered form for a process definition.\nThis method can be used to get the HTML rendering of a\n[Generated Task Form](https://docs.camunda.org/manual/7.21/user-guide/task-forms/#generated-task-forms)."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/xhtml+xml"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/rendered-form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"rendered-form"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "xml",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/xhtml+xml"
												}
											],
											"cookie": [],
											"body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>(string)</element>"
										},
										{
											"name": "Process definition has no form field metadata defined. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/rendered-form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"rendered-form"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Process definition with given id does not exist.  See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/rendered-form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"rendered-form"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "restart",
							"item": [
								{
									"name": "Restart Process Instance",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"duration\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"endTime\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"initialVariables\": \"<boolean>\",\n  \"withoutBusinessKey\": \"<boolean>\",\n  \"instructions\": [\n    {\n      \"type\": \"startTransition\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-definition/:id/restart",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												":id",
												"restart"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the process definition of the process instances to restart."
												}
											]
										},
										"description": "Restarts process instances that were canceled or terminated synchronously.\nCan also restart completed process instances.\nIt will create a new instance using the original instance information.\nTo execute the restart asynchronously, use the\n[Restart Process Instance Async](https://docs.camunda.org/manual/7.21/reference/rest/process-definition/post-restart-process-instance-async/) method.\n\nFor more information about the difference between synchronous and asynchronous execution,\nplease refer to the related section of the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/process-instance-restart/#execution)."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"duration\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"endTime\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"initialVariables\": \"<boolean>\",\n  \"withoutBusinessKey\": \"<boolean>\",\n  \"instructions\": [\n    {\n      \"type\": \"startTransition\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/restart",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"restart"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "In case following parameters are missing: `instructions`, `activityId` or `transitionId`,\n`processInstanceIds` or `historicProcessInstanceQuery`, an exception of type `InvalidRequestException` is returned. \nSee the [Introduction](https://docs.camunda.org/",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"duration\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"endTime\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"initialVariables\": \"<boolean>\",\n  \"withoutBusinessKey\": \"<boolean>\",\n  \"instructions\": [\n    {\n      \"type\": \"startTransition\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/restart",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"restart"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Process definition with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"duration\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"endTime\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"initialVariables\": \"<boolean>\",\n  \"withoutBusinessKey\": \"<boolean>\",\n  \"instructions\": [\n    {\n      \"type\": \"startTransition\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/restart",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"restart"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "restart-async",
							"item": [
								{
									"name": "Restart Process Instance Async",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"duration\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"endTime\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"initialVariables\": \"<boolean>\",\n  \"withoutBusinessKey\": \"<boolean>\",\n  \"instructions\": [\n    {\n      \"type\": \"startTransition\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-definition/:id/restart-async",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												":id",
												"restart-async"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the process definition of the process instances to restart."
												}
											]
										},
										"description": "Restarts process instances that were canceled or terminated asynchronously.\nCan also restart completed process instances.\nIt will create a new instance using the original instance information.\nTo execute the restart asynchronously, use the\n[Restart Process Instance](https://docs.camunda.org/manual/7.21/reference/rest/process-definition/post-restart-process-instance-sync/) method.\n\nFor more information about the difference between synchronous and asynchronous execution,\nplease refer to the related section of the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/process-instance-restart/#execution)."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"duration\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"endTime\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"initialVariables\": \"<boolean>\",\n  \"withoutBusinessKey\": \"<boolean>\",\n  \"instructions\": [\n    {\n      \"type\": \"startTransition\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/restart-async",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"restart-async"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"totalJobs\": \"<integer>\",\n  \"jobsCreated\": \"<integer>\",\n  \"batchJobsPerSeed\": \"<integer>\",\n  \"invocationsPerBatchJob\": \"<integer>\",\n  \"seedJobDefinitionId\": \"<string>\",\n  \"monitorJobDefinitionId\": \"<string>\",\n  \"batchJobDefinitionId\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"createUserId\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"executionStartTime\": \"<dateTime>\"\n}"
										},
										{
											"name": "In case following parameters are missing: `instructions`, `activityId` or `transitionId`,\n`processInstanceIds` or `historicProcessInstanceQuery`,\nan exception of type `InvalidRequestException` is returned. \nSee the [Introduction](https://docs.camunda.org/",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"duration\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"endTime\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"initialVariables\": \"<boolean>\",\n  \"withoutBusinessKey\": \"<boolean>\",\n  \"instructions\": [\n    {\n      \"type\": \"startTransition\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/restart-async",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"restart-async"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Process definition with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"duration\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"endTime\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"initialVariables\": \"<boolean>\",\n  \"withoutBusinessKey\": \"<boolean>\",\n  \"instructions\": [\n    {\n      \"type\": \"startTransition\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/restart-async",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"restart-async"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "start",
							"item": [
								{
									"name": "Start Instance",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{Authorization}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"businessKey\": \"<string>\",\n  \"variables\": {\n    \"sed_61\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"aliquip4\": -76007881,\n        \"Excepteur_8\": 1243171.7254527658\n      }\n    }\n  },\n  \"caseInstanceId\": \"<string>\",\n  \"startInstructions\": [\n    {\n      \"type\": \"startAfterActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"nulla1\": false\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_b4\": true,\n          \"ex_272\": false,\n          \"voluptate1\": \"minim in magna\"\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"withVariablesInReturn\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-definition/:id/start",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												":id",
												"start"
											],
											"variable": [
												{
													"key": "id",
													"value": "Process_1724812184672:1:8bdcb3af-64e5-11ef-bcee-005056c00008",
													"description": "(Required) The id of the process definition to be retrieved."
												}
											]
										},
										"description": "Instantiates a given process definition.\nProcess variables and business key may be supplied in the request body."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"businessKey\": \"<string>\",\n  \"variables\": {\n    \"sed_61\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"aliquip4\": -76007881,\n        \"Excepteur_8\": 1243171.7254527658\n      }\n    }\n  },\n  \"caseInstanceId\": \"<string>\",\n  \"startInstructions\": [\n    {\n      \"type\": \"startAfterActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"nulla1\": false\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_b4\": true,\n          \"ex_272\": false,\n          \"voluptate1\": \"minim in magna\"\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"withVariablesInReturn\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/start",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"start"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"variables\": {\n    \"sint_0\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"ex__7\": 38919287\n      }\n    }\n  },\n  \"id\": \"<string>\",\n  \"definitionId\": \"<string>\",\n  \"businessKey\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"ended\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The instance could not be created due to an invalid variable value,\nfor example if the value could not be parsed to an `Integer` value or\nthe passed variable type is not supported.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"businessKey\": \"<string>\",\n  \"variables\": {\n    \"sed_61\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"aliquip4\": -76007881,\n        \"Excepteur_8\": 1243171.7254527658\n      }\n    }\n  },\n  \"caseInstanceId\": \"<string>\",\n  \"startInstructions\": [\n    {\n      \"type\": \"startAfterActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"nulla1\": false\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_b4\": true,\n          \"ex_272\": false,\n          \"voluptate1\": \"minim in magna\"\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"withVariablesInReturn\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/start",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"start"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "The instance could not be created successfully.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"businessKey\": \"<string>\",\n  \"variables\": {\n    \"sed_61\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"aliquip4\": -76007881,\n        \"Excepteur_8\": 1243171.7254527658\n      }\n    }\n  },\n  \"caseInstanceId\": \"<string>\",\n  \"startInstructions\": [\n    {\n      \"type\": \"startAfterActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"nulla1\": false\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_b4\": true,\n          \"ex_272\": false,\n          \"voluptate1\": \"minim in magna\"\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"withVariablesInReturn\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/start",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"start"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "startForm",
							"item": [
								{
									"name": "Get Start Form Key",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-definition/:id/startForm",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												":id",
												"startForm"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the process definition to get the start form key for."
												}
											]
										},
										"description": "Retrieves the key of the start form for a process definition.\nThe form key corresponds to the `FormData#formKey` property in the engine."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/startForm",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"startForm"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"key\": \"<string>\",\n  \"camundaFormRef\": {\n    \"key\": \"<string>\",\n    \"binding\": \"<string>\",\n    \"version\": \"<integer>\"\n  },\n  \"contextPath\": \"<string>\"\n}"
										},
										{
											"name": "Process definition has no start form defined. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/startForm",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"startForm"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Process definition with given id does not exist.  See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/startForm",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"startForm"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "static-called-process-definitions",
							"item": [
								{
									"name": "Get Static Called Process Definitions",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-definition/:id/static-called-process-definitions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												":id",
												"static-called-process-definitions"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the process definition."
												}
											]
										},
										"description": "For the given process, returns a list of called process definitions corresponding\nto\nthe `CalledProcessDefinition` interface in the engine. The list\ncontains all process definitions\nthat are referenced statically by call activities in the given\nprocess. This endpoint does not\nresolve process definitions that are referenced with expressions. Each\ncalled process definition\ncontains a list of call activity ids, which specifies the call\nactivities that are calling that\nprocess. This endpoint does not resolve references to case\ndefinitions."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/static-called-process-definitions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"static-called-process-definitions"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"calledFromActivityIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"callingProcessDefinitionId\": \"<string>\",\n    \"id\": \"<string>\",\n    \"key\": \"<string>\",\n    \"category\": \"<string>\",\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"version\": \"<integer>\",\n    \"resource\": \"<string>\",\n    \"deploymentId\": \"<string>\",\n    \"diagram\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"tenantId\": \"<string>\",\n    \"versionTag\": \"<string>\",\n    \"historyTimeToLive\": \"<integer>\",\n    \"startableInTasklist\": \"<boolean>\"\n  },\n  {\n    \"calledFromActivityIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"callingProcessDefinitionId\": \"<string>\",\n    \"id\": \"<string>\",\n    \"key\": \"<string>\",\n    \"category\": \"<string>\",\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"version\": \"<integer>\",\n    \"resource\": \"<string>\",\n    \"deploymentId\": \"<string>\",\n    \"diagram\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"tenantId\": \"<string>\",\n    \"versionTag\": \"<string>\",\n    \"historyTimeToLive\": \"<integer>\",\n    \"startableInTasklist\": \"<boolean>\"\n  }\n]"
										},
										{
											"name": "Process definition with given key does not exist.\nSee the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/static-called-process-definitions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"static-called-process-definitions"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "statistics",
							"item": [
								{
									"name": "Get Activity Instance Statistics",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-definition/:id/statistics?failedJobs=<boolean>&incidents=<boolean>&incidentsForType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												":id",
												"statistics"
											],
											"query": [
												{
													"key": "failedJobs",
													"value": "<boolean>",
													"description": "Whether to include the number of failed jobs in the result or not. Valid values are `true` or `false`."
												},
												{
													"key": "incidents",
													"value": "<boolean>",
													"description": "Valid values for this property are `true` or `false`.\nIf this property has been set to `true` the result will include the corresponding number of incidents\nfor each occurred incident type.\nIf it is set to `false`, the incidents will not be included in the result.\nCannot be used in combination with `incidentsForType`."
												},
												{
													"key": "incidentsForType",
													"value": "<string>",
													"description": "If this property has been set with any incident type (i.e., a string value) the result\nwill only include the number of incidents for the assigned incident type.\nCannot be used in combination with `incidents`.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the process definition."
												}
											]
										},
										"description": "Retrieves runtime statistics of a given process definition, grouped by activities.\nThese statistics include the number of running activity instances, optionally the number of failed jobs\nand also optionally the number of incidents either grouped by incident types or for a specific incident type.\n**Note**: This does not include historic data."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/statistics?failedJobs=<boolean>&incidents=<boolean>&incidentsForType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"statistics"
													],
													"query": [
														{
															"key": "failedJobs",
															"value": "<boolean>",
															"description": "Whether to include the number of failed jobs in the result or not. Valid values are `true` or `false`."
														},
														{
															"key": "incidents",
															"value": "<boolean>",
															"description": "Valid values for this property are `true` or `false`.\nIf this property has been set to `true` the result will include the corresponding number of incidents\nfor each occurred incident type.\nIf it is set to `false`, the incidents will not be included in the result.\nCannot be used in combination with `incidentsForType`."
														},
														{
															"key": "incidentsForType",
															"value": "<string>",
															"description": "If this property has been set with any incident type (i.e., a string value) the result\nwill only include the number of incidents for the assigned incident type.\nCannot be used in combination with `incidents`.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<string>\",\n    \"instances\": \"<integer>\",\n    \"failedJobs\": \"<integer>\",\n    \"incidents\": [\n      {\n        \"incidentType\": \"<string>\",\n        \"incidentCount\": \"<integer>\"\n      },\n      {\n        \"incidentType\": \"<string>\",\n        \"incidentCount\": \"<integer>\"\n      }\n    ],\n    \"@class\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"instances\": \"<integer>\",\n    \"failedJobs\": \"<integer>\",\n    \"incidents\": [\n      {\n        \"incidentType\": \"<string>\",\n        \"incidentCount\": \"<integer>\"\n      },\n      {\n        \"incidentType\": \"<string>\",\n        \"incidentCount\": \"<integer>\"\n      }\n    ],\n    \"@class\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Returned if some of the query parameters are invalid.\nSee the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/statistics?failedJobs=<boolean>&incidents=<boolean>&incidentsForType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"statistics"
													],
													"query": [
														{
															"key": "failedJobs",
															"value": "<boolean>",
															"description": "Whether to include the number of failed jobs in the result or not. Valid values are `true` or `false`."
														},
														{
															"key": "incidents",
															"value": "<boolean>",
															"description": "Valid values for this property are `true` or `false`.\nIf this property has been set to `true` the result will include the corresponding number of incidents\nfor each occurred incident type.\nIf it is set to `false`, the incidents will not be included in the result.\nCannot be used in combination with `incidentsForType`."
														},
														{
															"key": "incidentsForType",
															"value": "<string>",
															"description": "If this property has been set with any incident type (i.e., a string value) the result\nwill only include the number of incidents for the assigned incident type.\nCannot be used in combination with `incidents`.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Process definition with given key does not exist.\nSee the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/statistics?failedJobs=<boolean>&incidents=<boolean>&incidentsForType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"statistics"
													],
													"query": [
														{
															"key": "failedJobs",
															"value": "<boolean>",
															"description": "Whether to include the number of failed jobs in the result or not. Valid values are `true` or `false`."
														},
														{
															"key": "incidents",
															"value": "<boolean>",
															"description": "Valid values for this property are `true` or `false`.\nIf this property has been set to `true` the result will include the corresponding number of incidents\nfor each occurred incident type.\nIf it is set to `false`, the incidents will not be included in the result.\nCannot be used in combination with `incidentsForType`."
														},
														{
															"key": "incidentsForType",
															"value": "<string>",
															"description": "If this property has been set with any incident type (i.e., a string value) the result\nwill only include the number of incidents for the assigned incident type.\nCannot be used in combination with `incidents`.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "submit-form",
							"item": [
								{
									"name": "Submit Start Form",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"variables\": {\n    \"laborum_75\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"magna_d8d\": -79015462,\n        \"in69a\": \"Ut pariatur sed exercitation\"\n      }\n    }\n  },\n  \"businessKey\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-definition/:id/submit-form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												":id",
												"submit-form"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the process definition to submit the form for."
												}
											]
										},
										"description": "Starts a process instance using a set of process variables and the business key.\nIf the start event has Form Field Metadata defined, the process engine will perform backend validation\nfor any form fields which have validators defined.\nSee [Documentation on Generated Task Forms](https://docs.camunda.org/manual/7.21/user-guide/task-forms/#generated-task-forms)."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"laborum_75\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"magna_d8d\": -79015462,\n        \"in69a\": \"Ut pariatur sed exercitation\"\n      }\n    }\n  },\n  \"businessKey\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/submit-form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"submit-form"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"definitionId\": \"<string>\",\n  \"businessKey\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"ended\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "The instance could not be created due to an invalid variable value,\nfor example if the value could not be parsed to an `Integer` value or\nthe passed variable type is not supported.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"laborum_75\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"magna_d8d\": -79015462,\n        \"in69a\": \"Ut pariatur sed exercitation\"\n      }\n    }\n  },\n  \"businessKey\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/submit-form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"submit-form"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Process definition with given id does not exist.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"laborum_75\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"magna_d8d\": -79015462,\n        \"in69a\": \"Ut pariatur sed exercitation\"\n      }\n    }\n  },\n  \"businessKey\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/submit-form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"submit-form"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "The instance could not be created successfully.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"laborum_75\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"magna_d8d\": -79015462,\n        \"in69a\": \"Ut pariatur sed exercitation\"\n      }\n    }\n  },\n  \"businessKey\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/submit-form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"submit-form"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "suspended",
							"item": [
								{
									"name": "Activate/Suspend By Id",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"suspended\": \"<boolean>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"includeProcessInstances\": \"<boolean>\",\n  \"executionDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-definition/:id/suspended",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												":id",
												"suspended"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the process definition to activate or suspend."
												}
											]
										},
										"description": "Activates or suspends a given process definition by id."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"suspended\": \"<boolean>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"includeProcessInstances\": \"<boolean>\",\n  \"executionDate\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/suspended",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"suspended"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if some of the query parameters are invalid,\nfor example if the provided `executionDate` parameter doesn't have the expected format or\nif the `processDefinitionKey` parameter is `null`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"suspended\": \"<boolean>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"includeProcessInstances\": \"<boolean>\",\n  \"executionDate\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/suspended",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"suspended"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Process definition with given key does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"suspended\": \"<boolean>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"includeProcessInstances\": \"<boolean>\",\n  \"executionDate\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/suspended",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"suspended"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "xml",
							"item": [
								{
									"name": "Get XML",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-definition/:id/xml",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												":id",
												"xml"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the process definition."
												}
											]
										},
										"description": "Retrieves the BPMN 2.0 XML of a process definition."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/xml",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"xml"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"bpmn20Xml\": \"<string>\"\n}"
										},
										{
											"name": "Returned if some of the query parameters are invalid.\nSee the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/xml",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"xml"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "The Process Definition xml cannot be retrieved due to missing permissions on the Process Definition resource.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/xml",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"xml"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"userId\": \"<string>\",\n  \"missingAuthorizations\": [\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    },\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Process definition with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-definition/:id/xml",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-definition",
														":id",
														"xml"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Delete",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/process-definition/:id?cascade=<boolean>&skipCustomListeners=false&skipIoMappings=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process-definition",
										":id"
									],
									"query": [
										{
											"key": "cascade",
											"value": "<boolean>",
											"description": "`true`, if all process instances, historic process instances and jobs\nfor this process definition should be deleted."
										},
										{
											"key": "skipCustomListeners",
											"value": "false",
											"description": "`true`, if only the built-in ExecutionListeners should be notified with the end event."
										},
										{
											"key": "skipIoMappings",
											"value": "false",
											"description": "A boolean value to control whether input/output mappings should be executed during deletion.\n`true`, if input/output mappings should not be invoked."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the process definition to be deleted."
										}
									]
								},
								"description": "Deletes a running process instance by id."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-definition/:id?cascade=<boolean>&skipCustomListeners=false&skipIoMappings=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												":id"
											],
											"query": [
												{
													"key": "cascade",
													"value": "<boolean>",
													"description": "`true`, if all process instances, historic process instances and jobs\nfor this process definition should be deleted."
												},
												{
													"key": "skipCustomListeners",
													"value": "false",
													"description": "`true`, if only the built-in ExecutionListeners should be notified with the end event."
												},
												{
													"key": "skipIoMappings",
													"value": "false",
													"description": "A boolean value to control whether input/output mappings should be executed during deletion.\n`true`, if input/output mappings should not be invoked."
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found\nProcess definition with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-definition/:id?cascade=<boolean>&skipCustomListeners=false&skipIoMappings=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												":id"
											],
											"query": [
												{
													"key": "cascade",
													"value": "<boolean>",
													"description": "`true`, if all process instances, historic process instances and jobs\nfor this process definition should be deleted."
												},
												{
													"key": "skipCustomListeners",
													"value": "false",
													"description": "`true`, if only the built-in ExecutionListeners should be notified with the end event."
												},
												{
													"key": "skipIoMappings",
													"value": "false",
													"description": "A boolean value to control whether input/output mappings should be executed during deletion.\n`true`, if input/output mappings should not be invoked."
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{Authorization}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/process-definition/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process-definition",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "Process_1724812184672:1:8bdcb3af-64e5-11ef-bcee-005056c00008"
										}
									]
								},
								"description": "Retrieves a process definition according to the `ProcessDefinition` interface in the engine."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-definition/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"key\": \"<string>\",\n  \"category\": \"<string>\",\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"version\": \"<integer>\",\n  \"resource\": \"<string>\",\n  \"deploymentId\": \"<string>\",\n  \"diagram\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"versionTag\": \"<string>\",\n  \"historyTimeToLive\": \"<integer>\",\n  \"startableInTasklist\": \"<boolean>\"\n}"
								},
								{
									"name": "Process definition with given `id` does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-definition/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-definition",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/process-definition",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"process-definition"
							],
							"query": [
								{
									"key": "processDefinitionId",
									"value": "<string>",
									"description": "Filter by process definition id.",
									"disabled": true
								},
								{
									"key": "processDefinitionIdIn",
									"value": "<string>",
									"description": "Filter by a comma-separated list of process definition ids.",
									"disabled": true
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "Filter by process definition name.",
									"disabled": true
								},
								{
									"key": "nameLike",
									"value": "<string>",
									"description": "Filter by process definition names that the parameter is a substring of.",
									"disabled": true
								},
								{
									"key": "deploymentId",
									"value": "<string>",
									"description": "Filter by the deployment the id belongs to.",
									"disabled": true
								},
								{
									"key": "deployedAfter",
									"value": "<dateTime>",
									"description": "Filter by the deploy time of the deployment the process definition belongs to.\nOnly selects process definitions that have been deployed after (exclusive) a specific time.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.546+0200`.",
									"disabled": true
								},
								{
									"key": "deployedAt",
									"value": "<dateTime>",
									"description": "Filter by the deploy time of the deployment the process definition belongs to.\nOnly selects process definitions that have been deployed at a specific time (exact match).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.546+0200`.",
									"disabled": true
								},
								{
									"key": "key",
									"value": "<string>",
									"description": "Filter by process definition key, i.e., the id in the BPMN 2.0 XML. Exact match.",
									"disabled": true
								},
								{
									"key": "keysIn",
									"value": "<string>",
									"description": "Filter by a comma-separated list of process definition keys.",
									"disabled": true
								},
								{
									"key": "keyLike",
									"value": "<string>",
									"description": "Filter by process definition keys that the parameter is a substring of.",
									"disabled": true
								},
								{
									"key": "category",
									"value": "<string>",
									"description": "Filter by process definition category. Exact match.",
									"disabled": true
								},
								{
									"key": "categoryLike",
									"value": "<string>",
									"description": "Filter by process definition categories that the parameter is a substring of.",
									"disabled": true
								},
								{
									"key": "version",
									"value": "<integer>",
									"description": "Filter by process definition version.",
									"disabled": true
								},
								{
									"key": "latestVersion",
									"value": "<boolean>",
									"description": "Only include those process definitions that are latest versions.\nValue may only be `true`, as `false` is the default behavior.",
									"disabled": true
								},
								{
									"key": "resourceName",
									"value": "<string>",
									"description": "Filter by the name of the process definition resource. Exact match.",
									"disabled": true
								},
								{
									"key": "resourceNameLike",
									"value": "<string>",
									"description": "Filter by names of those process definition resources that the parameter is a substring of.",
									"disabled": true
								},
								{
									"key": "startableBy",
									"value": "<string>",
									"description": "Filter by a user name who is allowed to start the process.",
									"disabled": true
								},
								{
									"key": "active",
									"value": "<boolean>",
									"description": "Only include active process definitions.\nValue may only be `true`, as `false` is the default behavior.",
									"disabled": true
								},
								{
									"key": "suspended",
									"value": "<boolean>",
									"description": "Only include suspended process definitions.\nValue may only be `true`, as `false` is the default behavior.",
									"disabled": true
								},
								{
									"key": "incidentId",
									"value": "<string>",
									"description": "Filter by the incident id.",
									"disabled": true
								},
								{
									"key": "incidentType",
									"value": "<string>",
									"description": "Filter by the incident type.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types.",
									"disabled": true
								},
								{
									"key": "incidentMessage",
									"value": "<string>",
									"description": "Filter by the incident message. Exact match.",
									"disabled": true
								},
								{
									"key": "incidentMessageLike",
									"value": "<string>",
									"description": "Filter by the incident message that the parameter is a substring of.",
									"disabled": true
								},
								{
									"key": "tenantIdIn",
									"value": "<string>",
									"description": "Filter by a comma-separated list of tenant ids.\nA process definition must have one of the given tenant ids.",
									"disabled": true
								},
								{
									"key": "withoutTenantId",
									"value": "<boolean>",
									"description": "Only include process definitions which belong to no tenant.\nValue may only be true, as false is the default behavior.",
									"disabled": true
								},
								{
									"key": "includeProcessDefinitionsWithoutTenantId",
									"value": "<boolean>",
									"description": "Include process definitions which belong to no tenant. Can be used in combination with `tenantIdIn`.\nValue may only be `true`, as `false` is the default behavior.",
									"disabled": true
								},
								{
									"key": "versionTag",
									"value": "<string>",
									"description": "Filter by the version tag.",
									"disabled": true
								},
								{
									"key": "versionTagLike",
									"value": "<string>",
									"description": "Filter by the version tag that the parameter is a substring of.",
									"disabled": true
								},
								{
									"key": "withoutVersionTag",
									"value": "<boolean>",
									"description": "Only include process definitions without a `versionTag`.",
									"disabled": true
								},
								{
									"key": "startableInTasklist",
									"value": "<boolean>",
									"description": "Filter by process definitions which are startable in Tasklist..",
									"disabled": true
								},
								{
									"key": "notStartableInTasklist",
									"value": "<boolean>",
									"description": "Filter by process definitions which are not startable in Tasklist.",
									"disabled": true
								},
								{
									"key": "startablePermissionCheck",
									"value": "<boolean>",
									"description": "Filter by process definitions which the user is allowed to start in Tasklist.\nIf the user doesn't have these permissions the result will be empty list.\nThe permissions are:\n* `CREATE` permission for all Process instances\n* `CREATE_INSTANCE` and `READ` permission on Process definition level",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "version",
									"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter.",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter.",
									"disabled": true
								},
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return.",
									"disabled": true
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left.",
									"disabled": true
								}
							]
						},
						"description": "Queries for process definitions that fulfill given parameters. Parameters may be the properties of \nprocess definitions, such as the name, key or version. The size of the result set can be retrieved\nby using the [Get Definition Count](https://docs.camunda.org/manual/7.21/reference/rest/process-definition/get-query-count/) method."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/process-definition?processDefinitionId=<string>&processDefinitionIdIn=<string>&name=<string>&nameLike=<string>&deploymentId=<string>&deployedAfter=<dateTime>&deployedAt=<dateTime>&key=<string>&keysIn=<string>&keyLike=<string>&category=<string>&categoryLike=<string>&version=<integer>&latestVersion=<boolean>&resourceName=<string>&resourceNameLike=<string>&startableBy=<string>&active=<boolean>&suspended=<boolean>&incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeProcessDefinitionsWithoutTenantId=<boolean>&versionTag=<string>&versionTagLike=<string>&withoutVersionTag=<boolean>&startableInTasklist=<boolean>&notStartableInTasklist=<boolean>&startablePermissionCheck=<boolean>&sortBy=version&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process-definition"
									],
									"query": [
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Filter by process definition id."
										},
										{
											"key": "processDefinitionIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of process definition ids."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Filter by process definition name."
										},
										{
											"key": "nameLike",
											"value": "<string>",
											"description": "Filter by process definition names that the parameter is a substring of."
										},
										{
											"key": "deploymentId",
											"value": "<string>",
											"description": "Filter by the deployment the id belongs to."
										},
										{
											"key": "deployedAfter",
											"value": "<dateTime>",
											"description": "Filter by the deploy time of the deployment the process definition belongs to.\nOnly selects process definitions that have been deployed after (exclusive) a specific time.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.546+0200`."
										},
										{
											"key": "deployedAt",
											"value": "<dateTime>",
											"description": "Filter by the deploy time of the deployment the process definition belongs to.\nOnly selects process definitions that have been deployed at a specific time (exact match).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.546+0200`."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "Filter by process definition key, i.e., the id in the BPMN 2.0 XML. Exact match."
										},
										{
											"key": "keysIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of process definition keys."
										},
										{
											"key": "keyLike",
											"value": "<string>",
											"description": "Filter by process definition keys that the parameter is a substring of."
										},
										{
											"key": "category",
											"value": "<string>",
											"description": "Filter by process definition category. Exact match."
										},
										{
											"key": "categoryLike",
											"value": "<string>",
											"description": "Filter by process definition categories that the parameter is a substring of."
										},
										{
											"key": "version",
											"value": "<integer>",
											"description": "Filter by process definition version."
										},
										{
											"key": "latestVersion",
											"value": "<boolean>",
											"description": "Only include those process definitions that are latest versions.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "resourceName",
											"value": "<string>",
											"description": "Filter by the name of the process definition resource. Exact match."
										},
										{
											"key": "resourceNameLike",
											"value": "<string>",
											"description": "Filter by names of those process definition resources that the parameter is a substring of."
										},
										{
											"key": "startableBy",
											"value": "<string>",
											"description": "Filter by a user name who is allowed to start the process."
										},
										{
											"key": "active",
											"value": "<boolean>",
											"description": "Only include active process definitions.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "suspended",
											"value": "<boolean>",
											"description": "Only include suspended process definitions.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "incidentId",
											"value": "<string>",
											"description": "Filter by the incident id."
										},
										{
											"key": "incidentType",
											"value": "<string>",
											"description": "Filter by the incident type.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
										},
										{
											"key": "incidentMessage",
											"value": "<string>",
											"description": "Filter by the incident message. Exact match."
										},
										{
											"key": "incidentMessageLike",
											"value": "<string>",
											"description": "Filter by the incident message that the parameter is a substring of."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids.\nA process definition must have one of the given tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include process definitions which belong to no tenant.\nValue may only be true, as false is the default behavior."
										},
										{
											"key": "includeProcessDefinitionsWithoutTenantId",
											"value": "<boolean>",
											"description": "Include process definitions which belong to no tenant. Can be used in combination with `tenantIdIn`.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "versionTag",
											"value": "<string>",
											"description": "Filter by the version tag."
										},
										{
											"key": "versionTagLike",
											"value": "<string>",
											"description": "Filter by the version tag that the parameter is a substring of."
										},
										{
											"key": "withoutVersionTag",
											"value": "<boolean>",
											"description": "Only include process definitions without a `versionTag`."
										},
										{
											"key": "startableInTasklist",
											"value": "<boolean>",
											"description": "Filter by process definitions which are startable in Tasklist.."
										},
										{
											"key": "notStartableInTasklist",
											"value": "<boolean>",
											"description": "Filter by process definitions which are not startable in Tasklist."
										},
										{
											"key": "startablePermissionCheck",
											"value": "<boolean>",
											"description": "Filter by process definitions which the user is allowed to start in Tasklist.\nIf the user doesn't have these permissions the result will be empty list.\nThe permissions are:\n* `CREATE` permission for all Process instances\n* `CREATE_INSTANCE` and `READ` permission on Process definition level"
										},
										{
											"key": "sortBy",
											"value": "version",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"key\": \"<string>\",\n    \"category\": \"<string>\",\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"version\": \"<integer>\",\n    \"resource\": \"<string>\",\n    \"deploymentId\": \"<string>\",\n    \"diagram\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"tenantId\": \"<string>\",\n    \"versionTag\": \"<string>\",\n    \"historyTimeToLive\": \"<integer>\",\n    \"startableInTasklist\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"key\": \"<string>\",\n    \"category\": \"<string>\",\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"version\": \"<integer>\",\n    \"resource\": \"<string>\",\n    \"deploymentId\": \"<string>\",\n    \"diagram\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"tenantId\": \"<string>\",\n    \"versionTag\": \"<string>\",\n    \"historyTimeToLive\": \"<integer>\",\n    \"startableInTasklist\": \"<boolean>\"\n  }\n]"
						},
						{
							"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder` parameter is supplied,\nbut no `sortBy`. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/process-definition?processDefinitionId=<string>&processDefinitionIdIn=<string>&name=<string>&nameLike=<string>&deploymentId=<string>&deployedAfter=<dateTime>&deployedAt=<dateTime>&key=<string>&keysIn=<string>&keyLike=<string>&category=<string>&categoryLike=<string>&version=<integer>&latestVersion=<boolean>&resourceName=<string>&resourceNameLike=<string>&startableBy=<string>&active=<boolean>&suspended=<boolean>&incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&tenantIdIn=<string>&withoutTenantId=<boolean>&includeProcessDefinitionsWithoutTenantId=<boolean>&versionTag=<string>&versionTagLike=<string>&withoutVersionTag=<boolean>&startableInTasklist=<boolean>&notStartableInTasklist=<boolean>&startablePermissionCheck=<boolean>&sortBy=version&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process-definition"
									],
									"query": [
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Filter by process definition id."
										},
										{
											"key": "processDefinitionIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of process definition ids."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Filter by process definition name."
										},
										{
											"key": "nameLike",
											"value": "<string>",
											"description": "Filter by process definition names that the parameter is a substring of."
										},
										{
											"key": "deploymentId",
											"value": "<string>",
											"description": "Filter by the deployment the id belongs to."
										},
										{
											"key": "deployedAfter",
											"value": "<dateTime>",
											"description": "Filter by the deploy time of the deployment the process definition belongs to.\nOnly selects process definitions that have been deployed after (exclusive) a specific time.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.546+0200`."
										},
										{
											"key": "deployedAt",
											"value": "<dateTime>",
											"description": "Filter by the deploy time of the deployment the process definition belongs to.\nOnly selects process definitions that have been deployed at a specific time (exact match).\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.546+0200`."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "Filter by process definition key, i.e., the id in the BPMN 2.0 XML. Exact match."
										},
										{
											"key": "keysIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of process definition keys."
										},
										{
											"key": "keyLike",
											"value": "<string>",
											"description": "Filter by process definition keys that the parameter is a substring of."
										},
										{
											"key": "category",
											"value": "<string>",
											"description": "Filter by process definition category. Exact match."
										},
										{
											"key": "categoryLike",
											"value": "<string>",
											"description": "Filter by process definition categories that the parameter is a substring of."
										},
										{
											"key": "version",
											"value": "<integer>",
											"description": "Filter by process definition version."
										},
										{
											"key": "latestVersion",
											"value": "<boolean>",
											"description": "Only include those process definitions that are latest versions.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "resourceName",
											"value": "<string>",
											"description": "Filter by the name of the process definition resource. Exact match."
										},
										{
											"key": "resourceNameLike",
											"value": "<string>",
											"description": "Filter by names of those process definition resources that the parameter is a substring of."
										},
										{
											"key": "startableBy",
											"value": "<string>",
											"description": "Filter by a user name who is allowed to start the process."
										},
										{
											"key": "active",
											"value": "<boolean>",
											"description": "Only include active process definitions.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "suspended",
											"value": "<boolean>",
											"description": "Only include suspended process definitions.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "incidentId",
											"value": "<string>",
											"description": "Filter by the incident id."
										},
										{
											"key": "incidentType",
											"value": "<string>",
											"description": "Filter by the incident type.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
										},
										{
											"key": "incidentMessage",
											"value": "<string>",
											"description": "Filter by the incident message. Exact match."
										},
										{
											"key": "incidentMessageLike",
											"value": "<string>",
											"description": "Filter by the incident message that the parameter is a substring of."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids.\nA process definition must have one of the given tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "<boolean>",
											"description": "Only include process definitions which belong to no tenant.\nValue may only be true, as false is the default behavior."
										},
										{
											"key": "includeProcessDefinitionsWithoutTenantId",
											"value": "<boolean>",
											"description": "Include process definitions which belong to no tenant. Can be used in combination with `tenantIdIn`.\nValue may only be `true`, as `false` is the default behavior."
										},
										{
											"key": "versionTag",
											"value": "<string>",
											"description": "Filter by the version tag."
										},
										{
											"key": "versionTagLike",
											"value": "<string>",
											"description": "Filter by the version tag that the parameter is a substring of."
										},
										{
											"key": "withoutVersionTag",
											"value": "<boolean>",
											"description": "Only include process definitions without a `versionTag`."
										},
										{
											"key": "startableInTasklist",
											"value": "<boolean>",
											"description": "Filter by process definitions which are startable in Tasklist.."
										},
										{
											"key": "notStartableInTasklist",
											"value": "<boolean>",
											"description": "Filter by process definitions which are not startable in Tasklist."
										},
										{
											"key": "startablePermissionCheck",
											"value": "<boolean>",
											"description": "Filter by process definitions which the user is allowed to start in Tasklist.\nIf the user doesn't have these permissions the result will be empty list.\nThe permissions are:\n* `CREATE` permission for all Process instances\n* `CREATE_INSTANCE` and `READ` permission on Process definition level"
										},
										{
											"key": "sortBy",
											"value": "version",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "process-instance",
			"item": [
				{
					"name": "count",
					"item": [
						{
							"name": "Get List Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/process-instance/count?processInstanceIds=<string>&businessKey=<string>&businessKeyLike=<string>&caseInstanceId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionKeyIn=<string>&processDefinitionKeyNotIn=<string>&deploymentId=<string>&superProcessInstance=<string>&subProcessInstance=<string>&superCaseInstance=<string>&subCaseInstance=<string>&active=false&suspended=false&withIncident=false&incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&tenantIdIn=<string>&withoutTenantId=false&processDefinitionWithoutTenantId=false&activityIdIn=<string>&rootProcessInstances=false&leafProcessInstances=false&variables=<string>&variableNamesIgnoreCase=false&variableValuesIgnoreCase=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process-instance",
										"count"
									],
									"query": [
										{
											"key": "processInstanceIds",
											"value": "<string>",
											"description": "Filter by a comma-separated list of process instance ids."
										},
										{
											"key": "businessKey",
											"value": "<string>",
											"description": "Filter by process instance business key."
										},
										{
											"key": "businessKeyLike",
											"value": "<string>",
											"description": "Filter by process instance business key that the parameter is a substring of."
										},
										{
											"key": "caseInstanceId",
											"value": "<string>",
											"description": "Filter by case instance id."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Filter by the deployment the id belongs to."
										},
										{
											"key": "processDefinitionKey",
											"value": "<string>",
											"description": "Filter by the key of the process definition the instances run on."
										},
										{
											"key": "processDefinitionKeyIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of process definition keys.\nA process instance must have one of the given process definition keys."
										},
										{
											"key": "processDefinitionKeyNotIn",
											"value": "<string>",
											"description": "Exclude instances by a comma-separated list of process definition keys.\nA process instance must not have one of the given process definition keys."
										},
										{
											"key": "deploymentId",
											"value": "<string>",
											"description": "Filter by the deployment the id belongs to."
										},
										{
											"key": "superProcessInstance",
											"value": "<string>",
											"description": "Restrict query to all process instances that are sub process instances of the given process instance.\nTakes a process instance id."
										},
										{
											"key": "subProcessInstance",
											"value": "<string>",
											"description": "Restrict query to all process instances that have the given process instance as a sub process instance.\nTakes a process instance id."
										},
										{
											"key": "superCaseInstance",
											"value": "<string>",
											"description": "Restrict query to all process instances that are sub process instances of the given case instance.\nTakes a case instance id."
										},
										{
											"key": "subCaseInstance",
											"value": "<string>",
											"description": "Restrict query to all process instances that have the given case instance as a sub case instance.\nTakes a case instance id."
										},
										{
											"key": "active",
											"value": "false",
											"description": "Only include active process instances. Value may only be true,\nas false is the default behavior."
										},
										{
											"key": "suspended",
											"value": "false",
											"description": "Only include suspended process instances. Value may only be true,\nas false is the default behavior."
										},
										{
											"key": "withIncident",
											"value": "false",
											"description": "Filter by presence of incidents. Selects only process instances that have an incident."
										},
										{
											"key": "incidentId",
											"value": "<string>",
											"description": "Filter by the incident id."
										},
										{
											"key": "incidentType",
											"value": "<string>",
											"description": "Filter by the incident type.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
										},
										{
											"key": "incidentMessage",
											"value": "<string>",
											"description": "Filter by the incident message. Exact match."
										},
										{
											"key": "incidentMessageLike",
											"value": "<string>",
											"description": "Filter by the incident message that the parameter is a substring of."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids. A process instance must have one of the given tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "false",
											"description": "Only include process instances which belong to no tenant."
										},
										{
											"key": "processDefinitionWithoutTenantId",
											"value": "false",
											"description": "Only include process instances which process definition has no tenant id."
										},
										{
											"key": "activityIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of activity ids.\nA process instance must currently wait in a leaf activity with one of the given activity ids."
										},
										{
											"key": "rootProcessInstances",
											"value": "false",
											"description": "Restrict the query to all process instances that are top level process instances."
										},
										{
											"key": "leafProcessInstances",
											"value": "false",
											"description": "Restrict the query to all process instances that are leaf instances. (i.e. don't have any sub instances)."
										},
										{
											"key": "variables",
											"value": "<string>",
											"description": "Only include process instances that have variables with certain values.\nVariable filtering expressions are comma-separated and are structured as follows:\n\nA valid parameter value has the form `key_operator_value`. `key` is the variable name,\n`operator` is the comparison operator to be used and `value` the variable value.\n\n**Note**: Values are always treated as String objects on server side.\n\nValid `operator` values are:\n`eq` - equal to;\n`neq` - not equal to;\n`gt` - greater than;\n`gteq` - greater than or equal to;\n`lt` - lower than;\n`lteq` - lower than or equal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
										},
										{
											"key": "variableNamesIgnoreCase",
											"value": "false",
											"description": "Match all variable names in this query case-insensitively.\nIf set to true variableName and variablename are treated as equal."
										},
										{
											"key": "variableValuesIgnoreCase",
											"value": "false",
											"description": "Match all variable values in this query case-insensitively.\nIf set to true variableValue and variablevalue are treated as equal."
										}
									]
								},
								"description": "Queries for the number of process instances that fulfill given parameters."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-instance/count?processInstanceIds=<string>&businessKey=<string>&businessKeyLike=<string>&caseInstanceId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionKeyIn=<string>&processDefinitionKeyNotIn=<string>&deploymentId=<string>&superProcessInstance=<string>&subProcessInstance=<string>&superCaseInstance=<string>&subCaseInstance=<string>&active=false&suspended=false&withIncident=false&incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&tenantIdIn=<string>&withoutTenantId=false&processDefinitionWithoutTenantId=false&activityIdIn=<string>&rootProcessInstances=false&leafProcessInstances=false&variables=<string>&variableNamesIgnoreCase=false&variableValuesIgnoreCase=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												"count"
											],
											"query": [
												{
													"key": "processInstanceIds",
													"value": "<string>",
													"description": "Filter by a comma-separated list of process instance ids."
												},
												{
													"key": "businessKey",
													"value": "<string>",
													"description": "Filter by process instance business key."
												},
												{
													"key": "businessKeyLike",
													"value": "<string>",
													"description": "Filter by process instance business key that the parameter is a substring of."
												},
												{
													"key": "caseInstanceId",
													"value": "<string>",
													"description": "Filter by case instance id."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by the deployment the id belongs to."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Filter by the key of the process definition the instances run on."
												},
												{
													"key": "processDefinitionKeyIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of process definition keys.\nA process instance must have one of the given process definition keys."
												},
												{
													"key": "processDefinitionKeyNotIn",
													"value": "<string>",
													"description": "Exclude instances by a comma-separated list of process definition keys.\nA process instance must not have one of the given process definition keys."
												},
												{
													"key": "deploymentId",
													"value": "<string>",
													"description": "Filter by the deployment the id belongs to."
												},
												{
													"key": "superProcessInstance",
													"value": "<string>",
													"description": "Restrict query to all process instances that are sub process instances of the given process instance.\nTakes a process instance id."
												},
												{
													"key": "subProcessInstance",
													"value": "<string>",
													"description": "Restrict query to all process instances that have the given process instance as a sub process instance.\nTakes a process instance id."
												},
												{
													"key": "superCaseInstance",
													"value": "<string>",
													"description": "Restrict query to all process instances that are sub process instances of the given case instance.\nTakes a case instance id."
												},
												{
													"key": "subCaseInstance",
													"value": "<string>",
													"description": "Restrict query to all process instances that have the given case instance as a sub case instance.\nTakes a case instance id."
												},
												{
													"key": "active",
													"value": "false",
													"description": "Only include active process instances. Value may only be true,\nas false is the default behavior."
												},
												{
													"key": "suspended",
													"value": "false",
													"description": "Only include suspended process instances. Value may only be true,\nas false is the default behavior."
												},
												{
													"key": "withIncident",
													"value": "false",
													"description": "Filter by presence of incidents. Selects only process instances that have an incident."
												},
												{
													"key": "incidentId",
													"value": "<string>",
													"description": "Filter by the incident id."
												},
												{
													"key": "incidentType",
													"value": "<string>",
													"description": "Filter by the incident type.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
												},
												{
													"key": "incidentMessage",
													"value": "<string>",
													"description": "Filter by the incident message. Exact match."
												},
												{
													"key": "incidentMessageLike",
													"value": "<string>",
													"description": "Filter by the incident message that the parameter is a substring of."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids. A process instance must have one of the given tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "false",
													"description": "Only include process instances which belong to no tenant."
												},
												{
													"key": "processDefinitionWithoutTenantId",
													"value": "false",
													"description": "Only include process instances which process definition has no tenant id."
												},
												{
													"key": "activityIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of activity ids.\nA process instance must currently wait in a leaf activity with one of the given activity ids."
												},
												{
													"key": "rootProcessInstances",
													"value": "false",
													"description": "Restrict the query to all process instances that are top level process instances."
												},
												{
													"key": "leafProcessInstances",
													"value": "false",
													"description": "Restrict the query to all process instances that are leaf instances. (i.e. don't have any sub instances)."
												},
												{
													"key": "variables",
													"value": "<string>",
													"description": "Only include process instances that have variables with certain values.\nVariable filtering expressions are comma-separated and are structured as follows:\n\nA valid parameter value has the form `key_operator_value`. `key` is the variable name,\n`operator` is the comparison operator to be used and `value` the variable value.\n\n**Note**: Values are always treated as String objects on server side.\n\nValid `operator` values are:\n`eq` - equal to;\n`neq` - not equal to;\n`gt` - greater than;\n`gteq` - greater than or equal to;\n`lt` - lower than;\n`lteq` - lower than or equal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
												},
												{
													"key": "variableNamesIgnoreCase",
													"value": "false",
													"description": "Match all variable names in this query case-insensitively.\nIf set to true variableName and variablename are treated as equal."
												},
												{
													"key": "variableValuesIgnoreCase",
													"value": "false",
													"description": "Match all variable values in this query case-insensitively.\nIf set to true variableValue and variablevalue are treated as equal."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Bad Request\nReturned if some of the query parameters are invalid, for example an invalid operator for variable comparison is used.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-instance/count?processInstanceIds=<string>&businessKey=<string>&businessKeyLike=<string>&caseInstanceId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionKeyIn=<string>&processDefinitionKeyNotIn=<string>&deploymentId=<string>&superProcessInstance=<string>&subProcessInstance=<string>&superCaseInstance=<string>&subCaseInstance=<string>&active=false&suspended=false&withIncident=false&incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&tenantIdIn=<string>&withoutTenantId=false&processDefinitionWithoutTenantId=false&activityIdIn=<string>&rootProcessInstances=false&leafProcessInstances=false&variables=<string>&variableNamesIgnoreCase=false&variableValuesIgnoreCase=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												"count"
											],
											"query": [
												{
													"key": "processInstanceIds",
													"value": "<string>",
													"description": "Filter by a comma-separated list of process instance ids."
												},
												{
													"key": "businessKey",
													"value": "<string>",
													"description": "Filter by process instance business key."
												},
												{
													"key": "businessKeyLike",
													"value": "<string>",
													"description": "Filter by process instance business key that the parameter is a substring of."
												},
												{
													"key": "caseInstanceId",
													"value": "<string>",
													"description": "Filter by case instance id."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Filter by the deployment the id belongs to."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Filter by the key of the process definition the instances run on."
												},
												{
													"key": "processDefinitionKeyIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of process definition keys.\nA process instance must have one of the given process definition keys."
												},
												{
													"key": "processDefinitionKeyNotIn",
													"value": "<string>",
													"description": "Exclude instances by a comma-separated list of process definition keys.\nA process instance must not have one of the given process definition keys."
												},
												{
													"key": "deploymentId",
													"value": "<string>",
													"description": "Filter by the deployment the id belongs to."
												},
												{
													"key": "superProcessInstance",
													"value": "<string>",
													"description": "Restrict query to all process instances that are sub process instances of the given process instance.\nTakes a process instance id."
												},
												{
													"key": "subProcessInstance",
													"value": "<string>",
													"description": "Restrict query to all process instances that have the given process instance as a sub process instance.\nTakes a process instance id."
												},
												{
													"key": "superCaseInstance",
													"value": "<string>",
													"description": "Restrict query to all process instances that are sub process instances of the given case instance.\nTakes a case instance id."
												},
												{
													"key": "subCaseInstance",
													"value": "<string>",
													"description": "Restrict query to all process instances that have the given case instance as a sub case instance.\nTakes a case instance id."
												},
												{
													"key": "active",
													"value": "false",
													"description": "Only include active process instances. Value may only be true,\nas false is the default behavior."
												},
												{
													"key": "suspended",
													"value": "false",
													"description": "Only include suspended process instances. Value may only be true,\nas false is the default behavior."
												},
												{
													"key": "withIncident",
													"value": "false",
													"description": "Filter by presence of incidents. Selects only process instances that have an incident."
												},
												{
													"key": "incidentId",
													"value": "<string>",
													"description": "Filter by the incident id."
												},
												{
													"key": "incidentType",
													"value": "<string>",
													"description": "Filter by the incident type.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
												},
												{
													"key": "incidentMessage",
													"value": "<string>",
													"description": "Filter by the incident message. Exact match."
												},
												{
													"key": "incidentMessageLike",
													"value": "<string>",
													"description": "Filter by the incident message that the parameter is a substring of."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of tenant ids. A process instance must have one of the given tenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "false",
													"description": "Only include process instances which belong to no tenant."
												},
												{
													"key": "processDefinitionWithoutTenantId",
													"value": "false",
													"description": "Only include process instances which process definition has no tenant id."
												},
												{
													"key": "activityIdIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of activity ids.\nA process instance must currently wait in a leaf activity with one of the given activity ids."
												},
												{
													"key": "rootProcessInstances",
													"value": "false",
													"description": "Restrict the query to all process instances that are top level process instances."
												},
												{
													"key": "leafProcessInstances",
													"value": "false",
													"description": "Restrict the query to all process instances that are leaf instances. (i.e. don't have any sub instances)."
												},
												{
													"key": "variables",
													"value": "<string>",
													"description": "Only include process instances that have variables with certain values.\nVariable filtering expressions are comma-separated and are structured as follows:\n\nA valid parameter value has the form `key_operator_value`. `key` is the variable name,\n`operator` is the comparison operator to be used and `value` the variable value.\n\n**Note**: Values are always treated as String objects on server side.\n\nValid `operator` values are:\n`eq` - equal to;\n`neq` - not equal to;\n`gt` - greater than;\n`gteq` - greater than or equal to;\n`lt` - lower than;\n`lteq` - lower than or equal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
												},
												{
													"key": "variableNamesIgnoreCase",
													"value": "false",
													"description": "Match all variable names in this query case-insensitively.\nIf set to true variableName and variablename are treated as equal."
												},
												{
													"key": "variableValuesIgnoreCase",
													"value": "false",
													"description": "Match all variable values in this query case-insensitively.\nIf set to true variableValue and variablevalue are treated as equal."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get List Count (POST)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deploymentId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionKeyNotIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"businessKey\": \"<string>\",\n  \"businessKeyLike\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"superProcessInstance\": \"<string>\",\n  \"subProcessInstance\": \"<string>\",\n  \"superCaseInstance\": \"<string>\",\n  \"subCaseInstance\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withIncident\": \"<boolean>\",\n  \"incidentId\": \"<string>\",\n  \"incidentType\": \"<string>\",\n  \"incidentMessage\": \"<string>\",\n  \"incidentMessageLike\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"processDefinitionWithoutTenantId\": \"<boolean>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"rootProcessInstances\": \"<boolean>\",\n  \"leafProcessInstances\": \"<boolean>\",\n  \"variables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gt\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"like\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"orQueries\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"businessKey\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"instanceId\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/process-instance/count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process-instance",
										"count"
									]
								},
								"description": "Queries for the number of process instances that fulfill the given parameters.\nThis method takes the same message body as the Get Instances (POST) method and\ntherefore it is slightly more powerful than the Get Instance Count method."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deploymentId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionKeyNotIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"businessKey\": \"<string>\",\n  \"businessKeyLike\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"superProcessInstance\": \"<string>\",\n  \"subProcessInstance\": \"<string>\",\n  \"superCaseInstance\": \"<string>\",\n  \"subCaseInstance\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withIncident\": \"<boolean>\",\n  \"incidentId\": \"<string>\",\n  \"incidentType\": \"<string>\",\n  \"incidentMessage\": \"<string>\",\n  \"incidentMessageLike\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"processDefinitionWithoutTenantId\": \"<boolean>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"rootProcessInstances\": \"<boolean>\",\n  \"leafProcessInstances\": \"<boolean>\",\n  \"variables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gt\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"like\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"orQueries\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"businessKey\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"instanceId\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-instance/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												"count"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Bad Request\nReturned if some of the query parameters are invalid, for example if an invalid operator for variable comparison is used.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deploymentId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionKeyNotIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"businessKey\": \"<string>\",\n  \"businessKeyLike\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"superProcessInstance\": \"<string>\",\n  \"subProcessInstance\": \"<string>\",\n  \"superCaseInstance\": \"<string>\",\n  \"subCaseInstance\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withIncident\": \"<boolean>\",\n  \"incidentId\": \"<string>\",\n  \"incidentType\": \"<string>\",\n  \"incidentMessage\": \"<string>\",\n  \"incidentMessageLike\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"processDefinitionWithoutTenantId\": \"<boolean>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"rootProcessInstances\": \"<boolean>\",\n  \"leafProcessInstances\": \"<boolean>\",\n  \"variables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gt\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"like\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"orQueries\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"businessKey\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"instanceId\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-instance/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												"count"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "delete",
					"item": [
						{
							"name": "Delete Async (POST)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"deleteReason\": \"<string>\",\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipSubprocesses\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"like\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/process-instance/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process-instance",
										"delete"
									]
								},
								"description": "Deletes multiple process instances asynchronously (batch)."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"deleteReason\": \"<string>\",\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipSubprocesses\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"like\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-instance/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												"delete"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"totalJobs\": \"<integer>\",\n  \"jobsCreated\": \"<integer>\",\n  \"batchJobsPerSeed\": \"<integer>\",\n  \"invocationsPerBatchJob\": \"<integer>\",\n  \"seedJobDefinitionId\": \"<string>\",\n  \"monitorJobDefinitionId\": \"<string>\",\n  \"batchJobDefinitionId\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"createUserId\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"executionStartTime\": \"<dateTime>\"\n}"
								},
								{
									"name": "Bad Request\nReturned if some of the query parameters are invalid, i.e., neither processInstanceIds, nor processInstanceQuery is present",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"deleteReason\": \"<string>\",\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipSubprocesses\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"like\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-instance/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												"delete"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "delete-historic-query-based",
					"item": [
						{
							"name": "Delete Async Historic Query Based (POST)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"deleteReason\": \"<string>\",\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipSubprocesses\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"like\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/process-instance/delete-historic-query-based",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process-instance",
										"delete-historic-query-based"
									]
								},
								"description": "Deletes a set of process instances asynchronously (batch) based on a historic process instance query."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"deleteReason\": \"<string>\",\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipSubprocesses\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"like\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-instance/delete-historic-query-based",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												"delete-historic-query-based"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"totalJobs\": \"<integer>\",\n  \"jobsCreated\": \"<integer>\",\n  \"batchJobsPerSeed\": \"<integer>\",\n  \"invocationsPerBatchJob\": \"<integer>\",\n  \"seedJobDefinitionId\": \"<string>\",\n  \"monitorJobDefinitionId\": \"<string>\",\n  \"batchJobDefinitionId\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"createUserId\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"executionStartTime\": \"<dateTime>\"\n}"
								},
								{
									"name": "Bad Request\nReturned if some of the query parameters are invalid, i.e., neither processInstanceIds, nor historicProcessInstanceQuery is present",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"deleteReason\": \"<string>\",\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipSubprocesses\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"like\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-instance/delete-historic-query-based",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												"delete-historic-query-based"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "job-retries",
					"item": [
						{
							"name": "Set Job Retries Async (POST)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"processInstances\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"notLike\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"open\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"notLike\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionVersion\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"jobIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"jobQuery\": {\n    \"jobId\": \"<string>\",\n    \"jobIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"jobDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"executionId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"withRetriesLeft\": \"<boolean>\",\n    \"executable\": \"<boolean>\",\n    \"timers\": \"<boolean>\",\n    \"messages\": \"<boolean>\",\n    \"dueDates\": [\n      {\n        \"operator\": \"gt\",\n        \"value\": \"<dateTime>\"\n      },\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      }\n    ],\n    \"createTimes\": [\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      },\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      }\n    ],\n    \"withException\": \"<boolean>\",\n    \"exceptionMessage\": \"<string>\",\n    \"failedActivityId\": \"<string>\",\n    \"noRetriesLeft\": \"<boolean>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"priorityLowerThanOrEquals\": \"<long>\",\n    \"priorityHigherThanOrEquals\": \"<long>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"includeJobsWithoutTenantId\": \"<boolean>\",\n    \"sorting\": [\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"jobPriority\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"dueDate\": \"<dateTime>\",\n  \"retries\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/process-instance/job-retries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process-instance",
										"job-retries"
									]
								},
								"description": "Create a batch to set retries of jobs associated with given processes asynchronously."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processInstances\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"notLike\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"open\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"notLike\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionVersion\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"jobIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"jobQuery\": {\n    \"jobId\": \"<string>\",\n    \"jobIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"jobDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"executionId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"withRetriesLeft\": \"<boolean>\",\n    \"executable\": \"<boolean>\",\n    \"timers\": \"<boolean>\",\n    \"messages\": \"<boolean>\",\n    \"dueDates\": [\n      {\n        \"operator\": \"gt\",\n        \"value\": \"<dateTime>\"\n      },\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      }\n    ],\n    \"createTimes\": [\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      },\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      }\n    ],\n    \"withException\": \"<boolean>\",\n    \"exceptionMessage\": \"<string>\",\n    \"failedActivityId\": \"<string>\",\n    \"noRetriesLeft\": \"<boolean>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"priorityLowerThanOrEquals\": \"<long>\",\n    \"priorityHigherThanOrEquals\": \"<long>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"includeJobsWithoutTenantId\": \"<boolean>\",\n    \"sorting\": [\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"jobPriority\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"dueDate\": \"<dateTime>\",\n  \"retries\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-instance/job-retries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												"job-retries"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"totalJobs\": \"<integer>\",\n  \"jobsCreated\": \"<integer>\",\n  \"batchJobsPerSeed\": \"<integer>\",\n  \"invocationsPerBatchJob\": \"<integer>\",\n  \"seedJobDefinitionId\": \"<string>\",\n  \"monitorJobDefinitionId\": \"<string>\",\n  \"batchJobDefinitionId\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"createUserId\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"executionStartTime\": \"<dateTime>\"\n}"
								},
								{
									"name": "Bad Request\nReturned if some of the query parameters are invalid, for example if neither processInstanceIds, nor processInstanceQuery is present.\nOr if the retry count is not specified.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processInstances\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"notLike\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"open\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"notLike\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionVersion\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"jobIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"jobQuery\": {\n    \"jobId\": \"<string>\",\n    \"jobIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"jobDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"executionId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"withRetriesLeft\": \"<boolean>\",\n    \"executable\": \"<boolean>\",\n    \"timers\": \"<boolean>\",\n    \"messages\": \"<boolean>\",\n    \"dueDates\": [\n      {\n        \"operator\": \"gt\",\n        \"value\": \"<dateTime>\"\n      },\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      }\n    ],\n    \"createTimes\": [\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      },\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      }\n    ],\n    \"withException\": \"<boolean>\",\n    \"exceptionMessage\": \"<string>\",\n    \"failedActivityId\": \"<string>\",\n    \"noRetriesLeft\": \"<boolean>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"priorityLowerThanOrEquals\": \"<long>\",\n    \"priorityHigherThanOrEquals\": \"<long>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"includeJobsWithoutTenantId\": \"<boolean>\",\n    \"sorting\": [\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"jobPriority\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"dueDate\": \"<dateTime>\",\n  \"retries\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-instance/job-retries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												"job-retries"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "job-retries-historic-query-based",
					"item": [
						{
							"name": "Set Job Retries Async Historic Query Based (POST)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"processInstances\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"notLike\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"open\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"notLike\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionVersion\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"jobIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"jobQuery\": {\n    \"jobId\": \"<string>\",\n    \"jobIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"jobDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"executionId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"withRetriesLeft\": \"<boolean>\",\n    \"executable\": \"<boolean>\",\n    \"timers\": \"<boolean>\",\n    \"messages\": \"<boolean>\",\n    \"dueDates\": [\n      {\n        \"operator\": \"gt\",\n        \"value\": \"<dateTime>\"\n      },\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      }\n    ],\n    \"createTimes\": [\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      },\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      }\n    ],\n    \"withException\": \"<boolean>\",\n    \"exceptionMessage\": \"<string>\",\n    \"failedActivityId\": \"<string>\",\n    \"noRetriesLeft\": \"<boolean>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"priorityLowerThanOrEquals\": \"<long>\",\n    \"priorityHigherThanOrEquals\": \"<long>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"includeJobsWithoutTenantId\": \"<boolean>\",\n    \"sorting\": [\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"jobPriority\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"dueDate\": \"<dateTime>\",\n  \"retries\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/process-instance/job-retries-historic-query-based",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process-instance",
										"job-retries-historic-query-based"
									]
								},
								"description": "Create a batch to set retries of jobs asynchronously based on a historic process instance query."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processInstances\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"notLike\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"open\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"notLike\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionVersion\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"jobIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"jobQuery\": {\n    \"jobId\": \"<string>\",\n    \"jobIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"jobDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"executionId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"withRetriesLeft\": \"<boolean>\",\n    \"executable\": \"<boolean>\",\n    \"timers\": \"<boolean>\",\n    \"messages\": \"<boolean>\",\n    \"dueDates\": [\n      {\n        \"operator\": \"gt\",\n        \"value\": \"<dateTime>\"\n      },\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      }\n    ],\n    \"createTimes\": [\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      },\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      }\n    ],\n    \"withException\": \"<boolean>\",\n    \"exceptionMessage\": \"<string>\",\n    \"failedActivityId\": \"<string>\",\n    \"noRetriesLeft\": \"<boolean>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"priorityLowerThanOrEquals\": \"<long>\",\n    \"priorityHigherThanOrEquals\": \"<long>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"includeJobsWithoutTenantId\": \"<boolean>\",\n    \"sorting\": [\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"jobPriority\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"dueDate\": \"<dateTime>\",\n  \"retries\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-instance/job-retries-historic-query-based",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												"job-retries-historic-query-based"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"totalJobs\": \"<integer>\",\n  \"jobsCreated\": \"<integer>\",\n  \"batchJobsPerSeed\": \"<integer>\",\n  \"invocationsPerBatchJob\": \"<integer>\",\n  \"seedJobDefinitionId\": \"<string>\",\n  \"monitorJobDefinitionId\": \"<string>\",\n  \"batchJobDefinitionId\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"createUserId\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"executionStartTime\": \"<dateTime>\"\n}"
								},
								{
									"name": "Bad Request\nReturned if some of the query parameters are invalid, for example if neither processInstanceIds, nor historicProcessInstanceQuery is present.\nOr if the retry count is not specified.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processInstances\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"notLike\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"open\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"notLike\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionVersion\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"jobIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"jobQuery\": {\n    \"jobId\": \"<string>\",\n    \"jobIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"jobDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"executionId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"activityId\": \"<string>\",\n    \"withRetriesLeft\": \"<boolean>\",\n    \"executable\": \"<boolean>\",\n    \"timers\": \"<boolean>\",\n    \"messages\": \"<boolean>\",\n    \"dueDates\": [\n      {\n        \"operator\": \"gt\",\n        \"value\": \"<dateTime>\"\n      },\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      }\n    ],\n    \"createTimes\": [\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      },\n      {\n        \"operator\": \"lt\",\n        \"value\": \"<dateTime>\"\n      }\n    ],\n    \"withException\": \"<boolean>\",\n    \"exceptionMessage\": \"<string>\",\n    \"failedActivityId\": \"<string>\",\n    \"noRetriesLeft\": \"<boolean>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"priorityLowerThanOrEquals\": \"<long>\",\n    \"priorityHigherThanOrEquals\": \"<long>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"includeJobsWithoutTenantId\": \"<boolean>\",\n    \"sorting\": [\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"jobPriority\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"dueDate\": \"<dateTime>\",\n  \"retries\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-instance/job-retries-historic-query-based",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												"job-retries-historic-query-based"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "message-async",
					"item": [
						{
							"name": "Correlate Message Async (POST)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"messageName\": \"<string>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"eq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"notLike\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"endTime\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"variables\": {\n    \"fugiatc7\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"tempor6_8\": \"ea tempor elit pariatur\",\n        \"doa6\": true\n      }\n    },\n    \"in03\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"doloreb3e\": \"esse non\"\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/process-instance/message-async",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process-instance",
										"message-async"
									]
								},
								"description": "Correlates a message asynchronously to executions that are waiting for this message. \nMessages will not be correlated to process definition-level start message events to start process instances."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"messageName\": \"<string>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"eq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"notLike\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"endTime\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"variables\": {\n    \"fugiatc7\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"tempor6_8\": \"ea tempor elit pariatur\",\n        \"doa6\": true\n      }\n    },\n    \"in03\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"doloreb3e\": \"esse non\"\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-instance/message-async",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												"message-async"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"totalJobs\": \"<integer>\",\n  \"jobsCreated\": \"<integer>\",\n  \"batchJobsPerSeed\": \"<integer>\",\n  \"invocationsPerBatchJob\": \"<integer>\",\n  \"seedJobDefinitionId\": \"<string>\",\n  \"monitorJobDefinitionId\": \"<string>\",\n  \"batchJobDefinitionId\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"createUserId\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"executionStartTime\": \"<dateTime>\"\n}"
								},
								{
									"name": "Bad Request\n* If none of `processInstanceIds`, `processInstanceQuery`, and `historicProcessInstanceQuery` is given\n* If no process instance ids where found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"messageName\": \"<string>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"eq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"notLike\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"endTime\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"variables\": {\n    \"fugiatc7\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"tempor6_8\": \"ea tempor elit pariatur\",\n        \"doa6\": true\n      }\n    },\n    \"in03\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"doloreb3e\": \"esse non\"\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-instance/message-async",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												"message-async"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "Returned if the user is not allowed to create the batch.\n\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the\nerror response format.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"messageName\": \"<string>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"eq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"notLike\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"endTime\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"variables\": {\n    \"fugiatc7\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"tempor6_8\": \"ea tempor elit pariatur\",\n        \"doa6\": true\n      }\n    },\n    \"in03\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"doloreb3e\": \"esse non\"\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-instance/message-async",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												"message-async"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"userId\": \"<string>\",\n  \"missingAuthorizations\": [\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    },\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "suspended",
					"item": [
						{
							"name": "Activate/Suspend In Group",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionTenantId\": \"<string>\",\n  \"processDefinitionWithoutTenantId\": \"<boolean>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"neq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"neq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"endTime\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"suspended\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/process-instance/suspended",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process-instance",
										"suspended"
									]
								},
								"description": "Activates or suspends process instances by providing certain criteria:\n\n# Activate/Suspend Process Instance By Process Definition Id\n* `suspend`\n* `processDefinitionId`\n\n# Activate/Suspend Process Instance By Process Definition Key\n\n* `suspend`\n* `processDefinitionKey`\n* `processDefinitionTenantId`\n* `processDefinitionWithoutTenantId`\n\n# Activate/Suspend Process Instance In Group\n* `suspend`\n* `processInstanceIds`\n* `processInstanceQuery`\n* `historicProcessInstanceQuery`"
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionTenantId\": \"<string>\",\n  \"processDefinitionWithoutTenantId\": \"<boolean>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"neq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"neq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"endTime\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"suspended\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-instance/suspended",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												"suspended"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request\nReturned if some of the request parameters are invalid,\nfor example if the provided processDefinitionId or processDefinitionKey parameter is null.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionTenantId\": \"<string>\",\n  \"processDefinitionWithoutTenantId\": \"<boolean>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"businessKey\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"resolved\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"neq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"neq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"desc\"\n      },\n      {\n        \"sortBy\": \"endTime\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"suspended\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-instance/suspended",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												"suspended"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "suspended-async",
					"item": [
						{
							"name": "Activate/Suspend In Batch",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"like\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"definitionId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"open\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"startTime\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"duration\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"suspended\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/process-instance/suspended-async",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process-instance",
										"suspended-async"
									]
								},
								"description": "Activates or suspends process instances asynchronously with a list of process instance ids,\na process instance query, and/or a historical process instance query."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"like\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"definitionId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"open\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"startTime\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"duration\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"suspended\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-instance/suspended-async",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												"suspended-async"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"totalJobs\": \"<integer>\",\n  \"jobsCreated\": \"<integer>\",\n  \"batchJobsPerSeed\": \"<integer>\",\n  \"invocationsPerBatchJob\": \"<integer>\",\n  \"seedJobDefinitionId\": \"<string>\",\n  \"monitorJobDefinitionId\": \"<string>\",\n  \"batchJobDefinitionId\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"createUserId\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"executionStartTime\": \"<dateTime>\"\n}"
								},
								{
									"name": "Bad Request\nReturned if some of the request parameters are invalid,\nfor example if the provided processDefinitionId or processDefinitionKey parameter is null.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gteq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"like\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"tenantId\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"definitionId\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"open\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"startTime\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"duration\",\n        \"sortOrder\": \"asc\"\n      }\n    ]\n  },\n  \"suspended\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-instance/suspended-async",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												"suspended-async"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "variables-async",
					"item": [
						{
							"name": "Set Variables Async (POST)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"open\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"like\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"neq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionId\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"startTime\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"variables\": {\n    \"in894\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"ut_4\": 15822020\n      }\n    },\n    \"aliqua1\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"voluptateb\": -79301543\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/process-instance/variables-async",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process-instance",
										"variables-async"
									]
								},
								"description": "Update or create runtime process variables in the root scope of process instances."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"open\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"like\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"neq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionId\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"startTime\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"variables\": {\n    \"in894\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"ut_4\": 15822020\n      }\n    },\n    \"aliqua1\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"voluptateb\": -79301543\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-instance/variables-async",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												"variables-async"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"totalJobs\": \"<integer>\",\n  \"jobsCreated\": \"<integer>\",\n  \"batchJobsPerSeed\": \"<integer>\",\n  \"invocationsPerBatchJob\": \"<integer>\",\n  \"seedJobDefinitionId\": \"<string>\",\n  \"monitorJobDefinitionId\": \"<string>\",\n  \"batchJobDefinitionId\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"createUserId\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"executionStartTime\": \"<dateTime>\"\n}"
								},
								{
									"name": "Bad Request\n* The variable value or type is invalid, for example if the value could not be parsed to an Integer value or\nthe passed variable type is not supported\n* If none of `processInstanceIds`, `processInstanceQuery` and `historicProcessInstanceQuery`",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"open\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"like\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"neq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionId\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"startTime\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"variables\": {\n    \"in894\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"ut_4\": 15822020\n      }\n    },\n    \"aliqua1\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"voluptateb\": -79301543\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-instance/variables-async",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												"variables-async"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "Returned if the user is not allowed to create the batch.\n\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the\nerror response format.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceQuery\": {\n    \"deploymentId\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"businessKey\": \"<string>\",\n    \"businessKeyLike\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"superProcessInstance\": \"<string>\",\n    \"subProcessInstance\": \"<string>\",\n    \"superCaseInstance\": \"<string>\",\n    \"subCaseInstance\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withIncident\": \"<boolean>\",\n    \"incidentId\": \"<string>\",\n    \"incidentType\": \"<string>\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"processDefinitionWithoutTenantId\": \"<boolean>\",\n    \"activityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"rootProcessInstances\": \"<boolean>\",\n    \"leafProcessInstances\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"lt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"gt\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionKey\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"instanceId\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"historicProcessInstanceQuery\": {\n    \"processInstanceId\": \"<string>\",\n    \"processInstanceIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionId\": \"<string>\",\n    \"processDefinitionKey\": \"<string>\",\n    \"processDefinitionKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processDefinitionName\": \"<string>\",\n    \"processDefinitionNameLike\": \"<string>\",\n    \"processDefinitionKeyNotIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKey\": \"<string>\",\n    \"processInstanceBusinessKeyIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"processInstanceBusinessKeyLike\": \"<string>\",\n    \"rootProcessInstances\": \"<boolean>\",\n    \"finished\": \"<boolean>\",\n    \"unfinished\": \"<boolean>\",\n    \"withIncidents\": \"<boolean>\",\n    \"withRootIncidents\": \"<boolean>\",\n    \"incidentType\": \"<string>\",\n    \"incidentStatus\": \"open\",\n    \"incidentMessage\": \"<string>\",\n    \"incidentMessageLike\": \"<string>\",\n    \"startedBefore\": \"<dateTime>\",\n    \"startedAfter\": \"<dateTime>\",\n    \"finishedBefore\": \"<dateTime>\",\n    \"finishedAfter\": \"<dateTime>\",\n    \"executedActivityAfter\": \"<dateTime>\",\n    \"executedActivityBefore\": \"<dateTime>\",\n    \"executedJobAfter\": \"<dateTime>\",\n    \"executedJobBefore\": \"<dateTime>\",\n    \"startedBy\": \"<string>\",\n    \"superProcessInstanceId\": \"<string>\",\n    \"subProcessInstanceId\": \"<string>\",\n    \"superCaseInstanceId\": \"<string>\",\n    \"subCaseInstanceId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"tenantIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"withoutTenantId\": \"<boolean>\",\n    \"executedActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"activeActivityIdIn\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"active\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"completed\": \"<boolean>\",\n    \"externallyTerminated\": \"<boolean>\",\n    \"internallyTerminated\": \"<boolean>\",\n    \"variables\": [\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"like\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"operator\": \"neq\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        }\n      }\n    ],\n    \"variableNamesIgnoreCase\": \"<boolean>\",\n    \"variableValuesIgnoreCase\": \"<boolean>\",\n    \"orQueries\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/HistoricProcessInstanceQueryDto detected>\"\n      }\n    ],\n    \"sorting\": [\n      {\n        \"sortBy\": \"definitionId\",\n        \"sortOrder\": \"asc\"\n      },\n      {\n        \"sortBy\": \"startTime\",\n        \"sortOrder\": \"desc\"\n      }\n    ]\n  },\n  \"variables\": {\n    \"in894\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"ut_4\": 15822020\n      }\n    },\n    \"aliqua1\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"voluptateb\": -79301543\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-instance/variables-async",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												"variables-async"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"userId\": \"<string>\",\n  \"missingAuthorizations\": [\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    },\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "activity-instances",
							"item": [
								{
									"name": "Get Activity Instance",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-instance/:id/activity-instances",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												":id",
												"activity-instances"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the process instance for which the activity instance should be retrieved."
												}
											]
										},
										"description": "Retrieves an Activity Instance (Tree) for a given process instance by id."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-instance/:id/activity-instances",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-instance",
														":id",
														"activity-instances"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"parentActivityInstanceId\": \"<string>\",\n  \"activityId\": \"<string>\",\n  \"activityName\": \"<string>\",\n  \"name\": \"<string>\",\n  \"activityType\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"childActivityInstances\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/ActivityInstanceDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/ActivityInstanceDto detected>\"\n    }\n  ],\n  \"childTransitionInstances\": [\n    {\n      \"id\": \"<string>\",\n      \"parentActivityInstanceId\": \"<string>\",\n      \"activityId\": \"<string>\",\n      \"activityName\": \"<string>\",\n      \"activityType\": \"<string>\",\n      \"processInstanceId\": \"<string>\",\n      \"processDefinitionId\": \"<string>\",\n      \"executionId\": \"<string>\",\n      \"incidentIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"incidents\": [\n        {\n          \"id\": \"<string>\",\n          \"activityId\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"activityId\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"parentActivityInstanceId\": \"<string>\",\n      \"activityId\": \"<string>\",\n      \"activityName\": \"<string>\",\n      \"activityType\": \"<string>\",\n      \"processInstanceId\": \"<string>\",\n      \"processDefinitionId\": \"<string>\",\n      \"executionId\": \"<string>\",\n      \"incidentIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"incidents\": [\n        {\n          \"id\": \"<string>\",\n          \"activityId\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"activityId\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"executionIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"incidentIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"incidents\": [\n    {\n      \"id\": \"<string>\",\n      \"activityId\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"activityId\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Process instance with given id does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-instance/:id/activity-instances",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-instance",
														":id",
														"activity-instances"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "comment",
							"item": [
								{
									"name": "Get Process Instance Comments",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-instance/:id/comment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												":id",
												"comment"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the process instance to retrieve the comments for."
												}
											]
										},
										"description": "Gets the comments for a process instance by id."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-instance/:id/comment",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-instance",
														":id",
														"comment"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"time\": \"<dateTime>\",\n    \"message\": \"<string>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"links\": [\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      },\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      }\n    ]\n  },\n  {\n    \"id\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"time\": \"<dateTime>\",\n    \"message\": \"<string>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"links\": [\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      },\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      }\n    ]\n  }\n]"
										},
										{
											"name": "No process instance exists for the given process instance id. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-instance/:id/comment",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-instance",
														":id",
														"comment"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "modification",
							"item": [
								{
									"name": "Modify Process Instance Execution State",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"instructions\": [\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_f3_\": -51012828.31889864,\n          \"sit_a\": -54596021\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_ec\": -23793638.749573678\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"annotation\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-instance/:id/modification",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												":id",
												"modification"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the process instance to modify."
												}
											]
										},
										"description": "Submits a list of modification instructions to change a process instance's execution state.\nA modification instruction is one of the following:\n\n* Starting execution before an activity\n* Starting execution after an activity on its single outgoing sequence flow\n* Starting execution on a specific sequence flow\n* Canceling an activity instance, transition instance, or all instances (activity or transition) for an activity\n\nInstructions are executed immediately and in the order they are provided in this request's body.\nVariables can be provided with every starting instruction.\n\nThe exact semantics of modification can be read about in the [User guide](https://docs.camunda.org/manual/develop/user-guide/process-engine/process-instance-modification/)."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"instructions\": [\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_f3_\": -51012828.31889864,\n          \"sit_a\": -54596021\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_ec\": -23793638.749573678\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"annotation\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-instance/:id/modification",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-instance",
														":id",
														"modification"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "At least one modification instruction misses required parameters.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"instructions\": [\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_f3_\": -51012828.31889864,\n          \"sit_a\": -54596021\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_ec\": -23793638.749573678\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"annotation\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-instance/:id/modification",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-instance",
														":id",
														"modification"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "The modification cannot be performed, for example because it starts a failing activity.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"instructions\": [\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_f3_\": -51012828.31889864,\n          \"sit_a\": -54596021\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_ec\": -23793638.749573678\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"annotation\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-instance/:id/modification",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-instance",
														":id",
														"modification"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "modification-async",
							"item": [
								{
									"name": "Modify Process Instance Execution State Async",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"instructions\": [\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_f3_\": -51012828.31889864,\n          \"sit_a\": -54596021\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_ec\": -23793638.749573678\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"annotation\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-instance/:id/modification-async",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												":id",
												"modification-async"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the process instance to modify."
												}
											]
										},
										"description": "Submits a list of modification instructions to change a process instance's execution state async.\nA modification instruction is one of the following:\n\n* Starting execution before an activity\n* Starting execution after an activity on its single outgoing sequence flow\n* Starting execution on a specific sequence flow\n* Cancelling an activity instance, transition instance, or all instances (activity or transition) for an activity\n\nInstructions are executed asynchronous and in the order they are provided in this request's body.\nVariables can be provided with every starting instruction.\n\nThe exact semantics of modification can be read about in the\n[User guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/process-instance-modification/)."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"instructions\": [\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_f3_\": -51012828.31889864,\n          \"sit_a\": -54596021\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_ec\": -23793638.749573678\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"annotation\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-instance/:id/modification-async",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-instance",
														":id",
														"modification-async"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"totalJobs\": \"<integer>\",\n  \"jobsCreated\": \"<integer>\",\n  \"batchJobsPerSeed\": \"<integer>\",\n  \"invocationsPerBatchJob\": \"<integer>\",\n  \"seedJobDefinitionId\": \"<string>\",\n  \"monitorJobDefinitionId\": \"<string>\",\n  \"batchJobDefinitionId\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"createUserId\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"executionStartTime\": \"<dateTime>\"\n}"
										},
										{
											"name": "Bad Request\nAt least one modification instruction misses required parameters.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"instructions\": [\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_f3_\": -51012828.31889864,\n          \"sit_a\": -54596021\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_ec\": -23793638.749573678\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"annotation\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-instance/:id/modification-async",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-instance",
														":id",
														"modification-async"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Forbidden\nIf the user is not allowed to execute batches. See the Introduction for the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"instructions\": [\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_f3_\": -51012828.31889864,\n          \"sit_a\": -54596021\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_ec\": -23793638.749573678\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"annotation\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-instance/:id/modification-async",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-instance",
														":id",
														"modification-async"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"userId\": \"<string>\",\n  \"missingAuthorizations\": [\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    },\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "The modification cannot be performed, for example because it starts a failing activity.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"skipCustomListeners\": \"<boolean>\",\n  \"skipIoMappings\": \"<boolean>\",\n  \"instructions\": [\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_f3_\": -51012828.31889864,\n          \"sit_a\": -54596021\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    },\n    {\n      \"type\": \"startBeforeActivity\",\n      \"variables\": {\n        \"local\": \"<boolean>\",\n        \"value\": {\n          \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n        },\n        \"type\": \"<string>\",\n        \"valueInfo\": {\n          \"consectetur_ec\": -23793638.749573678\n        }\n      },\n      \"activityId\": \"<string>\",\n      \"transitionId\": \"<string>\",\n      \"activityInstanceId\": \"<string>\",\n      \"transitionInstanceId\": \"<string>\",\n      \"ancestorActivityInstanceId\": \"<string>\",\n      \"cancelCurrentActiveActivityInstances\": \"<boolean>\"\n    }\n  ],\n  \"annotation\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-instance/:id/modification-async",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-instance",
														":id",
														"modification-async"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "suspended",
							"item": [
								{
									"name": "Activate/Suspend Process Instance By Id",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"suspended\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-instance/:id/suspended",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												":id",
												"suspended"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the process instance to activate or suspend."
												}
											]
										},
										"description": "Activates or suspends a given process instance by id."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"suspended\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-instance/:id/suspended",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-instance",
														":id",
														"suspended"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "variables",
							"item": [
								{
									"name": "{varName}",
									"item": [
										{
											"name": "data",
											"item": [
												{
													"name": "Get Process Variable (Binary)",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/octet-stream"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-instance/:id/variables/:varName/data",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-instance",
																":id",
																"variables",
																":varName",
																"data"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The id of the process instance to retrieve the variable for."
																},
																{
																	"key": "varName",
																	"value": "<string>",
																	"description": "(Required) The name of the variable to retrieve."
																}
															]
														},
														"description": "Retrieves the content of a Process Variable by the Process Instance id and the Process Variable name.\nApplicable for byte array or file Process Variables."
													},
													"response": [
														{
															"name": "Request successful.\n        For binary variables or files without any MIME type information, a byte stream is returned.\n        File variables with MIME type information are returned as the saved type.\n        Additionally, for file variables the Content-",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/octet-stream"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/process-instance/:id/variables/:varName/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"process-instance",
																		":id",
																		"variables",
																		":varName",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "varName"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": "<string>"
														},
														{
															"name": "Bad Request\nA Process Variable with the given id exists but does not serialize as binary data.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/process-instance/:id/variables/:varName/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"process-instance",
																		":id",
																		"variables",
																		":varName",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "varName"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
														},
														{
															"name": "Not Found\nA Process Variable with the given id does not exist. ",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/process-instance/:id/variables/:varName/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"process-instance",
																		":id",
																		"variables",
																		":varName",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "varName"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
														}
													]
												},
												{
													"name": "Update Process Variable (Binary)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "data",
																	"value": "<string>",
																	"description": "The binary data to be set.\nFor File variables, this multipart can contain the filename, binary value and MIME type of the file variable to be set\nOnly the filename is mandatory.",
																	"type": "text"
																},
																{
																	"key": "valueType",
																	"value": "Bytes",
																	"description": "The name of the variable type. Either Bytes for a byte array variable or File for a file variable. (This can only be one of Bytes,File)",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/process-instance/:id/variables/:varName/data",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-instance",
																":id",
																"variables",
																":varName",
																"data"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The id of the process instance to retrieve the variable for."
																},
																{
																	"key": "varName",
																	"value": "<string>",
																	"description": "(Required) The name of the variable to retrieve."
																}
															]
														},
														"description": "Sets the serialized value for a binary variable or the binary value for a file variable."
													},
													"response": [
														{
															"name": "Request successful.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "data",
																			"value": "<string>",
																			"description": "The binary data to be set.\nFor File variables, this multipart can contain the filename, binary value and MIME type of the file variable to be set\nOnly the filename is mandatory.",
																			"type": "text"
																		},
																		{
																			"key": "valueType",
																			"value": "Bytes",
																			"description": "The name of the variable type. Either Bytes for a byte array variable or File for a file variable. (This can only be one of Bytes,File)",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/process-instance/:id/variables/:varName/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"process-instance",
																		":id",
																		"variables",
																		":varName",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "varName"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request\nThe variable value or type is invalid, for example if no filename is set.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "data",
																			"value": "<string>",
																			"description": "The binary data to be set.\nFor File variables, this multipart can contain the filename, binary value and MIME type of the file variable to be set\nOnly the filename is mandatory.",
																			"type": "text"
																		},
																		{
																			"key": "valueType",
																			"value": "Bytes",
																			"description": "The name of the variable type. Either Bytes for a byte array variable or File for a file variable. (This can only be one of Bytes,File)",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/process-instance/:id/variables/:varName/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"process-instance",
																		":id",
																		"variables",
																		":varName",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "varName"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Delete Process Variable",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/process-instance/:id/variables/:varName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-instance",
														":id",
														"variables",
														":varName"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the process instance to delete the variable from."
														},
														{
															"key": "varName",
															"value": "<string>",
															"description": "(Required) The name of the variable to delete."
														}
													]
												},
												"description": "Deletes a variable of a process instance by id."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-instance/:id/variables/:varName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-instance",
																":id",
																"variables",
																":varName"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get Process Variable",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-instance/:id/variables/:varName?deserializeValue=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-instance",
														":id",
														"variables",
														":varName"
													],
													"query": [
														{
															"key": "deserializeValue",
															"value": "true",
															"description": "Determines whether serializable variable values (typically variables that store custom Java objects)\nshould be deserialized on server side (default true).\n\nIf set to true, a serializable variable will be deserialized on server side and transformed to JSON\nusing [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.\nNote that this requires the Java classes of the variable value to be on the REST API's classpath.\n\nIf set to false, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n\nNote: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false\nwhen developing web applications that are independent of the Java process applications deployed to the engine."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the process instance to retrieve the variable for."
														},
														{
															"key": "varName",
															"value": "<string>",
															"description": "(Required) The name of the variable to retrieve."
														}
													]
												},
												"description": "Retrieves a variable of a given process instance by id."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-instance/:id/variables/:varName?deserializeValue=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-instance",
																":id",
																"variables",
																":varName"
															],
															"query": [
																{
																	"key": "deserializeValue",
																	"value": "true",
																	"description": "Determines whether serializable variable values (typically variables that store custom Java objects)\nshould be deserialized on server side (default true).\n\nIf set to true, a serializable variable will be deserialized on server side and transformed to JSON\nusing [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.\nNote that this requires the Java classes of the variable value to be on the REST API's classpath.\n\nIf set to false, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n\nNote: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false\nwhen developing web applications that are independent of the Java process applications deployed to the engine."
																}
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"value\": {\n    \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n  },\n  \"type\": \"<string>\",\n  \"valueInfo\": {\n    \"exercitationf5_\": \"adipisicing laboris Ut\",\n    \"consectetur_e_\": \"enim in\"\n  }\n}"
												},
												{
													"name": "Bad Request\nVariable with given id does not exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/process-instance/:id/variables/:varName?deserializeValue=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-instance",
																":id",
																"variables",
																":varName"
															],
															"query": [
																{
																	"key": "deserializeValue",
																	"value": "true",
																	"description": "Determines whether serializable variable values (typically variables that store custom Java objects)\nshould be deserialized on server side (default true).\n\nIf set to true, a serializable variable will be deserialized on server side and transformed to JSON\nusing [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.\nNote that this requires the Java classes of the variable value to be on the REST API's classpath.\n\nIf set to false, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n\nNote: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false\nwhen developing web applications that are independent of the Java process applications deployed to the engine."
																}
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										},
										{
											"name": "Update Process Variable",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": {\n    \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n  },\n  \"type\": \"<string>\",\n  \"valueInfo\": {\n    \"exercitationf5_\": \"adipisicing laboris Ut\",\n    \"consectetur_e_\": \"enim in\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-instance/:id/variables/:varName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-instance",
														":id",
														"variables",
														":varName"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the process instance to set the variable for."
														},
														{
															"key": "varName",
															"value": "<string>",
															"description": "(Required) The name of the variable to set."
														}
													]
												},
												"description": "Sets a variable of a given process instance by id."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"value\": {\n    \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n  },\n  \"type\": \"<string>\",\n  \"valueInfo\": {\n    \"exercitationf5_\": \"adipisicing laboris Ut\",\n    \"consectetur_e_\": \"enim in\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/process-instance/:id/variables/:varName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-instance",
																":id",
																"variables",
																":varName"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request\nThe variable value or type is invalid, for example if the value could not be parsed to an Integer value or\nthe passed variable type is not supported.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"value\": {\n    \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n  },\n  \"type\": \"<string>\",\n  \"valueInfo\": {\n    \"exercitationf5_\": \"adipisicing laboris Ut\",\n    \"consectetur_e_\": \"enim in\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/process-instance/:id/variables/:varName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"process-instance",
																":id",
																"variables",
																":varName"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Process Variables",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-instance/:id/variables?deserializeValues=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												":id",
												"variables"
											],
											"query": [
												{
													"key": "deserializeValues",
													"value": "true",
													"description": "Determines whether serializable variable values (typically variables that store custom Java objects)\nshould be deserialized on server side (default true).\n\nIf set to true, a serializable variable will be deserialized on server side and transformed to JSON\nusing [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.\nNote that this requires the Java classes of the variable value to be on the REST API's classpath.\n\nIf set to false, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n\nNote: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false\nwhen developing web applications that are independent of the Java process applications deployed to the engine."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the process instance to retrieve the variables from."
												}
											]
										},
										"description": "Retrieves all variables of a given process instance by id."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-instance/:id/variables?deserializeValues=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-instance",
														":id",
														"variables"
													],
													"query": [
														{
															"key": "deserializeValues",
															"value": "true",
															"description": "Determines whether serializable variable values (typically variables that store custom Java objects)\nshould be deserialized on server side (default true).\n\nIf set to true, a serializable variable will be deserialized on server side and transformed to JSON\nusing [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.\nNote that this requires the Java classes of the variable value to be on the REST API's classpath.\n\nIf set to false, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n\nNote: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false\nwhen developing web applications that are independent of the Java process applications deployed to the engine."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"nulla__3\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"consectetur_dfd\": \"veniam do minim occaecat\"\n    }\n  },\n  \"ut_10\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"ut_fa\": false,\n      \"mollit9\": -39701223,\n      \"velit_c1\": \"ve\"\n    }\n  },\n  \"aliquip_5\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"consectetur_34d\": -65418375,\n      \"laboriseec\": false,\n      \"doloreb\": true\n    }\n  },\n  \"mollitd\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"in_76d\": true,\n      \"pariatur_f77\": true\n    }\n  }\n}"
										},
										{
											"name": "Process instance with given id does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/process-instance/:id/variables?deserializeValues=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-instance",
														":id",
														"variables"
													],
													"query": [
														{
															"key": "deserializeValues",
															"value": "true",
															"description": "Determines whether serializable variable values (typically variables that store custom Java objects)\nshould be deserialized on server side (default true).\n\nIf set to true, a serializable variable will be deserialized on server side and transformed to JSON\nusing [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.\nNote that this requires the Java classes of the variable value to be on the REST API's classpath.\n\nIf set to false, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n\nNote: While true is the default value for reasons of backward compatibility, we recommend setting this parameter to false\nwhen developing web applications that are independent of the Java process applications deployed to the engine."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								},
								{
									"name": "Update/Delete Process Variables",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"modifications\": {\n    \"id_4\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"irure_9\": -3709291.92365548\n      }\n    },\n    \"reprehenderita\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"nostrud_c\": 51173474\n      }\n    }\n  },\n  \"deletions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/process-instance/:id/variables",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												":id",
												"variables"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the process instance to set variables for."
												}
											]
										},
										"description": "Updates or deletes the variables of a process instance by id. Updates precede deletions.\nSo, if a variable is updated AND deleted, the deletion overrides the update."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"modifications\": {\n    \"id_4\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"irure_9\": -3709291.92365548\n      }\n    },\n    \"reprehenderita\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"nostrud_c\": 51173474\n      }\n    }\n  },\n  \"deletions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-instance/:id/variables",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-instance",
														":id",
														"variables"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request\nThe variable value or type is invalid, for example if the value could not be parsed to an Integer value or\nthe passed variable type is not supported.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"modifications\": {\n    \"id_4\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"irure_9\": -3709291.92365548\n      }\n    },\n    \"reprehenderita\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"nostrud_c\": 51173474\n      }\n    }\n  },\n  \"deletions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-instance/:id/variables",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-instance",
														":id",
														"variables"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Update or delete could not be executed, for example because the process instance does not exist.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"modifications\": {\n    \"id_4\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"irure_9\": -3709291.92365548\n      }\n    },\n    \"reprehenderita\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"nostrud_c\": 51173474\n      }\n    }\n  },\n  \"deletions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/process-instance/:id/variables",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"process-instance",
														":id",
														"variables"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Delete",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/process-instance/:id?skipCustomListeners=false&skipIoMappings=false&skipSubprocesses=false&failIfNotExists=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process-instance",
										":id"
									],
									"query": [
										{
											"key": "skipCustomListeners",
											"value": "false",
											"description": "If set to true, the custom listeners will be skipped."
										},
										{
											"key": "skipIoMappings",
											"value": "false",
											"description": "If set to true, the input/output mappings will be skipped."
										},
										{
											"key": "skipSubprocesses",
											"value": "false",
											"description": "If set to true, subprocesses related to deleted processes will be skipped."
										},
										{
											"key": "failIfNotExists",
											"value": "true",
											"description": "If set to false, the request will still be successful if the process id is not found."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the process instance to be deleted."
										}
									]
								},
								"description": "Deletes a running process instance by id."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-instance/:id?skipCustomListeners=false&skipIoMappings=false&skipSubprocesses=false&failIfNotExists=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												":id"
											],
											"query": [
												{
													"key": "skipCustomListeners",
													"value": "false",
													"description": "If set to true, the custom listeners will be skipped."
												},
												{
													"key": "skipIoMappings",
													"value": "false",
													"description": "If set to true, the input/output mappings will be skipped."
												},
												{
													"key": "skipSubprocesses",
													"value": "false",
													"description": "If set to true, subprocesses related to deleted processes will be skipped."
												},
												{
													"key": "failIfNotExists",
													"value": "true",
													"description": "If set to false, the request will still be successful if the process id is not found."
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found\nProcess instance with given id does not exist. ",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-instance/:id?skipCustomListeners=false&skipIoMappings=false&skipSubprocesses=false&failIfNotExists=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												":id"
											],
											"query": [
												{
													"key": "skipCustomListeners",
													"value": "false",
													"description": "If set to true, the custom listeners will be skipped."
												},
												{
													"key": "skipIoMappings",
													"value": "false",
													"description": "If set to true, the input/output mappings will be skipped."
												},
												{
													"key": "skipSubprocesses",
													"value": "false",
													"description": "If set to true, subprocesses related to deleted processes will be skipped."
												},
												{
													"key": "failIfNotExists",
													"value": "true",
													"description": "If set to false, the request will still be successful if the process id is not found."
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get Process Instance",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{Authorization}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/process-instance/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process-instance",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1cf995fa-92a6-11ef-9b33-005056c00008",
											"description": "(Required) The id of the process instance to be retrieved."
										}
									]
								},
								"description": "Retrieves a process instance by id, according to the `ProcessInstance` interface in the engine."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-instance/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"definitionId\": \"<string>\",\n  \"businessKey\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"ended\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"tenantId\": \"<string>\",\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Process instance with given id does not exist. See the \n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format. ",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/process-instance/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"process-instance",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/process-instance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"process-instance"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "definitionKey",
									"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter.",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter.",
									"disabled": true
								},
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return.",
									"disabled": true
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left.",
									"disabled": true
								},
								{
									"key": "processInstanceIds",
									"value": "<string>",
									"description": "Filter by a comma-separated list of process instance ids.",
									"disabled": true
								},
								{
									"key": "businessKey",
									"value": "<string>",
									"description": "Filter by process instance business key.",
									"disabled": true
								},
								{
									"key": "businessKeyLike",
									"value": "<string>",
									"description": "Filter by process instance business key that the parameter is a substring of.",
									"disabled": true
								},
								{
									"key": "caseInstanceId",
									"value": "<string>",
									"description": "Filter by case instance id.",
									"disabled": true
								},
								{
									"key": "processDefinitionId",
									"value": "<string>",
									"description": "Filter by the deployment the id belongs to.",
									"disabled": true
								},
								{
									"key": "processDefinitionKey",
									"value": "<string>",
									"description": "Filter by the key of the process definition the instances run on.",
									"disabled": true
								},
								{
									"key": "processDefinitionKeyIn",
									"value": "<string>",
									"description": "Filter by a comma-separated list of process definition keys.\nA process instance must have one of the given process definition keys.",
									"disabled": true
								},
								{
									"key": "processDefinitionKeyNotIn",
									"value": "<string>",
									"description": "Exclude instances by a comma-separated list of process definition keys.\nA process instance must not have one of the given process definition keys.",
									"disabled": true
								},
								{
									"key": "deploymentId",
									"value": "<string>",
									"description": "Filter by the deployment the id belongs to.",
									"disabled": true
								},
								{
									"key": "superProcessInstance",
									"value": "<string>",
									"description": "Restrict query to all process instances that are sub process instances of the given process instance.\nTakes a process instance id.",
									"disabled": true
								},
								{
									"key": "subProcessInstance",
									"value": "<string>",
									"description": "Restrict query to all process instances that have the given process instance as a sub process instance.\nTakes a process instance id.",
									"disabled": true
								},
								{
									"key": "superCaseInstance",
									"value": "<string>",
									"description": "Restrict query to all process instances that are sub process instances of the given case instance.\nTakes a case instance id.",
									"disabled": true
								},
								{
									"key": "subCaseInstance",
									"value": "<string>",
									"description": "Restrict query to all process instances that have the given case instance as a sub case instance.\nTakes a case instance id.",
									"disabled": true
								},
								{
									"key": "active",
									"value": "false",
									"description": "Only include active process instances. Value may only be true,\nas false is the default behavior.",
									"disabled": true
								},
								{
									"key": "suspended",
									"value": "false",
									"description": "Only include suspended process instances. Value may only be true,\nas false is the default behavior.",
									"disabled": true
								},
								{
									"key": "withIncident",
									"value": "false",
									"description": "Filter by presence of incidents. Selects only process instances that have an incident.",
									"disabled": true
								},
								{
									"key": "incidentId",
									"value": "<string>",
									"description": "Filter by the incident id.",
									"disabled": true
								},
								{
									"key": "incidentType",
									"value": "<string>",
									"description": "Filter by the incident type.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types.",
									"disabled": true
								},
								{
									"key": "incidentMessage",
									"value": "<string>",
									"description": "Filter by the incident message. Exact match.",
									"disabled": true
								},
								{
									"key": "incidentMessageLike",
									"value": "<string>",
									"description": "Filter by the incident message that the parameter is a substring of.",
									"disabled": true
								},
								{
									"key": "tenantIdIn",
									"value": "<string>",
									"description": "Filter by a comma-separated list of tenant ids. A process instance must have one of the given tenant ids.",
									"disabled": true
								},
								{
									"key": "withoutTenantId",
									"value": "false",
									"description": "Only include process instances which belong to no tenant.",
									"disabled": true
								},
								{
									"key": "processDefinitionWithoutTenantId",
									"value": "false",
									"description": "Only include process instances which process definition has no tenant id.",
									"disabled": true
								},
								{
									"key": "activityIdIn",
									"value": "<string>",
									"description": "Filter by a comma-separated list of activity ids.\nA process instance must currently wait in a leaf activity with one of the given activity ids.",
									"disabled": true
								},
								{
									"key": "rootProcessInstances",
									"value": "false",
									"description": "Restrict the query to all process instances that are top level process instances.",
									"disabled": true
								},
								{
									"key": "leafProcessInstances",
									"value": "false",
									"description": "Restrict the query to all process instances that are leaf instances. (i.e. don't have any sub instances).",
									"disabled": true
								},
								{
									"key": "variables",
									"value": "<string>",
									"description": "Only include process instances that have variables with certain values.\nVariable filtering expressions are comma-separated and are structured as follows:\n\nA valid parameter value has the form `key_operator_value`. `key` is the variable name,\n`operator` is the comparison operator to be used and `value` the variable value.\n\n**Note**: Values are always treated as String objects on server side.\n\nValid `operator` values are:\n`eq` - equal to;\n`neq` - not equal to;\n`gt` - greater than;\n`gteq` - greater than or equal to;\n`lt` - lower than;\n`lteq` - lower than or equal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters.",
									"disabled": true
								},
								{
									"key": "variableNamesIgnoreCase",
									"value": "false",
									"description": "Match all variable names in this query case-insensitively.\nIf set to true variableName and variablename are treated as equal.",
									"disabled": true
								},
								{
									"key": "variableValuesIgnoreCase",
									"value": "false",
									"description": "Match all variable values in this query case-insensitively.\nIf set to true variableValue and variablevalue are treated as equal.",
									"disabled": true
								}
							]
						},
						"description": "Queries for process instances that fulfill given parameters.\nParameters may be static as well as dynamic runtime properties of process instances.\nThe size of the result set can be retrieved by using the Get Instance Count method."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/process-instance?sortBy=definitionKey&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&processInstanceIds=<string>&businessKey=<string>&businessKeyLike=<string>&caseInstanceId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionKeyIn=<string>&processDefinitionKeyNotIn=<string>&deploymentId=<string>&superProcessInstance=<string>&subProcessInstance=<string>&superCaseInstance=<string>&subCaseInstance=<string>&active=false&suspended=false&withIncident=false&incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&tenantIdIn=<string>&withoutTenantId=false&processDefinitionWithoutTenantId=false&activityIdIn=<string>&rootProcessInstances=false&leafProcessInstances=false&variables=<string>&variableNamesIgnoreCase=false&variableValuesIgnoreCase=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process-instance"
									],
									"query": [
										{
											"key": "sortBy",
											"value": "definitionKey",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										},
										{
											"key": "processInstanceIds",
											"value": "<string>",
											"description": "Filter by a comma-separated list of process instance ids."
										},
										{
											"key": "businessKey",
											"value": "<string>",
											"description": "Filter by process instance business key."
										},
										{
											"key": "businessKeyLike",
											"value": "<string>",
											"description": "Filter by process instance business key that the parameter is a substring of."
										},
										{
											"key": "caseInstanceId",
											"value": "<string>",
											"description": "Filter by case instance id."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Filter by the deployment the id belongs to."
										},
										{
											"key": "processDefinitionKey",
											"value": "<string>",
											"description": "Filter by the key of the process definition the instances run on."
										},
										{
											"key": "processDefinitionKeyIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of process definition keys.\nA process instance must have one of the given process definition keys."
										},
										{
											"key": "processDefinitionKeyNotIn",
											"value": "<string>",
											"description": "Exclude instances by a comma-separated list of process definition keys.\nA process instance must not have one of the given process definition keys."
										},
										{
											"key": "deploymentId",
											"value": "<string>",
											"description": "Filter by the deployment the id belongs to."
										},
										{
											"key": "superProcessInstance",
											"value": "<string>",
											"description": "Restrict query to all process instances that are sub process instances of the given process instance.\nTakes a process instance id."
										},
										{
											"key": "subProcessInstance",
											"value": "<string>",
											"description": "Restrict query to all process instances that have the given process instance as a sub process instance.\nTakes a process instance id."
										},
										{
											"key": "superCaseInstance",
											"value": "<string>",
											"description": "Restrict query to all process instances that are sub process instances of the given case instance.\nTakes a case instance id."
										},
										{
											"key": "subCaseInstance",
											"value": "<string>",
											"description": "Restrict query to all process instances that have the given case instance as a sub case instance.\nTakes a case instance id."
										},
										{
											"key": "active",
											"value": "false",
											"description": "Only include active process instances. Value may only be true,\nas false is the default behavior."
										},
										{
											"key": "suspended",
											"value": "false",
											"description": "Only include suspended process instances. Value may only be true,\nas false is the default behavior."
										},
										{
											"key": "withIncident",
											"value": "false",
											"description": "Filter by presence of incidents. Selects only process instances that have an incident."
										},
										{
											"key": "incidentId",
											"value": "<string>",
											"description": "Filter by the incident id."
										},
										{
											"key": "incidentType",
											"value": "<string>",
											"description": "Filter by the incident type.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
										},
										{
											"key": "incidentMessage",
											"value": "<string>",
											"description": "Filter by the incident message. Exact match."
										},
										{
											"key": "incidentMessageLike",
											"value": "<string>",
											"description": "Filter by the incident message that the parameter is a substring of."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids. A process instance must have one of the given tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "false",
											"description": "Only include process instances which belong to no tenant."
										},
										{
											"key": "processDefinitionWithoutTenantId",
											"value": "false",
											"description": "Only include process instances which process definition has no tenant id."
										},
										{
											"key": "activityIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of activity ids.\nA process instance must currently wait in a leaf activity with one of the given activity ids."
										},
										{
											"key": "rootProcessInstances",
											"value": "false",
											"description": "Restrict the query to all process instances that are top level process instances."
										},
										{
											"key": "leafProcessInstances",
											"value": "false",
											"description": "Restrict the query to all process instances that are leaf instances. (i.e. don't have any sub instances)."
										},
										{
											"key": "variables",
											"value": "<string>",
											"description": "Only include process instances that have variables with certain values.\nVariable filtering expressions are comma-separated and are structured as follows:\n\nA valid parameter value has the form `key_operator_value`. `key` is the variable name,\n`operator` is the comparison operator to be used and `value` the variable value.\n\n**Note**: Values are always treated as String objects on server side.\n\nValid `operator` values are:\n`eq` - equal to;\n`neq` - not equal to;\n`gt` - greater than;\n`gteq` - greater than or equal to;\n`lt` - lower than;\n`lteq` - lower than or equal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
										},
										{
											"key": "variableNamesIgnoreCase",
											"value": "false",
											"description": "Match all variable names in this query case-insensitively.\nIf set to true variableName and variablename are treated as equal."
										},
										{
											"key": "variableValuesIgnoreCase",
											"value": "false",
											"description": "Match all variable values in this query case-insensitively.\nIf set to true variableValue and variablevalue are treated as equal."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"definitionId\": \"<string>\",\n    \"businessKey\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"ended\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"tenantId\": \"<string>\",\n    \"links\": [\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      },\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      }\n    ]\n  },\n  {\n    \"id\": \"<string>\",\n    \"definitionId\": \"<string>\",\n    \"businessKey\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"ended\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"tenantId\": \"<string>\",\n    \"links\": [\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      },\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      }\n    ]\n  }\n]"
						},
						{
							"name": "Bad Request\nReturned if some of the query parameters are invalid,\nfor example if a sortOrder parameter is supplied, but no sortBy, or if an invalid operator for variable comparison is used.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/process-instance?sortBy=definitionKey&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&processInstanceIds=<string>&businessKey=<string>&businessKeyLike=<string>&caseInstanceId=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionKeyIn=<string>&processDefinitionKeyNotIn=<string>&deploymentId=<string>&superProcessInstance=<string>&subProcessInstance=<string>&superCaseInstance=<string>&subCaseInstance=<string>&active=false&suspended=false&withIncident=false&incidentId=<string>&incidentType=<string>&incidentMessage=<string>&incidentMessageLike=<string>&tenantIdIn=<string>&withoutTenantId=false&processDefinitionWithoutTenantId=false&activityIdIn=<string>&rootProcessInstances=false&leafProcessInstances=false&variables=<string>&variableNamesIgnoreCase=false&variableValuesIgnoreCase=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process-instance"
									],
									"query": [
										{
											"key": "sortBy",
											"value": "definitionKey",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										},
										{
											"key": "processInstanceIds",
											"value": "<string>",
											"description": "Filter by a comma-separated list of process instance ids."
										},
										{
											"key": "businessKey",
											"value": "<string>",
											"description": "Filter by process instance business key."
										},
										{
											"key": "businessKeyLike",
											"value": "<string>",
											"description": "Filter by process instance business key that the parameter is a substring of."
										},
										{
											"key": "caseInstanceId",
											"value": "<string>",
											"description": "Filter by case instance id."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Filter by the deployment the id belongs to."
										},
										{
											"key": "processDefinitionKey",
											"value": "<string>",
											"description": "Filter by the key of the process definition the instances run on."
										},
										{
											"key": "processDefinitionKeyIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of process definition keys.\nA process instance must have one of the given process definition keys."
										},
										{
											"key": "processDefinitionKeyNotIn",
											"value": "<string>",
											"description": "Exclude instances by a comma-separated list of process definition keys.\nA process instance must not have one of the given process definition keys."
										},
										{
											"key": "deploymentId",
											"value": "<string>",
											"description": "Filter by the deployment the id belongs to."
										},
										{
											"key": "superProcessInstance",
											"value": "<string>",
											"description": "Restrict query to all process instances that are sub process instances of the given process instance.\nTakes a process instance id."
										},
										{
											"key": "subProcessInstance",
											"value": "<string>",
											"description": "Restrict query to all process instances that have the given process instance as a sub process instance.\nTakes a process instance id."
										},
										{
											"key": "superCaseInstance",
											"value": "<string>",
											"description": "Restrict query to all process instances that are sub process instances of the given case instance.\nTakes a case instance id."
										},
										{
											"key": "subCaseInstance",
											"value": "<string>",
											"description": "Restrict query to all process instances that have the given case instance as a sub case instance.\nTakes a case instance id."
										},
										{
											"key": "active",
											"value": "false",
											"description": "Only include active process instances. Value may only be true,\nas false is the default behavior."
										},
										{
											"key": "suspended",
											"value": "false",
											"description": "Only include suspended process instances. Value may only be true,\nas false is the default behavior."
										},
										{
											"key": "withIncident",
											"value": "false",
											"description": "Filter by presence of incidents. Selects only process instances that have an incident."
										},
										{
											"key": "incidentId",
											"value": "<string>",
											"description": "Filter by the incident id."
										},
										{
											"key": "incidentType",
											"value": "<string>",
											"description": "Filter by the incident type.\nSee the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/incidents/#incident-types)\nfor a list of incident types."
										},
										{
											"key": "incidentMessage",
											"value": "<string>",
											"description": "Filter by the incident message. Exact match."
										},
										{
											"key": "incidentMessageLike",
											"value": "<string>",
											"description": "Filter by the incident message that the parameter is a substring of."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of tenant ids. A process instance must have one of the given tenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "false",
											"description": "Only include process instances which belong to no tenant."
										},
										{
											"key": "processDefinitionWithoutTenantId",
											"value": "false",
											"description": "Only include process instances which process definition has no tenant id."
										},
										{
											"key": "activityIdIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of activity ids.\nA process instance must currently wait in a leaf activity with one of the given activity ids."
										},
										{
											"key": "rootProcessInstances",
											"value": "false",
											"description": "Restrict the query to all process instances that are top level process instances."
										},
										{
											"key": "leafProcessInstances",
											"value": "false",
											"description": "Restrict the query to all process instances that are leaf instances. (i.e. don't have any sub instances)."
										},
										{
											"key": "variables",
											"value": "<string>",
											"description": "Only include process instances that have variables with certain values.\nVariable filtering expressions are comma-separated and are structured as follows:\n\nA valid parameter value has the form `key_operator_value`. `key` is the variable name,\n`operator` is the comparison operator to be used and `value` the variable value.\n\n**Note**: Values are always treated as String objects on server side.\n\nValid `operator` values are:\n`eq` - equal to;\n`neq` - not equal to;\n`gt` - greater than;\n`gteq` - greater than or equal to;\n`lt` - lower than;\n`lteq` - lower than or equal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
										},
										{
											"key": "variableNamesIgnoreCase",
											"value": "false",
											"description": "Match all variable names in this query case-insensitively.\nIf set to true variableName and variablename are treated as equal."
										},
										{
											"key": "variableValuesIgnoreCase",
											"value": "false",
											"description": "Match all variable values in this query case-insensitively.\nIf set to true variableValue and variablevalue are treated as equal."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "Get List (POST)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"deploymentId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionKeyNotIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"businessKey\": \"<string>\",\n  \"businessKeyLike\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"superProcessInstance\": \"<string>\",\n  \"subProcessInstance\": \"<string>\",\n  \"superCaseInstance\": \"<string>\",\n  \"subCaseInstance\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withIncident\": \"<boolean>\",\n  \"incidentId\": \"<string>\",\n  \"incidentType\": \"<string>\",\n  \"incidentMessage\": \"<string>\",\n  \"incidentMessageLike\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"processDefinitionWithoutTenantId\": \"<boolean>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"rootProcessInstances\": \"<boolean>\",\n  \"leafProcessInstances\": \"<boolean>\",\n  \"variables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gt\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"like\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"orQueries\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"businessKey\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"instanceId\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/process-instance?firstResult=<integer>&maxResults=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"process-instance"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return."
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
								}
							]
						},
						"description": "Queries for process instances that fulfill given parameters through a JSON object.\nThis method is slightly more powerful than the Get Instances method because\nit allows filtering by multiple process variables of types `string`, `number` or `boolean`."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deploymentId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionKeyNotIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"businessKey\": \"<string>\",\n  \"businessKeyLike\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"superProcessInstance\": \"<string>\",\n  \"subProcessInstance\": \"<string>\",\n  \"superCaseInstance\": \"<string>\",\n  \"subCaseInstance\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withIncident\": \"<boolean>\",\n  \"incidentId\": \"<string>\",\n  \"incidentType\": \"<string>\",\n  \"incidentMessage\": \"<string>\",\n  \"incidentMessageLike\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"processDefinitionWithoutTenantId\": \"<boolean>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"rootProcessInstances\": \"<boolean>\",\n  \"leafProcessInstances\": \"<boolean>\",\n  \"variables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gt\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"like\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"orQueries\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"businessKey\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"instanceId\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/process-instance?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process-instance"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"definitionId\": \"<string>\",\n    \"businessKey\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"ended\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"tenantId\": \"<string>\",\n    \"links\": [\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      },\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      }\n    ]\n  },\n  {\n    \"id\": \"<string>\",\n    \"definitionId\": \"<string>\",\n    \"businessKey\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"ended\": \"<boolean>\",\n    \"suspended\": \"<boolean>\",\n    \"tenantId\": \"<string>\",\n    \"links\": [\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      },\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      }\n    ]\n  }\n]"
						},
						{
							"name": "Bad Request\nReturned if some of the query parameters are invalid,\nfor example if a sortOrder parameter is supplied, but no sortBy, or if an invalid operator for variable comparison is used.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deploymentId\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionKeyNotIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"businessKey\": \"<string>\",\n  \"businessKeyLike\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"superProcessInstance\": \"<string>\",\n  \"subProcessInstance\": \"<string>\",\n  \"superCaseInstance\": \"<string>\",\n  \"subCaseInstance\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"suspended\": \"<boolean>\",\n  \"processInstanceIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withIncident\": \"<boolean>\",\n  \"incidentId\": \"<string>\",\n  \"incidentType\": \"<string>\",\n  \"incidentMessage\": \"<string>\",\n  \"incidentMessageLike\": \"<string>\",\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": \"<boolean>\",\n  \"processDefinitionWithoutTenantId\": \"<boolean>\",\n  \"activityIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"rootProcessInstances\": \"<boolean>\",\n  \"leafProcessInstances\": \"<boolean>\",\n  \"variables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gt\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"like\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"orQueries\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/ProcessInstanceQueryDto detected>\"\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"businessKey\",\n      \"sortOrder\": \"desc\"\n    },\n    {\n      \"sortBy\": \"instanceId\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/process-instance?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"process-instance"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "schema",
			"item": [
				{
					"name": "log",
					"item": [
						{
							"name": "Get List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/schema/log?version=<string>&sortBy=timestamp&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schema",
										"log"
									],
									"query": [
										{
											"key": "version",
											"value": "<string>",
											"description": "Only return schema log entries with a specific version."
										},
										{
											"key": "sortBy",
											"value": "timestamp",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								},
								"description": "Queries for schema log entries that fulfill given parameters."
							},
							"response": [
								{
									"name": "Request successful.\n**Note**: In order to get any results a user of group `camunda-admin` must\nbe authenticated.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/schema/log?version=<string>&sortBy=timestamp&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schema",
												"log"
											],
											"query": [
												{
													"key": "version",
													"value": "<string>",
													"description": "Only return schema log entries with a specific version."
												},
												{
													"key": "sortBy",
													"value": "timestamp",
													"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
												},
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"timestamp\": \"<dateTime>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"timestamp\": \"<dateTime>\",\n    \"version\": \"<string>\"\n  }\n]"
								}
							]
						},
						{
							"name": "Get List (POST)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"version\": \"<string>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"timestamp\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"timestamp\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/schema/log?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"schema",
										"log"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								},
								"description": "Queries for schema log entries that fulfill given parameters."
							},
							"response": [
								{
									"name": "Request successful.\n**Note**: In order to get any results a user of group camunda-admin must be\nauthenticated.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"version\": \"<string>\",\n  \"sorting\": [\n    {\n      \"sortBy\": \"timestamp\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"timestamp\",\n      \"sortOrder\": \"desc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/schema/log?firstResult=<integer>&maxResults=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"schema",
												"log"
											],
											"query": [
												{
													"key": "firstResult",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the index of the first result to return."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"timestamp\": \"<dateTime>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"timestamp\": \"<dateTime>\",\n    \"version\": \"<string>\"\n  }\n]"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "signal",
			"item": [
				{
					"name": "Event",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"variables\": {\n    \"enim57b\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Excepteur_55\": 27407580\n      }\n    },\n    \"dolora39\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"officia_3\": 49068399.65812838,\n        \"exercitation_951\": 86169879\n      }\n    },\n    \"ametf42\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"indf\": \"labore ut nulla\",\n        \"culpa_4\": 33429544\n      }\n    }\n  },\n  \"tenantId\": \"<string>\",\n  \"withoutTenantId\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/signal",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"signal"
							]
						},
						"description": "A signal is an event of global scope (broadcast semantics) and is delivered to all\nactive handlers. Internally this maps to the engine's signal event received builder\nmethod `RuntimeService#createSignalEvent()`. For more information about the signal\nbehavior, see the [Signal Events](https://docs.camunda.org/manual/7.21/reference/bpmn20/events/signal-events/)\nsection of the [BPMN 2.0 Implementation Reference](https://docs.camunda.org/manual/7.21/reference/bpmn20/)."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"variables\": {\n    \"enim57b\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Excepteur_55\": 27407580\n      }\n    },\n    \"dolora39\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"officia_3\": 49068399.65812838,\n        \"exercitation_951\": 86169879\n      }\n    },\n    \"ametf42\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"indf\": \"labore ut nulla\",\n        \"culpa_4\": 33429544\n      }\n    }\n  },\n  \"tenantId\": \"<string>\",\n  \"withoutTenantId\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/signal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"signal"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if:\n\n* no name was given\n* the variable value or type is invalid, for example if the value could not be\nparsed to an integer value or the passed variable type is not supported\n* a tenant id and an execution id is specified.\n\nSee the [Introduction",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"variables\": {\n    \"enim57b\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Excepteur_55\": 27407580\n      }\n    },\n    \"dolora39\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"officia_3\": 49068399.65812838,\n        \"exercitation_951\": 86169879\n      }\n    },\n    \"ametf42\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"indf\": \"labore ut nulla\",\n        \"culpa_4\": 33429544\n      }\n    }\n  },\n  \"tenantId\": \"<string>\",\n  \"withoutTenantId\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/signal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"signal"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						},
						{
							"name": "Returned if the user is not allowed to throw a signal event.\n\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the\nerror response format.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"variables\": {\n    \"enim57b\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Excepteur_55\": 27407580\n      }\n    },\n    \"dolora39\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"officia_3\": 49068399.65812838,\n        \"exercitation_951\": 86169879\n      }\n    },\n    \"ametf42\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"indf\": \"labore ut nulla\",\n        \"culpa_4\": 33429544\n      }\n    }\n  },\n  \"tenantId\": \"<string>\",\n  \"withoutTenantId\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/signal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"signal"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"userId\": \"<string>\",\n  \"missingAuthorizations\": [\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    },\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						},
						{
							"name": "Returned if a single execution is specified and no such execution exists or has not\nsubscribed to the signal.\n\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the\nerror response format.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"variables\": {\n    \"enim57b\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"Excepteur_55\": 27407580\n      }\n    },\n    \"dolora39\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"officia_3\": 49068399.65812838,\n        \"exercitation_951\": 86169879\n      }\n    },\n    \"ametf42\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"indf\": \"labore ut nulla\",\n        \"culpa_4\": 33429544\n      }\n    }\n  },\n  \"tenantId\": \"<string>\",\n  \"withoutTenantId\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/signal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"signal"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "task",
			"item": [
				{
					"name": "count",
					"item": [
						{
							"name": "Get List Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/task/count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"count"
									],
									"query": [
										{
											"key": "taskId",
											"value": "<string>",
											"description": "Restrict to task with the given id.",
											"disabled": true
										},
										{
											"key": "taskIdIn",
											"value": "<string>",
											"description": "Restrict to tasks with any of the given ids.",
											"disabled": true
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Restrict to tasks that belong to process instances with the given id.",
											"disabled": true
										},
										{
											"key": "processInstanceIdIn",
											"value": "<string>",
											"description": "Restrict to tasks that belong to process instances with the given ids.",
											"disabled": true
										},
										{
											"key": "processInstanceBusinessKey",
											"value": "<string>",
											"description": "Restrict to tasks that belong to process instances with the given business key.",
											"disabled": true
										},
										{
											"key": "processInstanceBusinessKeyExpression",
											"value": "<string>",
											"description": "Restrict to tasks that belong to process instances with the given business key which \nis described by an expression. See the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions.",
											"disabled": true
										},
										{
											"key": "processInstanceBusinessKeyIn",
											"value": "<string>",
											"description": "Restrict to tasks that belong to process instances with one of the give business keys. \nThe keys need to be in a comma-separated list.",
											"disabled": true
										},
										{
											"key": "processInstanceBusinessKeyLike",
											"value": "<string>",
											"description": "Restrict to tasks that have a process instance business key that has the parameter \nvalue as a substring.",
											"disabled": true
										},
										{
											"key": "processInstanceBusinessKeyLikeExpression",
											"value": "<string>",
											"description": "Restrict to tasks that have a process instance business key that has the parameter \nvalue as a substring and is described by an expression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions.",
											"disabled": true
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a process definition with the given id.",
											"disabled": true
										},
										{
											"key": "processDefinitionKey",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a process definition with the given key.",
											"disabled": true
										},
										{
											"key": "processDefinitionKeyIn",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a process definition with one of the given keys. The \nkeys need to be in a comma-separated list.",
											"disabled": true
										},
										{
											"key": "processDefinitionName",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a process definition with the given name.",
											"disabled": true
										},
										{
											"key": "processDefinitionNameLike",
											"value": "<string>",
											"description": "Restrict to tasks that have a process definition name that has the parameter value as \na substring.",
											"disabled": true
										},
										{
											"key": "executionId",
											"value": "<string>",
											"description": "Restrict to tasks that belong to an execution with the given id.",
											"disabled": true
										},
										{
											"key": "caseInstanceId",
											"value": "<string>",
											"description": "Restrict to tasks that belong to case instances with the given id.",
											"disabled": true
										},
										{
											"key": "caseInstanceBusinessKey",
											"value": "<string>",
											"description": "Restrict to tasks that belong to case instances with the given business key.",
											"disabled": true
										},
										{
											"key": "caseInstanceBusinessKeyLike",
											"value": "<string>",
											"description": "Restrict to tasks that have a case instance business key that has the parameter value \nas a substring.",
											"disabled": true
										},
										{
											"key": "caseDefinitionId",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a case definition with the given id.",
											"disabled": true
										},
										{
											"key": "caseDefinitionKey",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a case definition with the given key.",
											"disabled": true
										},
										{
											"key": "caseDefinitionName",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a case definition with the given name.",
											"disabled": true
										},
										{
											"key": "caseDefinitionNameLike",
											"value": "<string>",
											"description": "Restrict to tasks that have a case definition name that has the parameter value as a \nsubstring.",
											"disabled": true
										},
										{
											"key": "caseExecutionId",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a case execution with the given id.",
											"disabled": true
										},
										{
											"key": "activityInstanceIdIn",
											"value": "<string>",
											"description": "Only include tasks which belong to one of the passed and comma-separated activity \ninstance ids.",
											"disabled": true
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Only include tasks which belong to one of the passed and comma-separated \ntenant ids.",
											"disabled": true
										},
										{
											"key": "withoutTenantId",
											"value": "false",
											"description": "Only include tasks which belong to no tenant. Value may only be `true`, \nas `false` is the default behavior.",
											"disabled": true
										},
										{
											"key": "assignee",
											"value": "<string>",
											"description": "Restrict to tasks that the given user is assigned to.",
											"disabled": true
										},
										{
											"key": "assigneeExpression",
											"value": "<string>",
											"description": "Restrict to tasks that the user described by the given expression is assigned to. \nSee the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions.",
											"disabled": true
										},
										{
											"key": "assigneeLike",
											"value": "<string>",
											"description": "Restrict to tasks that have an assignee that has the parameter \nvalue as a substring.",
											"disabled": true
										},
										{
											"key": "assigneeLikeExpression",
											"value": "<string>",
											"description": "Restrict to tasks that have an assignee that has the parameter value described by the \ngiven expression as a substring. See the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions.",
											"disabled": true
										},
										{
											"key": "assigneeIn",
											"value": "<string>",
											"description": "Only include tasks which are assigned to one of the passed and \ncomma-separated user ids.",
											"disabled": true
										},
										{
											"key": "assigneeNotIn",
											"value": "<string>",
											"description": "Only include tasks which are not assigned to one of the passed and\ncomma-separated user ids.",
											"disabled": true
										},
										{
											"key": "owner",
											"value": "<string>",
											"description": "Restrict to tasks that the given user owns.",
											"disabled": true
										},
										{
											"key": "ownerExpression",
											"value": "<string>",
											"description": "Restrict to tasks that the user described by the given expression owns. See the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions.",
											"disabled": true
										},
										{
											"key": "candidateGroup",
											"value": "<string>",
											"description": "Only include tasks that are offered to the given group.",
											"disabled": true
										},
										{
											"key": "candidateGroupExpression",
											"value": "<string>",
											"description": "Only include tasks that are offered to the group described by the given expression. \nSee the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions.",
											"disabled": true
										},
										{
											"key": "candidateUser",
											"value": "<string>",
											"description": "Only include tasks that are offered to the given user or to one of his groups.",
											"disabled": true
										},
										{
											"key": "candidateUserExpression",
											"value": "<string>",
											"description": "Only include tasks that are offered to the user described by the given expression. \nSee the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions.",
											"disabled": true
										},
										{
											"key": "includeAssignedTasks",
											"value": "false",
											"description": "Also include tasks that are assigned to users in candidate queries. Default is to only \ninclude tasks that are not assigned to any user if you query by candidate user or\ngroup(s).",
											"disabled": true
										},
										{
											"key": "involvedUser",
											"value": "<string>",
											"description": "Only include tasks that the given user is involved in. A user is involved in a task if \nan identity link exists between task and user (e.g., the user is the assignee).",
											"disabled": true
										},
										{
											"key": "involvedUserExpression",
											"value": "<string>",
											"description": "Only include tasks that the user described by the given expression is involved in.\nA user is involved in a task if an identity link exists between task and user\n(e.g., the user is the assignee). See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions.",
											"disabled": true
										},
										{
											"key": "assigned",
											"value": "false",
											"description": "If set to `true`, restricts the query to all tasks that are assigned.",
											"disabled": true
										},
										{
											"key": "unassigned",
											"value": "false",
											"description": "If set to `true`, restricts the query to all tasks that are unassigned.",
											"disabled": true
										},
										{
											"key": "taskDefinitionKey",
											"value": "<string>",
											"description": "Restrict to tasks that have the given key.",
											"disabled": true
										},
										{
											"key": "taskDefinitionKeyIn",
											"value": "<string>",
											"description": "Restrict to tasks that have one of the given keys. The keys need to be in a\ncomma-separated list.",
											"disabled": true
										},
										{
											"key": "taskDefinitionKeyLike",
											"value": "<string>",
											"description": "Restrict to tasks that have a key that has the parameter value as a substring.",
											"disabled": true
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Restrict to tasks that have the given name.",
											"disabled": true
										},
										{
											"key": "nameNotEqual",
											"value": "<string>",
											"description": "Restrict to tasks that do not have the given name.",
											"disabled": true
										},
										{
											"key": "nameLike",
											"value": "<string>",
											"description": "Restrict to tasks that have a name with the given parameter value as substring.",
											"disabled": true
										},
										{
											"key": "nameNotLike",
											"value": "<string>",
											"description": "Restrict to tasks that do not have a name with the given parameter\nvalue as substring.",
											"disabled": true
										},
										{
											"key": "description",
											"value": "<string>",
											"description": "Restrict to tasks that have the given description.",
											"disabled": true
										},
										{
											"key": "descriptionLike",
											"value": "<string>",
											"description": "Restrict to tasks that have a description that has the parameter\nvalue as a substring.",
											"disabled": true
										},
										{
											"key": "priority",
											"value": "<integer>",
											"description": "Restrict to tasks that have the given priority.",
											"disabled": true
										},
										{
											"key": "maxPriority",
											"value": "<integer>",
											"description": "Restrict to tasks that have a lower or equal priority.",
											"disabled": true
										},
										{
											"key": "minPriority",
											"value": "<integer>",
											"description": "Restrict to tasks that have a higher or equal priority.",
											"disabled": true
										},
										{
											"key": "dueDate",
											"value": "<string>",
											"description": "Restrict to tasks that are due on the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.546+0200`.",
											"disabled": true
										},
										{
											"key": "dueDateExpression",
											"value": "<string>",
											"description": "Restrict to tasks that are due on the date described by the given expression. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object.",
											"disabled": true
										},
										{
											"key": "dueAfter",
											"value": "<string>",
											"description": "Restrict to tasks that are due after the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have\nthe format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.435+0200`.",
											"disabled": true
										},
										{
											"key": "dueAfterExpression",
											"value": "<string>",
											"description": "Restrict to tasks that are due after the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object.",
											"disabled": true
										},
										{
											"key": "dueBefore",
											"value": "<string>",
											"description": "Restrict to tasks that are due before the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have\nthe format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.243+0200`.",
											"disabled": true
										},
										{
											"key": "dueBeforeExpression",
											"value": "<string>",
											"description": "Restrict to tasks that are due before the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object.",
											"disabled": true
										},
										{
											"key": "withoutDueDate",
											"value": "false",
											"description": "Only include tasks which have no due date. Value may only be `true`, \nas `false` is the default behavior.",
											"disabled": true
										},
										{
											"key": "followUpDate",
											"value": "<string>",
											"description": "Restrict to tasks that have a followUp date on the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date\nmust have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.342+0200`.",
											"disabled": true
										},
										{
											"key": "followUpDateExpression",
											"value": "<string>",
											"description": "Restrict to tasks that have a followUp date on the date described by the given\nexpression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object.",
											"disabled": true
										},
										{
											"key": "followUpAfter",
											"value": "<string>",
											"description": "Restrict to tasks that have a followUp date after the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the\ndate must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.542+0200`.",
											"disabled": true
										},
										{
											"key": "followUpAfterExpression",
											"value": "<string>",
											"description": "Restrict to tasks that have a followUp date after the date described by the given\nexpression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object.",
											"disabled": true
										},
										{
											"key": "followUpBefore",
											"value": "<string>",
											"description": "Restrict to tasks that have a followUp date before the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the\ndate must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.234+0200`.",
											"disabled": true
										},
										{
											"key": "followUpBeforeExpression",
											"value": "<string>",
											"description": "Restrict to tasks that have a followUp date before the date described by the given\nexpression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object.",
											"disabled": true
										},
										{
											"key": "followUpBeforeOrNotExistent",
											"value": "<string>",
											"description": "Restrict to tasks that have no followUp date or a followUp date before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.432+0200`. The\ntypical use case is to query all `active` tasks for a user for a given date.",
											"disabled": true
										},
										{
											"key": "followUpBeforeOrNotExistentExpression",
											"value": "<string>",
											"description": "Restrict to tasks that have no followUp date or a followUp date before the date\ndescribed by the given expression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object.",
											"disabled": true
										},
										{
											"key": "createdOn",
											"value": "<string>",
											"description": "Restrict to tasks that were created on the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have\nthe format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.324+0200`.",
											"disabled": true
										},
										{
											"key": "createdOnExpression",
											"value": "<string>",
											"description": "Restrict to tasks that were created on the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object.",
											"disabled": true
										},
										{
											"key": "createdAfter",
											"value": "<string>",
											"description": "Restrict to tasks that were created after the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.342+0200`.",
											"disabled": true
										},
										{
											"key": "createdAfterExpression",
											"value": "<string>",
											"description": "Restrict to tasks that were created after the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object.",
											"disabled": true
										},
										{
											"key": "createdBefore",
											"value": "<string>",
											"description": "Restrict to tasks that were created before the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.332+0200`.",
											"disabled": true
										},
										{
											"key": "createdBeforeExpression",
											"value": "<string>",
											"description": "Restrict to tasks that were created before the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object.",
											"disabled": true
										},
										{
											"key": "updatedAfter",
											"value": "<string>",
											"description": "Restrict to tasks that were updated after the given date. Every action that fires \na [task update event](https://docs.camunda.org/manual/7.21/user-guide/process-engine/delegation-code/#task-listener-event-lifecycle) is considered as updating the task.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must\nhave the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.332+0200`.",
											"disabled": true
										},
										{
											"key": "updatedAfterExpression",
											"value": "<string>",
											"description": "Restrict to tasks that were updated after the date described by the given expression. Every action that fires \na [task update event](https://docs.camunda.org/manual/7.21/user-guide/process-engine/delegation-code/#task-listener-event-lifecycle) is considered as updating the task.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object.",
											"disabled": true
										},
										{
											"key": "delegationState",
											"value": "RESOLVED",
											"description": "Restrict to tasks that are in the given delegation state. Valid values are\n`PENDING` and `RESOLVED`.",
											"disabled": true
										},
										{
											"key": "candidateGroups",
											"value": "<string>",
											"description": "Restrict to tasks that are offered to any of the given candidate groups. Takes a\ncomma-separated list of group names, so for example `developers,support,sales`.",
											"disabled": true
										},
										{
											"key": "candidateGroupsExpression",
											"value": "<string>",
											"description": "Restrict to tasks that are offered to any of the candidate groups described by the\ngiven expression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to\n`java.util.List` of Strings.",
											"disabled": true
										},
										{
											"key": "withCandidateGroups",
											"value": "false",
											"description": "Only include tasks which have a candidate group. Value may only be `true`,\nas `false` is the default behavior.",
											"disabled": true
										},
										{
											"key": "withoutCandidateGroups",
											"value": "false",
											"description": "Only include tasks which have no candidate group. Value may only be `true`,\nas `false` is the default behavior.",
											"disabled": true
										},
										{
											"key": "withCandidateUsers",
											"value": "false",
											"description": "Only include tasks which have a candidate user. Value may only be `true`,\nas `false` is the default behavior.",
											"disabled": true
										},
										{
											"key": "withoutCandidateUsers",
											"value": "false",
											"description": "Only include tasks which have no candidate users. Value may only be `true`,\nas `false` is the default behavior.",
											"disabled": true
										},
										{
											"key": "active",
											"value": "false",
											"description": "Only include active tasks. Value may only be `true`, as `false`\nis the default behavior.",
											"disabled": true
										},
										{
											"key": "suspended",
											"value": "false",
											"description": "Only include suspended tasks. Value may only be `true`, as\n`false` is the default behavior.",
											"disabled": true
										},
										{
											"key": "taskVariables",
											"value": "<string>",
											"description": "Only include tasks that have variables with certain values. Variable filtering\nexpressions are comma-separated and are structured as follows:\n\nA valid parameter value has the form `key_operator_value`. `key` is the variable name,\n`operator` is the comparison operator to be used and `value` the variable value.\n\n**Note**: Values are always treated as String objects on server side.\n\nValid `operator` values are:\n`eq` - equal to;\n`neq` - not equal to;\n`gt` - greater than;\n`gteq` - greater than or equal to;\n`lt` - lower than;\n`lteq` - lower than or equal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters.",
											"disabled": true
										},
										{
											"key": "processVariables",
											"value": "<string>",
											"description": "Only include tasks that belong to process instances that have variables with certain \nvalues. Variable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`. `key` is the variable name,\n`operator` is the comparison operator to be used and `value` the variable value.\n\n**Note**: Values are always treated as String objects on server side.\n\nValid `operator` values are:\n`eq` - equal to;\n`neq` - not equal to;\n`gt` - greater than;\n`gteq` - greater than or equal to;\n`lt` - lower than;\n`lteq` - lower than or equal to;\n`like`;\n`notLike`.\n`key` and `value` may not contain underscore or comma characters.",
											"disabled": true
										},
										{
											"key": "caseInstanceVariables",
											"value": "<string>",
											"description": "Only include tasks that belong to case instances that have variables with certain\nvalues. Variable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`. `key` is the variable name,\n`operator` is the comparison operator to be used and `value` the variable value.\n\n**Note**: Values are always treated as String objects on server side.\n\nValid `operator` values are:\n`eq` - equal to;\n`neq` - not equal to;\n`gt` - greater than;\n`gteq` - greater than or equal to;\n`lt` - lower than;\n`lteq` - lower than or equal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters.",
											"disabled": true
										},
										{
											"key": "variableNamesIgnoreCase",
											"value": "false",
											"description": "Match all variable names in this query case-insensitively. If set\n`variableName` and `variablename` are treated as equal.",
											"disabled": true
										},
										{
											"key": "variableValuesIgnoreCase",
											"value": "false",
											"description": "Match all variable values in this query case-insensitively. If set\n`variableValue` and `variablevalue` are treated as equal.",
											"disabled": true
										},
										{
											"key": "parentTaskId",
											"value": "<string>",
											"description": "Restrict query to all tasks that are sub tasks of the given task. Takes a task id.",
											"disabled": true
										}
									]
								},
								"description": "Retrieves the number of tasks that fulfill a provided filter. Corresponds to the size\nof the result set when using the [Get Tasks](https://docs.camunda.org/manual/7.21/reference/rest/task/) method.\n\n**Security Consideration:** There are several query parameters (such as\nassigneeExpression) for specifying an EL expression. These are disabled by default to\nprevent remote code execution. See the section on\n[security considerations](https://docs.camunda.org/manual/7.21/user-guide/process-engine/securing-custom-code/)\nfor custom code in the user guide for details."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/task/count?taskId=<string>&taskIdIn=<string>&processInstanceId=<string>&processInstanceIdIn=<string>&processInstanceBusinessKey=<string>&processInstanceBusinessKeyExpression=<string>&processInstanceBusinessKeyIn=<string>&processInstanceBusinessKeyLike=<string>&processInstanceBusinessKeyLikeExpression=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionKeyIn=<string>&processDefinitionName=<string>&processDefinitionNameLike=<string>&executionId=<string>&caseInstanceId=<string>&caseInstanceBusinessKey=<string>&caseInstanceBusinessKeyLike=<string>&caseDefinitionId=<string>&caseDefinitionKey=<string>&caseDefinitionName=<string>&caseDefinitionNameLike=<string>&caseExecutionId=<string>&activityInstanceIdIn=<string>&tenantIdIn=<string>&withoutTenantId=false&assignee=<string>&assigneeExpression=<string>&assigneeLike=<string>&assigneeLikeExpression=<string>&assigneeIn=<string>&assigneeNotIn=<string>&owner=<string>&ownerExpression=<string>&candidateGroup=<string>&candidateGroupExpression=<string>&candidateUser=<string>&candidateUserExpression=<string>&includeAssignedTasks=false&involvedUser=<string>&involvedUserExpression=<string>&assigned=false&unassigned=false&taskDefinitionKey=<string>&taskDefinitionKeyIn=<string>&taskDefinitionKeyLike=<string>&name=<string>&nameNotEqual=<string>&nameLike=<string>&nameNotLike=<string>&description=<string>&descriptionLike=<string>&priority=<integer>&maxPriority=<integer>&minPriority=<integer>&dueDate=<string>&dueDateExpression=<string>&dueAfter=<string>&dueAfterExpression=<string>&dueBefore=<string>&dueBeforeExpression=<string>&withoutDueDate=false&followUpDate=<string>&followUpDateExpression=<string>&followUpAfter=<string>&followUpAfterExpression=<string>&followUpBefore=<string>&followUpBeforeExpression=<string>&followUpBeforeOrNotExistent=<string>&followUpBeforeOrNotExistentExpression=<string>&createdOn=<string>&createdOnExpression=<string>&createdAfter=<string>&createdAfterExpression=<string>&createdBefore=<string>&createdBeforeExpression=<string>&updatedAfter=<string>&updatedAfterExpression=<string>&delegationState=RESOLVED&candidateGroups=<string>&candidateGroupsExpression=<string>&withCandidateGroups=false&withoutCandidateGroups=false&withCandidateUsers=false&withoutCandidateUsers=false&active=false&suspended=false&taskVariables=<string>&processVariables=<string>&caseInstanceVariables=<string>&variableNamesIgnoreCase=false&variableValuesIgnoreCase=false&parentTaskId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												"count"
											],
											"query": [
												{
													"key": "taskId",
													"value": "<string>",
													"description": "Restrict to task with the given id."
												},
												{
													"key": "taskIdIn",
													"value": "<string>",
													"description": "Restrict to tasks with any of the given ids."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Restrict to tasks that belong to process instances with the given id."
												},
												{
													"key": "processInstanceIdIn",
													"value": "<string>",
													"description": "Restrict to tasks that belong to process instances with the given ids."
												},
												{
													"key": "processInstanceBusinessKey",
													"value": "<string>",
													"description": "Restrict to tasks that belong to process instances with the given business key."
												},
												{
													"key": "processInstanceBusinessKeyExpression",
													"value": "<string>",
													"description": "Restrict to tasks that belong to process instances with the given business key which \nis described by an expression. See the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions."
												},
												{
													"key": "processInstanceBusinessKeyIn",
													"value": "<string>",
													"description": "Restrict to tasks that belong to process instances with one of the give business keys. \nThe keys need to be in a comma-separated list."
												},
												{
													"key": "processInstanceBusinessKeyLike",
													"value": "<string>",
													"description": "Restrict to tasks that have a process instance business key that has the parameter \nvalue as a substring."
												},
												{
													"key": "processInstanceBusinessKeyLikeExpression",
													"value": "<string>",
													"description": "Restrict to tasks that have a process instance business key that has the parameter \nvalue as a substring and is described by an expression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a process definition with the given id."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a process definition with the given key."
												},
												{
													"key": "processDefinitionKeyIn",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a process definition with one of the given keys. The \nkeys need to be in a comma-separated list."
												},
												{
													"key": "processDefinitionName",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a process definition with the given name."
												},
												{
													"key": "processDefinitionNameLike",
													"value": "<string>",
													"description": "Restrict to tasks that have a process definition name that has the parameter value as \na substring."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Restrict to tasks that belong to an execution with the given id."
												},
												{
													"key": "caseInstanceId",
													"value": "<string>",
													"description": "Restrict to tasks that belong to case instances with the given id."
												},
												{
													"key": "caseInstanceBusinessKey",
													"value": "<string>",
													"description": "Restrict to tasks that belong to case instances with the given business key."
												},
												{
													"key": "caseInstanceBusinessKeyLike",
													"value": "<string>",
													"description": "Restrict to tasks that have a case instance business key that has the parameter value \nas a substring."
												},
												{
													"key": "caseDefinitionId",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a case definition with the given id."
												},
												{
													"key": "caseDefinitionKey",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a case definition with the given key."
												},
												{
													"key": "caseDefinitionName",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a case definition with the given name."
												},
												{
													"key": "caseDefinitionNameLike",
													"value": "<string>",
													"description": "Restrict to tasks that have a case definition name that has the parameter value as a \nsubstring."
												},
												{
													"key": "caseExecutionId",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a case execution with the given id."
												},
												{
													"key": "activityInstanceIdIn",
													"value": "<string>",
													"description": "Only include tasks which belong to one of the passed and comma-separated activity \ninstance ids."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Only include tasks which belong to one of the passed and comma-separated \ntenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "false",
													"description": "Only include tasks which belong to no tenant. Value may only be `true`, \nas `false` is the default behavior."
												},
												{
													"key": "assignee",
													"value": "<string>",
													"description": "Restrict to tasks that the given user is assigned to."
												},
												{
													"key": "assigneeExpression",
													"value": "<string>",
													"description": "Restrict to tasks that the user described by the given expression is assigned to. \nSee the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions."
												},
												{
													"key": "assigneeLike",
													"value": "<string>",
													"description": "Restrict to tasks that have an assignee that has the parameter \nvalue as a substring."
												},
												{
													"key": "assigneeLikeExpression",
													"value": "<string>",
													"description": "Restrict to tasks that have an assignee that has the parameter value described by the \ngiven expression as a substring. See the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions."
												},
												{
													"key": "assigneeIn",
													"value": "<string>",
													"description": "Only include tasks which are assigned to one of the passed and \ncomma-separated user ids."
												},
												{
													"key": "assigneeNotIn",
													"value": "<string>",
													"description": "Only include tasks which are not assigned to one of the passed and\ncomma-separated user ids."
												},
												{
													"key": "owner",
													"value": "<string>",
													"description": "Restrict to tasks that the given user owns."
												},
												{
													"key": "ownerExpression",
													"value": "<string>",
													"description": "Restrict to tasks that the user described by the given expression owns. See the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions."
												},
												{
													"key": "candidateGroup",
													"value": "<string>",
													"description": "Only include tasks that are offered to the given group."
												},
												{
													"key": "candidateGroupExpression",
													"value": "<string>",
													"description": "Only include tasks that are offered to the group described by the given expression. \nSee the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions."
												},
												{
													"key": "candidateUser",
													"value": "<string>",
													"description": "Only include tasks that are offered to the given user or to one of his groups."
												},
												{
													"key": "candidateUserExpression",
													"value": "<string>",
													"description": "Only include tasks that are offered to the user described by the given expression. \nSee the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions."
												},
												{
													"key": "includeAssignedTasks",
													"value": "false",
													"description": "Also include tasks that are assigned to users in candidate queries. Default is to only \ninclude tasks that are not assigned to any user if you query by candidate user or\ngroup(s)."
												},
												{
													"key": "involvedUser",
													"value": "<string>",
													"description": "Only include tasks that the given user is involved in. A user is involved in a task if \nan identity link exists between task and user (e.g., the user is the assignee)."
												},
												{
													"key": "involvedUserExpression",
													"value": "<string>",
													"description": "Only include tasks that the user described by the given expression is involved in.\nA user is involved in a task if an identity link exists between task and user\n(e.g., the user is the assignee). See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions."
												},
												{
													"key": "assigned",
													"value": "false",
													"description": "If set to `true`, restricts the query to all tasks that are assigned."
												},
												{
													"key": "unassigned",
													"value": "false",
													"description": "If set to `true`, restricts the query to all tasks that are unassigned."
												},
												{
													"key": "taskDefinitionKey",
													"value": "<string>",
													"description": "Restrict to tasks that have the given key."
												},
												{
													"key": "taskDefinitionKeyIn",
													"value": "<string>",
													"description": "Restrict to tasks that have one of the given keys. The keys need to be in a\ncomma-separated list."
												},
												{
													"key": "taskDefinitionKeyLike",
													"value": "<string>",
													"description": "Restrict to tasks that have a key that has the parameter value as a substring."
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "Restrict to tasks that have the given name."
												},
												{
													"key": "nameNotEqual",
													"value": "<string>",
													"description": "Restrict to tasks that do not have the given name."
												},
												{
													"key": "nameLike",
													"value": "<string>",
													"description": "Restrict to tasks that have a name with the given parameter value as substring."
												},
												{
													"key": "nameNotLike",
													"value": "<string>",
													"description": "Restrict to tasks that do not have a name with the given parameter\nvalue as substring."
												},
												{
													"key": "description",
													"value": "<string>",
													"description": "Restrict to tasks that have the given description."
												},
												{
													"key": "descriptionLike",
													"value": "<string>",
													"description": "Restrict to tasks that have a description that has the parameter\nvalue as a substring."
												},
												{
													"key": "priority",
													"value": "<integer>",
													"description": "Restrict to tasks that have the given priority."
												},
												{
													"key": "maxPriority",
													"value": "<integer>",
													"description": "Restrict to tasks that have a lower or equal priority."
												},
												{
													"key": "minPriority",
													"value": "<integer>",
													"description": "Restrict to tasks that have a higher or equal priority."
												},
												{
													"key": "dueDate",
													"value": "<string>",
													"description": "Restrict to tasks that are due on the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.546+0200`."
												},
												{
													"key": "dueDateExpression",
													"value": "<string>",
													"description": "Restrict to tasks that are due on the date described by the given expression. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
												},
												{
													"key": "dueAfter",
													"value": "<string>",
													"description": "Restrict to tasks that are due after the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have\nthe format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.435+0200`."
												},
												{
													"key": "dueAfterExpression",
													"value": "<string>",
													"description": "Restrict to tasks that are due after the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
												},
												{
													"key": "dueBefore",
													"value": "<string>",
													"description": "Restrict to tasks that are due before the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have\nthe format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.243+0200`."
												},
												{
													"key": "dueBeforeExpression",
													"value": "<string>",
													"description": "Restrict to tasks that are due before the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
												},
												{
													"key": "withoutDueDate",
													"value": "false",
													"description": "Only include tasks which have no due date. Value may only be `true`, \nas `false` is the default behavior."
												},
												{
													"key": "followUpDate",
													"value": "<string>",
													"description": "Restrict to tasks that have a followUp date on the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date\nmust have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.342+0200`."
												},
												{
													"key": "followUpDateExpression",
													"value": "<string>",
													"description": "Restrict to tasks that have a followUp date on the date described by the given\nexpression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
												},
												{
													"key": "followUpAfter",
													"value": "<string>",
													"description": "Restrict to tasks that have a followUp date after the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the\ndate must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.542+0200`."
												},
												{
													"key": "followUpAfterExpression",
													"value": "<string>",
													"description": "Restrict to tasks that have a followUp date after the date described by the given\nexpression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
												},
												{
													"key": "followUpBefore",
													"value": "<string>",
													"description": "Restrict to tasks that have a followUp date before the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the\ndate must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.234+0200`."
												},
												{
													"key": "followUpBeforeExpression",
													"value": "<string>",
													"description": "Restrict to tasks that have a followUp date before the date described by the given\nexpression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
												},
												{
													"key": "followUpBeforeOrNotExistent",
													"value": "<string>",
													"description": "Restrict to tasks that have no followUp date or a followUp date before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.432+0200`. The\ntypical use case is to query all `active` tasks for a user for a given date."
												},
												{
													"key": "followUpBeforeOrNotExistentExpression",
													"value": "<string>",
													"description": "Restrict to tasks that have no followUp date or a followUp date before the date\ndescribed by the given expression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
												},
												{
													"key": "createdOn",
													"value": "<string>",
													"description": "Restrict to tasks that were created on the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have\nthe format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.324+0200`."
												},
												{
													"key": "createdOnExpression",
													"value": "<string>",
													"description": "Restrict to tasks that were created on the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
												},
												{
													"key": "createdAfter",
													"value": "<string>",
													"description": "Restrict to tasks that were created after the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.342+0200`."
												},
												{
													"key": "createdAfterExpression",
													"value": "<string>",
													"description": "Restrict to tasks that were created after the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
												},
												{
													"key": "createdBefore",
													"value": "<string>",
													"description": "Restrict to tasks that were created before the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.332+0200`."
												},
												{
													"key": "createdBeforeExpression",
													"value": "<string>",
													"description": "Restrict to tasks that were created before the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
												},
												{
													"key": "updatedAfter",
													"value": "<string>",
													"description": "Restrict to tasks that were updated after the given date. Every action that fires \na [task update event](https://docs.camunda.org/manual/7.21/user-guide/process-engine/delegation-code/#task-listener-event-lifecycle) is considered as updating the task.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must\nhave the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.332+0200`."
												},
												{
													"key": "updatedAfterExpression",
													"value": "<string>",
													"description": "Restrict to tasks that were updated after the date described by the given expression. Every action that fires \na [task update event](https://docs.camunda.org/manual/7.21/user-guide/process-engine/delegation-code/#task-listener-event-lifecycle) is considered as updating the task.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
												},
												{
													"key": "delegationState",
													"value": "RESOLVED",
													"description": "Restrict to tasks that are in the given delegation state. Valid values are\n`PENDING` and `RESOLVED`."
												},
												{
													"key": "candidateGroups",
													"value": "<string>",
													"description": "Restrict to tasks that are offered to any of the given candidate groups. Takes a\ncomma-separated list of group names, so for example `developers,support,sales`."
												},
												{
													"key": "candidateGroupsExpression",
													"value": "<string>",
													"description": "Restrict to tasks that are offered to any of the candidate groups described by the\ngiven expression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to\n`java.util.List` of Strings."
												},
												{
													"key": "withCandidateGroups",
													"value": "false",
													"description": "Only include tasks which have a candidate group. Value may only be `true`,\nas `false` is the default behavior."
												},
												{
													"key": "withoutCandidateGroups",
													"value": "false",
													"description": "Only include tasks which have no candidate group. Value may only be `true`,\nas `false` is the default behavior."
												},
												{
													"key": "withCandidateUsers",
													"value": "false",
													"description": "Only include tasks which have a candidate user. Value may only be `true`,\nas `false` is the default behavior."
												},
												{
													"key": "withoutCandidateUsers",
													"value": "false",
													"description": "Only include tasks which have no candidate users. Value may only be `true`,\nas `false` is the default behavior."
												},
												{
													"key": "active",
													"value": "false",
													"description": "Only include active tasks. Value may only be `true`, as `false`\nis the default behavior."
												},
												{
													"key": "suspended",
													"value": "false",
													"description": "Only include suspended tasks. Value may only be `true`, as\n`false` is the default behavior."
												},
												{
													"key": "taskVariables",
													"value": "<string>",
													"description": "Only include tasks that have variables with certain values. Variable filtering\nexpressions are comma-separated and are structured as follows:\n\nA valid parameter value has the form `key_operator_value`. `key` is the variable name,\n`operator` is the comparison operator to be used and `value` the variable value.\n\n**Note**: Values are always treated as String objects on server side.\n\nValid `operator` values are:\n`eq` - equal to;\n`neq` - not equal to;\n`gt` - greater than;\n`gteq` - greater than or equal to;\n`lt` - lower than;\n`lteq` - lower than or equal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
												},
												{
													"key": "processVariables",
													"value": "<string>",
													"description": "Only include tasks that belong to process instances that have variables with certain \nvalues. Variable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`. `key` is the variable name,\n`operator` is the comparison operator to be used and `value` the variable value.\n\n**Note**: Values are always treated as String objects on server side.\n\nValid `operator` values are:\n`eq` - equal to;\n`neq` - not equal to;\n`gt` - greater than;\n`gteq` - greater than or equal to;\n`lt` - lower than;\n`lteq` - lower than or equal to;\n`like`;\n`notLike`.\n`key` and `value` may not contain underscore or comma characters."
												},
												{
													"key": "caseInstanceVariables",
													"value": "<string>",
													"description": "Only include tasks that belong to case instances that have variables with certain\nvalues. Variable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`. `key` is the variable name,\n`operator` is the comparison operator to be used and `value` the variable value.\n\n**Note**: Values are always treated as String objects on server side.\n\nValid `operator` values are:\n`eq` - equal to;\n`neq` - not equal to;\n`gt` - greater than;\n`gteq` - greater than or equal to;\n`lt` - lower than;\n`lteq` - lower than or equal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
												},
												{
													"key": "variableNamesIgnoreCase",
													"value": "false",
													"description": "Match all variable names in this query case-insensitively. If set\n`variableName` and `variablename` are treated as equal."
												},
												{
													"key": "variableValuesIgnoreCase",
													"value": "false",
													"description": "Match all variable values in this query case-insensitively. If set\n`variableValue` and `variablevalue` are treated as equal."
												},
												{
													"key": "parentTaskId",
													"value": "<string>",
													"description": "Restrict query to all tasks that are sub tasks of the given task. Takes a task id."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/task/count?taskId=<string>&taskIdIn=<string>&processInstanceId=<string>&processInstanceIdIn=<string>&processInstanceBusinessKey=<string>&processInstanceBusinessKeyExpression=<string>&processInstanceBusinessKeyIn=<string>&processInstanceBusinessKeyLike=<string>&processInstanceBusinessKeyLikeExpression=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionKeyIn=<string>&processDefinitionName=<string>&processDefinitionNameLike=<string>&executionId=<string>&caseInstanceId=<string>&caseInstanceBusinessKey=<string>&caseInstanceBusinessKeyLike=<string>&caseDefinitionId=<string>&caseDefinitionKey=<string>&caseDefinitionName=<string>&caseDefinitionNameLike=<string>&caseExecutionId=<string>&activityInstanceIdIn=<string>&tenantIdIn=<string>&withoutTenantId=false&assignee=<string>&assigneeExpression=<string>&assigneeLike=<string>&assigneeLikeExpression=<string>&assigneeIn=<string>&assigneeNotIn=<string>&owner=<string>&ownerExpression=<string>&candidateGroup=<string>&candidateGroupExpression=<string>&candidateUser=<string>&candidateUserExpression=<string>&includeAssignedTasks=false&involvedUser=<string>&involvedUserExpression=<string>&assigned=false&unassigned=false&taskDefinitionKey=<string>&taskDefinitionKeyIn=<string>&taskDefinitionKeyLike=<string>&name=<string>&nameNotEqual=<string>&nameLike=<string>&nameNotLike=<string>&description=<string>&descriptionLike=<string>&priority=<integer>&maxPriority=<integer>&minPriority=<integer>&dueDate=<string>&dueDateExpression=<string>&dueAfter=<string>&dueAfterExpression=<string>&dueBefore=<string>&dueBeforeExpression=<string>&withoutDueDate=false&followUpDate=<string>&followUpDateExpression=<string>&followUpAfter=<string>&followUpAfterExpression=<string>&followUpBefore=<string>&followUpBeforeExpression=<string>&followUpBeforeOrNotExistent=<string>&followUpBeforeOrNotExistentExpression=<string>&createdOn=<string>&createdOnExpression=<string>&createdAfter=<string>&createdAfterExpression=<string>&createdBefore=<string>&createdBeforeExpression=<string>&updatedAfter=<string>&updatedAfterExpression=<string>&delegationState=RESOLVED&candidateGroups=<string>&candidateGroupsExpression=<string>&withCandidateGroups=false&withoutCandidateGroups=false&withCandidateUsers=false&withoutCandidateUsers=false&active=false&suspended=false&taskVariables=<string>&processVariables=<string>&caseInstanceVariables=<string>&variableNamesIgnoreCase=false&variableValuesIgnoreCase=false&parentTaskId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												"count"
											],
											"query": [
												{
													"key": "taskId",
													"value": "<string>",
													"description": "Restrict to task with the given id."
												},
												{
													"key": "taskIdIn",
													"value": "<string>",
													"description": "Restrict to tasks with any of the given ids."
												},
												{
													"key": "processInstanceId",
													"value": "<string>",
													"description": "Restrict to tasks that belong to process instances with the given id."
												},
												{
													"key": "processInstanceIdIn",
													"value": "<string>",
													"description": "Restrict to tasks that belong to process instances with the given ids."
												},
												{
													"key": "processInstanceBusinessKey",
													"value": "<string>",
													"description": "Restrict to tasks that belong to process instances with the given business key."
												},
												{
													"key": "processInstanceBusinessKeyExpression",
													"value": "<string>",
													"description": "Restrict to tasks that belong to process instances with the given business key which \nis described by an expression. See the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions."
												},
												{
													"key": "processInstanceBusinessKeyIn",
													"value": "<string>",
													"description": "Restrict to tasks that belong to process instances with one of the give business keys. \nThe keys need to be in a comma-separated list."
												},
												{
													"key": "processInstanceBusinessKeyLike",
													"value": "<string>",
													"description": "Restrict to tasks that have a process instance business key that has the parameter \nvalue as a substring."
												},
												{
													"key": "processInstanceBusinessKeyLikeExpression",
													"value": "<string>",
													"description": "Restrict to tasks that have a process instance business key that has the parameter \nvalue as a substring and is described by an expression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions."
												},
												{
													"key": "processDefinitionId",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a process definition with the given id."
												},
												{
													"key": "processDefinitionKey",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a process definition with the given key."
												},
												{
													"key": "processDefinitionKeyIn",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a process definition with one of the given keys. The \nkeys need to be in a comma-separated list."
												},
												{
													"key": "processDefinitionName",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a process definition with the given name."
												},
												{
													"key": "processDefinitionNameLike",
													"value": "<string>",
													"description": "Restrict to tasks that have a process definition name that has the parameter value as \na substring."
												},
												{
													"key": "executionId",
													"value": "<string>",
													"description": "Restrict to tasks that belong to an execution with the given id."
												},
												{
													"key": "caseInstanceId",
													"value": "<string>",
													"description": "Restrict to tasks that belong to case instances with the given id."
												},
												{
													"key": "caseInstanceBusinessKey",
													"value": "<string>",
													"description": "Restrict to tasks that belong to case instances with the given business key."
												},
												{
													"key": "caseInstanceBusinessKeyLike",
													"value": "<string>",
													"description": "Restrict to tasks that have a case instance business key that has the parameter value \nas a substring."
												},
												{
													"key": "caseDefinitionId",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a case definition with the given id."
												},
												{
													"key": "caseDefinitionKey",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a case definition with the given key."
												},
												{
													"key": "caseDefinitionName",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a case definition with the given name."
												},
												{
													"key": "caseDefinitionNameLike",
													"value": "<string>",
													"description": "Restrict to tasks that have a case definition name that has the parameter value as a \nsubstring."
												},
												{
													"key": "caseExecutionId",
													"value": "<string>",
													"description": "Restrict to tasks that belong to a case execution with the given id."
												},
												{
													"key": "activityInstanceIdIn",
													"value": "<string>",
													"description": "Only include tasks which belong to one of the passed and comma-separated activity \ninstance ids."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Only include tasks which belong to one of the passed and comma-separated \ntenant ids."
												},
												{
													"key": "withoutTenantId",
													"value": "false",
													"description": "Only include tasks which belong to no tenant. Value may only be `true`, \nas `false` is the default behavior."
												},
												{
													"key": "assignee",
													"value": "<string>",
													"description": "Restrict to tasks that the given user is assigned to."
												},
												{
													"key": "assigneeExpression",
													"value": "<string>",
													"description": "Restrict to tasks that the user described by the given expression is assigned to. \nSee the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions."
												},
												{
													"key": "assigneeLike",
													"value": "<string>",
													"description": "Restrict to tasks that have an assignee that has the parameter \nvalue as a substring."
												},
												{
													"key": "assigneeLikeExpression",
													"value": "<string>",
													"description": "Restrict to tasks that have an assignee that has the parameter value described by the \ngiven expression as a substring. See the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions."
												},
												{
													"key": "assigneeIn",
													"value": "<string>",
													"description": "Only include tasks which are assigned to one of the passed and \ncomma-separated user ids."
												},
												{
													"key": "assigneeNotIn",
													"value": "<string>",
													"description": "Only include tasks which are not assigned to one of the passed and\ncomma-separated user ids."
												},
												{
													"key": "owner",
													"value": "<string>",
													"description": "Restrict to tasks that the given user owns."
												},
												{
													"key": "ownerExpression",
													"value": "<string>",
													"description": "Restrict to tasks that the user described by the given expression owns. See the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions."
												},
												{
													"key": "candidateGroup",
													"value": "<string>",
													"description": "Only include tasks that are offered to the given group."
												},
												{
													"key": "candidateGroupExpression",
													"value": "<string>",
													"description": "Only include tasks that are offered to the group described by the given expression. \nSee the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions."
												},
												{
													"key": "candidateUser",
													"value": "<string>",
													"description": "Only include tasks that are offered to the given user or to one of his groups."
												},
												{
													"key": "candidateUserExpression",
													"value": "<string>",
													"description": "Only include tasks that are offered to the user described by the given expression. \nSee the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions."
												},
												{
													"key": "includeAssignedTasks",
													"value": "false",
													"description": "Also include tasks that are assigned to users in candidate queries. Default is to only \ninclude tasks that are not assigned to any user if you query by candidate user or\ngroup(s)."
												},
												{
													"key": "involvedUser",
													"value": "<string>",
													"description": "Only include tasks that the given user is involved in. A user is involved in a task if \nan identity link exists between task and user (e.g., the user is the assignee)."
												},
												{
													"key": "involvedUserExpression",
													"value": "<string>",
													"description": "Only include tasks that the user described by the given expression is involved in.\nA user is involved in a task if an identity link exists between task and user\n(e.g., the user is the assignee). See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions."
												},
												{
													"key": "assigned",
													"value": "false",
													"description": "If set to `true`, restricts the query to all tasks that are assigned."
												},
												{
													"key": "unassigned",
													"value": "false",
													"description": "If set to `true`, restricts the query to all tasks that are unassigned."
												},
												{
													"key": "taskDefinitionKey",
													"value": "<string>",
													"description": "Restrict to tasks that have the given key."
												},
												{
													"key": "taskDefinitionKeyIn",
													"value": "<string>",
													"description": "Restrict to tasks that have one of the given keys. The keys need to be in a\ncomma-separated list."
												},
												{
													"key": "taskDefinitionKeyLike",
													"value": "<string>",
													"description": "Restrict to tasks that have a key that has the parameter value as a substring."
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "Restrict to tasks that have the given name."
												},
												{
													"key": "nameNotEqual",
													"value": "<string>",
													"description": "Restrict to tasks that do not have the given name."
												},
												{
													"key": "nameLike",
													"value": "<string>",
													"description": "Restrict to tasks that have a name with the given parameter value as substring."
												},
												{
													"key": "nameNotLike",
													"value": "<string>",
													"description": "Restrict to tasks that do not have a name with the given parameter\nvalue as substring."
												},
												{
													"key": "description",
													"value": "<string>",
													"description": "Restrict to tasks that have the given description."
												},
												{
													"key": "descriptionLike",
													"value": "<string>",
													"description": "Restrict to tasks that have a description that has the parameter\nvalue as a substring."
												},
												{
													"key": "priority",
													"value": "<integer>",
													"description": "Restrict to tasks that have the given priority."
												},
												{
													"key": "maxPriority",
													"value": "<integer>",
													"description": "Restrict to tasks that have a lower or equal priority."
												},
												{
													"key": "minPriority",
													"value": "<integer>",
													"description": "Restrict to tasks that have a higher or equal priority."
												},
												{
													"key": "dueDate",
													"value": "<string>",
													"description": "Restrict to tasks that are due on the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.546+0200`."
												},
												{
													"key": "dueDateExpression",
													"value": "<string>",
													"description": "Restrict to tasks that are due on the date described by the given expression. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
												},
												{
													"key": "dueAfter",
													"value": "<string>",
													"description": "Restrict to tasks that are due after the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have\nthe format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.435+0200`."
												},
												{
													"key": "dueAfterExpression",
													"value": "<string>",
													"description": "Restrict to tasks that are due after the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
												},
												{
													"key": "dueBefore",
													"value": "<string>",
													"description": "Restrict to tasks that are due before the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have\nthe format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.243+0200`."
												},
												{
													"key": "dueBeforeExpression",
													"value": "<string>",
													"description": "Restrict to tasks that are due before the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
												},
												{
													"key": "withoutDueDate",
													"value": "false",
													"description": "Only include tasks which have no due date. Value may only be `true`, \nas `false` is the default behavior."
												},
												{
													"key": "followUpDate",
													"value": "<string>",
													"description": "Restrict to tasks that have a followUp date on the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date\nmust have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.342+0200`."
												},
												{
													"key": "followUpDateExpression",
													"value": "<string>",
													"description": "Restrict to tasks that have a followUp date on the date described by the given\nexpression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
												},
												{
													"key": "followUpAfter",
													"value": "<string>",
													"description": "Restrict to tasks that have a followUp date after the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the\ndate must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.542+0200`."
												},
												{
													"key": "followUpAfterExpression",
													"value": "<string>",
													"description": "Restrict to tasks that have a followUp date after the date described by the given\nexpression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
												},
												{
													"key": "followUpBefore",
													"value": "<string>",
													"description": "Restrict to tasks that have a followUp date before the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the\ndate must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.234+0200`."
												},
												{
													"key": "followUpBeforeExpression",
													"value": "<string>",
													"description": "Restrict to tasks that have a followUp date before the date described by the given\nexpression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
												},
												{
													"key": "followUpBeforeOrNotExistent",
													"value": "<string>",
													"description": "Restrict to tasks that have no followUp date or a followUp date before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.432+0200`. The\ntypical use case is to query all `active` tasks for a user for a given date."
												},
												{
													"key": "followUpBeforeOrNotExistentExpression",
													"value": "<string>",
													"description": "Restrict to tasks that have no followUp date or a followUp date before the date\ndescribed by the given expression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
												},
												{
													"key": "createdOn",
													"value": "<string>",
													"description": "Restrict to tasks that were created on the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have\nthe format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.324+0200`."
												},
												{
													"key": "createdOnExpression",
													"value": "<string>",
													"description": "Restrict to tasks that were created on the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
												},
												{
													"key": "createdAfter",
													"value": "<string>",
													"description": "Restrict to tasks that were created after the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.342+0200`."
												},
												{
													"key": "createdAfterExpression",
													"value": "<string>",
													"description": "Restrict to tasks that were created after the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
												},
												{
													"key": "createdBefore",
													"value": "<string>",
													"description": "Restrict to tasks that were created before the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.332+0200`."
												},
												{
													"key": "createdBeforeExpression",
													"value": "<string>",
													"description": "Restrict to tasks that were created before the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
												},
												{
													"key": "updatedAfter",
													"value": "<string>",
													"description": "Restrict to tasks that were updated after the given date. Every action that fires \na [task update event](https://docs.camunda.org/manual/7.21/user-guide/process-engine/delegation-code/#task-listener-event-lifecycle) is considered as updating the task.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must\nhave the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.332+0200`."
												},
												{
													"key": "updatedAfterExpression",
													"value": "<string>",
													"description": "Restrict to tasks that were updated after the date described by the given expression. Every action that fires \na [task update event](https://docs.camunda.org/manual/7.21/user-guide/process-engine/delegation-code/#task-listener-event-lifecycle) is considered as updating the task.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
												},
												{
													"key": "delegationState",
													"value": "RESOLVED",
													"description": "Restrict to tasks that are in the given delegation state. Valid values are\n`PENDING` and `RESOLVED`."
												},
												{
													"key": "candidateGroups",
													"value": "<string>",
													"description": "Restrict to tasks that are offered to any of the given candidate groups. Takes a\ncomma-separated list of group names, so for example `developers,support,sales`."
												},
												{
													"key": "candidateGroupsExpression",
													"value": "<string>",
													"description": "Restrict to tasks that are offered to any of the candidate groups described by the\ngiven expression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to\n`java.util.List` of Strings."
												},
												{
													"key": "withCandidateGroups",
													"value": "false",
													"description": "Only include tasks which have a candidate group. Value may only be `true`,\nas `false` is the default behavior."
												},
												{
													"key": "withoutCandidateGroups",
													"value": "false",
													"description": "Only include tasks which have no candidate group. Value may only be `true`,\nas `false` is the default behavior."
												},
												{
													"key": "withCandidateUsers",
													"value": "false",
													"description": "Only include tasks which have a candidate user. Value may only be `true`,\nas `false` is the default behavior."
												},
												{
													"key": "withoutCandidateUsers",
													"value": "false",
													"description": "Only include tasks which have no candidate users. Value may only be `true`,\nas `false` is the default behavior."
												},
												{
													"key": "active",
													"value": "false",
													"description": "Only include active tasks. Value may only be `true`, as `false`\nis the default behavior."
												},
												{
													"key": "suspended",
													"value": "false",
													"description": "Only include suspended tasks. Value may only be `true`, as\n`false` is the default behavior."
												},
												{
													"key": "taskVariables",
													"value": "<string>",
													"description": "Only include tasks that have variables with certain values. Variable filtering\nexpressions are comma-separated and are structured as follows:\n\nA valid parameter value has the form `key_operator_value`. `key` is the variable name,\n`operator` is the comparison operator to be used and `value` the variable value.\n\n**Note**: Values are always treated as String objects on server side.\n\nValid `operator` values are:\n`eq` - equal to;\n`neq` - not equal to;\n`gt` - greater than;\n`gteq` - greater than or equal to;\n`lt` - lower than;\n`lteq` - lower than or equal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
												},
												{
													"key": "processVariables",
													"value": "<string>",
													"description": "Only include tasks that belong to process instances that have variables with certain \nvalues. Variable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`. `key` is the variable name,\n`operator` is the comparison operator to be used and `value` the variable value.\n\n**Note**: Values are always treated as String objects on server side.\n\nValid `operator` values are:\n`eq` - equal to;\n`neq` - not equal to;\n`gt` - greater than;\n`gteq` - greater than or equal to;\n`lt` - lower than;\n`lteq` - lower than or equal to;\n`like`;\n`notLike`.\n`key` and `value` may not contain underscore or comma characters."
												},
												{
													"key": "caseInstanceVariables",
													"value": "<string>",
													"description": "Only include tasks that belong to case instances that have variables with certain\nvalues. Variable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`. `key` is the variable name,\n`operator` is the comparison operator to be used and `value` the variable value.\n\n**Note**: Values are always treated as String objects on server side.\n\nValid `operator` values are:\n`eq` - equal to;\n`neq` - not equal to;\n`gt` - greater than;\n`gteq` - greater than or equal to;\n`lt` - lower than;\n`lteq` - lower than or equal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
												},
												{
													"key": "variableNamesIgnoreCase",
													"value": "false",
													"description": "Match all variable names in this query case-insensitively. If set\n`variableName` and `variablename` are treated as equal."
												},
												{
													"key": "variableValuesIgnoreCase",
													"value": "false",
													"description": "Match all variable values in this query case-insensitively. If set\n`variableValue` and `variablevalue` are treated as equal."
												},
												{
													"key": "parentTaskId",
													"value": "<string>",
													"description": "Restrict query to all tasks that are sub tasks of the given task. Takes a task id."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get List Count (POST)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"taskId\": \"<string>\",\n  \"taskIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKey\": \"<string>\",\n  \"processInstanceBusinessKeyExpression\": \"<string>\",\n  \"processInstanceBusinessKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKeyLike\": \"<string>\",\n  \"processInstanceBusinessKeyLikeExpression\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionName\": \"<string>\",\n  \"processDefinitionNameLike\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"caseInstanceBusinessKey\": \"<string>\",\n  \"caseInstanceBusinessKeyLike\": \"<string>\",\n  \"caseDefinitionId\": \"<string>\",\n  \"caseDefinitionKey\": \"<string>\",\n  \"caseDefinitionName\": \"<string>\",\n  \"caseDefinitionNameLike\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": false,\n  \"assignee\": \"<string>\",\n  \"assigneeExpression\": \"<string>\",\n  \"assigneeLike\": \"<string>\",\n  \"assigneeLikeExpression\": \"<string>\",\n  \"assigneeIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"assigneeNotIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"owner\": \"<string>\",\n  \"ownerExpression\": \"<string>\",\n  \"candidateGroup\": \"<string>\",\n  \"candidateGroupExpression\": \"<string>\",\n  \"candidateUser\": \"<string>\",\n  \"candidateUserExpression\": \"<string>\",\n  \"includeAssignedTasks\": false,\n  \"involvedUser\": \"<string>\",\n  \"involvedUserExpression\": \"<string>\",\n  \"assigned\": false,\n  \"unassigned\": false,\n  \"taskDefinitionKey\": \"<string>\",\n  \"taskDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskDefinitionKeyLike\": \"<string>\",\n  \"name\": \"<string>\",\n  \"nameNotEqual\": \"<string>\",\n  \"nameLike\": \"<string>\",\n  \"nameNotLike\": \"<string>\",\n  \"description\": \"<string>\",\n  \"descriptionLike\": \"<string>\",\n  \"priority\": \"<integer>\",\n  \"maxPriority\": \"<integer>\",\n  \"minPriority\": \"<integer>\",\n  \"dueDate\": \"<dateTime>\",\n  \"dueDateExpression\": \"<string>\",\n  \"dueAfter\": \"<dateTime>\",\n  \"dueAfterExpression\": \"<string>\",\n  \"dueBefore\": \"<dateTime>\",\n  \"dueBeforeExpression\": \"<string>\",\n  \"withoutDueDate\": false,\n  \"followUpDate\": \"<dateTime>\",\n  \"followUpDateExpression\": \"<string>\",\n  \"followUpAfter\": \"<dateTime>\",\n  \"followUpAfterExpression\": \"<string>\",\n  \"followUpBefore\": \"<string>\",\n  \"followUpBeforeExpression\": \"<string>\",\n  \"followUpBeforeOrNotExistent\": \"<dateTime>\",\n  \"followUpBeforeOrNotExistentExpression\": \"<string>\",\n  \"createdOn\": \"<dateTime>\",\n  \"createdOnExpression\": \"<string>\",\n  \"createdAfter\": \"<dateTime>\",\n  \"createdAfterExpression\": \"<string>\",\n  \"createdBefore\": \"<dateTime>\",\n  \"createdBeforeExpression\": \"<string>\",\n  \"updatedAfter\": \"<dateTime>\",\n  \"updatedAfterExpression\": \"<string>\",\n  \"delegationState\": \"RESOLVED\",\n  \"candidateGroups\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"candidateGroupsExpression\": \"<string>\",\n  \"withCandidateGroups\": false,\n  \"withoutCandidateGroups\": false,\n  \"withCandidateUsers\": false,\n  \"withoutCandidateUsers\": false,\n  \"active\": false,\n  \"suspended\": false,\n  \"taskVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"neq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"processVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"caseInstanceVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"like\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": false,\n  \"variableValuesIgnoreCase\": false,\n  \"parentTaskId\": \"<string>\",\n  \"orQueries\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/TaskQueryDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/TaskQueryDto detected>\"\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"name\",\n      \"sortOrder\": \"desc\",\n      \"parameters\": {\n        \"variable\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"sortBy\": \"dueDate\",\n      \"sortOrder\": \"desc\",\n      \"parameters\": {\n        \"variable\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/task/count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"count"
									]
								},
								"description": "Retrieves the number of tasks that fulfill the given filter. Corresponds to the size\nof the result set of the [Get Tasks (POST)](https://docs.camunda.org/manual/7.21/reference/rest/task/post-query/)\nmethod and takes the same parameters.\n\n**Security Consideration**:\nThere are several parameters (such as `assigneeExpression`) for specifying an EL\nexpression. These are disabled by default to prevent remote code execution. See the\nsection on\n[security considerations for custom code](https://docs.camunda.org/manual/7.21/user-guide/process-engine/securing-custom-code/)\nin the user guide for details."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"taskId\": \"<string>\",\n  \"taskIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKey\": \"<string>\",\n  \"processInstanceBusinessKeyExpression\": \"<string>\",\n  \"processInstanceBusinessKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKeyLike\": \"<string>\",\n  \"processInstanceBusinessKeyLikeExpression\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionName\": \"<string>\",\n  \"processDefinitionNameLike\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"caseInstanceBusinessKey\": \"<string>\",\n  \"caseInstanceBusinessKeyLike\": \"<string>\",\n  \"caseDefinitionId\": \"<string>\",\n  \"caseDefinitionKey\": \"<string>\",\n  \"caseDefinitionName\": \"<string>\",\n  \"caseDefinitionNameLike\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": false,\n  \"assignee\": \"<string>\",\n  \"assigneeExpression\": \"<string>\",\n  \"assigneeLike\": \"<string>\",\n  \"assigneeLikeExpression\": \"<string>\",\n  \"assigneeIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"assigneeNotIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"owner\": \"<string>\",\n  \"ownerExpression\": \"<string>\",\n  \"candidateGroup\": \"<string>\",\n  \"candidateGroupExpression\": \"<string>\",\n  \"candidateUser\": \"<string>\",\n  \"candidateUserExpression\": \"<string>\",\n  \"includeAssignedTasks\": false,\n  \"involvedUser\": \"<string>\",\n  \"involvedUserExpression\": \"<string>\",\n  \"assigned\": false,\n  \"unassigned\": false,\n  \"taskDefinitionKey\": \"<string>\",\n  \"taskDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskDefinitionKeyLike\": \"<string>\",\n  \"name\": \"<string>\",\n  \"nameNotEqual\": \"<string>\",\n  \"nameLike\": \"<string>\",\n  \"nameNotLike\": \"<string>\",\n  \"description\": \"<string>\",\n  \"descriptionLike\": \"<string>\",\n  \"priority\": \"<integer>\",\n  \"maxPriority\": \"<integer>\",\n  \"minPriority\": \"<integer>\",\n  \"dueDate\": \"<dateTime>\",\n  \"dueDateExpression\": \"<string>\",\n  \"dueAfter\": \"<dateTime>\",\n  \"dueAfterExpression\": \"<string>\",\n  \"dueBefore\": \"<dateTime>\",\n  \"dueBeforeExpression\": \"<string>\",\n  \"withoutDueDate\": false,\n  \"followUpDate\": \"<dateTime>\",\n  \"followUpDateExpression\": \"<string>\",\n  \"followUpAfter\": \"<dateTime>\",\n  \"followUpAfterExpression\": \"<string>\",\n  \"followUpBefore\": \"<string>\",\n  \"followUpBeforeExpression\": \"<string>\",\n  \"followUpBeforeOrNotExistent\": \"<dateTime>\",\n  \"followUpBeforeOrNotExistentExpression\": \"<string>\",\n  \"createdOn\": \"<dateTime>\",\n  \"createdOnExpression\": \"<string>\",\n  \"createdAfter\": \"<dateTime>\",\n  \"createdAfterExpression\": \"<string>\",\n  \"createdBefore\": \"<dateTime>\",\n  \"createdBeforeExpression\": \"<string>\",\n  \"updatedAfter\": \"<dateTime>\",\n  \"updatedAfterExpression\": \"<string>\",\n  \"delegationState\": \"RESOLVED\",\n  \"candidateGroups\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"candidateGroupsExpression\": \"<string>\",\n  \"withCandidateGroups\": false,\n  \"withoutCandidateGroups\": false,\n  \"withCandidateUsers\": false,\n  \"withoutCandidateUsers\": false,\n  \"active\": false,\n  \"suspended\": false,\n  \"taskVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"neq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"processVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"caseInstanceVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"like\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": false,\n  \"variableValuesIgnoreCase\": false,\n  \"parentTaskId\": \"<string>\",\n  \"orQueries\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/TaskQueryDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/TaskQueryDto detected>\"\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"name\",\n      \"sortOrder\": \"desc\",\n      \"parameters\": {\n        \"variable\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"sortBy\": \"dueDate\",\n      \"sortOrder\": \"desc\",\n      \"parameters\": {\n        \"variable\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/task/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												"count"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"taskId\": \"<string>\",\n  \"taskIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKey\": \"<string>\",\n  \"processInstanceBusinessKeyExpression\": \"<string>\",\n  \"processInstanceBusinessKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKeyLike\": \"<string>\",\n  \"processInstanceBusinessKeyLikeExpression\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionName\": \"<string>\",\n  \"processDefinitionNameLike\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"caseInstanceBusinessKey\": \"<string>\",\n  \"caseInstanceBusinessKeyLike\": \"<string>\",\n  \"caseDefinitionId\": \"<string>\",\n  \"caseDefinitionKey\": \"<string>\",\n  \"caseDefinitionName\": \"<string>\",\n  \"caseDefinitionNameLike\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": false,\n  \"assignee\": \"<string>\",\n  \"assigneeExpression\": \"<string>\",\n  \"assigneeLike\": \"<string>\",\n  \"assigneeLikeExpression\": \"<string>\",\n  \"assigneeIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"assigneeNotIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"owner\": \"<string>\",\n  \"ownerExpression\": \"<string>\",\n  \"candidateGroup\": \"<string>\",\n  \"candidateGroupExpression\": \"<string>\",\n  \"candidateUser\": \"<string>\",\n  \"candidateUserExpression\": \"<string>\",\n  \"includeAssignedTasks\": false,\n  \"involvedUser\": \"<string>\",\n  \"involvedUserExpression\": \"<string>\",\n  \"assigned\": false,\n  \"unassigned\": false,\n  \"taskDefinitionKey\": \"<string>\",\n  \"taskDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskDefinitionKeyLike\": \"<string>\",\n  \"name\": \"<string>\",\n  \"nameNotEqual\": \"<string>\",\n  \"nameLike\": \"<string>\",\n  \"nameNotLike\": \"<string>\",\n  \"description\": \"<string>\",\n  \"descriptionLike\": \"<string>\",\n  \"priority\": \"<integer>\",\n  \"maxPriority\": \"<integer>\",\n  \"minPriority\": \"<integer>\",\n  \"dueDate\": \"<dateTime>\",\n  \"dueDateExpression\": \"<string>\",\n  \"dueAfter\": \"<dateTime>\",\n  \"dueAfterExpression\": \"<string>\",\n  \"dueBefore\": \"<dateTime>\",\n  \"dueBeforeExpression\": \"<string>\",\n  \"withoutDueDate\": false,\n  \"followUpDate\": \"<dateTime>\",\n  \"followUpDateExpression\": \"<string>\",\n  \"followUpAfter\": \"<dateTime>\",\n  \"followUpAfterExpression\": \"<string>\",\n  \"followUpBefore\": \"<string>\",\n  \"followUpBeforeExpression\": \"<string>\",\n  \"followUpBeforeOrNotExistent\": \"<dateTime>\",\n  \"followUpBeforeOrNotExistentExpression\": \"<string>\",\n  \"createdOn\": \"<dateTime>\",\n  \"createdOnExpression\": \"<string>\",\n  \"createdAfter\": \"<dateTime>\",\n  \"createdAfterExpression\": \"<string>\",\n  \"createdBefore\": \"<dateTime>\",\n  \"createdBeforeExpression\": \"<string>\",\n  \"updatedAfter\": \"<dateTime>\",\n  \"updatedAfterExpression\": \"<string>\",\n  \"delegationState\": \"RESOLVED\",\n  \"candidateGroups\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"candidateGroupsExpression\": \"<string>\",\n  \"withCandidateGroups\": false,\n  \"withoutCandidateGroups\": false,\n  \"withCandidateUsers\": false,\n  \"withoutCandidateUsers\": false,\n  \"active\": false,\n  \"suspended\": false,\n  \"taskVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"neq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"processVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"caseInstanceVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"like\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": false,\n  \"variableValuesIgnoreCase\": false,\n  \"parentTaskId\": \"<string>\",\n  \"orQueries\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/TaskQueryDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/TaskQueryDto detected>\"\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"name\",\n      \"sortOrder\": \"desc\",\n      \"parameters\": {\n        \"variable\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"sortBy\": \"dueDate\",\n      \"sortOrder\": \"desc\",\n      \"parameters\": {\n        \"variable\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/task/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												"count"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "create",
					"item": [
						{
							"name": "Create",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"assignee\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"created\": \"<dateTime>\",\n  \"lastUpdated\": \"<dateTime>\",\n  \"due\": \"<dateTime>\",\n  \"followUp\": \"<dateTime>\",\n  \"delegationState\": \"PENDING\",\n  \"description\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"parentTaskId\": \"<string>\",\n  \"priority\": \"<integer>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"caseDefinitionId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"taskDefinitionKey\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"formKey\": \"<string>\",\n  \"camundaFormRef\": {\n    \"key\": \"<string>\",\n    \"binding\": \"<string>\",\n    \"version\": \"<integer>\"\n  },\n  \"tenantId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/task/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										"create"
									]
								},
								"description": "Creates a new task."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"assignee\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"created\": \"<dateTime>\",\n  \"lastUpdated\": \"<dateTime>\",\n  \"due\": \"<dateTime>\",\n  \"followUp\": \"<dateTime>\",\n  \"delegationState\": \"PENDING\",\n  \"description\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"parentTaskId\": \"<string>\",\n  \"priority\": \"<integer>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"caseDefinitionId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"taskDefinitionKey\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"formKey\": \"<string>\",\n  \"camundaFormRef\": {\n    \"key\": \"<string>\",\n    \"binding\": \"<string>\",\n    \"version\": \"<integer>\"\n  },\n  \"tenantId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/task/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												"create"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if a not valid `delegationState` is supplied. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"assignee\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"created\": \"<dateTime>\",\n  \"lastUpdated\": \"<dateTime>\",\n  \"due\": \"<dateTime>\",\n  \"followUp\": \"<dateTime>\",\n  \"delegationState\": \"PENDING\",\n  \"description\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"parentTaskId\": \"<string>\",\n  \"priority\": \"<integer>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"caseDefinitionId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"taskDefinitionKey\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"formKey\": \"<string>\",\n  \"camundaFormRef\": {\n    \"key\": \"<string>\",\n    \"binding\": \"<string>\",\n    \"version\": \"<integer>\"\n  },\n  \"tenantId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/task/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												"create"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "report",
					"item": [
						{
							"name": "candidate-group-count",
							"item": [
								{
									"name": "Get Task Count By Candidate Group",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/task/report/candidate-group-count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												"report",
												"candidate-group-count"
											]
										},
										"description": "Retrieves the number of tasks for each candidate group."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/report/candidate-group-count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														"report",
														"candidate-group-count"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"groupName\": \"<string>\",\n    \"taskCount\": \"<integer>\"\n  },\n  {\n    \"groupName\": \"<string>\",\n    \"taskCount\": \"<integer>\"\n  }\n]"
										},
										{
											"name": "Returned if some of the query parameters are invalid or mandatory parameters are not supplied. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/report/candidate-group-count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														"report",
														"candidate-group-count"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "If the authenticated user is unauthorized to read the history. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/report/candidate-group-count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														"report",
														"candidate-group-count"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "assignee",
							"item": [
								{
									"name": "Set Assignee",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/task/:id/assignee",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id",
												"assignee"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the task to set the assignee for."
												}
											]
										},
										"description": "Changes the assignee of a task to a specific user.\n\n**Note:** The difference with the [Claim Task](https://docs.camunda.org/manual/7.21/reference/rest/task/post-claim/)\nmethod is that this method does not check if the task already has a user\nassigned to it."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/assignee",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"assignee"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Task with given id does not exist or setting the assignee was not successful.\nSee the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/assignee",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"assignee"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "attachment",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Create",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "attachment-name",
															"value": "<string>",
															"description": "The name of the attachment.",
															"type": "text"
														},
														{
															"key": "attachment-description",
															"value": "<string>",
															"description": "The description of the attachment.",
															"type": "text"
														},
														{
															"key": "attachment-type",
															"value": "<string>",
															"description": "The type of the attachment.",
															"type": "text"
														},
														{
															"key": "url",
															"value": "<string>",
															"description": "The url to the remote content of the attachment.",
															"type": "text"
														},
														{
															"key": "content",
															"value": "<string>",
															"description": "The content of the attachment.",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/attachment/create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"attachment",
														"create"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the task to add the attachment to."
														}
													]
												},
												"description": "Creates an attachment for a task."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "attachment-name",
																	"value": "<string>",
																	"description": "The name of the attachment.",
																	"type": "text"
																},
																{
																	"key": "attachment-description",
																	"value": "<string>",
																	"description": "The description of the attachment.",
																	"type": "text"
																},
																{
																	"key": "attachment-type",
																	"value": "<string>",
																	"description": "The type of the attachment.",
																	"type": "text"
																},
																{
																	"key": "url",
																	"value": "<string>",
																	"description": "The url to the remote content of the attachment.",
																	"type": "text"
																},
																{
																	"key": "content",
																	"value": "<string>",
																	"description": "The content of the attachment.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/task/:id/attachment/create",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"attachment",
																"create"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"taskId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"url\": \"<string>\",\n  \"createTime\": \"<dateTime>\",\n  \"removalTime\": \"<dateTime>\",\n  \"rootProcessInstanceId\": \"<string>\",\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The task does not exists or task id is null. No content or url to remote content exists. See the\n[Introduction](/reference/rest/overview/#error-handling) for the error response format.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "attachment-name",
																	"value": "<string>",
																	"description": "The name of the attachment.",
																	"type": "text"
																},
																{
																	"key": "attachment-description",
																	"value": "<string>",
																	"description": "The description of the attachment.",
																	"type": "text"
																},
																{
																	"key": "attachment-type",
																	"value": "<string>",
																	"description": "The type of the attachment.",
																	"type": "text"
																},
																{
																	"key": "url",
																	"value": "<string>",
																	"description": "The url to the remote content of the attachment.",
																	"type": "text"
																},
																{
																	"key": "content",
																	"value": "<string>",
																	"description": "The content of the attachment.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/task/:id/attachment/create",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"attachment",
																"create"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "The history of the engine is disabled. See the [Introduction](/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "attachment-name",
																	"value": "<string>",
																	"description": "The name of the attachment.",
																	"type": "text"
																},
																{
																	"key": "attachment-description",
																	"value": "<string>",
																	"description": "The description of the attachment.",
																	"type": "text"
																},
																{
																	"key": "attachment-type",
																	"value": "<string>",
																	"description": "The type of the attachment.",
																	"type": "text"
																},
																{
																	"key": "url",
																	"value": "<string>",
																	"description": "The url to the remote content of the attachment.",
																	"type": "text"
																},
																{
																	"key": "content",
																	"value": "<string>",
																	"description": "The content of the attachment.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/task/:id/attachment/create",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"attachment",
																"create"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"userId\": \"<string>\",\n  \"missingAuthorizations\": [\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    },\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "{attachmentId}",
									"item": [
										{
											"name": "data",
											"item": [
												{
													"name": "Get (Binary)",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/octet-stream"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/task/:id/attachment/:attachmentId/data",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"attachment",
																":attachmentId",
																"data"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The id of the task."
																},
																{
																	"key": "attachmentId",
																	"value": "<string>",
																	"description": "(Required) The id of the attachment to be retrieved."
																}
															]
														},
														"description": "Retrieves the binary content of a task attachment by task id and attachment id."
													},
													"response": [
														{
															"name": "Request successful.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/octet-stream"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/task/:id/attachment/:attachmentId/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"task",
																		":id",
																		"attachment",
																		":attachmentId",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "attachmentId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": "<string>"
														},
														{
															"name": "The attachment content for the given task id and attachment id does not exist, or the history of the\nengine is disabled.\n\nSee the [Introduction](/reference/rest/overview/#error-handling) for the error response format.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/task/:id/attachment/:attachmentId/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"task",
																		":id",
																		"attachment",
																		":attachmentId",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "attachmentId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Delete",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/attachment/:attachmentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"attachment",
														":attachmentId"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the task."
														},
														{
															"key": "attachmentId",
															"value": "<string>",
															"description": "(Required) The id of the attachment to be removed."
														}
													]
												},
												"description": "Removes an attachment from a task by id."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/task/:id/attachment/:attachmentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"attachment",
																":attachmentId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "attachmentId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The history of the engine is disabled. See the [Introduction](/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/task/:id/attachment/:attachmentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"attachment",
																":attachmentId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "attachmentId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"userId\": \"<string>\",\n  \"missingAuthorizations\": [\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    },\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "A Task Attachment for the given task id and attachment id does not exist. See the\n[Introduction](/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/task/:id/attachment/:attachmentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"attachment",
																":attachmentId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "attachmentId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										},
										{
											"name": "Get",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/attachment/:attachmentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"attachment",
														":attachmentId"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the task."
														},
														{
															"key": "attachmentId",
															"value": "<string>",
															"description": "(Required) The id of the attachment to be retrieved."
														}
													]
												},
												"description": "Retrieves a task attachment by task id and attachment id."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/task/:id/attachment/:attachmentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"attachment",
																":attachmentId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "attachmentId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"taskId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"url\": \"<string>\",\n  \"createTime\": \"<dateTime>\",\n  \"removalTime\": \"<dateTime>\",\n  \"rootProcessInstanceId\": \"<string>\",\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The attachment for the given task and attachment id does not exist or the history of the engine is\ndisabled.\n\nSee the [Introduction](/reference/rest/overview/#error-handling) for the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/task/:id/attachment/:attachmentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"attachment",
																":attachmentId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "attachmentId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get List",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/task/:id/attachment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id",
												"attachment"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the task to retrieve the attachments for."
												}
											]
										},
										"description": "Gets the attachments for a task."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/attachment",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"attachment"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"url\": \"<string>\",\n    \"createTime\": \"<dateTime>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"links\": [\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      },\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      }\n    ]\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"url\": \"<string>\",\n    \"createTime\": \"<dateTime>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"links\": [\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      },\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      }\n    ]\n  }\n]"
										},
										{
											"name": "No task exists for the given task id. See the [Introduction](/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/attachment",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"attachment"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "bpmnError",
							"item": [
								{
									"name": "Handle BPMN Error",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"variables\": {\n    \"Duis_2e\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sunt3\": \"tempor voluptate laborum\",\n        \"incididuntd8\": 44425245.7635636\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/task/:id/bpmnError",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id",
												"bpmnError"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the task a BPMN error is reported for."
												}
											]
										},
										"description": "Reports a business error in the context of a running task by id. The error code must\nbe specified to identify the BPMN error handler. See the documentation for\n[Reporting Bpmn Error](https://docs.camunda.org/manual/7.21/reference/bpmn20/tasks/user-task/#reporting-bpmn-error)\nin User Tasks."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"variables\": {\n    \"Duis_2e\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sunt3\": \"tempor voluptate laborum\",\n        \"incididuntd8\": 44425245.7635636\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/bpmnError",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"bpmnError"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the `errorCode` or `id` are not present in the request. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"variables\": {\n    \"Duis_2e\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sunt3\": \"tempor voluptate laborum\",\n        \"incididuntd8\": 44425245.7635636\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/bpmnError",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"bpmnError"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "If the authenticated user is unauthorized to update the task. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"variables\": {\n    \"Duis_2e\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sunt3\": \"tempor voluptate laborum\",\n        \"incididuntd8\": 44425245.7635636\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/bpmnError",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"bpmnError"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"userId\": \"<string>\",\n  \"missingAuthorizations\": [\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    },\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Returned if the task does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"variables\": {\n    \"Duis_2e\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sunt3\": \"tempor voluptate laborum\",\n        \"incididuntd8\": 44425245.7635636\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/bpmnError",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"bpmnError"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "bpmnEscalation",
							"item": [
								{
									"name": "Handle BPMN Escalation",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"escalationCode\": \"<string>\",\n  \"variables\": {\n    \"anim_a2c\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sedc0e\": true,\n        \"proident03\": -86659003\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/task/:id/bpmnEscalation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id",
												"bpmnEscalation"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the task in which context a BPMN escalation is reported."
												}
											]
										},
										"description": "Reports an escalation in the context of a running task by id. The escalation code must\nbe specified to identify the escalation handler. See the documentation for\n[Reporting Bpmn Escalation](https://docs.camunda.org/manual/7.21/reference/bpmn20/tasks/user-task/#reporting-bpmn-escalation)\nin User Tasks."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"escalationCode\": \"<string>\",\n  \"variables\": {\n    \"anim_a2c\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sedc0e\": true,\n        \"proident03\": -86659003\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/bpmnEscalation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"bpmnEscalation"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the <code>escalationCode</code> is not provided in\nthe request. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"escalationCode\": \"<string>\",\n  \"variables\": {\n    \"anim_a2c\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sedc0e\": true,\n        \"proident03\": -86659003\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/bpmnEscalation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"bpmnEscalation"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "If the authenticated user is unauthorized to update the process instance. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"escalationCode\": \"<string>\",\n  \"variables\": {\n    \"anim_a2c\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sedc0e\": true,\n        \"proident03\": -86659003\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/bpmnEscalation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"bpmnEscalation"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"userId\": \"<string>\",\n  \"missingAuthorizations\": [\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    },\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Returned if the task does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"escalationCode\": \"<string>\",\n  \"variables\": {\n    \"anim_a2c\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"sedc0e\": true,\n        \"proident03\": -86659003\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/bpmnEscalation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"bpmnEscalation"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "claim",
							"item": [
								{
									"name": "Claim",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/task/:id/claim",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id",
												"claim"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the task to claim."
												}
											]
										},
										"description": "Claims a task for a specific user.\n\n**Note:** The difference with the\n[Set Assignee](https://docs.camunda.org/manual/7.21/reference/rest/task/post-assignee/)\nmethod is that here a check is performed to see if the task already has a user\nassigned to it."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/claim",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"claim"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Task with given id does not exist or claiming was not successful. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/claim",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"claim"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "comment",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Create",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\",\n  \"userId\": \"<string>\",\n  \"taskId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"message\": \"<string>\",\n  \"removalTime\": \"<dateTime>\",\n  \"rootProcessInstanceId\": \"<string>\",\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/comment/create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"comment",
														"create"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the task to add the comment to."
														}
													]
												},
												"description": "Creates a comment for a task by id."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<string>\",\n  \"userId\": \"<string>\",\n  \"taskId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"message\": \"<string>\",\n  \"removalTime\": \"<dateTime>\",\n  \"rootProcessInstanceId\": \"<string>\",\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/task/:id/comment/create",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"comment",
																"create"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"userId\": \"<string>\",\n  \"taskId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"message\": \"<string>\",\n  \"removalTime\": \"<dateTime>\",\n  \"rootProcessInstanceId\": \"<string>\",\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The task does not exist or no comment message was submitted. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<string>\",\n  \"userId\": \"<string>\",\n  \"taskId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"message\": \"<string>\",\n  \"removalTime\": \"<dateTime>\",\n  \"rootProcessInstanceId\": \"<string>\",\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/task/:id/comment/create",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"comment",
																"create"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "The history of the engine is disabled. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<string>\",\n  \"userId\": \"<string>\",\n  \"taskId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"message\": \"<string>\",\n  \"removalTime\": \"<dateTime>\",\n  \"rootProcessInstanceId\": \"<string>\",\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/task/:id/comment/create",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"comment",
																"create"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"userId\": \"<string>\",\n  \"missingAuthorizations\": [\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    },\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "{commentId}",
									"item": [
										{
											"name": "Get",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/comment/:commentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"comment",
														":commentId"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the task."
														},
														{
															"key": "commentId",
															"value": "<string>",
															"description": "(Required) The id of the comment to be retrieved."
														}
													]
												},
												"description": "Retrieves a task comment by task id and comment id."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/task/:id/comment/:commentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"comment",
																":commentId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "commentId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"userId\": \"<string>\",\n  \"taskId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"message\": \"<string>\",\n  \"removalTime\": \"<dateTime>\",\n  \"rootProcessInstanceId\": \"<string>\",\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "The task or comment with given task and comment id does not exist, or the history of\nthe engine is disabled. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/task/:id/comment/:commentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"comment",
																":commentId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "commentId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get List",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/task/:id/comment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id",
												"comment"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the task to retrieve the comments for."
												}
											]
										},
										"description": "Gets the comments for a task by id."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/comment",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"comment"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"time\": \"<dateTime>\",\n    \"message\": \"<string>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"links\": [\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      },\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      }\n    ]\n  },\n  {\n    \"id\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"time\": \"<dateTime>\",\n    \"message\": \"<string>\",\n    \"removalTime\": \"<dateTime>\",\n    \"rootProcessInstanceId\": \"<string>\",\n    \"links\": [\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      },\n      {\n        \"rel\": \"<string>\",\n        \"href\": \"<string>\",\n        \"method\": \"<string>\"\n      }\n    ]\n  }\n]"
										},
										{
											"name": "No task exists for the given task id. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/comment",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"comment"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "complete",
							"item": [
								{
									"name": "Complete",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"variables\": {\n    \"qui_f5f\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"anim_85e\": -99293000.15038419,\n        \"nisi_5e\": 92776012.02738759\n      }\n    }\n  },\n  \"withVariablesInReturn\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/task/:id/complete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id",
												"complete"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the task to complete."
												}
											]
										},
										"description": "Completes a task and updates process variables."
									},
									"response": [
										{
											"name": "Request successful. The response contains the process variables.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"qui_f5f\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"anim_85e\": -99293000.15038419,\n        \"nisi_5e\": 92776012.02738759\n      }\n    }\n  },\n  \"withVariablesInReturn\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/complete",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"complete"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"nulla__3\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"consectetur_dfd\": \"veniam do minim occaecat\"\n    }\n  },\n  \"ut_10\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"ut_fa\": false,\n      \"mollit9\": -39701223,\n      \"velit_c1\": \"ve\"\n    }\n  },\n  \"aliquip_5\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"consectetur_34d\": -65418375,\n      \"laboriseec\": false,\n      \"doloreb\": true\n    }\n  },\n  \"mollitd\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"in_76d\": true,\n      \"pariatur_f77\": true\n    }\n  }\n}"
										},
										{
											"name": "Request successful. The response contains no variables.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"qui_f5f\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"anim_85e\": -99293000.15038419,\n        \"nisi_5e\": 92776012.02738759\n      }\n    }\n  },\n  \"withVariablesInReturn\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/complete",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"complete"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The variable value or type is invalid, for example if the value could not be parsed\nto an Integer value or the passed variable type is not supported. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor ",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"qui_f5f\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"anim_85e\": -99293000.15038419,\n        \"nisi_5e\": 92776012.02738759\n      }\n    }\n  },\n  \"withVariablesInReturn\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/complete",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"complete"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "If the task does not exist or the corresponding process instance could not be\nresumed successfully. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"qui_f5f\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"anim_85e\": -99293000.15038419,\n        \"nisi_5e\": 92776012.02738759\n      }\n    }\n  },\n  \"withVariablesInReturn\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/complete",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"complete"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "delegate",
							"item": [
								{
									"name": "Delegate",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/task/:id/delegate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id",
												"delegate"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the task to delegate."
												}
											]
										},
										"description": "Delegates a task to another user."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/delegate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"delegate"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "If the task does not exist or delegation was not successful. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/delegate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"delegate"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "deployed-form",
							"item": [
								{
									"name": "Get Deployed Form",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/xhtml+xml"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/task/:id/deployed-form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id",
												"deployed-form"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the task to get the deployed form for."
												}
											]
										},
										"description": "Retrieves the deployed form that is referenced from a given task. For further\ninformation please refer to the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/task-forms/#embedded-task-forms)."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/xhtml+xml"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/deployed-form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"deployed-form"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "The form key has wrong format. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/deployed-form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"deployed-form"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "The deployed form cannot be retrieved due to missing permissions on task resource.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/deployed-form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"deployed-form"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"userId\": \"<string>\",\n  \"missingAuthorizations\": [\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    },\n    {\n      \"permissionName\": \"<string>\",\n      \"resourceName\": \"<string>\",\n      \"resourceId\": \"<string>\"\n    }\n  ],\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "No deployed form for a given task exists. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/deployed-form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"deployed-form"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "form",
							"item": [
								{
									"name": "Get Form Key",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/task/:id/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id",
												"form"
											],
											"variable": [
												{
													"key": "id",
													"value": "78abac7d-23ee-11ef-9b9f-6e2756f4184f",
													"description": "(Required) The id of the task to retrieve the form for."
												}
											]
										},
										"description": "Retrieves the form key for a task. The form key corresponds to the `FormData#formKey`\nproperty in the engine. This key can be used to do task-specific form rendering in\nclient applications. Additionally, the context path of the containing process\napplication is returned."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"key\": \"<string>\",\n  \"camundaFormRef\": {\n    \"key\": \"<string>\",\n    \"binding\": \"<string>\",\n    \"version\": \"<integer>\"\n  },\n  \"contextPath\": \"<string>\"\n}"
										},
										{
											"name": "Task with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "form-variables",
							"item": [
								{
									"name": "Get Task Form Variables",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/task/:id/form-variables?variableNames=<string>&deserializeValues=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id",
												"form-variables"
											],
											"query": [
												{
													"key": "variableNames",
													"value": "<string>",
													"description": "A comma-separated list of variable names. Allows restricting the list of requested\nvariables to the variable names in the list. It is best practice to restrict the\nlist of variables to the variables actually required by the form in order to\nminimize fetching of data. If the query parameter is ommitted all variables are\nfetched. If the query parameter contains non-existent variable names, the variable\nnames are ignored."
												},
												{
													"key": "deserializeValues",
													"value": "true",
													"description": "Determines whether serializable variable values (typically variables that store\ncustom Java objects) should be deserialized on server side (default true).\n\nIf set to true, a serializable variable will be deserialized on server side and\ntransformed to JSON using [Jackson's](http://jackson.codehaus.org/) POJO/bean\nproperty introspection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to false, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string\ncontaining XML.\n\nNote: While true is the default value for reasons of backward compatibility, we\nrecommend setting this parameter to false when developing web applications that are\nindependent of the Java process applications deployed to the engine."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the task to retrieve the variables for."
												}
											]
										},
										"description": "Retrieves the form variables for a task. The form variables take form data specified\non the task into account. If form fields are defined, the variable types and default\nvalues of the form fields are taken into account."
									},
									"response": [
										{
											"name": "Request successful. A JSON object containing a property for each variable returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/form-variables?variableNames=<string>&deserializeValues=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"form-variables"
													],
													"query": [
														{
															"key": "variableNames",
															"value": "<string>",
															"description": "A comma-separated list of variable names. Allows restricting the list of requested\nvariables to the variable names in the list. It is best practice to restrict the\nlist of variables to the variables actually required by the form in order to\nminimize fetching of data. If the query parameter is ommitted all variables are\nfetched. If the query parameter contains non-existent variable names, the variable\nnames are ignored."
														},
														{
															"key": "deserializeValues",
															"value": "true",
															"description": "Determines whether serializable variable values (typically variables that store\ncustom Java objects) should be deserialized on server side (default true).\n\nIf set to true, a serializable variable will be deserialized on server side and\ntransformed to JSON using [Jackson's](http://jackson.codehaus.org/) POJO/bean\nproperty introspection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to false, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string\ncontaining XML.\n\nNote: While true is the default value for reasons of backward compatibility, we\nrecommend setting this parameter to false when developing web applications that are\nindependent of the Java process applications deployed to the engine."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"nulla__3\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"consectetur_dfd\": \"veniam do minim occaecat\"\n    }\n  },\n  \"ut_10\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"ut_fa\": false,\n      \"mollit9\": -39701223,\n      \"velit_c1\": \"ve\"\n    }\n  },\n  \"aliquip_5\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"consectetur_34d\": -65418375,\n      \"laboriseec\": false,\n      \"doloreb\": true\n    }\n  },\n  \"mollitd\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"in_76d\": true,\n      \"pariatur_f77\": true\n    }\n  }\n}"
										},
										{
											"name": " id is null or does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/form-variables?variableNames=<string>&deserializeValues=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"form-variables"
													],
													"query": [
														{
															"key": "variableNames",
															"value": "<string>",
															"description": "A comma-separated list of variable names. Allows restricting the list of requested\nvariables to the variable names in the list. It is best practice to restrict the\nlist of variables to the variables actually required by the form in order to\nminimize fetching of data. If the query parameter is ommitted all variables are\nfetched. If the query parameter contains non-existent variable names, the variable\nnames are ignored."
														},
														{
															"key": "deserializeValues",
															"value": "true",
															"description": "Determines whether serializable variable values (typically variables that store\ncustom Java objects) should be deserialized on server side (default true).\n\nIf set to true, a serializable variable will be deserialized on server side and\ntransformed to JSON using [Jackson's](http://jackson.codehaus.org/) POJO/bean\nproperty introspection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to false, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string\ncontaining XML.\n\nNote: While true is the default value for reasons of backward compatibility, we\nrecommend setting this parameter to false when developing web applications that are\nindependent of the Java process applications deployed to the engine."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "identity-links",
							"item": [
								{
									"name": "delete",
									"item": [
										{
											"name": "Delete",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"<string>\",\n  \"userId\": \"<string>\",\n  \"groupId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/identity-links/delete",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"identity-links",
														"delete"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the task to remove a link from."
														}
													]
												},
												"description": "Removes an identity link from a task by id"
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"type\": \"<string>\",\n  \"userId\": \"<string>\",\n  \"groupId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/task/:id/identity-links/delete",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"identity-links",
																"delete"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Task with given id does not exist.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for\nthe error response format.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"type\": \"<string>\",\n  \"userId\": \"<string>\",\n  \"groupId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/task/:id/identity-links/delete",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"identity-links",
																"delete"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get List",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/task/:id/identity-links?type=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id",
												"identity-links"
											],
											"query": [
												{
													"key": "type",
													"value": "<string>",
													"description": "Filter by the type of links to include."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the task to retrieve the identity links for."
												}
											]
										},
										"description": "Gets the identity links for a task by id, which are the users and groups that are in\n*some* relation to it (including assignee and owner)."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/identity-links?type=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"identity-links"
													],
													"query": [
														{
															"key": "type",
															"value": "<string>",
															"description": "Filter by the type of links to include."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"type\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"groupId\": \"<string>\"\n  },\n  {\n    \"type\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"groupId\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Task with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/identity-links?type=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"identity-links"
													],
													"query": [
														{
															"key": "type",
															"value": "<string>",
															"description": "Filter by the type of links to include."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								},
								{
									"name": "Add",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"type\": \"<string>\",\n  \"userId\": \"<string>\",\n  \"groupId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/task/:id/identity-links",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id",
												"identity-links"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the task to add a link to."
												}
											]
										},
										"description": "Adds an identity link to a task by id. Can be used to link any user or group to a task\nand specify a relation."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"<string>\",\n  \"userId\": \"<string>\",\n  \"groupId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/identity-links",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"identity-links"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Task with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"<string>\",\n  \"userId\": \"<string>\",\n  \"groupId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/identity-links",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"identity-links"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "localVariables",
							"item": [
								{
									"name": "{varName}",
									"item": [
										{
											"name": "data",
											"item": [
												{
													"name": "Get Local Task Variable (Binary)",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/octet-stream"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/task/:id/localVariables/:varName/data",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"localVariables",
																":varName",
																"data"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The id of the task to retrieve the variable for."
																},
																{
																	"key": "varName",
																	"value": "<string>",
																	"description": "(Required) The name of the variable to retrieve."
																}
															]
														},
														"description": "Retrieves a binary variable from the context of a given task by id. Applicable for byte array and file\nvariables."
													},
													"response": [
														{
															"name": "Request successful.\n        For binary variables or files without any MIME type information, a byte stream is returned.\n        File variables with MIME type information are returned as the saved type.\n        Additionally, for file variables the Content-",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/octet-stream"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/task/:id/localVariables/:varName/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"task",
																		":id",
																		"localVariables",
																		":varName",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "varName"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": "<string>"
														},
														{
															"name": "Variable with given id exists but is not a binary variable.See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/task/:id/localVariables/:varName/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"task",
																		":id",
																		"localVariables",
																		":varName",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "varName"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
														},
														{
															"name": "Variable with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/task/:id/localVariables/:varName/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"task",
																		":id",
																		"localVariables",
																		":varName",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "varName"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
														}
													]
												},
												{
													"name": "Update Local Task Variable (Binary)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "data",
																	"value": "<string>",
																	"description": "The binary data to be set.\nFor File variables, this multipart can contain the filename, binary value and MIME type of the file variable to be set\nOnly the filename is mandatory.",
																	"type": "text"
																},
																{
																	"key": "valueType",
																	"value": "Bytes",
																	"description": "The name of the variable type. Either Bytes for a byte array variable or File for a file variable. (This can only be one of Bytes,File)",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/task/:id/localVariables/:varName/data",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"localVariables",
																":varName",
																"data"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The id of the task to retrieve the variable for."
																},
																{
																	"key": "varName",
																	"value": "<string>",
																	"description": "(Required) The name of the variable to retrieve."
																}
															]
														},
														"description": "Sets the serialized value for a binary variable or the binary value for a file variable."
													},
													"response": [
														{
															"name": "Request successful.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "data",
																			"value": "<string>",
																			"description": "The binary data to be set.\nFor File variables, this multipart can contain the filename, binary value and MIME type of the file variable to be set\nOnly the filename is mandatory.",
																			"type": "text"
																		},
																		{
																			"key": "valueType",
																			"value": "Bytes",
																			"description": "The name of the variable type. Either Bytes for a byte array variable or File for a file variable. (This can only be one of Bytes,File)",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/task/:id/localVariables/:varName/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"task",
																		":id",
																		"localVariables",
																		":varName",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "varName"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "The variable value or type is invalid, for example if no filename is set. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "data",
																			"value": "<string>",
																			"description": "The binary data to be set.\nFor File variables, this multipart can contain the filename, binary value and MIME type of the file variable to be set\nOnly the filename is mandatory.",
																			"type": "text"
																		},
																		{
																			"key": "valueType",
																			"value": "Bytes",
																			"description": "The name of the variable type. Either Bytes for a byte array variable or File for a file variable. (This can only be one of Bytes,File)",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/task/:id/localVariables/:varName/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"task",
																		":id",
																		"localVariables",
																		":varName",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "varName"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
														},
														{
															"name": "Variable name is `null`, or the Task id is `null` or does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "data",
																			"value": "<string>",
																			"description": "The binary data to be set.\nFor File variables, this multipart can contain the filename, binary value and MIME type of the file variable to be set\nOnly the filename is mandatory.",
																			"type": "text"
																		},
																		{
																			"key": "valueType",
																			"value": "Bytes",
																			"description": "The name of the variable type. Either Bytes for a byte array variable or File for a file variable. (This can only be one of Bytes,File)",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/task/:id/localVariables/:varName/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"task",
																		":id",
																		"localVariables",
																		":varName",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "varName"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Delete Local Task Variable",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/localVariables/:varName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"localVariables",
														":varName"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the task to delete the variable from."
														},
														{
															"key": "varName",
															"value": "<string>",
															"description": "(Required) The name of the variable to be removed."
														}
													]
												},
												"description": "Removes a local variable from a task by id."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/task/:id/localVariables/:varName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"localVariables",
																":varName"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Task id is `null` or does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/task/:id/localVariables/:varName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"localVariables",
																":varName"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										},
										{
											"name": "Get Local Task Variable",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/localVariables/:varName?deserializeValue=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"localVariables",
														":varName"
													],
													"query": [
														{
															"key": "deserializeValue",
															"value": "true",
															"description": "Determines whether serializable variable values (typically variables that store custom Java objects)\nshould be deserialized on the server side (default `true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side and transformed to JSON\nusing [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.\nNote that this requires the Java classes of the variable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n\nNote: While `true` is the default value for reasons of backward compatibility, we recommend setting this\nparameter to `false` when developing web applications that are independent of the Java process\napplications deployed to the engine."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the task to retrieve the variable from."
														},
														{
															"key": "varName",
															"value": "<string>",
															"description": "(Required) The name of the variable to get"
														}
													]
												},
												"description": "Retrieves a variable from the context of a given task by id."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/task/:id/localVariables/:varName?deserializeValue=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"localVariables",
																":varName"
															],
															"query": [
																{
																	"key": "deserializeValue",
																	"value": "true",
																	"description": "Determines whether serializable variable values (typically variables that store custom Java objects)\nshould be deserialized on the server side (default `true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side and transformed to JSON\nusing [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.\nNote that this requires the Java classes of the variable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n\nNote: While `true` is the default value for reasons of backward compatibility, we recommend setting this\nparameter to `false` when developing web applications that are independent of the Java process\napplications deployed to the engine."
																}
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"value\": {\n    \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n  },\n  \"type\": \"<string>\",\n  \"valueInfo\": {\n    \"exercitationf5_\": \"adipisicing laboris Ut\",\n    \"consectetur_e_\": \"enim in\"\n  }\n}"
												},
												{
													"name": "Variable with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/task/:id/localVariables/:varName?deserializeValue=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"localVariables",
																":varName"
															],
															"query": [
																{
																	"key": "deserializeValue",
																	"value": "true",
																	"description": "Determines whether serializable variable values (typically variables that store custom Java objects)\nshould be deserialized on the server side (default `true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side and transformed to JSON\nusing [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.\nNote that this requires the Java classes of the variable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n\nNote: While `true` is the default value for reasons of backward compatibility, we recommend setting this\nparameter to `false` when developing web applications that are independent of the Java process\napplications deployed to the engine."
																}
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "Task id is `null` or does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/task/:id/localVariables/:varName?deserializeValue=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"localVariables",
																":varName"
															],
															"query": [
																{
																	"key": "deserializeValue",
																	"value": "true",
																	"description": "Determines whether serializable variable values (typically variables that store custom Java objects)\nshould be deserialized on the server side (default `true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side and transformed to JSON\nusing [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.\nNote that this requires the Java classes of the variable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n\nNote: While `true` is the default value for reasons of backward compatibility, we recommend setting this\nparameter to `false` when developing web applications that are independent of the Java process\napplications deployed to the engine."
																}
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										},
										{
											"name": "Update Local Task Variable",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": {\n    \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n  },\n  \"type\": \"<string>\",\n  \"valueInfo\": {\n    \"exercitationf5_\": \"adipisicing laboris Ut\",\n    \"consectetur_e_\": \"enim in\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/localVariables/:varName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"localVariables",
														":varName"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the task to set the variable for."
														},
														{
															"key": "varName",
															"value": "<string>",
															"description": "(Required) The name of the variable to set."
														}
													]
												},
												"description": "Sets a variable in the context of a given task."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"value\": {\n    \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n  },\n  \"type\": \"<string>\",\n  \"valueInfo\": {\n    \"exercitationf5_\": \"adipisicing laboris Ut\",\n    \"consectetur_e_\": \"enim in\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/task/:id/localVariables/:varName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"localVariables",
																":varName"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The variable name, value or type is invalid, for example if the value could not be parsed to an `Integer`\nvalue or the passed variable type is not supported or a new transient variable has the name that is\nalready persisted. See the [Introduction](https:/",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"value\": {\n    \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n  },\n  \"type\": \"<string>\",\n  \"valueInfo\": {\n    \"exercitationf5_\": \"adipisicing laboris Ut\",\n    \"consectetur_e_\": \"enim in\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/task/:id/localVariables/:varName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"localVariables",
																":varName"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "The variable name is `null`, or the Task id is `null` or does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"value\": {\n    \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n  },\n  \"type\": \"<string>\",\n  \"valueInfo\": {\n    \"exercitationf5_\": \"adipisicing laboris Ut\",\n    \"consectetur_e_\": \"enim in\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/task/:id/localVariables/:varName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"localVariables",
																":varName"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Local Task Variables",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/task/:id/localVariables?deserializeValues=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id",
												"localVariables"
											],
											"query": [
												{
													"key": "deserializeValues",
													"value": "true",
													"description": "Determines whether serializable variable values (typically variables that store custom Java objects)\nshould be deserialized on the server side (default `true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side and transformed to JSON\nusing [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.\nNote that this requires the Java classes of the variable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of backward compatibility, we recommend setting this\nparameter to `false` when developing web applications that are independent of the Java process\napplications deployed to the engine."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the task to retrieve the variables from."
												}
											]
										},
										"description": "Retrieves all variables of a given task by id."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/localVariables?deserializeValues=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"localVariables"
													],
													"query": [
														{
															"key": "deserializeValues",
															"value": "true",
															"description": "Determines whether serializable variable values (typically variables that store custom Java objects)\nshould be deserialized on the server side (default `true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side and transformed to JSON\nusing [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.\nNote that this requires the Java classes of the variable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of backward compatibility, we recommend setting this\nparameter to `false` when developing web applications that are independent of the Java process\napplications deployed to the engine."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"nulla__3\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"consectetur_dfd\": \"veniam do minim occaecat\"\n    }\n  },\n  \"ut_10\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"ut_fa\": false,\n      \"mollit9\": -39701223,\n      \"velit_c1\": \"ve\"\n    }\n  },\n  \"aliquip_5\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"consectetur_34d\": -65418375,\n      \"laboriseec\": false,\n      \"doloreb\": true\n    }\n  },\n  \"mollitd\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"in_76d\": true,\n      \"pariatur_f77\": true\n    }\n  }\n}"
										},
										{
											"name": "Task id is `null` or does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/localVariables?deserializeValues=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"localVariables"
													],
													"query": [
														{
															"key": "deserializeValues",
															"value": "true",
															"description": "Determines whether serializable variable values (typically variables that store custom Java objects)\nshould be deserialized on the server side (default `true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side and transformed to JSON\nusing [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.\nNote that this requires the Java classes of the variable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of backward compatibility, we recommend setting this\nparameter to `false` when developing web applications that are independent of the Java process\napplications deployed to the engine."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								},
								{
									"name": "Update/Delete Local Task Variables",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"modifications\": {\n    \"id_4\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"irure_9\": -3709291.92365548\n      }\n    },\n    \"reprehenderita\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"nostrud_c\": 51173474\n      }\n    }\n  },\n  \"deletions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/task/:id/localVariables",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id",
												"localVariables"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the task to set variables for."
												}
											]
										},
										"description": "Updates or deletes the variables in the context of a task. Updates precede deletions. So, if a variable is\nupdated AND deleted, the deletion overrides the update."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"modifications\": {\n    \"id_4\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"irure_9\": -3709291.92365548\n      }\n    },\n    \"reprehenderita\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"nostrud_c\": 51173474\n      }\n    }\n  },\n  \"deletions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/localVariables",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"localVariables"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The variable value or type is invalid. For example the value could not be parsed to an `Integer` value\nor the passed variable type is not supported. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor t",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"modifications\": {\n    \"id_4\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"irure_9\": -3709291.92365548\n      }\n    },\n    \"reprehenderita\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"nostrud_c\": 51173474\n      }\n    }\n  },\n  \"deletions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/localVariables",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"localVariables"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Update or delete could not be executed because the task is `null` or does not exist.. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"modifications\": {\n    \"id_4\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"irure_9\": -3709291.92365548\n      }\n    },\n    \"reprehenderita\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"nostrud_c\": 51173474\n      }\n    }\n  },\n  \"deletions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/localVariables",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"localVariables"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "rendered-form",
							"item": [
								{
									"name": "Get Rendered Form",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/xhtml+xml"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/task/:id/rendered-form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id",
												"rendered-form"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the task to get the rendered form for."
												}
											]
										},
										"description": "Retrieves the rendered form for a task. This method can be used to get the HTML\nrendering of a\n[Generated Task Form](https://docs.camunda.org/manual/7.21/user-guide/task-forms/#generated-task-forms)."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/xhtml+xml"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/rendered-form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"rendered-form"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "xml",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/xhtml+xml"
												}
											],
											"cookie": [],
											"body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<element>(string)</element>"
										},
										{
											"name": "The task with the given id does not exist or has no form field metadata defined for\nthis task. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/rendered-form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"rendered-form"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "resolve",
							"item": [
								{
									"name": "Resolve",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"variables\": {\n    \"qui_f5f\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"anim_85e\": -99293000.15038419,\n        \"nisi_5e\": 92776012.02738759\n      }\n    }\n  },\n  \"withVariablesInReturn\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/task/:id/resolve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id",
												"resolve"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the task to resolve."
												}
											]
										},
										"description": "Resolves a task and updates execution variables.\n\nResolving a task marks that the assignee is done with the task delegated to them, and\nthat it can be sent back to the owner. Can only be executed when the task has been\ndelegated. The assignee will be set to the owner, who performed the delegation."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"qui_f5f\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"anim_85e\": -99293000.15038419,\n        \"nisi_5e\": 92776012.02738759\n      }\n    }\n  },\n  \"withVariablesInReturn\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/resolve",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"resolve"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The variable value or type is invalid, for example if the value could not be parsed\nto an Integer value or the passed variable type is not supported. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor ",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"qui_f5f\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"anim_85e\": -99293000.15038419,\n        \"nisi_5e\": 92776012.02738759\n      }\n    }\n  },\n  \"withVariablesInReturn\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/resolve",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"resolve"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "If the task does not exist or the corresponding process instance could not be\nresumed successfully. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"qui_f5f\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"anim_85e\": -99293000.15038419,\n        \"nisi_5e\": 92776012.02738759\n      }\n    }\n  },\n  \"withVariablesInReturn\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/resolve",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"resolve"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "submit-form",
							"item": [
								{
									"name": "Submit Form",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"variables\": {\n    \"qui_f5f\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"anim_85e\": -99293000.15038419,\n        \"nisi_5e\": 92776012.02738759\n      }\n    }\n  },\n  \"withVariablesInReturn\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/task/:id/submit-form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id",
												"submit-form"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the task to submit the form for."
												}
											]
										},
										"description": "Completes a task and updates process variables using a form submit. There are two\ndifference between this method and the `complete` method:\n\n* If the task is in state `PENDING` - i.e., has been delegated before, it is not\ncompleted but resolved. Otherwise it will be completed.\n* If the task has Form Field Metadata defined, the process engine will perform backend\nvalidation for any form fields which have validators defined.\nSee the\n[Generated Task Forms](https://docs.camunda.org/manual/7.21/user-guide/task-forms/_index/#generated-task-forms)\nsection of the [User Guide](https://docs.camunda.org/manual/7.21/user-guide/) for more information."
									},
									"response": [
										{
											"name": "Request successful. The response contains the process variables.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"qui_f5f\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"anim_85e\": -99293000.15038419,\n        \"nisi_5e\": 92776012.02738759\n      }\n    }\n  },\n  \"withVariablesInReturn\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/submit-form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"submit-form"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"nulla__3\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"consectetur_dfd\": \"veniam do minim occaecat\"\n    }\n  },\n  \"ut_10\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"ut_fa\": false,\n      \"mollit9\": -39701223,\n      \"velit_c1\": \"ve\"\n    }\n  },\n  \"aliquip_5\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"consectetur_34d\": -65418375,\n      \"laboriseec\": false,\n      \"doloreb\": true\n    }\n  },\n  \"mollitd\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"in_76d\": true,\n      \"pariatur_f77\": true\n    }\n  }\n}"
										},
										{
											"name": "Request successful. The response contains no variables.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"qui_f5f\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"anim_85e\": -99293000.15038419,\n        \"nisi_5e\": 92776012.02738759\n      }\n    }\n  },\n  \"withVariablesInReturn\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/submit-form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"submit-form"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The variable value or type is invalid, for example if the value could not be parsed to an Integer value\nor the passed variable type is not supported.\n\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"qui_f5f\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"anim_85e\": -99293000.15038419,\n        \"nisi_5e\": 92776012.02738759\n      }\n    }\n  },\n  \"withVariablesInReturn\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/submit-form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"submit-form"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "If the task does not exist or the corresponding process instance could not be resumed successfully.\n\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for\nthe error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"qui_f5f\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"anim_85e\": -99293000.15038419,\n        \"nisi_5e\": 92776012.02738759\n      }\n    }\n  },\n  \"withVariablesInReturn\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/submit-form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"submit-form"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "unclaim",
							"item": [
								{
									"name": "Unclaim",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/task/:id/unclaim",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id",
												"unclaim"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the task to unclaim."
												}
											]
										},
										"description": "Resets a task's assignee. If successful, the task is not assigned to a user."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/unclaim",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"unclaim"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The Task with the given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/unclaim",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"unclaim"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "variables",
							"item": [
								{
									"name": "{varName}",
									"item": [
										{
											"name": "data",
											"item": [
												{
													"name": "Get Task Variable (Binary)",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/octet-stream"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/task/:id/variables/:varName/data",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"variables",
																":varName",
																"data"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The id of the task to retrieve the variable for."
																},
																{
																	"key": "varName",
																	"value": "<string>",
																	"description": "(Required) The name of the variable to retrieve."
																}
															]
														},
														"description": "Retrieves a binary variable from the context of a given task. Applicable for byte array and file\nvariables. The variable must be visible from the task. It is visible from the task if it is a local task\nvariable or declared in a parent scope of the task. See documentation on\n[visiblity of variables](https://docs.camunda.org/manual/7.21/user-guide/process-engine/variables/)."
													},
													"response": [
														{
															"name": "Request successful.\n        For binary variables or files without any MIME type information, a byte stream is returned.\n        File variables with MIME type information are returned as the saved type.\n        Additionally, for file variables the Content-",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/octet-stream"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/task/:id/variables/:varName/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"task",
																		":id",
																		"variables",
																		":varName",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "varName"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": "<string>"
														},
														{
															"name": "Variable with given id exists but is not a binary variable.See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/task/:id/variables/:varName/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"task",
																		":id",
																		"variables",
																		":varName",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "varName"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
														},
														{
															"name": "Variable with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/task/:id/variables/:varName/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"task",
																		":id",
																		"variables",
																		":varName",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "varName"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
														}
													]
												},
												{
													"name": "Update Task Variable (Binary)",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "data",
																	"value": "<string>",
																	"description": "The binary data to be set.\nFor File variables, this multipart can contain the filename, binary value and MIME type of the file variable to be set\nOnly the filename is mandatory.",
																	"type": "text"
																},
																{
																	"key": "valueType",
																	"value": "Bytes",
																	"description": "The name of the variable type. Either Bytes for a byte array variable or File for a file variable. (This can only be one of Bytes,File)",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/task/:id/variables/:varName/data",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"variables",
																":varName",
																"data"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) The id of the task to retrieve the variable for."
																},
																{
																	"key": "varName",
																	"value": "<string>",
																	"description": "(Required) The name of the variable to retrieve."
																}
															]
														},
														"description": "Sets the serialized value for a binary variable or the binary value for a file variable visible from the\ntask. A variable is visible from the task if it is a local task variable or declared in a parent scope of\nthe task. See documentation on\n[visiblity of variables](https://docs.camunda.org/manual/7.21/user-guide/process-engine/variables/)."
													},
													"response": [
														{
															"name": "Request successful.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "data",
																			"value": "<string>",
																			"description": "The binary data to be set.\nFor File variables, this multipart can contain the filename, binary value and MIME type of the file variable to be set\nOnly the filename is mandatory.",
																			"type": "text"
																		},
																		{
																			"key": "valueType",
																			"value": "Bytes",
																			"description": "The name of the variable type. Either Bytes for a byte array variable or File for a file variable. (This can only be one of Bytes,File)",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/task/:id/variables/:varName/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"task",
																		":id",
																		"variables",
																		":varName",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "varName"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "The variable value or type is invalid, for example if no filename is set. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "data",
																			"value": "<string>",
																			"description": "The binary data to be set.\nFor File variables, this multipart can contain the filename, binary value and MIME type of the file variable to be set\nOnly the filename is mandatory.",
																			"type": "text"
																		},
																		{
																			"key": "valueType",
																			"value": "Bytes",
																			"description": "The name of the variable type. Either Bytes for a byte array variable or File for a file variable. (This can only be one of Bytes,File)",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/task/:id/variables/:varName/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"task",
																		":id",
																		"variables",
																		":varName",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "varName"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
														},
														{
															"name": "Variable name is `null`, or the Task id is `null` or does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "data",
																			"value": "<string>",
																			"description": "The binary data to be set.\nFor File variables, this multipart can contain the filename, binary value and MIME type of the file variable to be set\nOnly the filename is mandatory.",
																			"type": "text"
																		},
																		{
																			"key": "valueType",
																			"value": "Bytes",
																			"description": "The name of the variable type. Either Bytes for a byte array variable or File for a file variable. (This can only be one of Bytes,File)",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/task/:id/variables/:varName/data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"task",
																		":id",
																		"variables",
																		":varName",
																		"data"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "varName"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Delete Task Variable",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/variables/:varName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"variables",
														":varName"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the task to delete the variable from."
														},
														{
															"key": "varName",
															"value": "<string>",
															"description": "(Required) The name of the variable to be removed."
														}
													]
												},
												"description": "Removes a variable that is visible to a task. A variable is visible to a task if it is a local task\nvariable or declared in a parent scope of the task. See documentation on\n[visiblity of variables](https://docs.camunda.org/manual/7.21/user-guide/process-engine/variables/)."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/task/:id/variables/:varName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"variables",
																":varName"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Task id is null or does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/task/:id/variables/:varName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"variables",
																":varName"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										},
										{
											"name": "Get Task Variable",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/variables/:varName?deserializeValue=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"variables",
														":varName"
													],
													"query": [
														{
															"key": "deserializeValue",
															"value": "true",
															"description": "Determines whether serializable variable values (typically variables that store custom Java objects)\nshould be deserialized on the server side (default `true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side and transformed to JSON\nusing [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.\nNote that this requires the Java classes of the variable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n\nNote: While `true` is the default value for reasons of backward compatibility, we recommend setting this\nparameter to `false` when developing web applications that are independent of the Java process\napplications deployed to the engine."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the task to retrieve the variable from."
														},
														{
															"key": "varName",
															"value": "<string>",
															"description": "(Required) The name of the variable to get."
														}
													]
												},
												"description": "Retrieves a variable from the context of a given task.\nThe variable must be visible from the task. It is visible from the task if it is a local task variable or\ndeclared in a parent scope of the task. See documentation on\n[visiblity of variables](https://docs.camunda.org/manual/7.21/user-guide/process-engine/variables/)."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/task/:id/variables/:varName?deserializeValue=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"variables",
																":varName"
															],
															"query": [
																{
																	"key": "deserializeValue",
																	"value": "true",
																	"description": "Determines whether serializable variable values (typically variables that store custom Java objects)\nshould be deserialized on the server side (default `true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side and transformed to JSON\nusing [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.\nNote that this requires the Java classes of the variable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n\nNote: While `true` is the default value for reasons of backward compatibility, we recommend setting this\nparameter to `false` when developing web applications that are independent of the Java process\napplications deployed to the engine."
																}
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"value\": {\n    \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n  },\n  \"type\": \"<string>\",\n  \"valueInfo\": {\n    \"exercitationf5_\": \"adipisicing laboris Ut\",\n    \"consectetur_e_\": \"enim in\"\n  }\n}"
												},
												{
													"name": "Variable with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/task/:id/variables/:varName?deserializeValue=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"variables",
																":varName"
															],
															"query": [
																{
																	"key": "deserializeValue",
																	"value": "true",
																	"description": "Determines whether serializable variable values (typically variables that store custom Java objects)\nshould be deserialized on the server side (default `true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side and transformed to JSON\nusing [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.\nNote that this requires the Java classes of the variable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n\nNote: While `true` is the default value for reasons of backward compatibility, we recommend setting this\nparameter to `false` when developing web applications that are independent of the Java process\napplications deployed to the engine."
																}
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "Task id is `null` or does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/task/:id/variables/:varName?deserializeValue=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"variables",
																":varName"
															],
															"query": [
																{
																	"key": "deserializeValue",
																	"value": "true",
																	"description": "Determines whether serializable variable values (typically variables that store custom Java objects)\nshould be deserialized on the server side (default `true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side and transformed to JSON\nusing [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.\nNote that this requires the Java classes of the variable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n\nNote: While `true` is the default value for reasons of backward compatibility, we recommend setting this\nparameter to `false` when developing web applications that are independent of the Java process\napplications deployed to the engine."
																}
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										},
										{
											"name": "Update Task Variable",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": {\n    \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n  },\n  \"type\": \"<string>\",\n  \"valueInfo\": {\n    \"exercitationf5_\": \"adipisicing laboris Ut\",\n    \"consectetur_e_\": \"enim in\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/variables/:varName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"variables",
														":varName"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the task to set the variable for."
														},
														{
															"key": "varName",
															"value": "<string>",
															"description": "(Required) The name of the variable to set."
														}
													]
												},
												"description": "Updates a process variable that is visible from the Task scope. A variable is visible from the task if it\nis a local task variable, or declared in a parent scope of the task. See the documentation on\n[variable scopes and visibility](https://docs.camunda.org/manual/7.21/user-guide/process-engine/variables#variable-scopes-and-variable-visibility).\n\n**Note**: If a variable doesn't exist, the variable is created in the top-most scope\nvisible from the task."
											},
											"response": [
												{
													"name": "Request successful.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"value\": {\n    \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n  },\n  \"type\": \"<string>\",\n  \"valueInfo\": {\n    \"exercitationf5_\": \"adipisicing laboris Ut\",\n    \"consectetur_e_\": \"enim in\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/task/:id/variables/:varName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"variables",
																":varName"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "The variable name, value or type is invalid, for example if the value could not be parsed to an `Integer`\nvalue or the passed variable type is not supported or a new transient variable has the name that is\nalready persisted. See the [Introduction](https:/",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"value\": {\n    \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n  },\n  \"type\": \"<string>\",\n  \"valueInfo\": {\n    \"exercitationf5_\": \"adipisicing laboris Ut\",\n    \"consectetur_e_\": \"enim in\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/task/:id/variables/:varName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"variables",
																":varName"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "The variable name is `null`, or the Task id is `null` or does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"value\": {\n    \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n  },\n  \"type\": \"<string>\",\n  \"valueInfo\": {\n    \"exercitationf5_\": \"adipisicing laboris Ut\",\n    \"consectetur_e_\": \"enim in\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/task/:id/variables/:varName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"task",
																":id",
																"variables",
																":varName"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "varName"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Task Variables",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/task/:id/variables?deserializeValues=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id",
												"variables"
											],
											"query": [
												{
													"key": "deserializeValues",
													"value": "true",
													"description": "Determines whether serializable variable values (typically variables that store custom Java objects)\nshould be deserialized on the server side (default `true`).\nIf set to `true`, a serializable variable will be deserialized on server side and transformed to JSON\nusing [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.\nNote that this requires the Java classes of the variable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n\nNote: While `true` is the default value for reasons of backward compatibility, we recommend setting this\nparameter to `false` when developing web applications that are independent of the Java process\napplications deployed to the engine."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the task to retrieve the variables from."
												}
											]
										},
										"description": "Retrieves all variables visible from the task. A variable is visible from the task if it is a local task\nvariable or declared in a parent scope of the task. See documentation on\n[visiblity of variables](https://docs.camunda.org/manual/7.21/user-guide/process-engine/variables/)."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/variables?deserializeValues=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"variables"
													],
													"query": [
														{
															"key": "deserializeValues",
															"value": "true",
															"description": "Determines whether serializable variable values (typically variables that store custom Java objects)\nshould be deserialized on the server side (default `true`).\nIf set to `true`, a serializable variable will be deserialized on server side and transformed to JSON\nusing [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.\nNote that this requires the Java classes of the variable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n\nNote: While `true` is the default value for reasons of backward compatibility, we recommend setting this\nparameter to `false` when developing web applications that are independent of the Java process\napplications deployed to the engine."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"nulla__3\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"consectetur_dfd\": \"veniam do minim occaecat\"\n    }\n  },\n  \"ut_10\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"ut_fa\": false,\n      \"mollit9\": -39701223,\n      \"velit_c1\": \"ve\"\n    }\n  },\n  \"aliquip_5\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"consectetur_34d\": -65418375,\n      \"laboriseec\": false,\n      \"doloreb\": true\n    }\n  },\n  \"mollitd\": {\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"in_76d\": true,\n      \"pariatur_f77\": true\n    }\n  }\n}"
										},
										{
											"name": "Task id is `null` or does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/task/:id/variables?deserializeValues=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"variables"
													],
													"query": [
														{
															"key": "deserializeValues",
															"value": "true",
															"description": "Determines whether serializable variable values (typically variables that store custom Java objects)\nshould be deserialized on the server side (default `true`).\nIf set to `true`, a serializable variable will be deserialized on server side and transformed to JSON\nusing [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.\nNote that this requires the Java classes of the variable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n\nNote: While `true` is the default value for reasons of backward compatibility, we recommend setting this\nparameter to `false` when developing web applications that are independent of the Java process\napplications deployed to the engine."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								},
								{
									"name": "Update/Delete Task Variables",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"modifications\": {\n    \"id_4\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"irure_9\": -3709291.92365548\n      }\n    },\n    \"reprehenderita\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"nostrud_c\": 51173474\n      }\n    }\n  },\n  \"deletions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/task/:id/variables",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id",
												"variables"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the task to set variables for."
												}
											]
										},
										"description": "Updates or deletes the variables visible from the task. Updates precede deletions. So, if a variable is\nupdated AND deleted, the deletion overrides the update. A variable is visible from the task if it is a\nlocal task variable or declared in a parent scope of the task. See documentation on\n[visiblity of variables](https://docs.camunda.org/manual/7.21/user-guide/process-engine/variables/)."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"modifications\": {\n    \"id_4\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"irure_9\": -3709291.92365548\n      }\n    },\n    \"reprehenderita\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"nostrud_c\": 51173474\n      }\n    }\n  },\n  \"deletions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/variables",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"variables"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The variable value or type is invalid. For example the value could not be parsed to an `Integer` value\nor the passed variable type is not supported. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor t",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"modifications\": {\n    \"id_4\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"irure_9\": -3709291.92365548\n      }\n    },\n    \"reprehenderita\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"nostrud_c\": 51173474\n      }\n    }\n  },\n  \"deletions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/variables",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"variables"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Update or delete could not be executed because the task is `null` or does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"modifications\": {\n    \"id_4\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"irure_9\": -3709291.92365548\n      }\n    },\n    \"reprehenderita\": {\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      },\n      \"type\": \"<string>\",\n      \"valueInfo\": {\n        \"nostrud_c\": 51173474\n      }\n    }\n  },\n  \"deletions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/task/:id/variables",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"task",
														":id",
														"variables"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Delete",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/task/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the task to be removed."
										}
									]
								},
								"description": "Removes a task by id."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/task/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request. The Task with the given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for the error response format.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/task/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "The Task with the given id cannot be deleted because it is part of a running process or case instance.\nSee the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling) for\nthe error response format.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/task/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/task/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the task to be retrieved."
										}
									]
								},
								"description": "Retrieves a task by id."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/task/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"assignee\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"created\": \"<dateTime>\",\n  \"lastUpdated\": \"<dateTime>\",\n  \"due\": \"<dateTime>\",\n  \"followUp\": \"<dateTime>\",\n  \"delegationState\": \"PENDING\",\n  \"description\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"parentTaskId\": \"<string>\",\n  \"priority\": \"<integer>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"caseDefinitionId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"taskDefinitionKey\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"formKey\": \"<string>\",\n  \"camundaFormRef\": {\n    \"key\": \"<string>\",\n    \"binding\": \"<string>\",\n    \"version\": \"<integer>\"\n  },\n  \"tenantId\": \"<string>\"\n}"
								},
								{
									"name": "Task with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/task/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Update",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"assignee\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"created\": \"<dateTime>\",\n  \"lastUpdated\": \"<dateTime>\",\n  \"due\": \"<dateTime>\",\n  \"followUp\": \"<dateTime>\",\n  \"delegationState\": \"PENDING\",\n  \"description\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"parentTaskId\": \"<string>\",\n  \"priority\": \"<integer>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"caseDefinitionId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"taskDefinitionKey\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"formKey\": \"<string>\",\n  \"camundaFormRef\": {\n    \"key\": \"<string>\",\n    \"binding\": \"<string>\",\n    \"version\": \"<integer>\"\n  },\n  \"tenantId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/task/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the task to be updated."
										}
									]
								},
								"description": "Updates a task."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"assignee\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"created\": \"<dateTime>\",\n  \"lastUpdated\": \"<dateTime>\",\n  \"due\": \"<dateTime>\",\n  \"followUp\": \"<dateTime>\",\n  \"delegationState\": \"PENDING\",\n  \"description\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"parentTaskId\": \"<string>\",\n  \"priority\": \"<integer>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"caseDefinitionId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"taskDefinitionKey\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"formKey\": \"<string>\",\n  \"camundaFormRef\": {\n    \"key\": \"<string>\",\n    \"binding\": \"<string>\",\n    \"version\": \"<integer>\"\n  },\n  \"tenantId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/task/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if a not valid `delegationState` is supplied. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"assignee\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"created\": \"<dateTime>\",\n  \"lastUpdated\": \"<dateTime>\",\n  \"due\": \"<dateTime>\",\n  \"followUp\": \"<dateTime>\",\n  \"delegationState\": \"PENDING\",\n  \"description\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"parentTaskId\": \"<string>\",\n  \"priority\": \"<integer>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"caseDefinitionId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"taskDefinitionKey\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"formKey\": \"<string>\",\n  \"camundaFormRef\": {\n    \"key\": \"<string>\",\n    \"binding\": \"<string>\",\n    \"version\": \"<integer>\"\n  },\n  \"tenantId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/task/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "If the corresponding task cannot be found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"assignee\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"created\": \"<dateTime>\",\n  \"lastUpdated\": \"<dateTime>\",\n  \"due\": \"<dateTime>\",\n  \"followUp\": \"<dateTime>\",\n  \"delegationState\": \"PENDING\",\n  \"description\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"parentTaskId\": \"<string>\",\n  \"priority\": \"<integer>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"caseDefinitionId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"taskDefinitionKey\": \"<string>\",\n  \"suspended\": \"<boolean>\",\n  \"formKey\": \"<string>\",\n  \"camundaFormRef\": {\n    \"key\": \"<string>\",\n    \"binding\": \"<string>\",\n    \"version\": \"<integer>\"\n  },\n  \"tenantId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/task/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"task",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/task",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"task"
							],
							"query": [
								{
									"key": "taskId",
									"value": "<string>",
									"description": "Restrict to task with the given id.",
									"disabled": true
								},
								{
									"key": "taskIdIn",
									"value": "<string>",
									"description": "Restrict to tasks with any of the given ids.",
									"disabled": true
								},
								{
									"key": "processInstanceId",
									"value": "<string>",
									"description": "Restrict to tasks that belong to process instances with the given id.",
									"disabled": true
								},
								{
									"key": "processInstanceIdIn",
									"value": "<string>",
									"description": "Restrict to tasks that belong to process instances with the given ids.",
									"disabled": true
								},
								{
									"key": "processInstanceBusinessKey",
									"value": "<string>",
									"description": "Restrict to tasks that belong to process instances with the given business key.",
									"disabled": true
								},
								{
									"key": "processInstanceBusinessKeyExpression",
									"value": "<string>",
									"description": "Restrict to tasks that belong to process instances with the given business key which \nis described by an expression. See the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions.",
									"disabled": true
								},
								{
									"key": "processInstanceBusinessKeyIn",
									"value": "<string>",
									"description": "Restrict to tasks that belong to process instances with one of the give business keys. \nThe keys need to be in a comma-separated list.",
									"disabled": true
								},
								{
									"key": "processInstanceBusinessKeyLike",
									"value": "<string>",
									"description": "Restrict to tasks that have a process instance business key that has the parameter \nvalue as a substring.",
									"disabled": true
								},
								{
									"key": "processInstanceBusinessKeyLikeExpression",
									"value": "<string>",
									"description": "Restrict to tasks that have a process instance business key that has the parameter \nvalue as a substring and is described by an expression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions.",
									"disabled": true
								},
								{
									"key": "processDefinitionId",
									"value": "<string>",
									"description": "Restrict to tasks that belong to a process definition with the given id.",
									"disabled": true
								},
								{
									"key": "processDefinitionKey",
									"value": "<string>",
									"description": "Restrict to tasks that belong to a process definition with the given key.",
									"disabled": true
								},
								{
									"key": "processDefinitionKeyIn",
									"value": "<string>",
									"description": "Restrict to tasks that belong to a process definition with one of the given keys. The \nkeys need to be in a comma-separated list.",
									"disabled": true
								},
								{
									"key": "processDefinitionName",
									"value": "<string>",
									"description": "Restrict to tasks that belong to a process definition with the given name.",
									"disabled": true
								},
								{
									"key": "processDefinitionNameLike",
									"value": "<string>",
									"description": "Restrict to tasks that have a process definition name that has the parameter value as \na substring.",
									"disabled": true
								},
								{
									"key": "executionId",
									"value": "<string>",
									"description": "Restrict to tasks that belong to an execution with the given id.",
									"disabled": true
								},
								{
									"key": "caseInstanceId",
									"value": "<string>",
									"description": "Restrict to tasks that belong to case instances with the given id.",
									"disabled": true
								},
								{
									"key": "caseInstanceBusinessKey",
									"value": "<string>",
									"description": "Restrict to tasks that belong to case instances with the given business key.",
									"disabled": true
								},
								{
									"key": "caseInstanceBusinessKeyLike",
									"value": "<string>",
									"description": "Restrict to tasks that have a case instance business key that has the parameter value \nas a substring.",
									"disabled": true
								},
								{
									"key": "caseDefinitionId",
									"value": "<string>",
									"description": "Restrict to tasks that belong to a case definition with the given id.",
									"disabled": true
								},
								{
									"key": "caseDefinitionKey",
									"value": "<string>",
									"description": "Restrict to tasks that belong to a case definition with the given key.",
									"disabled": true
								},
								{
									"key": "caseDefinitionName",
									"value": "<string>",
									"description": "Restrict to tasks that belong to a case definition with the given name.",
									"disabled": true
								},
								{
									"key": "caseDefinitionNameLike",
									"value": "<string>",
									"description": "Restrict to tasks that have a case definition name that has the parameter value as a \nsubstring.",
									"disabled": true
								},
								{
									"key": "caseExecutionId",
									"value": "<string>",
									"description": "Restrict to tasks that belong to a case execution with the given id.",
									"disabled": true
								},
								{
									"key": "activityInstanceIdIn",
									"value": "<string>",
									"description": "Only include tasks which belong to one of the passed and comma-separated activity \ninstance ids.",
									"disabled": true
								},
								{
									"key": "tenantIdIn",
									"value": "<string>",
									"description": "Only include tasks which belong to one of the passed and comma-separated \ntenant ids.",
									"disabled": true
								},
								{
									"key": "withoutTenantId",
									"value": "false",
									"description": "Only include tasks which belong to no tenant. Value may only be `true`, \nas `false` is the default behavior.",
									"disabled": true
								},
								{
									"key": "assignee",
									"value": "<string>",
									"description": "Restrict to tasks that the given user is assigned to.",
									"disabled": true
								},
								{
									"key": "assigneeExpression",
									"value": "<string>",
									"description": "Restrict to tasks that the user described by the given expression is assigned to. \nSee the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions.",
									"disabled": true
								},
								{
									"key": "assigneeLike",
									"value": "<string>",
									"description": "Restrict to tasks that have an assignee that has the parameter \nvalue as a substring.",
									"disabled": true
								},
								{
									"key": "assigneeLikeExpression",
									"value": "<string>",
									"description": "Restrict to tasks that have an assignee that has the parameter value described by the \ngiven expression as a substring. See the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions.",
									"disabled": true
								},
								{
									"key": "assigneeIn",
									"value": "<string>",
									"description": "Only include tasks which are assigned to one of the passed and \ncomma-separated user ids.",
									"disabled": true
								},
								{
									"key": "assigneeNotIn",
									"value": "<string>",
									"description": "Only include tasks which are not assigned to one of the passed and\ncomma-separated user ids.",
									"disabled": true
								},
								{
									"key": "owner",
									"value": "<string>",
									"description": "Restrict to tasks that the given user owns.",
									"disabled": true
								},
								{
									"key": "ownerExpression",
									"value": "<string>",
									"description": "Restrict to tasks that the user described by the given expression owns. See the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions.",
									"disabled": true
								},
								{
									"key": "candidateGroup",
									"value": "<string>",
									"description": "Only include tasks that are offered to the given group.",
									"disabled": true
								},
								{
									"key": "candidateGroupExpression",
									"value": "<string>",
									"description": "Only include tasks that are offered to the group described by the given expression. \nSee the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions.",
									"disabled": true
								},
								{
									"key": "candidateUser",
									"value": "<string>",
									"description": "Only include tasks that are offered to the given user or to one of his groups.",
									"disabled": true
								},
								{
									"key": "candidateUserExpression",
									"value": "<string>",
									"description": "Only include tasks that are offered to the user described by the given expression. \nSee the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions.",
									"disabled": true
								},
								{
									"key": "includeAssignedTasks",
									"value": "false",
									"description": "Also include tasks that are assigned to users in candidate queries. Default is to only \ninclude tasks that are not assigned to any user if you query by candidate user or\ngroup(s).",
									"disabled": true
								},
								{
									"key": "involvedUser",
									"value": "<string>",
									"description": "Only include tasks that the given user is involved in. A user is involved in a task if \nan identity link exists between task and user (e.g., the user is the assignee).",
									"disabled": true
								},
								{
									"key": "involvedUserExpression",
									"value": "<string>",
									"description": "Only include tasks that the user described by the given expression is involved in.\nA user is involved in a task if an identity link exists between task and user\n(e.g., the user is the assignee). See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions.",
									"disabled": true
								},
								{
									"key": "assigned",
									"value": "false",
									"description": "If set to `true`, restricts the query to all tasks that are assigned.",
									"disabled": true
								},
								{
									"key": "unassigned",
									"value": "false",
									"description": "If set to `true`, restricts the query to all tasks that are unassigned.",
									"disabled": true
								},
								{
									"key": "taskDefinitionKey",
									"value": "<string>",
									"description": "Restrict to tasks that have the given key.",
									"disabled": true
								},
								{
									"key": "taskDefinitionKeyIn",
									"value": "<string>",
									"description": "Restrict to tasks that have one of the given keys. The keys need to be in a\ncomma-separated list.",
									"disabled": true
								},
								{
									"key": "taskDefinitionKeyLike",
									"value": "<string>",
									"description": "Restrict to tasks that have a key that has the parameter value as a substring.",
									"disabled": true
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "Restrict to tasks that have the given name.",
									"disabled": true
								},
								{
									"key": "nameNotEqual",
									"value": "<string>",
									"description": "Restrict to tasks that do not have the given name.",
									"disabled": true
								},
								{
									"key": "nameLike",
									"value": "<string>",
									"description": "Restrict to tasks that have a name with the given parameter value as substring.",
									"disabled": true
								},
								{
									"key": "nameNotLike",
									"value": "<string>",
									"description": "Restrict to tasks that do not have a name with the given parameter\nvalue as substring.",
									"disabled": true
								},
								{
									"key": "description",
									"value": "<string>",
									"description": "Restrict to tasks that have the given description.",
									"disabled": true
								},
								{
									"key": "descriptionLike",
									"value": "<string>",
									"description": "Restrict to tasks that have a description that has the parameter\nvalue as a substring.",
									"disabled": true
								},
								{
									"key": "priority",
									"value": "<integer>",
									"description": "Restrict to tasks that have the given priority.",
									"disabled": true
								},
								{
									"key": "maxPriority",
									"value": "<integer>",
									"description": "Restrict to tasks that have a lower or equal priority.",
									"disabled": true
								},
								{
									"key": "minPriority",
									"value": "<integer>",
									"description": "Restrict to tasks that have a higher or equal priority.",
									"disabled": true
								},
								{
									"key": "dueDate",
									"value": "<string>",
									"description": "Restrict to tasks that are due on the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.546+0200`.",
									"disabled": true
								},
								{
									"key": "dueDateExpression",
									"value": "<string>",
									"description": "Restrict to tasks that are due on the date described by the given expression. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object.",
									"disabled": true
								},
								{
									"key": "dueAfter",
									"value": "<string>",
									"description": "Restrict to tasks that are due after the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have\nthe format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.435+0200`.",
									"disabled": true
								},
								{
									"key": "dueAfterExpression",
									"value": "<string>",
									"description": "Restrict to tasks that are due after the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object.",
									"disabled": true
								},
								{
									"key": "dueBefore",
									"value": "<string>",
									"description": "Restrict to tasks that are due before the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have\nthe format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.243+0200`.",
									"disabled": true
								},
								{
									"key": "dueBeforeExpression",
									"value": "<string>",
									"description": "Restrict to tasks that are due before the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object.",
									"disabled": true
								},
								{
									"key": "withoutDueDate",
									"value": "false",
									"description": "Only include tasks which have no due date. Value may only be `true`, \nas `false` is the default behavior.",
									"disabled": true
								},
								{
									"key": "followUpDate",
									"value": "<string>",
									"description": "Restrict to tasks that have a followUp date on the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date\nmust have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.342+0200`.",
									"disabled": true
								},
								{
									"key": "followUpDateExpression",
									"value": "<string>",
									"description": "Restrict to tasks that have a followUp date on the date described by the given\nexpression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object.",
									"disabled": true
								},
								{
									"key": "followUpAfter",
									"value": "<string>",
									"description": "Restrict to tasks that have a followUp date after the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the\ndate must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.542+0200`.",
									"disabled": true
								},
								{
									"key": "followUpAfterExpression",
									"value": "<string>",
									"description": "Restrict to tasks that have a followUp date after the date described by the given\nexpression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object.",
									"disabled": true
								},
								{
									"key": "followUpBefore",
									"value": "<string>",
									"description": "Restrict to tasks that have a followUp date before the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the\ndate must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.234+0200`.",
									"disabled": true
								},
								{
									"key": "followUpBeforeExpression",
									"value": "<string>",
									"description": "Restrict to tasks that have a followUp date before the date described by the given\nexpression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object.",
									"disabled": true
								},
								{
									"key": "followUpBeforeOrNotExistent",
									"value": "<string>",
									"description": "Restrict to tasks that have no followUp date or a followUp date before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.432+0200`. The\ntypical use case is to query all `active` tasks for a user for a given date.",
									"disabled": true
								},
								{
									"key": "followUpBeforeOrNotExistentExpression",
									"value": "<string>",
									"description": "Restrict to tasks that have no followUp date or a followUp date before the date\ndescribed by the given expression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object.",
									"disabled": true
								},
								{
									"key": "createdOn",
									"value": "<string>",
									"description": "Restrict to tasks that were created on the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have\nthe format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.324+0200`.",
									"disabled": true
								},
								{
									"key": "createdOnExpression",
									"value": "<string>",
									"description": "Restrict to tasks that were created on the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object.",
									"disabled": true
								},
								{
									"key": "createdAfter",
									"value": "<string>",
									"description": "Restrict to tasks that were created after the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.342+0200`.",
									"disabled": true
								},
								{
									"key": "createdAfterExpression",
									"value": "<string>",
									"description": "Restrict to tasks that were created after the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object.",
									"disabled": true
								},
								{
									"key": "createdBefore",
									"value": "<string>",
									"description": "Restrict to tasks that were created before the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.332+0200`.",
									"disabled": true
								},
								{
									"key": "createdBeforeExpression",
									"value": "<string>",
									"description": "Restrict to tasks that were created before the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object.",
									"disabled": true
								},
								{
									"key": "updatedAfter",
									"value": "<string>",
									"description": "Restrict to tasks that were updated after the given date. Every action that fires \na [task update event](https://docs.camunda.org/manual/7.21/user-guide/process-engine/delegation-code/#task-listener-event-lifecycle) is considered as updating the task.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must\nhave the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.332+0200`.",
									"disabled": true
								},
								{
									"key": "updatedAfterExpression",
									"value": "<string>",
									"description": "Restrict to tasks that were updated after the date described by the given expression. Every action that fires \na [task update event](https://docs.camunda.org/manual/7.21/user-guide/process-engine/delegation-code/#task-listener-event-lifecycle) is considered as updating the task.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object.",
									"disabled": true
								},
								{
									"key": "delegationState",
									"value": "RESOLVED",
									"description": "Restrict to tasks that are in the given delegation state. Valid values are\n`PENDING` and `RESOLVED`.",
									"disabled": true
								},
								{
									"key": "candidateGroups",
									"value": "<string>",
									"description": "Restrict to tasks that are offered to any of the given candidate groups. Takes a\ncomma-separated list of group names, so for example `developers,support,sales`.",
									"disabled": true
								},
								{
									"key": "candidateGroupsExpression",
									"value": "<string>",
									"description": "Restrict to tasks that are offered to any of the candidate groups described by the\ngiven expression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to\n`java.util.List` of Strings.",
									"disabled": true
								},
								{
									"key": "withCandidateGroups",
									"value": "false",
									"description": "Only include tasks which have a candidate group. Value may only be `true`,\nas `false` is the default behavior.",
									"disabled": true
								},
								{
									"key": "withoutCandidateGroups",
									"value": "false",
									"description": "Only include tasks which have no candidate group. Value may only be `true`,\nas `false` is the default behavior.",
									"disabled": true
								},
								{
									"key": "withCandidateUsers",
									"value": "false",
									"description": "Only include tasks which have a candidate user. Value may only be `true`,\nas `false` is the default behavior.",
									"disabled": true
								},
								{
									"key": "withoutCandidateUsers",
									"value": "false",
									"description": "Only include tasks which have no candidate users. Value may only be `true`,\nas `false` is the default behavior.",
									"disabled": true
								},
								{
									"key": "active",
									"value": "false",
									"description": "Only include active tasks. Value may only be `true`, as `false`\nis the default behavior.",
									"disabled": true
								},
								{
									"key": "suspended",
									"value": "false",
									"description": "Only include suspended tasks. Value may only be `true`, as\n`false` is the default behavior.",
									"disabled": true
								},
								{
									"key": "taskVariables",
									"value": "<string>",
									"description": "Only include tasks that have variables with certain values. Variable filtering\nexpressions are comma-separated and are structured as follows:\n\nA valid parameter value has the form `key_operator_value`. `key` is the variable name,\n`operator` is the comparison operator to be used and `value` the variable value.\n\n**Note**: Values are always treated as String objects on server side.\n\nValid `operator` values are:\n`eq` - equal to;\n`neq` - not equal to;\n`gt` - greater than;\n`gteq` - greater than or equal to;\n`lt` - lower than;\n`lteq` - lower than or equal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters.",
									"disabled": true
								},
								{
									"key": "processVariables",
									"value": "<string>",
									"description": "Only include tasks that belong to process instances that have variables with certain \nvalues. Variable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`. `key` is the variable name,\n`operator` is the comparison operator to be used and `value` the variable value.\n\n**Note**: Values are always treated as String objects on server side.\n\nValid `operator` values are:\n`eq` - equal to;\n`neq` - not equal to;\n`gt` - greater than;\n`gteq` - greater than or equal to;\n`lt` - lower than;\n`lteq` - lower than or equal to;\n`like`;\n`notLike`.\n`key` and `value` may not contain underscore or comma characters.",
									"disabled": true
								},
								{
									"key": "caseInstanceVariables",
									"value": "<string>",
									"description": "Only include tasks that belong to case instances that have variables with certain\nvalues. Variable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`. `key` is the variable name,\n`operator` is the comparison operator to be used and `value` the variable value.\n\n**Note**: Values are always treated as String objects on server side.\n\nValid `operator` values are:\n`eq` - equal to;\n`neq` - not equal to;\n`gt` - greater than;\n`gteq` - greater than or equal to;\n`lt` - lower than;\n`lteq` - lower than or equal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters.",
									"disabled": true
								},
								{
									"key": "variableNamesIgnoreCase",
									"value": "false",
									"description": "Match all variable names in this query case-insensitively. If set\n`variableName` and `variablename` are treated as equal.",
									"disabled": true
								},
								{
									"key": "variableValuesIgnoreCase",
									"value": "false",
									"description": "Match all variable values in this query case-insensitively. If set\n`variableValue` and `variablevalue` are treated as equal.",
									"disabled": true
								},
								{
									"key": "parentTaskId",
									"value": "<string>",
									"description": "Restrict query to all tasks that are sub tasks of the given task. Takes a task id.",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "caseInstanceId",
									"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter.",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter.",
									"disabled": true
								},
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return.",
									"disabled": true
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left.",
									"disabled": true
								}
							]
						},
						"description": "Queries for tasks that fulfill a given filter. The size of the result set can be\nretrieved by using the Get Task Count method.\n\n**Security Consideration:** There are several query parameters (such as\nassigneeExpression) for specifying an EL expression. These are disabled by default to\nprevent remote code execution. See the section on\n[security considerations](https://docs.camunda.org/manual/7.21/user-guide/process-engine/securing-custom-code/)\nfor custom code in the user guide for details."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/task?taskId=<string>&taskIdIn=<string>&processInstanceId=<string>&processInstanceIdIn=<string>&processInstanceBusinessKey=<string>&processInstanceBusinessKeyExpression=<string>&processInstanceBusinessKeyIn=<string>&processInstanceBusinessKeyLike=<string>&processInstanceBusinessKeyLikeExpression=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionKeyIn=<string>&processDefinitionName=<string>&processDefinitionNameLike=<string>&executionId=<string>&caseInstanceId=<string>&caseInstanceBusinessKey=<string>&caseInstanceBusinessKeyLike=<string>&caseDefinitionId=<string>&caseDefinitionKey=<string>&caseDefinitionName=<string>&caseDefinitionNameLike=<string>&caseExecutionId=<string>&activityInstanceIdIn=<string>&tenantIdIn=<string>&withoutTenantId=false&assignee=<string>&assigneeExpression=<string>&assigneeLike=<string>&assigneeLikeExpression=<string>&assigneeIn=<string>&assigneeNotIn=<string>&owner=<string>&ownerExpression=<string>&candidateGroup=<string>&candidateGroupExpression=<string>&candidateUser=<string>&candidateUserExpression=<string>&includeAssignedTasks=false&involvedUser=<string>&involvedUserExpression=<string>&assigned=false&unassigned=false&taskDefinitionKey=<string>&taskDefinitionKeyIn=<string>&taskDefinitionKeyLike=<string>&name=<string>&nameNotEqual=<string>&nameLike=<string>&nameNotLike=<string>&description=<string>&descriptionLike=<string>&priority=<integer>&maxPriority=<integer>&minPriority=<integer>&dueDate=<string>&dueDateExpression=<string>&dueAfter=<string>&dueAfterExpression=<string>&dueBefore=<string>&dueBeforeExpression=<string>&withoutDueDate=false&followUpDate=<string>&followUpDateExpression=<string>&followUpAfter=<string>&followUpAfterExpression=<string>&followUpBefore=<string>&followUpBeforeExpression=<string>&followUpBeforeOrNotExistent=<string>&followUpBeforeOrNotExistentExpression=<string>&createdOn=<string>&createdOnExpression=<string>&createdAfter=<string>&createdAfterExpression=<string>&createdBefore=<string>&createdBeforeExpression=<string>&updatedAfter=<string>&updatedAfterExpression=<string>&delegationState=RESOLVED&candidateGroups=<string>&candidateGroupsExpression=<string>&withCandidateGroups=false&withoutCandidateGroups=false&withCandidateUsers=false&withoutCandidateUsers=false&active=false&suspended=false&taskVariables=<string>&processVariables=<string>&caseInstanceVariables=<string>&variableNamesIgnoreCase=false&variableValuesIgnoreCase=false&parentTaskId=<string>&sortBy=caseInstanceId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task"
									],
									"query": [
										{
											"key": "taskId",
											"value": "<string>",
											"description": "Restrict to task with the given id."
										},
										{
											"key": "taskIdIn",
											"value": "<string>",
											"description": "Restrict to tasks with any of the given ids."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Restrict to tasks that belong to process instances with the given id."
										},
										{
											"key": "processInstanceIdIn",
											"value": "<string>",
											"description": "Restrict to tasks that belong to process instances with the given ids."
										},
										{
											"key": "processInstanceBusinessKey",
											"value": "<string>",
											"description": "Restrict to tasks that belong to process instances with the given business key."
										},
										{
											"key": "processInstanceBusinessKeyExpression",
											"value": "<string>",
											"description": "Restrict to tasks that belong to process instances with the given business key which \nis described by an expression. See the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions."
										},
										{
											"key": "processInstanceBusinessKeyIn",
											"value": "<string>",
											"description": "Restrict to tasks that belong to process instances with one of the give business keys. \nThe keys need to be in a comma-separated list."
										},
										{
											"key": "processInstanceBusinessKeyLike",
											"value": "<string>",
											"description": "Restrict to tasks that have a process instance business key that has the parameter \nvalue as a substring."
										},
										{
											"key": "processInstanceBusinessKeyLikeExpression",
											"value": "<string>",
											"description": "Restrict to tasks that have a process instance business key that has the parameter \nvalue as a substring and is described by an expression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a process definition with the given id."
										},
										{
											"key": "processDefinitionKey",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a process definition with the given key."
										},
										{
											"key": "processDefinitionKeyIn",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a process definition with one of the given keys. The \nkeys need to be in a comma-separated list."
										},
										{
											"key": "processDefinitionName",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a process definition with the given name."
										},
										{
											"key": "processDefinitionNameLike",
											"value": "<string>",
											"description": "Restrict to tasks that have a process definition name that has the parameter value as \na substring."
										},
										{
											"key": "executionId",
											"value": "<string>",
											"description": "Restrict to tasks that belong to an execution with the given id."
										},
										{
											"key": "caseInstanceId",
											"value": "<string>",
											"description": "Restrict to tasks that belong to case instances with the given id."
										},
										{
											"key": "caseInstanceBusinessKey",
											"value": "<string>",
											"description": "Restrict to tasks that belong to case instances with the given business key."
										},
										{
											"key": "caseInstanceBusinessKeyLike",
											"value": "<string>",
											"description": "Restrict to tasks that have a case instance business key that has the parameter value \nas a substring."
										},
										{
											"key": "caseDefinitionId",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a case definition with the given id."
										},
										{
											"key": "caseDefinitionKey",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a case definition with the given key."
										},
										{
											"key": "caseDefinitionName",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a case definition with the given name."
										},
										{
											"key": "caseDefinitionNameLike",
											"value": "<string>",
											"description": "Restrict to tasks that have a case definition name that has the parameter value as a \nsubstring."
										},
										{
											"key": "caseExecutionId",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a case execution with the given id."
										},
										{
											"key": "activityInstanceIdIn",
											"value": "<string>",
											"description": "Only include tasks which belong to one of the passed and comma-separated activity \ninstance ids."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Only include tasks which belong to one of the passed and comma-separated \ntenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "false",
											"description": "Only include tasks which belong to no tenant. Value may only be `true`, \nas `false` is the default behavior."
										},
										{
											"key": "assignee",
											"value": "<string>",
											"description": "Restrict to tasks that the given user is assigned to."
										},
										{
											"key": "assigneeExpression",
											"value": "<string>",
											"description": "Restrict to tasks that the user described by the given expression is assigned to. \nSee the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions."
										},
										{
											"key": "assigneeLike",
											"value": "<string>",
											"description": "Restrict to tasks that have an assignee that has the parameter \nvalue as a substring."
										},
										{
											"key": "assigneeLikeExpression",
											"value": "<string>",
											"description": "Restrict to tasks that have an assignee that has the parameter value described by the \ngiven expression as a substring. See the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions."
										},
										{
											"key": "assigneeIn",
											"value": "<string>",
											"description": "Only include tasks which are assigned to one of the passed and \ncomma-separated user ids."
										},
										{
											"key": "assigneeNotIn",
											"value": "<string>",
											"description": "Only include tasks which are not assigned to one of the passed and\ncomma-separated user ids."
										},
										{
											"key": "owner",
											"value": "<string>",
											"description": "Restrict to tasks that the given user owns."
										},
										{
											"key": "ownerExpression",
											"value": "<string>",
											"description": "Restrict to tasks that the user described by the given expression owns. See the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions."
										},
										{
											"key": "candidateGroup",
											"value": "<string>",
											"description": "Only include tasks that are offered to the given group."
										},
										{
											"key": "candidateGroupExpression",
											"value": "<string>",
											"description": "Only include tasks that are offered to the group described by the given expression. \nSee the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions."
										},
										{
											"key": "candidateUser",
											"value": "<string>",
											"description": "Only include tasks that are offered to the given user or to one of his groups."
										},
										{
											"key": "candidateUserExpression",
											"value": "<string>",
											"description": "Only include tasks that are offered to the user described by the given expression. \nSee the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions."
										},
										{
											"key": "includeAssignedTasks",
											"value": "false",
											"description": "Also include tasks that are assigned to users in candidate queries. Default is to only \ninclude tasks that are not assigned to any user if you query by candidate user or\ngroup(s)."
										},
										{
											"key": "involvedUser",
											"value": "<string>",
											"description": "Only include tasks that the given user is involved in. A user is involved in a task if \nan identity link exists between task and user (e.g., the user is the assignee)."
										},
										{
											"key": "involvedUserExpression",
											"value": "<string>",
											"description": "Only include tasks that the user described by the given expression is involved in.\nA user is involved in a task if an identity link exists between task and user\n(e.g., the user is the assignee). See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions."
										},
										{
											"key": "assigned",
											"value": "false",
											"description": "If set to `true`, restricts the query to all tasks that are assigned."
										},
										{
											"key": "unassigned",
											"value": "false",
											"description": "If set to `true`, restricts the query to all tasks that are unassigned."
										},
										{
											"key": "taskDefinitionKey",
											"value": "<string>",
											"description": "Restrict to tasks that have the given key."
										},
										{
											"key": "taskDefinitionKeyIn",
											"value": "<string>",
											"description": "Restrict to tasks that have one of the given keys. The keys need to be in a\ncomma-separated list."
										},
										{
											"key": "taskDefinitionKeyLike",
											"value": "<string>",
											"description": "Restrict to tasks that have a key that has the parameter value as a substring."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Restrict to tasks that have the given name."
										},
										{
											"key": "nameNotEqual",
											"value": "<string>",
											"description": "Restrict to tasks that do not have the given name."
										},
										{
											"key": "nameLike",
											"value": "<string>",
											"description": "Restrict to tasks that have a name with the given parameter value as substring."
										},
										{
											"key": "nameNotLike",
											"value": "<string>",
											"description": "Restrict to tasks that do not have a name with the given parameter\nvalue as substring."
										},
										{
											"key": "description",
											"value": "<string>",
											"description": "Restrict to tasks that have the given description."
										},
										{
											"key": "descriptionLike",
											"value": "<string>",
											"description": "Restrict to tasks that have a description that has the parameter\nvalue as a substring."
										},
										{
											"key": "priority",
											"value": "<integer>",
											"description": "Restrict to tasks that have the given priority."
										},
										{
											"key": "maxPriority",
											"value": "<integer>",
											"description": "Restrict to tasks that have a lower or equal priority."
										},
										{
											"key": "minPriority",
											"value": "<integer>",
											"description": "Restrict to tasks that have a higher or equal priority."
										},
										{
											"key": "dueDate",
											"value": "<string>",
											"description": "Restrict to tasks that are due on the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.546+0200`."
										},
										{
											"key": "dueDateExpression",
											"value": "<string>",
											"description": "Restrict to tasks that are due on the date described by the given expression. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
										},
										{
											"key": "dueAfter",
											"value": "<string>",
											"description": "Restrict to tasks that are due after the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have\nthe format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.435+0200`."
										},
										{
											"key": "dueAfterExpression",
											"value": "<string>",
											"description": "Restrict to tasks that are due after the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
										},
										{
											"key": "dueBefore",
											"value": "<string>",
											"description": "Restrict to tasks that are due before the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have\nthe format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.243+0200`."
										},
										{
											"key": "dueBeforeExpression",
											"value": "<string>",
											"description": "Restrict to tasks that are due before the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
										},
										{
											"key": "withoutDueDate",
											"value": "false",
											"description": "Only include tasks which have no due date. Value may only be `true`, \nas `false` is the default behavior."
										},
										{
											"key": "followUpDate",
											"value": "<string>",
											"description": "Restrict to tasks that have a followUp date on the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date\nmust have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.342+0200`."
										},
										{
											"key": "followUpDateExpression",
											"value": "<string>",
											"description": "Restrict to tasks that have a followUp date on the date described by the given\nexpression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
										},
										{
											"key": "followUpAfter",
											"value": "<string>",
											"description": "Restrict to tasks that have a followUp date after the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the\ndate must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.542+0200`."
										},
										{
											"key": "followUpAfterExpression",
											"value": "<string>",
											"description": "Restrict to tasks that have a followUp date after the date described by the given\nexpression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
										},
										{
											"key": "followUpBefore",
											"value": "<string>",
											"description": "Restrict to tasks that have a followUp date before the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the\ndate must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.234+0200`."
										},
										{
											"key": "followUpBeforeExpression",
											"value": "<string>",
											"description": "Restrict to tasks that have a followUp date before the date described by the given\nexpression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
										},
										{
											"key": "followUpBeforeOrNotExistent",
											"value": "<string>",
											"description": "Restrict to tasks that have no followUp date or a followUp date before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.432+0200`. The\ntypical use case is to query all `active` tasks for a user for a given date."
										},
										{
											"key": "followUpBeforeOrNotExistentExpression",
											"value": "<string>",
											"description": "Restrict to tasks that have no followUp date or a followUp date before the date\ndescribed by the given expression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
										},
										{
											"key": "createdOn",
											"value": "<string>",
											"description": "Restrict to tasks that were created on the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have\nthe format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.324+0200`."
										},
										{
											"key": "createdOnExpression",
											"value": "<string>",
											"description": "Restrict to tasks that were created on the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
										},
										{
											"key": "createdAfter",
											"value": "<string>",
											"description": "Restrict to tasks that were created after the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.342+0200`."
										},
										{
											"key": "createdAfterExpression",
											"value": "<string>",
											"description": "Restrict to tasks that were created after the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
										},
										{
											"key": "createdBefore",
											"value": "<string>",
											"description": "Restrict to tasks that were created before the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.332+0200`."
										},
										{
											"key": "createdBeforeExpression",
											"value": "<string>",
											"description": "Restrict to tasks that were created before the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
										},
										{
											"key": "updatedAfter",
											"value": "<string>",
											"description": "Restrict to tasks that were updated after the given date. Every action that fires \na [task update event](https://docs.camunda.org/manual/7.21/user-guide/process-engine/delegation-code/#task-listener-event-lifecycle) is considered as updating the task.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must\nhave the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.332+0200`."
										},
										{
											"key": "updatedAfterExpression",
											"value": "<string>",
											"description": "Restrict to tasks that were updated after the date described by the given expression. Every action that fires \na [task update event](https://docs.camunda.org/manual/7.21/user-guide/process-engine/delegation-code/#task-listener-event-lifecycle) is considered as updating the task.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
										},
										{
											"key": "delegationState",
											"value": "RESOLVED",
											"description": "Restrict to tasks that are in the given delegation state. Valid values are\n`PENDING` and `RESOLVED`."
										},
										{
											"key": "candidateGroups",
											"value": "<string>",
											"description": "Restrict to tasks that are offered to any of the given candidate groups. Takes a\ncomma-separated list of group names, so for example `developers,support,sales`."
										},
										{
											"key": "candidateGroupsExpression",
											"value": "<string>",
											"description": "Restrict to tasks that are offered to any of the candidate groups described by the\ngiven expression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to\n`java.util.List` of Strings."
										},
										{
											"key": "withCandidateGroups",
											"value": "false",
											"description": "Only include tasks which have a candidate group. Value may only be `true`,\nas `false` is the default behavior."
										},
										{
											"key": "withoutCandidateGroups",
											"value": "false",
											"description": "Only include tasks which have no candidate group. Value may only be `true`,\nas `false` is the default behavior."
										},
										{
											"key": "withCandidateUsers",
											"value": "false",
											"description": "Only include tasks which have a candidate user. Value may only be `true`,\nas `false` is the default behavior."
										},
										{
											"key": "withoutCandidateUsers",
											"value": "false",
											"description": "Only include tasks which have no candidate users. Value may only be `true`,\nas `false` is the default behavior."
										},
										{
											"key": "active",
											"value": "false",
											"description": "Only include active tasks. Value may only be `true`, as `false`\nis the default behavior."
										},
										{
											"key": "suspended",
											"value": "false",
											"description": "Only include suspended tasks. Value may only be `true`, as\n`false` is the default behavior."
										},
										{
											"key": "taskVariables",
											"value": "<string>",
											"description": "Only include tasks that have variables with certain values. Variable filtering\nexpressions are comma-separated and are structured as follows:\n\nA valid parameter value has the form `key_operator_value`. `key` is the variable name,\n`operator` is the comparison operator to be used and `value` the variable value.\n\n**Note**: Values are always treated as String objects on server side.\n\nValid `operator` values are:\n`eq` - equal to;\n`neq` - not equal to;\n`gt` - greater than;\n`gteq` - greater than or equal to;\n`lt` - lower than;\n`lteq` - lower than or equal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
										},
										{
											"key": "processVariables",
											"value": "<string>",
											"description": "Only include tasks that belong to process instances that have variables with certain \nvalues. Variable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`. `key` is the variable name,\n`operator` is the comparison operator to be used and `value` the variable value.\n\n**Note**: Values are always treated as String objects on server side.\n\nValid `operator` values are:\n`eq` - equal to;\n`neq` - not equal to;\n`gt` - greater than;\n`gteq` - greater than or equal to;\n`lt` - lower than;\n`lteq` - lower than or equal to;\n`like`;\n`notLike`.\n`key` and `value` may not contain underscore or comma characters."
										},
										{
											"key": "caseInstanceVariables",
											"value": "<string>",
											"description": "Only include tasks that belong to case instances that have variables with certain\nvalues. Variable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`. `key` is the variable name,\n`operator` is the comparison operator to be used and `value` the variable value.\n\n**Note**: Values are always treated as String objects on server side.\n\nValid `operator` values are:\n`eq` - equal to;\n`neq` - not equal to;\n`gt` - greater than;\n`gteq` - greater than or equal to;\n`lt` - lower than;\n`lteq` - lower than or equal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
										},
										{
											"key": "variableNamesIgnoreCase",
											"value": "false",
											"description": "Match all variable names in this query case-insensitively. If set\n`variableName` and `variablename` are treated as equal."
										},
										{
											"key": "variableValuesIgnoreCase",
											"value": "false",
											"description": "Match all variable values in this query case-insensitively. If set\n`variableValue` and `variablevalue` are treated as equal."
										},
										{
											"key": "parentTaskId",
											"value": "<string>",
											"description": "Restrict query to all tasks that are sub tasks of the given task. Takes a task id."
										},
										{
											"key": "sortBy",
											"value": "caseInstanceId",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"assignee\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"created\": \"<dateTime>\",\n    \"lastUpdated\": \"<dateTime>\",\n    \"due\": \"<dateTime>\",\n    \"followUp\": \"<dateTime>\",\n    \"delegationState\": \"RESOLVED\",\n    \"description\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"parentTaskId\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"caseExecutionId\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"taskDefinitionKey\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"formKey\": \"<string>\",\n    \"camundaFormRef\": {\n      \"key\": \"<string>\",\n      \"binding\": \"<string>\",\n      \"version\": \"<integer>\"\n    },\n    \"tenantId\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"assignee\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"created\": \"<dateTime>\",\n    \"lastUpdated\": \"<dateTime>\",\n    \"due\": \"<dateTime>\",\n    \"followUp\": \"<dateTime>\",\n    \"delegationState\": \"PENDING\",\n    \"description\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"parentTaskId\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"caseExecutionId\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"taskDefinitionKey\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"formKey\": \"<string>\",\n    \"camundaFormRef\": {\n      \"key\": \"<string>\",\n      \"binding\": \"<string>\",\n      \"version\": \"<integer>\"\n    },\n    \"tenantId\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`, or if an invalid operator for variable\ncomparison is used. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/res",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/task?taskId=<string>&taskIdIn=<string>&processInstanceId=<string>&processInstanceIdIn=<string>&processInstanceBusinessKey=<string>&processInstanceBusinessKeyExpression=<string>&processInstanceBusinessKeyIn=<string>&processInstanceBusinessKeyLike=<string>&processInstanceBusinessKeyLikeExpression=<string>&processDefinitionId=<string>&processDefinitionKey=<string>&processDefinitionKeyIn=<string>&processDefinitionName=<string>&processDefinitionNameLike=<string>&executionId=<string>&caseInstanceId=<string>&caseInstanceBusinessKey=<string>&caseInstanceBusinessKeyLike=<string>&caseDefinitionId=<string>&caseDefinitionKey=<string>&caseDefinitionName=<string>&caseDefinitionNameLike=<string>&caseExecutionId=<string>&activityInstanceIdIn=<string>&tenantIdIn=<string>&withoutTenantId=false&assignee=<string>&assigneeExpression=<string>&assigneeLike=<string>&assigneeLikeExpression=<string>&assigneeIn=<string>&assigneeNotIn=<string>&owner=<string>&ownerExpression=<string>&candidateGroup=<string>&candidateGroupExpression=<string>&candidateUser=<string>&candidateUserExpression=<string>&includeAssignedTasks=false&involvedUser=<string>&involvedUserExpression=<string>&assigned=false&unassigned=false&taskDefinitionKey=<string>&taskDefinitionKeyIn=<string>&taskDefinitionKeyLike=<string>&name=<string>&nameNotEqual=<string>&nameLike=<string>&nameNotLike=<string>&description=<string>&descriptionLike=<string>&priority=<integer>&maxPriority=<integer>&minPriority=<integer>&dueDate=<string>&dueDateExpression=<string>&dueAfter=<string>&dueAfterExpression=<string>&dueBefore=<string>&dueBeforeExpression=<string>&withoutDueDate=false&followUpDate=<string>&followUpDateExpression=<string>&followUpAfter=<string>&followUpAfterExpression=<string>&followUpBefore=<string>&followUpBeforeExpression=<string>&followUpBeforeOrNotExistent=<string>&followUpBeforeOrNotExistentExpression=<string>&createdOn=<string>&createdOnExpression=<string>&createdAfter=<string>&createdAfterExpression=<string>&createdBefore=<string>&createdBeforeExpression=<string>&updatedAfter=<string>&updatedAfterExpression=<string>&delegationState=RESOLVED&candidateGroups=<string>&candidateGroupsExpression=<string>&withCandidateGroups=false&withoutCandidateGroups=false&withCandidateUsers=false&withoutCandidateUsers=false&active=false&suspended=false&taskVariables=<string>&processVariables=<string>&caseInstanceVariables=<string>&variableNamesIgnoreCase=false&variableValuesIgnoreCase=false&parentTaskId=<string>&sortBy=caseInstanceId&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task"
									],
									"query": [
										{
											"key": "taskId",
											"value": "<string>",
											"description": "Restrict to task with the given id."
										},
										{
											"key": "taskIdIn",
											"value": "<string>",
											"description": "Restrict to tasks with any of the given ids."
										},
										{
											"key": "processInstanceId",
											"value": "<string>",
											"description": "Restrict to tasks that belong to process instances with the given id."
										},
										{
											"key": "processInstanceIdIn",
											"value": "<string>",
											"description": "Restrict to tasks that belong to process instances with the given ids."
										},
										{
											"key": "processInstanceBusinessKey",
											"value": "<string>",
											"description": "Restrict to tasks that belong to process instances with the given business key."
										},
										{
											"key": "processInstanceBusinessKeyExpression",
											"value": "<string>",
											"description": "Restrict to tasks that belong to process instances with the given business key which \nis described by an expression. See the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions."
										},
										{
											"key": "processInstanceBusinessKeyIn",
											"value": "<string>",
											"description": "Restrict to tasks that belong to process instances with one of the give business keys. \nThe keys need to be in a comma-separated list."
										},
										{
											"key": "processInstanceBusinessKeyLike",
											"value": "<string>",
											"description": "Restrict to tasks that have a process instance business key that has the parameter \nvalue as a substring."
										},
										{
											"key": "processInstanceBusinessKeyLikeExpression",
											"value": "<string>",
											"description": "Restrict to tasks that have a process instance business key that has the parameter \nvalue as a substring and is described by an expression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions."
										},
										{
											"key": "processDefinitionId",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a process definition with the given id."
										},
										{
											"key": "processDefinitionKey",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a process definition with the given key."
										},
										{
											"key": "processDefinitionKeyIn",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a process definition with one of the given keys. The \nkeys need to be in a comma-separated list."
										},
										{
											"key": "processDefinitionName",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a process definition with the given name."
										},
										{
											"key": "processDefinitionNameLike",
											"value": "<string>",
											"description": "Restrict to tasks that have a process definition name that has the parameter value as \na substring."
										},
										{
											"key": "executionId",
											"value": "<string>",
											"description": "Restrict to tasks that belong to an execution with the given id."
										},
										{
											"key": "caseInstanceId",
											"value": "<string>",
											"description": "Restrict to tasks that belong to case instances with the given id."
										},
										{
											"key": "caseInstanceBusinessKey",
											"value": "<string>",
											"description": "Restrict to tasks that belong to case instances with the given business key."
										},
										{
											"key": "caseInstanceBusinessKeyLike",
											"value": "<string>",
											"description": "Restrict to tasks that have a case instance business key that has the parameter value \nas a substring."
										},
										{
											"key": "caseDefinitionId",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a case definition with the given id."
										},
										{
											"key": "caseDefinitionKey",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a case definition with the given key."
										},
										{
											"key": "caseDefinitionName",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a case definition with the given name."
										},
										{
											"key": "caseDefinitionNameLike",
											"value": "<string>",
											"description": "Restrict to tasks that have a case definition name that has the parameter value as a \nsubstring."
										},
										{
											"key": "caseExecutionId",
											"value": "<string>",
											"description": "Restrict to tasks that belong to a case execution with the given id."
										},
										{
											"key": "activityInstanceIdIn",
											"value": "<string>",
											"description": "Only include tasks which belong to one of the passed and comma-separated activity \ninstance ids."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Only include tasks which belong to one of the passed and comma-separated \ntenant ids."
										},
										{
											"key": "withoutTenantId",
											"value": "false",
											"description": "Only include tasks which belong to no tenant. Value may only be `true`, \nas `false` is the default behavior."
										},
										{
											"key": "assignee",
											"value": "<string>",
											"description": "Restrict to tasks that the given user is assigned to."
										},
										{
											"key": "assigneeExpression",
											"value": "<string>",
											"description": "Restrict to tasks that the user described by the given expression is assigned to. \nSee the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions."
										},
										{
											"key": "assigneeLike",
											"value": "<string>",
											"description": "Restrict to tasks that have an assignee that has the parameter \nvalue as a substring."
										},
										{
											"key": "assigneeLikeExpression",
											"value": "<string>",
											"description": "Restrict to tasks that have an assignee that has the parameter value described by the \ngiven expression as a substring. See the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions."
										},
										{
											"key": "assigneeIn",
											"value": "<string>",
											"description": "Only include tasks which are assigned to one of the passed and \ncomma-separated user ids."
										},
										{
											"key": "assigneeNotIn",
											"value": "<string>",
											"description": "Only include tasks which are not assigned to one of the passed and\ncomma-separated user ids."
										},
										{
											"key": "owner",
											"value": "<string>",
											"description": "Restrict to tasks that the given user owns."
										},
										{
											"key": "ownerExpression",
											"value": "<string>",
											"description": "Restrict to tasks that the user described by the given expression owns. See the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions."
										},
										{
											"key": "candidateGroup",
											"value": "<string>",
											"description": "Only include tasks that are offered to the given group."
										},
										{
											"key": "candidateGroupExpression",
											"value": "<string>",
											"description": "Only include tasks that are offered to the group described by the given expression. \nSee the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions."
										},
										{
											"key": "candidateUser",
											"value": "<string>",
											"description": "Only include tasks that are offered to the given user or to one of his groups."
										},
										{
											"key": "candidateUserExpression",
											"value": "<string>",
											"description": "Only include tasks that are offered to the user described by the given expression. \nSee the \n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions) \nfor more information on available functions."
										},
										{
											"key": "includeAssignedTasks",
											"value": "false",
											"description": "Also include tasks that are assigned to users in candidate queries. Default is to only \ninclude tasks that are not assigned to any user if you query by candidate user or\ngroup(s)."
										},
										{
											"key": "involvedUser",
											"value": "<string>",
											"description": "Only include tasks that the given user is involved in. A user is involved in a task if \nan identity link exists between task and user (e.g., the user is the assignee)."
										},
										{
											"key": "involvedUserExpression",
											"value": "<string>",
											"description": "Only include tasks that the user described by the given expression is involved in.\nA user is involved in a task if an identity link exists between task and user\n(e.g., the user is the assignee). See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions."
										},
										{
											"key": "assigned",
											"value": "false",
											"description": "If set to `true`, restricts the query to all tasks that are assigned."
										},
										{
											"key": "unassigned",
											"value": "false",
											"description": "If set to `true`, restricts the query to all tasks that are unassigned."
										},
										{
											"key": "taskDefinitionKey",
											"value": "<string>",
											"description": "Restrict to tasks that have the given key."
										},
										{
											"key": "taskDefinitionKeyIn",
											"value": "<string>",
											"description": "Restrict to tasks that have one of the given keys. The keys need to be in a\ncomma-separated list."
										},
										{
											"key": "taskDefinitionKeyLike",
											"value": "<string>",
											"description": "Restrict to tasks that have a key that has the parameter value as a substring."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Restrict to tasks that have the given name."
										},
										{
											"key": "nameNotEqual",
											"value": "<string>",
											"description": "Restrict to tasks that do not have the given name."
										},
										{
											"key": "nameLike",
											"value": "<string>",
											"description": "Restrict to tasks that have a name with the given parameter value as substring."
										},
										{
											"key": "nameNotLike",
											"value": "<string>",
											"description": "Restrict to tasks that do not have a name with the given parameter\nvalue as substring."
										},
										{
											"key": "description",
											"value": "<string>",
											"description": "Restrict to tasks that have the given description."
										},
										{
											"key": "descriptionLike",
											"value": "<string>",
											"description": "Restrict to tasks that have a description that has the parameter\nvalue as a substring."
										},
										{
											"key": "priority",
											"value": "<integer>",
											"description": "Restrict to tasks that have the given priority."
										},
										{
											"key": "maxPriority",
											"value": "<integer>",
											"description": "Restrict to tasks that have a lower or equal priority."
										},
										{
											"key": "minPriority",
											"value": "<integer>",
											"description": "Restrict to tasks that have a higher or equal priority."
										},
										{
											"key": "dueDate",
											"value": "<string>",
											"description": "Restrict to tasks that are due on the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.546+0200`."
										},
										{
											"key": "dueDateExpression",
											"value": "<string>",
											"description": "Restrict to tasks that are due on the date described by the given expression. See the\n[User Guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
										},
										{
											"key": "dueAfter",
											"value": "<string>",
											"description": "Restrict to tasks that are due after the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have\nthe format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.435+0200`."
										},
										{
											"key": "dueAfterExpression",
											"value": "<string>",
											"description": "Restrict to tasks that are due after the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
										},
										{
											"key": "dueBefore",
											"value": "<string>",
											"description": "Restrict to tasks that are due before the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have\nthe format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.243+0200`."
										},
										{
											"key": "dueBeforeExpression",
											"value": "<string>",
											"description": "Restrict to tasks that are due before the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
										},
										{
											"key": "withoutDueDate",
											"value": "false",
											"description": "Only include tasks which have no due date. Value may only be `true`, \nas `false` is the default behavior."
										},
										{
											"key": "followUpDate",
											"value": "<string>",
											"description": "Restrict to tasks that have a followUp date on the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date\nmust have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.342+0200`."
										},
										{
											"key": "followUpDateExpression",
											"value": "<string>",
											"description": "Restrict to tasks that have a followUp date on the date described by the given\nexpression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
										},
										{
											"key": "followUpAfter",
											"value": "<string>",
											"description": "Restrict to tasks that have a followUp date after the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the\ndate must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.542+0200`."
										},
										{
											"key": "followUpAfterExpression",
											"value": "<string>",
											"description": "Restrict to tasks that have a followUp date after the date described by the given\nexpression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
										},
										{
											"key": "followUpBefore",
											"value": "<string>",
											"description": "Restrict to tasks that have a followUp date before the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the\ndate must have the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g.,\n`2013-01-23T14:42:45.234+0200`."
										},
										{
											"key": "followUpBeforeExpression",
											"value": "<string>",
											"description": "Restrict to tasks that have a followUp date before the date described by the given\nexpression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
										},
										{
											"key": "followUpBeforeOrNotExistent",
											"value": "<string>",
											"description": "Restrict to tasks that have no followUp date or a followUp date before the given date.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.432+0200`. The\ntypical use case is to query all `active` tasks for a user for a given date."
										},
										{
											"key": "followUpBeforeOrNotExistentExpression",
											"value": "<string>",
											"description": "Restrict to tasks that have no followUp date or a followUp date before the date\ndescribed by the given expression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
										},
										{
											"key": "createdOn",
											"value": "<string>",
											"description": "Restrict to tasks that were created on the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have\nthe format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.324+0200`."
										},
										{
											"key": "createdOnExpression",
											"value": "<string>",
											"description": "Restrict to tasks that were created on the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
										},
										{
											"key": "createdAfter",
											"value": "<string>",
											"description": "Restrict to tasks that were created after the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.342+0200`."
										},
										{
											"key": "createdAfterExpression",
											"value": "<string>",
											"description": "Restrict to tasks that were created after the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
										},
										{
											"key": "createdBefore",
											"value": "<string>",
											"description": "Restrict to tasks that were created before the given date. By\n[default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must have the\nformat `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.332+0200`."
										},
										{
											"key": "createdBeforeExpression",
											"value": "<string>",
											"description": "Restrict to tasks that were created before the date described by the given expression.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
										},
										{
											"key": "updatedAfter",
											"value": "<string>",
											"description": "Restrict to tasks that were updated after the given date. Every action that fires \na [task update event](https://docs.camunda.org/manual/7.21/user-guide/process-engine/delegation-code/#task-listener-event-lifecycle) is considered as updating the task.\nBy [default](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/), the date must\nhave the format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.332+0200`."
										},
										{
											"key": "updatedAfterExpression",
											"value": "<string>",
											"description": "Restrict to tasks that were updated after the date described by the given expression. Every action that fires \na [task update event](https://docs.camunda.org/manual/7.21/user-guide/process-engine/delegation-code/#task-listener-event-lifecycle) is considered as updating the task.\nSee the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to a\n`java.util.Date` or `org.joda.time.DateTime` object."
										},
										{
											"key": "delegationState",
											"value": "RESOLVED",
											"description": "Restrict to tasks that are in the given delegation state. Valid values are\n`PENDING` and `RESOLVED`."
										},
										{
											"key": "candidateGroups",
											"value": "<string>",
											"description": "Restrict to tasks that are offered to any of the given candidate groups. Takes a\ncomma-separated list of group names, so for example `developers,support,sales`."
										},
										{
											"key": "candidateGroupsExpression",
											"value": "<string>",
											"description": "Restrict to tasks that are offered to any of the candidate groups described by the\ngiven expression. See the\n[user guide](https://docs.camunda.org/manual/7.21/user-guide/process-engine/expression-language/#internal-context-functions)\nfor more information on available functions. The expression must evaluate to\n`java.util.List` of Strings."
										},
										{
											"key": "withCandidateGroups",
											"value": "false",
											"description": "Only include tasks which have a candidate group. Value may only be `true`,\nas `false` is the default behavior."
										},
										{
											"key": "withoutCandidateGroups",
											"value": "false",
											"description": "Only include tasks which have no candidate group. Value may only be `true`,\nas `false` is the default behavior."
										},
										{
											"key": "withCandidateUsers",
											"value": "false",
											"description": "Only include tasks which have a candidate user. Value may only be `true`,\nas `false` is the default behavior."
										},
										{
											"key": "withoutCandidateUsers",
											"value": "false",
											"description": "Only include tasks which have no candidate users. Value may only be `true`,\nas `false` is the default behavior."
										},
										{
											"key": "active",
											"value": "false",
											"description": "Only include active tasks. Value may only be `true`, as `false`\nis the default behavior."
										},
										{
											"key": "suspended",
											"value": "false",
											"description": "Only include suspended tasks. Value may only be `true`, as\n`false` is the default behavior."
										},
										{
											"key": "taskVariables",
											"value": "<string>",
											"description": "Only include tasks that have variables with certain values. Variable filtering\nexpressions are comma-separated and are structured as follows:\n\nA valid parameter value has the form `key_operator_value`. `key` is the variable name,\n`operator` is the comparison operator to be used and `value` the variable value.\n\n**Note**: Values are always treated as String objects on server side.\n\nValid `operator` values are:\n`eq` - equal to;\n`neq` - not equal to;\n`gt` - greater than;\n`gteq` - greater than or equal to;\n`lt` - lower than;\n`lteq` - lower than or equal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
										},
										{
											"key": "processVariables",
											"value": "<string>",
											"description": "Only include tasks that belong to process instances that have variables with certain \nvalues. Variable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`. `key` is the variable name,\n`operator` is the comparison operator to be used and `value` the variable value.\n\n**Note**: Values are always treated as String objects on server side.\n\nValid `operator` values are:\n`eq` - equal to;\n`neq` - not equal to;\n`gt` - greater than;\n`gteq` - greater than or equal to;\n`lt` - lower than;\n`lteq` - lower than or equal to;\n`like`;\n`notLike`.\n`key` and `value` may not contain underscore or comma characters."
										},
										{
											"key": "caseInstanceVariables",
											"value": "<string>",
											"description": "Only include tasks that belong to case instances that have variables with certain\nvalues. Variable filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`. `key` is the variable name,\n`operator` is the comparison operator to be used and `value` the variable value.\n\n**Note**: Values are always treated as String objects on server side.\n\nValid `operator` values are:\n`eq` - equal to;\n`neq` - not equal to;\n`gt` - greater than;\n`gteq` - greater than or equal to;\n`lt` - lower than;\n`lteq` - lower than or equal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
										},
										{
											"key": "variableNamesIgnoreCase",
											"value": "false",
											"description": "Match all variable names in this query case-insensitively. If set\n`variableName` and `variablename` are treated as equal."
										},
										{
											"key": "variableValuesIgnoreCase",
											"value": "false",
											"description": "Match all variable values in this query case-insensitively. If set\n`variableValue` and `variablevalue` are treated as equal."
										},
										{
											"key": "parentTaskId",
											"value": "<string>",
											"description": "Restrict query to all tasks that are sub tasks of the given task. Takes a task id."
										},
										{
											"key": "sortBy",
											"value": "caseInstanceId",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "Get List (POST)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"taskId\": \"<string>\",\n  \"taskIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKey\": \"<string>\",\n  \"processInstanceBusinessKeyExpression\": \"<string>\",\n  \"processInstanceBusinessKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKeyLike\": \"<string>\",\n  \"processInstanceBusinessKeyLikeExpression\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionName\": \"<string>\",\n  \"processDefinitionNameLike\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"caseInstanceBusinessKey\": \"<string>\",\n  \"caseInstanceBusinessKeyLike\": \"<string>\",\n  \"caseDefinitionId\": \"<string>\",\n  \"caseDefinitionKey\": \"<string>\",\n  \"caseDefinitionName\": \"<string>\",\n  \"caseDefinitionNameLike\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": false,\n  \"assignee\": \"<string>\",\n  \"assigneeExpression\": \"<string>\",\n  \"assigneeLike\": \"<string>\",\n  \"assigneeLikeExpression\": \"<string>\",\n  \"assigneeIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"assigneeNotIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"owner\": \"<string>\",\n  \"ownerExpression\": \"<string>\",\n  \"candidateGroup\": \"<string>\",\n  \"candidateGroupExpression\": \"<string>\",\n  \"candidateUser\": \"<string>\",\n  \"candidateUserExpression\": \"<string>\",\n  \"includeAssignedTasks\": false,\n  \"involvedUser\": \"<string>\",\n  \"involvedUserExpression\": \"<string>\",\n  \"assigned\": false,\n  \"unassigned\": false,\n  \"taskDefinitionKey\": \"<string>\",\n  \"taskDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskDefinitionKeyLike\": \"<string>\",\n  \"name\": \"<string>\",\n  \"nameNotEqual\": \"<string>\",\n  \"nameLike\": \"<string>\",\n  \"nameNotLike\": \"<string>\",\n  \"description\": \"<string>\",\n  \"descriptionLike\": \"<string>\",\n  \"priority\": \"<integer>\",\n  \"maxPriority\": \"<integer>\",\n  \"minPriority\": \"<integer>\",\n  \"dueDate\": \"<dateTime>\",\n  \"dueDateExpression\": \"<string>\",\n  \"dueAfter\": \"<dateTime>\",\n  \"dueAfterExpression\": \"<string>\",\n  \"dueBefore\": \"<dateTime>\",\n  \"dueBeforeExpression\": \"<string>\",\n  \"withoutDueDate\": false,\n  \"followUpDate\": \"<dateTime>\",\n  \"followUpDateExpression\": \"<string>\",\n  \"followUpAfter\": \"<dateTime>\",\n  \"followUpAfterExpression\": \"<string>\",\n  \"followUpBefore\": \"<string>\",\n  \"followUpBeforeExpression\": \"<string>\",\n  \"followUpBeforeOrNotExistent\": \"<dateTime>\",\n  \"followUpBeforeOrNotExistentExpression\": \"<string>\",\n  \"createdOn\": \"<dateTime>\",\n  \"createdOnExpression\": \"<string>\",\n  \"createdAfter\": \"<dateTime>\",\n  \"createdAfterExpression\": \"<string>\",\n  \"createdBefore\": \"<dateTime>\",\n  \"createdBeforeExpression\": \"<string>\",\n  \"updatedAfter\": \"<dateTime>\",\n  \"updatedAfterExpression\": \"<string>\",\n  \"delegationState\": \"RESOLVED\",\n  \"candidateGroups\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"candidateGroupsExpression\": \"<string>\",\n  \"withCandidateGroups\": false,\n  \"withoutCandidateGroups\": false,\n  \"withCandidateUsers\": false,\n  \"withoutCandidateUsers\": false,\n  \"active\": false,\n  \"suspended\": false,\n  \"taskVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"neq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"processVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"caseInstanceVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"like\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": false,\n  \"variableValuesIgnoreCase\": false,\n  \"parentTaskId\": \"<string>\",\n  \"orQueries\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/TaskQueryDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/TaskQueryDto detected>\"\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"name\",\n      \"sortOrder\": \"desc\",\n      \"parameters\": {\n        \"variable\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"sortBy\": \"dueDate\",\n      \"sortOrder\": \"desc\",\n      \"parameters\": {\n        \"variable\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/task?firstResult=<integer>&maxResults=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"task"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return."
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
								}
							]
						},
						"description": "Queries for tasks that fulfill a given filter. This method is slightly more powerful\nthan the [Get Tasks](https://docs.camunda.org/manual/7.21/reference/rest/task/get-query/) method because it\nallows filtering by multiple process or task variables of types `String`, `Number`\nor `Boolean`. The size of the result set can be retrieved by using the\n[Get Task Count (POST)](https://docs.camunda.org/manual/7.21/reference/rest/task/post-query-count/) method.\n\n**Security Consideration**:\nThere are several parameters (such as `assigneeExpression`) for specifying an EL\nexpression. These are disabled by default to prevent remote code execution. See the\nsection on\n[security considerations for custom code](https://docs.camunda.org/manual/7.21/user-guide/process-engine/securing-custom-code/)\nin the user guide for details."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"taskId\": \"<string>\",\n  \"taskIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKey\": \"<string>\",\n  \"processInstanceBusinessKeyExpression\": \"<string>\",\n  \"processInstanceBusinessKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKeyLike\": \"<string>\",\n  \"processInstanceBusinessKeyLikeExpression\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionName\": \"<string>\",\n  \"processDefinitionNameLike\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"caseInstanceBusinessKey\": \"<string>\",\n  \"caseInstanceBusinessKeyLike\": \"<string>\",\n  \"caseDefinitionId\": \"<string>\",\n  \"caseDefinitionKey\": \"<string>\",\n  \"caseDefinitionName\": \"<string>\",\n  \"caseDefinitionNameLike\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": false,\n  \"assignee\": \"<string>\",\n  \"assigneeExpression\": \"<string>\",\n  \"assigneeLike\": \"<string>\",\n  \"assigneeLikeExpression\": \"<string>\",\n  \"assigneeIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"assigneeNotIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"owner\": \"<string>\",\n  \"ownerExpression\": \"<string>\",\n  \"candidateGroup\": \"<string>\",\n  \"candidateGroupExpression\": \"<string>\",\n  \"candidateUser\": \"<string>\",\n  \"candidateUserExpression\": \"<string>\",\n  \"includeAssignedTasks\": false,\n  \"involvedUser\": \"<string>\",\n  \"involvedUserExpression\": \"<string>\",\n  \"assigned\": false,\n  \"unassigned\": false,\n  \"taskDefinitionKey\": \"<string>\",\n  \"taskDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskDefinitionKeyLike\": \"<string>\",\n  \"name\": \"<string>\",\n  \"nameNotEqual\": \"<string>\",\n  \"nameLike\": \"<string>\",\n  \"nameNotLike\": \"<string>\",\n  \"description\": \"<string>\",\n  \"descriptionLike\": \"<string>\",\n  \"priority\": \"<integer>\",\n  \"maxPriority\": \"<integer>\",\n  \"minPriority\": \"<integer>\",\n  \"dueDate\": \"<dateTime>\",\n  \"dueDateExpression\": \"<string>\",\n  \"dueAfter\": \"<dateTime>\",\n  \"dueAfterExpression\": \"<string>\",\n  \"dueBefore\": \"<dateTime>\",\n  \"dueBeforeExpression\": \"<string>\",\n  \"withoutDueDate\": false,\n  \"followUpDate\": \"<dateTime>\",\n  \"followUpDateExpression\": \"<string>\",\n  \"followUpAfter\": \"<dateTime>\",\n  \"followUpAfterExpression\": \"<string>\",\n  \"followUpBefore\": \"<string>\",\n  \"followUpBeforeExpression\": \"<string>\",\n  \"followUpBeforeOrNotExistent\": \"<dateTime>\",\n  \"followUpBeforeOrNotExistentExpression\": \"<string>\",\n  \"createdOn\": \"<dateTime>\",\n  \"createdOnExpression\": \"<string>\",\n  \"createdAfter\": \"<dateTime>\",\n  \"createdAfterExpression\": \"<string>\",\n  \"createdBefore\": \"<dateTime>\",\n  \"createdBeforeExpression\": \"<string>\",\n  \"updatedAfter\": \"<dateTime>\",\n  \"updatedAfterExpression\": \"<string>\",\n  \"delegationState\": \"RESOLVED\",\n  \"candidateGroups\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"candidateGroupsExpression\": \"<string>\",\n  \"withCandidateGroups\": false,\n  \"withoutCandidateGroups\": false,\n  \"withCandidateUsers\": false,\n  \"withoutCandidateUsers\": false,\n  \"active\": false,\n  \"suspended\": false,\n  \"taskVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"neq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"processVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"caseInstanceVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"like\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": false,\n  \"variableValuesIgnoreCase\": false,\n  \"parentTaskId\": \"<string>\",\n  \"orQueries\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/TaskQueryDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/TaskQueryDto detected>\"\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"name\",\n      \"sortOrder\": \"desc\",\n      \"parameters\": {\n        \"variable\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"sortBy\": \"dueDate\",\n      \"sortOrder\": \"desc\",\n      \"parameters\": {\n        \"variable\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/task?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"assignee\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"created\": \"<dateTime>\",\n    \"lastUpdated\": \"<dateTime>\",\n    \"due\": \"<dateTime>\",\n    \"followUp\": \"<dateTime>\",\n    \"delegationState\": \"RESOLVED\",\n    \"description\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"parentTaskId\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"caseExecutionId\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"taskDefinitionKey\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"formKey\": \"<string>\",\n    \"camundaFormRef\": {\n      \"key\": \"<string>\",\n      \"binding\": \"<string>\",\n      \"version\": \"<integer>\"\n    },\n    \"tenantId\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"assignee\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"created\": \"<dateTime>\",\n    \"lastUpdated\": \"<dateTime>\",\n    \"due\": \"<dateTime>\",\n    \"followUp\": \"<dateTime>\",\n    \"delegationState\": \"PENDING\",\n    \"description\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"parentTaskId\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"caseExecutionId\": \"<string>\",\n    \"caseDefinitionId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"taskDefinitionKey\": \"<string>\",\n    \"suspended\": \"<boolean>\",\n    \"formKey\": \"<string>\",\n    \"camundaFormRef\": {\n      \"key\": \"<string>\",\n      \"binding\": \"<string>\",\n      \"version\": \"<integer>\"\n    },\n    \"tenantId\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`, or if an invalid operator for variable\ncomparison is used. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/res",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"taskId\": \"<string>\",\n  \"taskIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceId\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKey\": \"<string>\",\n  \"processInstanceBusinessKeyExpression\": \"<string>\",\n  \"processInstanceBusinessKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processInstanceBusinessKeyLike\": \"<string>\",\n  \"processInstanceBusinessKeyLikeExpression\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processDefinitionKey\": \"<string>\",\n  \"processDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"processDefinitionName\": \"<string>\",\n  \"processDefinitionNameLike\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"caseInstanceBusinessKey\": \"<string>\",\n  \"caseInstanceBusinessKeyLike\": \"<string>\",\n  \"caseDefinitionId\": \"<string>\",\n  \"caseDefinitionKey\": \"<string>\",\n  \"caseDefinitionName\": \"<string>\",\n  \"caseDefinitionNameLike\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"withoutTenantId\": false,\n  \"assignee\": \"<string>\",\n  \"assigneeExpression\": \"<string>\",\n  \"assigneeLike\": \"<string>\",\n  \"assigneeLikeExpression\": \"<string>\",\n  \"assigneeIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"assigneeNotIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"owner\": \"<string>\",\n  \"ownerExpression\": \"<string>\",\n  \"candidateGroup\": \"<string>\",\n  \"candidateGroupExpression\": \"<string>\",\n  \"candidateUser\": \"<string>\",\n  \"candidateUserExpression\": \"<string>\",\n  \"includeAssignedTasks\": false,\n  \"involvedUser\": \"<string>\",\n  \"involvedUserExpression\": \"<string>\",\n  \"assigned\": false,\n  \"unassigned\": false,\n  \"taskDefinitionKey\": \"<string>\",\n  \"taskDefinitionKeyIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskDefinitionKeyLike\": \"<string>\",\n  \"name\": \"<string>\",\n  \"nameNotEqual\": \"<string>\",\n  \"nameLike\": \"<string>\",\n  \"nameNotLike\": \"<string>\",\n  \"description\": \"<string>\",\n  \"descriptionLike\": \"<string>\",\n  \"priority\": \"<integer>\",\n  \"maxPriority\": \"<integer>\",\n  \"minPriority\": \"<integer>\",\n  \"dueDate\": \"<dateTime>\",\n  \"dueDateExpression\": \"<string>\",\n  \"dueAfter\": \"<dateTime>\",\n  \"dueAfterExpression\": \"<string>\",\n  \"dueBefore\": \"<dateTime>\",\n  \"dueBeforeExpression\": \"<string>\",\n  \"withoutDueDate\": false,\n  \"followUpDate\": \"<dateTime>\",\n  \"followUpDateExpression\": \"<string>\",\n  \"followUpAfter\": \"<dateTime>\",\n  \"followUpAfterExpression\": \"<string>\",\n  \"followUpBefore\": \"<string>\",\n  \"followUpBeforeExpression\": \"<string>\",\n  \"followUpBeforeOrNotExistent\": \"<dateTime>\",\n  \"followUpBeforeOrNotExistentExpression\": \"<string>\",\n  \"createdOn\": \"<dateTime>\",\n  \"createdOnExpression\": \"<string>\",\n  \"createdAfter\": \"<dateTime>\",\n  \"createdAfterExpression\": \"<string>\",\n  \"createdBefore\": \"<dateTime>\",\n  \"createdBeforeExpression\": \"<string>\",\n  \"updatedAfter\": \"<dateTime>\",\n  \"updatedAfterExpression\": \"<string>\",\n  \"delegationState\": \"RESOLVED\",\n  \"candidateGroups\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"candidateGroupsExpression\": \"<string>\",\n  \"withCandidateGroups\": false,\n  \"withoutCandidateGroups\": false,\n  \"withCandidateUsers\": false,\n  \"withoutCandidateUsers\": false,\n  \"active\": false,\n  \"suspended\": false,\n  \"taskVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"neq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"processVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"eq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"caseInstanceVariables\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"like\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"gteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": false,\n  \"variableValuesIgnoreCase\": false,\n  \"parentTaskId\": \"<string>\",\n  \"orQueries\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/TaskQueryDto detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/TaskQueryDto detected>\"\n    }\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"name\",\n      \"sortOrder\": \"desc\",\n      \"parameters\": {\n        \"variable\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    },\n    {\n      \"sortBy\": \"dueDate\",\n      \"sortOrder\": \"desc\",\n      \"parameters\": {\n        \"variable\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/task?firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"task"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "telemetry",
			"item": [
				{
					"name": "configuration",
					"item": [
						{
							"name": "Fetch Telemetry Configuration",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/telemetry/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telemetry",
										"configuration"
									]
								},
								"description": "Fetches Telemetry Configuration."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/telemetry/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telemetry",
												"configuration"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"enableTelemetry\": \"<boolean>\"\n}"
								},
								{
									"name": "If the user who perform the operation is not a <b>camunda-admin</b> user.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/telemetry/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telemetry",
												"configuration"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Configure Telemetry",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enableTelemetry\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/telemetry/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telemetry",
										"configuration"
									]
								},
								"description": "Configures whether Camunda receives data collection of the process engine setup and usage."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enableTelemetry\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/telemetry/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telemetry",
												"configuration"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "If the user who perform the operation is not a <b>camunda-admin</b> user.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enableTelemetry\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/telemetry/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telemetry",
												"configuration"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "data",
					"item": [
						{
							"name": "Fetch Telemetry Data",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/telemetry/data",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"telemetry",
										"data"
									]
								},
								"description": "Fetches Telemetry Data."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/telemetry/data",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"telemetry",
												"data"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"installation\": \"<string>\",\n  \"product\": {\n    \"name\": \"<string>\",\n    \"version\": \"<string>\",\n    \"edition\": \"<string>\",\n    \"internals\": {\n      \"database\": {\n        \"vendor\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"application-server\": {\n        \"vendor\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"license-key\": {\n        \"customer\": \"<string>\",\n        \"type\": \"<string>\",\n        \"valid-until\": \"<date>\",\n        \"unlimited\": \"<boolean>\",\n        \"features\": {\n          \"dolor0_\": \"<string>\",\n          \"consecteture9\": \"<string>\"\n        },\n        \"raw\": \"<string>\"\n      },\n      \"camunda-integration\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"commands\": {\n        \"minim_03\": {\n          \"count\": \"<long>\"\n        },\n        \"dolor__8a\": {\n          \"count\": \"<long>\"\n        }\n      },\n      \"metrics\": {\n        \"cillum00\": {\n          \"count\": \"<long>\"\n        },\n        \"ad83\": {\n          \"count\": \"<long>\"\n        },\n        \"tempor9\": {\n          \"count\": \"<long>\"\n        }\n      },\n      \"webapps\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"jdk\": {\n        \"vendor\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      \"data-collection-start-date\": \"<dateTime>\"\n    }\n  }\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "tenant",
			"item": [
				{
					"name": "count",
					"item": [
						{
							"name": "Get Tenant Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenant/count?id=<string>&name=<string>&nameLike=<string>&userMember=<string>&groupMember=<string>&includingGroupsOfUser=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenant",
										"count"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Filter by the id of the tenant."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Filter by the name of the tenant."
										},
										{
											"key": "nameLike",
											"value": "<string>",
											"description": "Filter by the name that the parameter is a substring of."
										},
										{
											"key": "userMember",
											"value": "<string>",
											"description": "Select only tenants where the given user is a member of."
										},
										{
											"key": "groupMember",
											"value": "<string>",
											"description": "Select only tenants where the given group is a member of."
										},
										{
											"key": "includingGroupsOfUser",
											"value": "<boolean>",
											"description": "Select only tenants where the user or one of his groups is a member of.\nCan only be used in combination with the `userMember` parameter. Value may only be `true`,\nas `false` is the default behavior."
										}
									]
								},
								"description": "Query for tenants using a list of parameters and retrieves the count."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tenant/count?id=<string>&name=<string>&nameLike=<string>&userMember=<string>&groupMember=<string>&includingGroupsOfUser=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tenant",
												"count"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>",
													"description": "Filter by the id of the tenant."
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "Filter by the name of the tenant."
												},
												{
													"key": "nameLike",
													"value": "<string>",
													"description": "Filter by the name that the parameter is a substring of."
												},
												{
													"key": "userMember",
													"value": "<string>",
													"description": "Select only tenants where the given user is a member of."
												},
												{
													"key": "groupMember",
													"value": "<string>",
													"description": "Select only tenants where the given group is a member of."
												},
												{
													"key": "includingGroupsOfUser",
													"value": "<boolean>",
													"description": "Select only tenants where the user or one of his groups is a member of.\nCan only be used in combination with the `userMember` parameter. Value may only be `true`,\nas `false` is the default behavior."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tenant/count?id=<string>&name=<string>&nameLike=<string>&userMember=<string>&groupMember=<string>&includingGroupsOfUser=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tenant",
												"count"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>",
													"description": "Filter by the id of the tenant."
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "Filter by the name of the tenant."
												},
												{
													"key": "nameLike",
													"value": "<string>",
													"description": "Filter by the name that the parameter is a substring of."
												},
												{
													"key": "userMember",
													"value": "<string>",
													"description": "Select only tenants where the given user is a member of."
												},
												{
													"key": "groupMember",
													"value": "<string>",
													"description": "Select only tenants where the given group is a member of."
												},
												{
													"key": "includingGroupsOfUser",
													"value": "<boolean>",
													"description": "Select only tenants where the user or one of his groups is a member of.\nCan only be used in combination with the `userMember` parameter. Value may only be `true`,\nas `false` is the default behavior."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "create",
					"item": [
						{
							"name": "Create Tenant",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tenant/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenant",
										"create"
									]
								},
								"description": "Create a new tenant."
							},
							"response": [
								{
									"name": "Request successful. This method returns no content.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tenant/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tenant",
												"create"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Identity service is read-only.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tenant/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tenant",
												"create"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "The tenant could not be created due to an internal server error. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tenant/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tenant",
												"create"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "group-members",
							"item": [
								{
									"name": "{groupId}",
									"item": [
										{
											"name": "Create Tenant Group Membership",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tenant/:id/group-members/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tenant",
														":id",
														"group-members",
														":groupId"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the tenant."
														},
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) The id of the group."
														}
													]
												},
												"description": "Creates a membership between a tenant and a group."
											},
											"response": [
												{
													"name": "Request successful. This method returns no content.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/tenant/:id/group-members/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"tenant",
																":id",
																"group-members",
																":groupId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "groupId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Identity service is read-only.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/tenant/:id/group-members/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"tenant",
																":id",
																"group-members",
																":groupId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "groupId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "In case an internal error occurs. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/tenant/:id/group-members/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"tenant",
																":id",
																"group-members",
																":groupId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "groupId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										},
										{
											"name": "Create Tenant Group Membership",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tenant/:id/group-members/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tenant",
														":id",
														"group-members",
														":groupId"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the tenant."
														},
														{
															"key": "groupId",
															"value": "<string>",
															"description": "(Required) The id of the group."
														}
													]
												},
												"description": "Creates a membership between a tenant and a group."
											},
											"response": [
												{
													"name": "Request successful. This method returns no content.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/tenant/:id/group-members/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"tenant",
																":id",
																"group-members",
																":groupId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "groupId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Identity service is read-only.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/tenant/:id/group-members/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"tenant",
																":id",
																"group-members",
																":groupId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "groupId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "In case an internal error occurs. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/tenant/:id/group-members/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"tenant",
																":id",
																"group-members",
																":groupId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "groupId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Tenant Group Membership Resource Options",
									"request": {
										"method": "OPTIONS",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tenant/:id/group-members",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tenant",
												":id",
												"group-members"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the tenant"
												}
											]
										},
										"description": "The OPTIONS request allows checking for the set of available operations that the\ncurrently authenticated user can perform on the resource. If the user\ncan perform an operation or not may depend on various things,\nincluding the users authorizations to interact with this resource and\nthe internal configuration of the process engine."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "OPTIONS",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tenant/:id/group-members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tenant",
														":id",
														"group-members"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "user-members",
							"item": [
								{
									"name": "{userId}",
									"item": [
										{
											"name": "Delete a Tenant User Membership",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tenant/:id/user-members/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tenant",
														":id",
														"user-members",
														":userId"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the tenant."
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) The id of the user."
														}
													]
												},
												"description": "Deletes a membership between a tenant and an user."
											},
											"response": [
												{
													"name": "Request successful. This method returns no content.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/tenant/:id/user-members/:userId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"tenant",
																":id",
																"user-members",
																":userId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Identity service is read-only.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/tenant/:id/user-members/:userId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"tenant",
																":id",
																"user-members",
																":userId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "In case an error occurs. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/tenant/:id/user-members/:userId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"tenant",
																":id",
																"user-members",
																":userId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										},
										{
											"name": "Create Tenant User Membership",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tenant/:id/user-members/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tenant",
														":id",
														"user-members",
														":userId"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) The id of the tenant."
														},
														{
															"key": "userId",
															"value": "<string>",
															"description": "(Required) The id of the user."
														}
													]
												},
												"description": "Creates a membership between a tenant and an user."
											},
											"response": [
												{
													"name": "Request successful. This method returns no content.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/tenant/:id/user-members/:userId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"tenant",
																":id",
																"user-members",
																":userId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Identity service is read-only.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/tenant/:id/user-members/:userId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"tenant",
																":id",
																"user-members",
																":userId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												},
												{
													"name": "In case an internal error occurs. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/tenant/:id/user-members/:userId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"tenant",
																":id",
																"user-members",
																":userId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "userId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Tenant User Membership Resource Options",
									"request": {
										"method": "OPTIONS",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tenant/:id/user-members",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tenant",
												":id",
												"user-members"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the tenant"
												}
											]
										},
										"description": "The OPTIONS request allows checking for the set of available operations that the\ncurrently authenticated user can perform on the resource. If the user\ncan perform an operation or not may depend on various things,\nincluding the users authorizations to interact with this resource and\nthe internal configuration of the process engine."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "OPTIONS",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tenant/:id/user-members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tenant",
														":id",
														"user-members"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Delete Tenant",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenant/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenant",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the tenant to be deleted."
										}
									]
								},
								"description": "Deletes a tenant by id."
							},
							"response": [
								{
									"name": "Request successful. This method returns no content.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tenant/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tenant",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Identity service is read-only.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tenant/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tenant",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "Tenant cannot be found. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tenant/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tenant",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get Tenant",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenant/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenant",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the tenant to be retrieved."
										}
									]
								},
								"description": "Retrieves a tenant."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tenant/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tenant",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}"
								},
								{
									"name": "Tenant with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tenant/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tenant",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Tenant Resource Options",
							"request": {
								"method": "OPTIONS",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenant/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenant",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the tenant"
										}
									]
								},
								"description": "The `/tenant` resource supports two custom OPTIONS requests, one for the resource as such and this one for\nindividual tenant instances. The OPTIONS request allows checking for the set of available operations that\nthe currently authenticated user can perform on the `/tenant/{id}` resource. If the user can perform an\noperation or not may depend on various things, including the users authorizations to interact with this\nresource and the internal configuration of the process engine."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "OPTIONS",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tenant/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tenant",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update Tenant",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tenant/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenant",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the tenant."
										}
									]
								},
								"description": "Updates a given tenant."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tenant/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tenant",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Identity service is read-only.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tenant/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tenant",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "If the tenant with the requested Id cannot be found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tenant/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tenant",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								},
								{
									"name": "The tenant could not be updated due to an internal server error. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tenant/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tenant",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get Tenants",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tenant?sortBy=name&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&id=<string>&name=<string>&nameLike=<string>&userMember=<string>&groupMember=<string>&includingGroupsOfUser=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tenant"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "name",
									"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
								},
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return."
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
								},
								{
									"key": "id",
									"value": "<string>",
									"description": "Filter by the id of the tenant."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "Filter by the name of the tenant."
								},
								{
									"key": "nameLike",
									"value": "<string>",
									"description": "Filter by the name that the parameter is a substring of."
								},
								{
									"key": "userMember",
									"value": "<string>",
									"description": "Select only tenants where the given user is a member of."
								},
								{
									"key": "groupMember",
									"value": "<string>",
									"description": "Select only tenants where the given group is a member of."
								},
								{
									"key": "includingGroupsOfUser",
									"value": "<boolean>",
									"description": "Select only tenants where the user or one of his groups is a member of.\nCan only be used in combination with the `userMember` parameter. Value may only be `true`,\nas `false` is the default behavior."
								}
							]
						},
						"description": "Query for a list of tenants using a list of parameters. The size of the result set\ncan be retrieved by using the [Get Tenant\nCount](https://docs.camunda.org/manual/7.21/reference/rest/tenant/get-query-count/) method."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenant?sortBy=name&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&id=<string>&name=<string>&nameLike=<string>&userMember=<string>&groupMember=<string>&includingGroupsOfUser=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenant"
									],
									"query": [
										{
											"key": "sortBy",
											"value": "name",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										},
										{
											"key": "id",
											"value": "<string>",
											"description": "Filter by the id of the tenant."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Filter by the name of the tenant."
										},
										{
											"key": "nameLike",
											"value": "<string>",
											"description": "Filter by the name that the parameter is a substring of."
										},
										{
											"key": "userMember",
											"value": "<string>",
											"description": "Select only tenants where the given user is a member of."
										},
										{
											"key": "groupMember",
											"value": "<string>",
											"description": "Select only tenants where the given group is a member of."
										},
										{
											"key": "includingGroupsOfUser",
											"value": "<boolean>",
											"description": "Select only tenants where the user or one of his groups is a member of.\nCan only be used in combination with the `userMember` parameter. Value may only be `true`,\nas `false` is the default behavior."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy` is specified. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error resp",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenant?sortBy=name&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&id=<string>&name=<string>&nameLike=<string>&userMember=<string>&groupMember=<string>&includingGroupsOfUser=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenant"
									],
									"query": [
										{
											"key": "sortBy",
											"value": "name",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										},
										{
											"key": "id",
											"value": "<string>",
											"description": "Filter by the id of the tenant."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Filter by the name of the tenant."
										},
										{
											"key": "nameLike",
											"value": "<string>",
											"description": "Filter by the name that the parameter is a substring of."
										},
										{
											"key": "userMember",
											"value": "<string>",
											"description": "Select only tenants where the given user is a member of."
										},
										{
											"key": "groupMember",
											"value": "<string>",
											"description": "Select only tenants where the given group is a member of."
										},
										{
											"key": "includingGroupsOfUser",
											"value": "<boolean>",
											"description": "Select only tenants where the user or one of his groups is a member of.\nCan only be used in combination with the `userMember` parameter. Value may only be `true`,\nas `false` is the default behavior."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "Tenant Resource Options",
					"request": {
						"method": "OPTIONS",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tenant",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tenant"
							]
						},
						"description": "The `/tenant` resource supports two custom OPTIONS requests, this one for the resource\nas such and one for individual tenant instances. The OPTIONS request\nallows checking for the set of available operations that the currently\nauthenticated user can perform on the `/tenant` resource. If the user\ncan perform an operation or not may depend on various things,\nincluding the users authorizations to interact with this resource and\nthe internal configuration of the process engine."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "OPTIONS",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tenant",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tenant"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "count",
					"item": [
						{
							"name": "Get List Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/count?id=<string>&idIn=<string>&firstName=<string>&firstNameLike=<string>&lastName=<string>&lastNameLike=<string>&email=<string>&emailLike=<string>&memberOfGroup=<string>&memberOfTenant=<string>&potentialStarter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"count"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Filter by user id"
										},
										{
											"key": "idIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of user ids."
										},
										{
											"key": "firstName",
											"value": "<string>",
											"description": "Filter by the first name of the user. Exact match."
										},
										{
											"key": "firstNameLike",
											"value": "<string>",
											"description": "Filter by the first name that the parameter is a substring of."
										},
										{
											"key": "lastName",
											"value": "<string>",
											"description": "Filter by the last name of the user. Exact match."
										},
										{
											"key": "lastNameLike",
											"value": "<string>",
											"description": "Filter by the last name that the parameter is a substring of."
										},
										{
											"key": "email",
											"value": "<string>",
											"description": "Filter by the email of the user. Exact match."
										},
										{
											"key": "emailLike",
											"value": "<string>",
											"description": "Filter by the email that the parameter is a substring of."
										},
										{
											"key": "memberOfGroup",
											"value": "<string>",
											"description": "Filter for users which are members of the given group."
										},
										{
											"key": "memberOfTenant",
											"value": "<string>",
											"description": "Filter for users which are members of the given tenant."
										},
										{
											"key": "potentialStarter",
											"value": "<string>",
											"description": "Only select Users that are potential starter for the given process definition."
										}
									]
								},
								"description": "Queries for the number of deployments that fulfill given parameters. Takes the same parameters as the\n[Get Users](https://docs.camunda.org/manual/7.21/reference/rest/user/get-query/) method."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/count?id=<string>&idIn=<string>&firstName=<string>&firstNameLike=<string>&lastName=<string>&lastNameLike=<string>&email=<string>&emailLike=<string>&memberOfGroup=<string>&memberOfTenant=<string>&potentialStarter=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"count"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>",
													"description": "Filter by user id"
												},
												{
													"key": "idIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of user ids."
												},
												{
													"key": "firstName",
													"value": "<string>",
													"description": "Filter by the first name of the user. Exact match."
												},
												{
													"key": "firstNameLike",
													"value": "<string>",
													"description": "Filter by the first name that the parameter is a substring of."
												},
												{
													"key": "lastName",
													"value": "<string>",
													"description": "Filter by the last name of the user. Exact match."
												},
												{
													"key": "lastNameLike",
													"value": "<string>",
													"description": "Filter by the last name that the parameter is a substring of."
												},
												{
													"key": "email",
													"value": "<string>",
													"description": "Filter by the email of the user. Exact match."
												},
												{
													"key": "emailLike",
													"value": "<string>",
													"description": "Filter by the email that the parameter is a substring of."
												},
												{
													"key": "memberOfGroup",
													"value": "<string>",
													"description": "Filter for users which are members of the given group."
												},
												{
													"key": "memberOfTenant",
													"value": "<string>",
													"description": "Filter for users which are members of the given tenant."
												},
												{
													"key": "potentialStarter",
													"value": "<string>",
													"description": "Only select Users that are potential starter for the given process definition."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example, if an invalid operator for variable\ncomparison is used. See the [Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/count?id=<string>&idIn=<string>&firstName=<string>&firstNameLike=<string>&lastName=<string>&lastNameLike=<string>&email=<string>&emailLike=<string>&memberOfGroup=<string>&memberOfTenant=<string>&potentialStarter=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"count"
											],
											"query": [
												{
													"key": "id",
													"value": "<string>",
													"description": "Filter by user id"
												},
												{
													"key": "idIn",
													"value": "<string>",
													"description": "Filter by a comma-separated list of user ids."
												},
												{
													"key": "firstName",
													"value": "<string>",
													"description": "Filter by the first name of the user. Exact match."
												},
												{
													"key": "firstNameLike",
													"value": "<string>",
													"description": "Filter by the first name that the parameter is a substring of."
												},
												{
													"key": "lastName",
													"value": "<string>",
													"description": "Filter by the last name of the user. Exact match."
												},
												{
													"key": "lastNameLike",
													"value": "<string>",
													"description": "Filter by the last name that the parameter is a substring of."
												},
												{
													"key": "email",
													"value": "<string>",
													"description": "Filter by the email of the user. Exact match."
												},
												{
													"key": "emailLike",
													"value": "<string>",
													"description": "Filter by the email that the parameter is a substring of."
												},
												{
													"key": "memberOfGroup",
													"value": "<string>",
													"description": "Filter for users which are members of the given group."
												},
												{
													"key": "memberOfTenant",
													"value": "<string>",
													"description": "Filter for users which are members of the given tenant."
												},
												{
													"key": "potentialStarter",
													"value": "<string>",
													"description": "Only select Users that are potential starter for the given process definition."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "create",
					"item": [
						{
							"name": "Create",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"profile\": {\n    \"id\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\"\n  },\n  \"credentials\": {\n    \"password\": \"<string>\",\n    \"authenticatedUserPassword\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"create"
									]
								},
								"description": "Create a new user."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"profile\": {\n    \"id\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\"\n  },\n  \"credentials\": {\n    \"password\": \"<string>\",\n    \"authenticatedUserPassword\": \"<string>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"create"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "credentials",
							"item": [
								{
									"name": "Update Credentials",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"authenticatedUserPassword\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/:id/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":id",
												"credentials"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the user to be updated."
												}
											]
										},
										"description": "Updates a user's credentials (password)"
									},
									"response": [
										{
											"name": "Request successful. This method returns no content.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"password\": \"<string>\",\n  \"authenticatedUserPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/user/:id/credentials",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														":id",
														"credentials"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The authenticated user password does not match",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"password\": \"<string>\",\n  \"authenticatedUserPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/user/:id/credentials",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														":id",
														"credentials"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Identity service is read-only (Cannot modify users / groups / memberships).",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"password\": \"<string>\",\n  \"authenticatedUserPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/user/:id/credentials",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														":id",
														"credentials"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "If the corresponding user cannot be found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"password\": \"<string>\",\n  \"authenticatedUserPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/user/:id/credentials",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														":id",
														"credentials"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "The user could not be updated due to an internal server error. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"password\": \"<string>\",\n  \"authenticatedUserPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/user/:id/credentials",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														":id",
														"credentials"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "profile",
							"item": [
								{
									"name": "Get Profile",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/:id/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":id",
												"profile"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the user to retrieve."
												}
											]
										},
										"description": "Retrieves a user's profile."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/:id/profile",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														":id",
														"profile"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\"\n}"
										},
										{
											"name": "Execution with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/:id/profile",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														":id",
														"profile"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								},
								{
									"name": "Update User Profile",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/:id/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":id",
												"profile"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the user."
												}
											]
										},
										"description": "Updates the profile information of an already existing user."
									},
									"response": [
										{
											"name": "Request successful. This method returns no content.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/user/:id/profile",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														":id",
														"profile"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Identity service is read-only (Cannot modify users / groups / memberships).",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/user/:id/profile",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														":id",
														"profile"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "If the user with the requested Id cannot be found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/user/:id/profile",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														":id",
														"profile"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "The user could not be updated due to an internal server error. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/user/:id/profile",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														":id",
														"profile"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "unlock",
							"item": [
								{
									"name": "Unlock User",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/:id/unlock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":id",
												"unlock"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the user to be unlocked."
												}
											]
										},
										"description": "Unlocks a user by id."
									},
									"response": [
										{
											"name": "Request successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/:id/unlock",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														":id",
														"unlock"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user who performed the operation is not a Camunda admin user.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/:id/unlock",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														":id",
														"unlock"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "User cannot be found. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/user/:id/unlock",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														":id",
														"unlock"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Delete",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the user to be deleted."
										}
									]
								},
								"description": "Deletes a user by id."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Identity service is read-only (Cannot modify users / groups / memberships).",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "A Deployment with the provided id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Options",
							"request": {
								"method": "OPTIONS",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the user to be deleted."
										}
									]
								},
								"description": "The `/user` resource supports two custom `OPTIONS` requests, one for the resource as such\nand one for individual user instances. The `OPTIONS` request allows checking for the set of\navailable operations that the currently authenticated user can perform on the /user resource.\nIf the user can perform an operation or not may depend on various things, including the user's\nauthorizations to interact with this resource and the internal configuration of the process\nengine. `OPTIONS /user/{id}` returns available interactions on a resource instance."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "OPTIONS",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user?memberOfGroup=00b83ea3b1baa6d382c9808ab8aec3be",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							],
							"query": [
								{
									"key": "id",
									"value": "<string>",
									"disabled": true
								},
								{
									"key": "idIn",
									"value": "<string>",
									"disabled": true
								},
								{
									"key": "firstName",
									"value": "<string>",
									"disabled": true
								},
								{
									"key": "firstNameLike",
									"value": "<string>",
									"disabled": true
								},
								{
									"key": "lastName",
									"value": "<string>",
									"disabled": true
								},
								{
									"key": "lastNameLike",
									"value": "<string>",
									"disabled": true
								},
								{
									"key": "email",
									"value": "<string>",
									"disabled": true
								},
								{
									"key": "emailLike",
									"value": "<string>",
									"disabled": true
								},
								{
									"key": "memberOfGroup",
									"value": "00b83ea3b1baa6d382c9808ab8aec3be"
								},
								{
									"key": "memberOfTenant",
									"value": "<string>",
									"disabled": true
								},
								{
									"key": "potentialStarter",
									"value": "<string>",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "firstName",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"disabled": true
								},
								{
									"key": "firstResult",
									"value": "<integer>",
									"disabled": true
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"disabled": true
								}
							]
						},
						"description": "Query for a list of users using a list of parameters.\nThe size of the result set can be retrieved by using the Get User Count method.\n[Get User Count](https://docs.camunda.org/manual/7.21/reference/rest/user/get-query-count/) method."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user?id=<string>&idIn=<string>&firstName=<string>&firstNameLike=<string>&lastName=<string>&lastNameLike=<string>&email=<string>&emailLike=<string>&memberOfGroup=<string>&memberOfTenant=<string>&potentialStarter=<string>&sortBy=firstName&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Filter by user id"
										},
										{
											"key": "idIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of user ids."
										},
										{
											"key": "firstName",
											"value": "<string>",
											"description": "Filter by the first name of the user. Exact match."
										},
										{
											"key": "firstNameLike",
											"value": "<string>",
											"description": "Filter by the first name that the parameter is a substring of."
										},
										{
											"key": "lastName",
											"value": "<string>",
											"description": "Filter by the last name of the user. Exact match."
										},
										{
											"key": "lastNameLike",
											"value": "<string>",
											"description": "Filter by the last name that the parameter is a substring of."
										},
										{
											"key": "email",
											"value": "<string>",
											"description": "Filter by the email of the user. Exact match."
										},
										{
											"key": "emailLike",
											"value": "<string>",
											"description": "Filter by the email that the parameter is a substring of."
										},
										{
											"key": "memberOfGroup",
											"value": "<string>",
											"description": "Filter for users which are members of the given group."
										},
										{
											"key": "memberOfTenant",
											"value": "<string>",
											"description": "Filter for users which are members of the given tenant."
										},
										{
											"key": "potentialStarter",
											"value": "<string>",
											"description": "Only select Users that are potential starter for the given process definition."
										},
										{
											"key": "sortBy",
											"value": "firstName",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder` parameter is supplied,\nbut no `sortBy`, or if an invalid operator for variable comparison is used. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/res",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user?id=<string>&idIn=<string>&firstName=<string>&firstNameLike=<string>&lastName=<string>&lastNameLike=<string>&email=<string>&emailLike=<string>&memberOfGroup=<string>&memberOfTenant=<string>&potentialStarter=<string>&sortBy=firstName&sortOrder=asc&firstResult=<integer>&maxResults=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									],
									"query": [
										{
											"key": "id",
											"value": "<string>",
											"description": "Filter by user id"
										},
										{
											"key": "idIn",
											"value": "<string>",
											"description": "Filter by a comma-separated list of user ids."
										},
										{
											"key": "firstName",
											"value": "<string>",
											"description": "Filter by the first name of the user. Exact match."
										},
										{
											"key": "firstNameLike",
											"value": "<string>",
											"description": "Filter by the first name that the parameter is a substring of."
										},
										{
											"key": "lastName",
											"value": "<string>",
											"description": "Filter by the last name of the user. Exact match."
										},
										{
											"key": "lastNameLike",
											"value": "<string>",
											"description": "Filter by the last name that the parameter is a substring of."
										},
										{
											"key": "email",
											"value": "<string>",
											"description": "Filter by the email of the user. Exact match."
										},
										{
											"key": "emailLike",
											"value": "<string>",
											"description": "Filter by the email that the parameter is a substring of."
										},
										{
											"key": "memberOfGroup",
											"value": "<string>",
											"description": "Filter for users which are members of the given group."
										},
										{
											"key": "memberOfTenant",
											"value": "<string>",
											"description": "Filter for users which are members of the given tenant."
										},
										{
											"key": "potentialStarter",
											"value": "<string>",
											"description": "Only select Users that are potential starter for the given process definition."
										},
										{
											"key": "sortBy",
											"value": "firstName",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "Options",
					"request": {
						"method": "OPTIONS",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						},
						"description": "The `/user` resource supports two custom `OPTIONS` requests, one for the resource as such\nand one for individual user instances. The `OPTIONS` request allows checking for the set of\navailable operations that the currently authenticated user can perform on the /user resource.\nIf the user can perform an operation or not may depend on various things, including the user's\nauthorizations to interact with this resource and the internal configuration of the process\nengine. `OPTIONS /user` returns available interactions on the resource."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "OPTIONS",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"links\": [\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    },\n    {\n      \"rel\": \"<string>\",\n      \"href\": \"<string>\",\n      \"method\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "variable-instance",
			"item": [
				{
					"name": "count",
					"item": [
						{
							"name": "Get Variable Instance Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/variable-instance/count?variableName=<string>&variableNameLike=<string>&processInstanceIdIn=<string>&executionIdIn=<string>&caseInstanceIdIn=<string>&caseExecutionIdIn=<string>&taskIdIn=<string>&batchIdIn=<string>&activityInstanceIdIn=<string>&tenantIdIn=<string>&variableValues=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>&variableScopeIdIn=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"variable-instance",
										"count"
									],
									"query": [
										{
											"key": "variableName",
											"value": "<string>",
											"description": "Filter by variable instance name."
										},
										{
											"key": "variableNameLike",
											"value": "<string>",
											"description": "Filter by the variable instance name. The parameter can include the wildcard `%` to\nexpress like-strategy such as: starts with (`%`name), ends with (name`%`) or\ncontains (`%`name`%`)."
										},
										{
											"key": "processInstanceIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of the passed and comma-separated\nprocess instance ids."
										},
										{
											"key": "executionIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of the passed and comma-separated\nexecution ids."
										},
										{
											"key": "caseInstanceIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of the passed and comma-separated case instance ids."
										},
										{
											"key": "caseExecutionIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of the passed and comma-separated case execution ids."
										},
										{
											"key": "taskIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of the passed and comma-separated task\nids."
										},
										{
											"key": "batchIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of the passed and comma-separated\nbatch ids."
										},
										{
											"key": "activityInstanceIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of the passed and comma-separated\nactivity instance ids."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of the passed and comma-separated\ntenant ids."
										},
										{
											"key": "variableValues",
											"value": "<string>",
											"description": "Only include variable instances that have the certain values.\nValue filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n\n**Note:** Values are always treated as `String` objects on server side.\n\nValid operator values are: `eq` - equal to; `neq` - not equal to; `gt` -\ngreater than;\n`gteq` - greater than or equal to; `lt` - lower than; `lteq` - lower than or\nequal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
										},
										{
											"key": "variableNamesIgnoreCase",
											"value": "<boolean>",
											"description": "Match all variable names provided in `variableValues` case-insensitively. If set to `true`\n**variableName** and **variablename** are treated as equal."
										},
										{
											"key": "variableValuesIgnoreCase",
											"value": "<boolean>",
											"description": "Match all variable values provided in `variableValues` case-insensitively. If set to\n`true` **variableValue** and **variablevalue** are treated as equal."
										},
										{
											"key": "variableScopeIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of passed scope ids."
										}
									]
								},
								"description": "Query for the number of variable instances that fulfill given parameters. Takes the\nsame parameters as the [Get Variable\nInstances](https://docs.camunda.org/manual/7.21/reference/rest/variable-instance/get-query/)\nmethod."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/variable-instance/count?variableName=<string>&variableNameLike=<string>&processInstanceIdIn=<string>&executionIdIn=<string>&caseInstanceIdIn=<string>&caseExecutionIdIn=<string>&taskIdIn=<string>&batchIdIn=<string>&activityInstanceIdIn=<string>&tenantIdIn=<string>&variableValues=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>&variableScopeIdIn=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"variable-instance",
												"count"
											],
											"query": [
												{
													"key": "variableName",
													"value": "<string>",
													"description": "Filter by variable instance name."
												},
												{
													"key": "variableNameLike",
													"value": "<string>",
													"description": "Filter by the variable instance name. The parameter can include the wildcard `%` to\nexpress like-strategy such as: starts with (`%`name), ends with (name`%`) or\ncontains (`%`name`%`)."
												},
												{
													"key": "processInstanceIdIn",
													"value": "<string>",
													"description": "Only include variable instances which belong to one of the passed and comma-separated\nprocess instance ids."
												},
												{
													"key": "executionIdIn",
													"value": "<string>",
													"description": "Only include variable instances which belong to one of the passed and comma-separated\nexecution ids."
												},
												{
													"key": "caseInstanceIdIn",
													"value": "<string>",
													"description": "Only include variable instances which belong to one of the passed and comma-separated case instance ids."
												},
												{
													"key": "caseExecutionIdIn",
													"value": "<string>",
													"description": "Only include variable instances which belong to one of the passed and comma-separated case execution ids."
												},
												{
													"key": "taskIdIn",
													"value": "<string>",
													"description": "Only include variable instances which belong to one of the passed and comma-separated task\nids."
												},
												{
													"key": "batchIdIn",
													"value": "<string>",
													"description": "Only include variable instances which belong to one of the passed and comma-separated\nbatch ids."
												},
												{
													"key": "activityInstanceIdIn",
													"value": "<string>",
													"description": "Only include variable instances which belong to one of the passed and comma-separated\nactivity instance ids."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Only include variable instances which belong to one of the passed and comma-separated\ntenant ids."
												},
												{
													"key": "variableValues",
													"value": "<string>",
													"description": "Only include variable instances that have the certain values.\nValue filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n\n**Note:** Values are always treated as `String` objects on server side.\n\nValid operator values are: `eq` - equal to; `neq` - not equal to; `gt` -\ngreater than;\n`gteq` - greater than or equal to; `lt` - lower than; `lteq` - lower than or\nequal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
												},
												{
													"key": "variableNamesIgnoreCase",
													"value": "<boolean>",
													"description": "Match all variable names provided in `variableValues` case-insensitively. If set to `true`\n**variableName** and **variablename** are treated as equal."
												},
												{
													"key": "variableValuesIgnoreCase",
													"value": "<boolean>",
													"description": "Match all variable values provided in `variableValues` case-insensitively. If set to\n`true` **variableValue** and **variablevalue** are treated as equal."
												},
												{
													"key": "variableScopeIdIn",
													"value": "<string>",
													"description": "Only include variable instances which belong to one of passed scope ids."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example if an invalid operator for variable\ncomparison is used. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/variable-instance/count?variableName=<string>&variableNameLike=<string>&processInstanceIdIn=<string>&executionIdIn=<string>&caseInstanceIdIn=<string>&caseExecutionIdIn=<string>&taskIdIn=<string>&batchIdIn=<string>&activityInstanceIdIn=<string>&tenantIdIn=<string>&variableValues=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>&variableScopeIdIn=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"variable-instance",
												"count"
											],
											"query": [
												{
													"key": "variableName",
													"value": "<string>",
													"description": "Filter by variable instance name."
												},
												{
													"key": "variableNameLike",
													"value": "<string>",
													"description": "Filter by the variable instance name. The parameter can include the wildcard `%` to\nexpress like-strategy such as: starts with (`%`name), ends with (name`%`) or\ncontains (`%`name`%`)."
												},
												{
													"key": "processInstanceIdIn",
													"value": "<string>",
													"description": "Only include variable instances which belong to one of the passed and comma-separated\nprocess instance ids."
												},
												{
													"key": "executionIdIn",
													"value": "<string>",
													"description": "Only include variable instances which belong to one of the passed and comma-separated\nexecution ids."
												},
												{
													"key": "caseInstanceIdIn",
													"value": "<string>",
													"description": "Only include variable instances which belong to one of the passed and comma-separated case instance ids."
												},
												{
													"key": "caseExecutionIdIn",
													"value": "<string>",
													"description": "Only include variable instances which belong to one of the passed and comma-separated case execution ids."
												},
												{
													"key": "taskIdIn",
													"value": "<string>",
													"description": "Only include variable instances which belong to one of the passed and comma-separated task\nids."
												},
												{
													"key": "batchIdIn",
													"value": "<string>",
													"description": "Only include variable instances which belong to one of the passed and comma-separated\nbatch ids."
												},
												{
													"key": "activityInstanceIdIn",
													"value": "<string>",
													"description": "Only include variable instances which belong to one of the passed and comma-separated\nactivity instance ids."
												},
												{
													"key": "tenantIdIn",
													"value": "<string>",
													"description": "Only include variable instances which belong to one of the passed and comma-separated\ntenant ids."
												},
												{
													"key": "variableValues",
													"value": "<string>",
													"description": "Only include variable instances that have the certain values.\nValue filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n\n**Note:** Values are always treated as `String` objects on server side.\n\nValid operator values are: `eq` - equal to; `neq` - not equal to; `gt` -\ngreater than;\n`gteq` - greater than or equal to; `lt` - lower than; `lteq` - lower than or\nequal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
												},
												{
													"key": "variableNamesIgnoreCase",
													"value": "<boolean>",
													"description": "Match all variable names provided in `variableValues` case-insensitively. If set to `true`\n**variableName** and **variablename** are treated as equal."
												},
												{
													"key": "variableValuesIgnoreCase",
													"value": "<boolean>",
													"description": "Match all variable values provided in `variableValues` case-insensitively. If set to\n`true` **variableValue** and **variablevalue** are treated as equal."
												},
												{
													"key": "variableScopeIdIn",
													"value": "<string>",
													"description": "Only include variable instances which belong to one of passed scope ids."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						},
						{
							"name": "Get Variable Instance Count (POST)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"variableName\": \"<string>\",\n  \"variableNameLike\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caseInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caseExecutionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"batchIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"variableValues\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"neq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"lteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"variableScopeIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"variableType\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"variableName\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/variable-instance/count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"variable-instance",
										"count"
									]
								},
								"description": "Query for the number of variable instances that fulfill given parameters. This\nmethod takes the same message body as the\n[Get Variable Instances POST](https://docs.camunda.org/manual/7.21/reference/rest/variable-\ninstance/post-query/) method and therefore it is slightly more\npowerful than the [Get Variable Instance\nCount](https://docs.camunda.org/manual/7.21/reference/rest/variable-instance/get-query-count/)\nmethod."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"variableName\": \"<string>\",\n  \"variableNameLike\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caseInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caseExecutionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"batchIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"variableValues\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"neq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"lteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"variableScopeIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"variableType\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"variableName\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/variable-instance/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"variable-instance",
												"count"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": \"<long>\"\n}"
								},
								{
									"name": "Returned if some of the query parameters are invalid, for example if an invalid operator for variable\ncomparison is used. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"variableName\": \"<string>\",\n  \"variableNameLike\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caseInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caseExecutionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"batchIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"variableValues\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"neq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"lteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"variableScopeIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"variableType\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"variableName\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/variable-instance/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"variable-instance",
												"count"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "data",
							"item": [
								{
									"name": "Get Variable Instance (Binary)",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/octet-stream"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/variable-instance/:id/data",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"variable-instance",
												":id",
												"data"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) The id of the variable instance."
												}
											]
										},
										"description": "Retrieves the content of a variable by id. Applicable for byte array and file\nvariables."
									},
									"response": [
										{
											"name": "Request successful. For binary variables or files without any MIME type information, a byte stream is returned.\n                      File variables with MIME type information are returned as the saved type. Additionally, for file\n                      va",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/octet-stream"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/variable-instance/:id/data",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"variable-instance",
														":id",
														"data"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/octet-stream"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Variable with given id exists but does not serialize as binary data. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/variable-instance/:id/data",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"variable-instance",
														":id",
														"data"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										},
										{
											"name": "Variable with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/variable-instance/:id/data",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"variable-instance",
														":id",
														"data"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Variable Instance",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/variable-instance/:id?deserializeValue=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"variable-instance",
										":id"
									],
									"query": [
										{
											"key": "deserializeValue",
											"value": "<boolean>",
											"description": "Determines whether serializable variable values (typically variables that store custom Java objects)\nshould be deserialized on server side (default `true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side and transformed to JSON\nusing [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.\nNote that this requires the Java classes of the variable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n\n**Note:**  While `true` is the default value for reasons of backward compatibility, we recommend setting this\nparameter to `false` when developing web applications that are independent of the Java process\napplications deployed to the engine."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) The id of the variable instance."
										}
									]
								},
								"description": "Retrieves a variable by id."
							},
							"response": [
								{
									"name": "Request successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/variable-instance/:id?deserializeValue=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"variable-instance",
												":id"
											],
											"query": [
												{
													"key": "deserializeValue",
													"value": "<boolean>",
													"description": "Determines whether serializable variable values (typically variables that store custom Java objects)\nshould be deserialized on server side (default `true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side and transformed to JSON\nusing [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.\nNote that this requires the Java classes of the variable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n\n**Note:**  While `true` is the default value for reasons of backward compatibility, we recommend setting this\nparameter to `false` when developing web applications that are independent of the Java process\napplications deployed to the engine."
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"processDefinitionId\": \"<string>\",\n  \"processInstanceId\": \"<string>\",\n  \"executionId\": \"<string>\",\n  \"caseInstanceId\": \"<string>\",\n  \"caseExecutionId\": \"<string>\",\n  \"taskId\": \"<string>\",\n  \"batchId\": \"<string>\",\n  \"activityInstanceId\": \"<string>\",\n  \"tenantId\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"value\": {\n    \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n  },\n  \"type\": \"<string>\",\n  \"valueInfo\": {\n    \"qui1b\": -67688425.38992277\n  }\n}"
								},
								{
									"name": "Variable with given id does not exist. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/rest/overview/#error-handling)\nfor the error response format.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/variable-instance/:id?deserializeValue=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"variable-instance",
												":id"
											],
											"query": [
												{
													"key": "deserializeValue",
													"value": "<boolean>",
													"description": "Determines whether serializable variable values (typically variables that store custom Java objects)\nshould be deserialized on server side (default `true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side and transformed to JSON\nusing [Jackson's](https://github.com/FasterXML/jackson) POJO/bean property introspection feature.\nNote that this requires the Java classes of the variable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized format.\nFor example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n\n**Note:**  While `true` is the default value for reasons of backward compatibility, we recommend setting this\nparameter to `false` when developing web applications that are independent of the Java process\napplications deployed to the engine."
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get Variable Instances",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/variable-instance?variableName=<string>&variableNameLike=<string>&processInstanceIdIn=<string>&executionIdIn=<string>&caseInstanceIdIn=<string>&caseExecutionIdIn=<string>&taskIdIn=<string>&batchIdIn=<string>&activityInstanceIdIn=<string>&tenantIdIn=<string>&variableValues=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>&variableScopeIdIn=<string>&sortBy=variableName&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&deserializeValues=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"variable-instance"
							],
							"query": [
								{
									"key": "variableName",
									"value": "<string>",
									"description": "Filter by variable instance name."
								},
								{
									"key": "variableNameLike",
									"value": "<string>",
									"description": "Filter by the variable instance name. The parameter can include the wildcard `%` to\nexpress like-strategy such as: starts with (`%`name), ends with (name`%`) or\ncontains (`%`name`%`)."
								},
								{
									"key": "processInstanceIdIn",
									"value": "<string>",
									"description": "Only include variable instances which belong to one of the passed and comma-separated\nprocess instance ids."
								},
								{
									"key": "executionIdIn",
									"value": "<string>",
									"description": "Only include variable instances which belong to one of the passed and comma-separated\nexecution ids."
								},
								{
									"key": "caseInstanceIdIn",
									"value": "<string>",
									"description": "Only include variable instances which belong to one of the passed and comma-separated case instance ids."
								},
								{
									"key": "caseExecutionIdIn",
									"value": "<string>",
									"description": "Only include variable instances which belong to one of the passed and comma-separated case execution ids."
								},
								{
									"key": "taskIdIn",
									"value": "<string>",
									"description": "Only include variable instances which belong to one of the passed and comma-separated task\nids."
								},
								{
									"key": "batchIdIn",
									"value": "<string>",
									"description": "Only include variable instances which belong to one of the passed and comma-separated\nbatch ids."
								},
								{
									"key": "activityInstanceIdIn",
									"value": "<string>",
									"description": "Only include variable instances which belong to one of the passed and comma-separated\nactivity instance ids."
								},
								{
									"key": "tenantIdIn",
									"value": "<string>",
									"description": "Only include variable instances which belong to one of the passed and comma-separated\ntenant ids."
								},
								{
									"key": "variableValues",
									"value": "<string>",
									"description": "Only include variable instances that have the certain values.\nValue filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n\n**Note:** Values are always treated as `String` objects on server side.\n\nValid operator values are: `eq` - equal to; `neq` - not equal to; `gt` -\ngreater than;\n`gteq` - greater than or equal to; `lt` - lower than; `lteq` - lower than or\nequal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
								},
								{
									"key": "variableNamesIgnoreCase",
									"value": "<boolean>",
									"description": "Match all variable names provided in `variableValues` case-insensitively. If set to `true`\n**variableName** and **variablename** are treated as equal."
								},
								{
									"key": "variableValuesIgnoreCase",
									"value": "<boolean>",
									"description": "Match all variable values provided in `variableValues` case-insensitively. If set to\n`true` **variableValue** and **variablevalue** are treated as equal."
								},
								{
									"key": "variableScopeIdIn",
									"value": "<string>",
									"description": "Only include variable instances which belong to one of passed scope ids."
								},
								{
									"key": "sortBy",
									"value": "variableName",
									"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
								},
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return."
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
								},
								{
									"key": "deserializeValues",
									"value": "<boolean>",
									"description": "Determines whether serializable variable values (typically variables that\nstore custom Java objects) should be deserialized on server side (default\n`true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side\nand transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean property\nintrospection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized\nformat. For example, a variable that is serialized as XML will be returned as\na JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of backward\ncompatibility, we recommend setting this parameter to `false` when developing\nweb applications that are independent of the Java process applications\ndeployed to the engine."
								}
							]
						},
						"description": "Query for variable instances that fulfill given parameters. Parameters may be the\nproperties of variable instances, such as the name or type. The size\nof the result set can be retrieved by using the [Get Variable Instance\nCount](https://docs.camunda.org/manual/7.21/reference/rest/variable-instance/get-query-count/)\nmethod."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/variable-instance?variableName=<string>&variableNameLike=<string>&processInstanceIdIn=<string>&executionIdIn=<string>&caseInstanceIdIn=<string>&caseExecutionIdIn=<string>&taskIdIn=<string>&batchIdIn=<string>&activityInstanceIdIn=<string>&tenantIdIn=<string>&variableValues=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>&variableScopeIdIn=<string>&sortBy=variableName&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&deserializeValues=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"variable-instance"
									],
									"query": [
										{
											"key": "variableName",
											"value": "<string>",
											"description": "Filter by variable instance name."
										},
										{
											"key": "variableNameLike",
											"value": "<string>",
											"description": "Filter by the variable instance name. The parameter can include the wildcard `%` to\nexpress like-strategy such as: starts with (`%`name), ends with (name`%`) or\ncontains (`%`name`%`)."
										},
										{
											"key": "processInstanceIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of the passed and comma-separated\nprocess instance ids."
										},
										{
											"key": "executionIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of the passed and comma-separated\nexecution ids."
										},
										{
											"key": "caseInstanceIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of the passed and comma-separated case instance ids."
										},
										{
											"key": "caseExecutionIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of the passed and comma-separated case execution ids."
										},
										{
											"key": "taskIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of the passed and comma-separated task\nids."
										},
										{
											"key": "batchIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of the passed and comma-separated\nbatch ids."
										},
										{
											"key": "activityInstanceIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of the passed and comma-separated\nactivity instance ids."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of the passed and comma-separated\ntenant ids."
										},
										{
											"key": "variableValues",
											"value": "<string>",
											"description": "Only include variable instances that have the certain values.\nValue filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n\n**Note:** Values are always treated as `String` objects on server side.\n\nValid operator values are: `eq` - equal to; `neq` - not equal to; `gt` -\ngreater than;\n`gteq` - greater than or equal to; `lt` - lower than; `lteq` - lower than or\nequal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
										},
										{
											"key": "variableNamesIgnoreCase",
											"value": "<boolean>",
											"description": "Match all variable names provided in `variableValues` case-insensitively. If set to `true`\n**variableName** and **variablename** are treated as equal."
										},
										{
											"key": "variableValuesIgnoreCase",
											"value": "<boolean>",
											"description": "Match all variable values provided in `variableValues` case-insensitively. If set to\n`true` **variableValue** and **variablevalue** are treated as equal."
										},
										{
											"key": "variableScopeIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of passed scope ids."
										},
										{
											"key": "sortBy",
											"value": "variableName",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										},
										{
											"key": "deserializeValues",
											"value": "<boolean>",
											"description": "Determines whether serializable variable values (typically variables that\nstore custom Java objects) should be deserialized on server side (default\n`true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side\nand transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean property\nintrospection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized\nformat. For example, a variable that is serialized as XML will be returned as\na JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of backward\ncompatibility, we recommend setting this parameter to `false` when developing\nweb applications that are independent of the Java process applications\ndeployed to the engine."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"caseExecutionId\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"batchId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"errorMessage\": \"<string>\",\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"eiusmod_3c\": true,\n      \"reprehenderite\": -78284223.87724063\n    }\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"caseExecutionId\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"batchId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"errorMessage\": \"<string>\",\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"Lorem8\": true\n    }\n  }\n]"
						},
						{
							"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`, or if an invalid operator\nfor variable comparison is used. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/res",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/variable-instance?variableName=<string>&variableNameLike=<string>&processInstanceIdIn=<string>&executionIdIn=<string>&caseInstanceIdIn=<string>&caseExecutionIdIn=<string>&taskIdIn=<string>&batchIdIn=<string>&activityInstanceIdIn=<string>&tenantIdIn=<string>&variableValues=<string>&variableNamesIgnoreCase=<boolean>&variableValuesIgnoreCase=<boolean>&variableScopeIdIn=<string>&sortBy=variableName&sortOrder=asc&firstResult=<integer>&maxResults=<integer>&deserializeValues=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"variable-instance"
									],
									"query": [
										{
											"key": "variableName",
											"value": "<string>",
											"description": "Filter by variable instance name."
										},
										{
											"key": "variableNameLike",
											"value": "<string>",
											"description": "Filter by the variable instance name. The parameter can include the wildcard `%` to\nexpress like-strategy such as: starts with (`%`name), ends with (name`%`) or\ncontains (`%`name`%`)."
										},
										{
											"key": "processInstanceIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of the passed and comma-separated\nprocess instance ids."
										},
										{
											"key": "executionIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of the passed and comma-separated\nexecution ids."
										},
										{
											"key": "caseInstanceIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of the passed and comma-separated case instance ids."
										},
										{
											"key": "caseExecutionIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of the passed and comma-separated case execution ids."
										},
										{
											"key": "taskIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of the passed and comma-separated task\nids."
										},
										{
											"key": "batchIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of the passed and comma-separated\nbatch ids."
										},
										{
											"key": "activityInstanceIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of the passed and comma-separated\nactivity instance ids."
										},
										{
											"key": "tenantIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of the passed and comma-separated\ntenant ids."
										},
										{
											"key": "variableValues",
											"value": "<string>",
											"description": "Only include variable instances that have the certain values.\nValue filtering expressions are comma-separated and are structured as\nfollows:\n\nA valid parameter value has the form `key_operator_value`.\n`key` is the variable name, `operator` is the comparison operator to be used\nand `value` the variable value.\n\n**Note:** Values are always treated as `String` objects on server side.\n\nValid operator values are: `eq` - equal to; `neq` - not equal to; `gt` -\ngreater than;\n`gteq` - greater than or equal to; `lt` - lower than; `lteq` - lower than or\nequal to;\n`like`.\n`key` and `value` may not contain underscore or comma characters."
										},
										{
											"key": "variableNamesIgnoreCase",
											"value": "<boolean>",
											"description": "Match all variable names provided in `variableValues` case-insensitively. If set to `true`\n**variableName** and **variablename** are treated as equal."
										},
										{
											"key": "variableValuesIgnoreCase",
											"value": "<boolean>",
											"description": "Match all variable values provided in `variableValues` case-insensitively. If set to\n`true` **variableValue** and **variablevalue** are treated as equal."
										},
										{
											"key": "variableScopeIdIn",
											"value": "<string>",
											"description": "Only include variable instances which belong to one of passed scope ids."
										},
										{
											"key": "sortBy",
											"value": "variableName",
											"description": "Sort the results lexicographically by a given criterion.\nMust be used in conjunction with the sortOrder parameter."
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort the results in a given order. Values may be asc for ascending order or desc for descending order.\nMust be used in conjunction with the sortBy parameter."
										},
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										},
										{
											"key": "deserializeValues",
											"value": "<boolean>",
											"description": "Determines whether serializable variable values (typically variables that\nstore custom Java objects) should be deserialized on server side (default\n`true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side\nand transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean property\nintrospection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized\nformat. For example, a variable that is serialized as XML will be returned as\na JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of backward\ncompatibility, we recommend setting this parameter to `false` when developing\nweb applications that are independent of the Java process applications\ndeployed to the engine."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "Get Variable Instances (POST)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"variableName\": \"<string>\",\n  \"variableNameLike\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caseInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caseExecutionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"batchIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"variableValues\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"neq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"lteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"variableScopeIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"variableType\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"variableName\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/variable-instance?firstResult=<integer>&maxResults=<integer>&deserializeValues=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"variable-instance"
							],
							"query": [
								{
									"key": "firstResult",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the index of the first result to return."
								},
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
								},
								{
									"key": "deserializeValues",
									"value": "<boolean>",
									"description": "Determines whether serializable variable values (typically variables that\nstore custom Java objects) should be deserialized on server side (default\n`true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side\nand transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean property\nintrospection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized\nformat. For example, a variable that is serialized as XML will be returned as\na JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of backward\ncompatibility, we recommend setting this parameter to `false` when developing\nweb applications that are independent of the Java process applications\ndeployed to the engine."
								}
							]
						},
						"description": "Query for variable instances that fulfill given parameters through a JSON object.\nThis method is slightly more powerful than the\n[Get Variable Instances](https://docs.camunda.org/manual/7.21/reference/rest/variable-\ninstance/get-query/) method because it allows filtering by multiple\nvariable instances of types `String`, `Number` or `Boolean`."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"variableName\": \"<string>\",\n  \"variableNameLike\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caseInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caseExecutionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"batchIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"variableValues\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"neq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"lteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"variableScopeIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"variableType\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"variableName\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/variable-instance?firstResult=<integer>&maxResults=<integer>&deserializeValues=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"variable-instance"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										},
										{
											"key": "deserializeValues",
											"value": "<boolean>",
											"description": "Determines whether serializable variable values (typically variables that\nstore custom Java objects) should be deserialized on server side (default\n`true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side\nand transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean property\nintrospection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized\nformat. For example, a variable that is serialized as XML will be returned as\na JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of backward\ncompatibility, we recommend setting this parameter to `false` when developing\nweb applications that are independent of the Java process applications\ndeployed to the engine."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"caseExecutionId\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"batchId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"errorMessage\": \"<string>\",\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"eiusmod_3c\": true,\n      \"reprehenderite\": -78284223.87724063\n    }\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"processDefinitionId\": \"<string>\",\n    \"processInstanceId\": \"<string>\",\n    \"executionId\": \"<string>\",\n    \"caseInstanceId\": \"<string>\",\n    \"caseExecutionId\": \"<string>\",\n    \"taskId\": \"<string>\",\n    \"batchId\": \"<string>\",\n    \"activityInstanceId\": \"<string>\",\n    \"tenantId\": \"<string>\",\n    \"errorMessage\": \"<string>\",\n    \"value\": {\n      \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n    },\n    \"type\": \"<string>\",\n    \"valueInfo\": {\n      \"Lorem8\": true\n    }\n  }\n]"
						},
						{
							"name": "Returned if some of the query parameters are invalid, for example if a `sortOrder`\nparameter is supplied, but no `sortBy`, or if an invalid operator\nfor variable comparison is used. See the\n[Introduction](https://docs.camunda.org/manual/7.21/reference/res",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"variableName\": \"<string>\",\n  \"variableNameLike\": \"<string>\",\n  \"processInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"executionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caseInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"caseExecutionIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"taskIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"batchIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"activityInstanceIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tenantIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"variableValues\": [\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"neq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"operator\": \"lteq\",\n      \"value\": {\n        \"description\": \"Can be any value - string, number, boolean, array or object.\\n **Note**: Not every endpoint supports every type.\"\n      }\n    }\n  ],\n  \"variableNamesIgnoreCase\": \"<boolean>\",\n  \"variableValuesIgnoreCase\": \"<boolean>\",\n  \"variableScopeIdIn\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sorting\": [\n    {\n      \"sortBy\": \"variableType\",\n      \"sortOrder\": \"asc\"\n    },\n    {\n      \"sortBy\": \"variableName\",\n      \"sortOrder\": \"asc\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/variable-instance?firstResult=<integer>&maxResults=<integer>&deserializeValues=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"variable-instance"
									],
									"query": [
										{
											"key": "firstResult",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the index of the first result to return."
										},
										{
											"key": "maxResults",
											"value": "<integer>",
											"description": "Pagination of results. Specifies the maximum number of results to return.\nWill return less results if there are no more results left."
										},
										{
											"key": "deserializeValues",
											"value": "<boolean>",
											"description": "Determines whether serializable variable values (typically variables that\nstore custom Java objects) should be deserialized on server side (default\n`true`).\n\nIf set to `true`, a serializable variable will be deserialized on server side\nand transformed to JSON using\n[Jackson's](https://github.com/FasterXML/jackson) POJO/bean property\nintrospection feature. Note that this requires the Java classes of the\nvariable value to be on the REST API's classpath.\n\nIf set to `false`, a serializable variable will be returned in its serialized\nformat. For example, a variable that is serialized as XML will be returned as\na JSON string containing XML.\n\n**Note:** While `true` is the default value for reasons of backward\ncompatibility, we recommend setting this parameter to `false` when developing\nweb applications that are independent of the Java process applications\ndeployed to the engine."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"code\": \"<number>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "version",
			"item": [
				{
					"name": "Get Rest API version",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"version"
							]
						},
						"description": "Retrieves the version of the Rest API."
					},
					"response": [
						{
							"name": "Request successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"version"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"version\": \"<string>\"\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": ""
		},
		{
			"key": "Authorization",
			"value": "",
			"type": "string"
		}
	]
}